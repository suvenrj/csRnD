compiled!
compiling stava...
compiled!
launching stava...
Soot Arguments are : 
-whole-program -app -f J -p jb use-original-names:true -allow-phantom-refs -keep-bytecode-offset -p cg.spark on -p cg all-reachable -keep-offset -keep-line-number -main-class Main -process-dir /Users/suvenjagtiani/csRnD/tests/test1 -output-dir /Users/suvenjagtiani/csRnD/out/testcase1 -output-format jimple -x jdk.* -x java.* -x org.* -x com.* -x sun.* -x javax.* Read from file: 

 1. Static Analysis starts: 
Static Analysis is done!
Time Taken:38.219
**********************************************************
2. Creating Stack Orders using the Points to Graph : 
PRIYAM - Starting topological sorting
2. Contextual Resolution Starts : 
Suven
18514
Total SCCs : 12984
SCC 0 : 1
<java.time.Instant: int compareTo(java.lang.Object)>
Counter value: 1
SCC 1 : 1
<sun.security.x509.KeyUsageExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 2 : 1
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 3 : 1
<java.time.temporal.TemporalQueries$lambda_static_2__10: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 4 : 1
<java.net.AbstractPlainSocketImpl: void setConnectionReset()>
Counter value: 1
SCC 5 : 1
<java.util.SubList$1: int previousIndex()>
Counter value: 2
SCC 6 : 1
<java.nio.LongBuffer: int hashCode()>
Counter value: 1
SCC 7 : 1
<java.util.stream.FindOps$FindSink$OfRef: java.util.Optional get()>
Counter value: 1
SCC 8 : 1
<java.util.Spliterators$IteratorSpliterator: long estimateSize()>
Counter value: 1
SCC 9 : 1
<java.util.EnumMap: java.util.EnumMap clone()>
Counter value: 1
SCC 10 : 1
<java.util.stream.SpinedBuffer$OfLong: void arrayForEach(java.lang.Object,int,int,java.lang.Object)>
Counter value: 1
SCC 11 : 1
<java.util.concurrent.atomic.AtomicBoolean: boolean get()>
Counter value: 1
SCC 12 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: boolean hasDuplicates(java.lang.String[])>
Counter value: 1
SCC 13 : 1
<java.lang.invoke.WrongMethodTypeException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 14 : 1
<java.util.stream.ReduceOps$11ReducingSink: void accept(double)>
Counter value: 1
SCC 15 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.chrono.ChronoZonedDateTime readExternal(java.io.ObjectInput)>
Counter value: 1
SCC 16 : 1
<java.util.ArrayDeque: int size()>
Counter value: 1
SCC 17 : 1
<sun.security.util.BitArray: boolean equals(java.lang.Object)>
Counter value: 1
SCC 18 : 1
<java.time.chrono.JapaneseEra: java.lang.String toString()>
Counter value: 1
SCC 19 : 1
<sun.security.x509.PolicyConstraintsExtension: java.lang.String getName()>
Counter value: 1
SCC 20 : 1
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 21 : 1
<java.util.stream.ReferencePipeline$9$1: void accept(java.lang.Object)>
Counter value: 1
SCC 22 : 1
<java.net.SocksSocketImpl: java.io.InputStream access$102(java.net.SocksSocketImpl,java.io.InputStream)>
Counter value: 1
SCC 23 : 1
<java.io.ObjectInputStream$PeekInputStream: int read()>
Counter value: 2
SCC 24 : 1
<java.lang.reflect.Field: boolean equals(java.lang.Object)>
Counter value: 1
SCC 25 : 1
<java.net.SocketInputStream: long skip(long)>
Counter value: 1
SCC 26 : 1
<java.nio.IntBuffer: int compareTo(java.nio.IntBuffer)>
Counter value: 1
SCC 27 : 1
<java.time.temporal.TemporalAdjusters$lambda_previousOrSame_12__61: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 28 : 1
<sun.reflect.MethodAccessorGenerator: void <init>()>
Counter value: 1
SCC 29 : 1
<java.util.stream.SortedOps$RefSortingSink: void <init>(java.util.stream.Sink,java.util.Comparator)>
Counter value: 1
SCC 30 : 1
<java.lang.invoke.ProxyClassesDumper: void <clinit>()>
Counter value: 1
SCC 31 : 1
<java.nio.ShortBuffer: int compareTo(java.nio.ShortBuffer)>
Counter value: 1
SCC 32 : 1
<java.util.ArrayList$SubList$1: int nextIndex()>
Counter value: 1
SCC 33 : 1
<java.util.AbstractList$ListItr: int previousIndex()>
Counter value: 1
SCC 34 : 1
<java.lang.invoke.DirectHandle: void <init>(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,byte,java.lang.Class)>
Counter value: 1
SCC 35 : 1
<java.util.Spliterators$3Adapter: boolean hasNext()>
Counter value: 1
SCC 36 : 1
<java.util.concurrent.ForkJoinPool$1: java.util.concurrent.ForkJoinPool run()>
Counter value: 1
SCC 37 : 1
<java.time.LocalDateTime: java.time.LocalDateTime 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 38 : 1
<java.util.TreeMap$EntrySpliterator$lambda_getComparator_d5a01062_1__59: java.util.Comparator bootstrap$()>
Counter value: 1
SCC 39 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.chrono.ChronoZonedDateTimeImpl ofInstant(java.time.chrono.Chronology,java.time.Instant,java.time.ZoneId)>
Counter value: 1
SCC 40 : 1
<java.util.stream.SpinedBuffer$OfInt: void <init>()>
Counter value: 1
SCC 41 : 1
<java.util.concurrent.atomic.AtomicReference: java.lang.String toString()>
Counter value: 1
SCC 42 : 1
<sun.util.locale.provider.LocaleResources$ResourceReference: java.lang.String getCacheKey()>
Counter value: 1
SCC 43 : 1
<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>
Counter value: 1
SCC 44 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToIntTask: java.lang.Integer getRawResult()>
Counter value: 1
SCC 45 : 1
<java.util.TreeMap$AscendingSubMap$AscendingEntrySetView: java.util.Iterator iterator()>
Counter value: 1
SCC 46 : 1
<sun.nio.fs.UnixPath: boolean isEmpty()>
Counter value: 1
SCC 47 : 1
<java.nio.DirectDoubleBufferS: long address()>
Counter value: 1
SCC 48 : 1
<java.time.YearMonth: java.time.YearMonth 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 49 : 1
<java.security.KeyStore$PrivateKeyEntry: java.lang.String toString()>
Counter value: 1
SCC 50 : 1
<sun.nio.ch.CompletedFuture: java.lang.Object get()>
Counter value: 1
SCC 51 : 1
<java.lang.invoke.ProxyClassesDumper: java.lang.invoke.ProxyClassesDumper getInstance(java.lang.String)>
Counter value: 1
SCC 52 : 1
<java.lang.reflect.AccessibleObject: boolean isAccessible()>
Counter value: 1
SCC 53 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToIntTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 54 : 1
<sun.security.provider.NativePRNG: java.net.URL getEgdUrl()>
Counter value: 1
SCC 55 : 1
<java.util.EnumMap: void putAll(java.util.Map)>
Counter value: 1
SCC 56 : 1
<java.util.stream.Nodes$IntFixedNodeBuilder: void end()>
Counter value: 1
SCC 57 : 1
<java.util.LinkedList: boolean remove(java.lang.Object)>
Counter value: 1
SCC 58 : 1
<java.util.List: void sort(java.util.Comparator)>
Counter value: 1
SCC 59 : 1
<java.lang.Double: int compareTo(java.lang.Double)>
Counter value: 1
SCC 60 : 1
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 61 : 1
<java.lang.ClassValue: java.lang.ClassValue$Entry castEntry(java.lang.ClassValue$Entry)>
Counter value: 1
SCC 62 : 1
<java.util.Arrays: int hashCode(double[])>
Counter value: 1
SCC 63 : 1
<sun.misc.Unsafe: java.lang.Object getAndSetObject(java.lang.Object,long,java.lang.Object)>
Counter value: 1
SCC 64 : 1
<java.util.Vector$VectorSpliterator: void <init>(java.util.Vector,java.lang.Object[],int,int,int)>
Counter value: 1
SCC 65 : 1
<java.util.stream.Nodes$CollectorTask$OfInt$intBuilder__88: java.util.function.LongFunction bootstrap$()>
Counter value: 1
SCC 66 : 1
<java.nio.ByteBufferAsCharBufferRB: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 67 : 1
<java.time.ZonedDateTime: boolean equals(java.lang.Object)>
Counter value: 1
SCC 68 : 1
<java.util.jar.JarVerifier$1: java.lang.String nextElement()>
Counter value: 1
SCC 69 : 1
<sun.reflect.ClassFileAssembler: void setMaxLocals(int)>
Counter value: 1
SCC 70 : 1
<java.lang.VMAccess: boolean isAncestor(java.lang.ClassLoader,java.lang.ClassLoader)>
Counter value: 1
SCC 71 : 1
<java.util.stream.ReduceOps$Box: void <init>()>
Counter value: 1
SCC 72 : 1
<java.lang.Double: int hashCode(double)>
Counter value: 1
SCC 73 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate plusMonths(long)>
Counter value: 1
SCC 74 : 1
<java.net.SocksSocketImpl$1: java.lang.Void run()>
Counter value: 1
SCC 75 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachTransformedEntryTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.Function,java.util.function.Consumer)>
Counter value: 1
SCC 76 : 1
<java.util.SubList: void removeRange(int,int)>
Counter value: 2
SCC 77 : 1
<java.nio.HeapByteBuffer: byte get(int)>
Counter value: 1
SCC 78 : 1
<sun.net.www.protocol.http.AuthenticationHeader: void <init>(java.lang.String,sun.net.www.MessageHeader,sun.net.www.protocol.http.HttpCallerInfo,boolean,java.util.Set)>
Counter value: 1
SCC 79 : 1
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 80 : 1
<java.util.concurrent.TimeUnit$3: int excessNanos(long,long)>
Counter value: 1
SCC 81 : 1
<java.net.AbstractPlainSocketImpl: void connect(java.net.SocketAddress,int)>
Counter value: 1
SCC 82 : 1
<sun.reflect.UnsafeLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 83 : 1
<java.time.OffsetDateTime: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 84 : 1
<sun.net.www.MessageHeader: java.lang.String getHeaderNamesInList()>
Counter value: 1
SCC 85 : 1
<java.nio.ByteBufferAsLongBufferRB: java.nio.LongBuffer put(int,long)>
Counter value: 1
SCC 86 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: void addImpl(java.util.spi.CalendarDataProvider)>
Counter value: 1
SCC 87 : 1
<sun.net.www.protocol.http.HttpURLConnection$7: void <init>(sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 88 : 1
<sun.misc.PathPermissions: java.security.Permissions access$100(sun.misc.PathPermissions)>
Counter value: 1
SCC 89 : 1
<java.lang.invoke.InvokeExactHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 90 : 1
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
Counter value: 1
SCC 91 : 1
<java.time.Instant: java.time.Instant minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 92 : 1
<java.util.stream.SliceOps$SliceTask: java.util.stream.Node doTruncate(java.util.stream.Node)>
Counter value: 1
SCC 93 : 1
<java.lang.reflect.Executable: void verifyParameters(java.lang.reflect.Parameter[])>
Counter value: 1
SCC 94 : 1
<java.net.AbstractPlainSocketImpl: java.io.OutputStream getOutputStream()>
Counter value: 1
SCC 95 : 1
<java.util.Collections$CopiesList$lambda_stream_0__47: void <init>(java.util.Collections$CopiesList)>
Counter value: 1
SCC 96 : 1
<sun.security.provider.X509Factory: int readFully(java.io.InputStream,java.io.ByteArrayOutputStream,int)>
Counter value: 1
SCC 97 : 1
<sun.net.ProgressMonitor: void registerSource(sun.net.ProgressSource)>
Counter value: 1
SCC 98 : 1
<java.util.Base64$DecInputStream: int read()>
Counter value: 1
SCC 99 : 1
<sun.net.www.http.PosterOutputStream: void <init>()>
Counter value: 1
SCC 100 : 1
<sun.misc.URLClassPath: java.util.List closeLoaders()>
Counter value: 1
SCC 101 : 1
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 102 : 1
<java.nio.StringCharBuffer: boolean isReadOnly()>
Counter value: 1
SCC 103 : 1
<java.util.stream.SliceOps$1: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 104 : 1
<sun.util.PreHashedMap$2: void <init>(sun.util.PreHashedMap)>
Counter value: 1
SCC 105 : 1
<sun.misc.Cleaner: void <init>(java.lang.Object,java.lang.Runnable)>
Counter value: 1
SCC 106 : 1
<java.io.ObjectStreamClass$MemberSignature: void <init>(java.lang.reflect.Method)>
Counter value: 1
SCC 107 : 1
<java.util.SubList$1: void set(java.lang.Object)>
Counter value: 2
SCC 108 : 1
<java.util.Spliterators$EmptySpliterator: long estimateSize()>
Counter value: 1
SCC 109 : 1
<java.util.WeakHashMap$KeySpliterator: void <init>(java.util.WeakHashMap,int,int,int,int)>
Counter value: 1
SCC 110 : 1
<java.util.stream.Streams$StreamBuilderImpl: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 111 : 1
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDate plusDays(long)>
Counter value: 1
SCC 112 : 1
<sun.reflect.Reflection: boolean quickCheckMemberAccess(java.lang.Class,int)>
Counter value: 1
SCC 113 : 1
<java.util.stream.ReferencePipeline$StatefulOp: boolean opIsStateful()>
Counter value: 1
SCC 114 : 1
<java.util.IdentityHashMap: boolean removeMapping(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 115 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void readDoubles(double[],int,int)>
Counter value: 1
SCC 116 : 1
<sun.net.www.http.HttpClient: java.lang.String getURLFile()>
Counter value: 1
SCC 117 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToIntTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToIntTask,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator)>
Counter value: 1
SCC 118 : 1
<java.lang.reflect.Proxy$1: java.lang.Void run()>
Counter value: 1
SCC 119 : 1
<java.util.stream.ReferencePipeline$1: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 120 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: java.lang.String access$100(sun.net.www.protocol.http.DigestAuthentication$Parameters)>
Counter value: 1
SCC 121 : 1
<javax.security.auth.Subject$2: java.lang.Object run()>
Counter value: 1
SCC 122 : 1
<java.util.Collections$EmptyListIterator: int nextIndex()>
Counter value: 1
SCC 123 : 1
<sun.nio.ch.Util$2: void <init>()>
Counter value: 1
SCC 124 : 1
<java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
Counter value: 1
SCC 125 : 1
<java.util.IdentityHashMap: boolean access$1100(java.util.IdentityHashMap,java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 126 : 1
<java.util.TreeMap$NavigableSubMap$SubMapIterator: boolean hasNext()>
Counter value: 1
SCC 127 : 1
<sun.nio.ch.DatagramChannelImpl: void ensureOpen()>
Counter value: 1
SCC 128 : 1
<java.util.stream.Nodes$EmptyNode$OfRef: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 129 : 1
<java.nio.file.attribute.FileTime: long 'to'(java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 130 : 1
<java.nio.DirectCharBufferU: char get(int)>
Counter value: 1
SCC 131 : 1
<java.time.chrono.JapaneseEra: int ordinal(int)>
Counter value: 1
SCC 132 : 1
<java.util.concurrent.SynchronousQueue$TransferStack$SNode: boolean isCancelled()>
Counter value: 1
SCC 133 : 1
<java.util.JumboEnumSet$EnumSetIterator: void remove()>
Counter value: 1
SCC 134 : 1
<java.util.Collections$SetFromMap: java.util.Iterator iterator()>
Counter value: 1
SCC 135 : 1
<java.util.Collections: java.lang.Object[] zeroLengthArray(java.lang.Class)>
Counter value: 1
SCC 136 : 1
<java.util.stream.ReduceOps$4: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 137 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: long estimateSize()>
Counter value: 2
SCC 138 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator: void <init>(java.util.Spliterator,java.util.stream.StreamSpliterators$UnorderedSliceSpliterator)>
Counter value: 1
SCC 139 : 1
<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator$MethodInfo access$100(sun.misc.ProxyGenerator$ProxyMethod)>
Counter value: 1
SCC 140 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDate plusDays(long)>
Counter value: 1
SCC 141 : 1
<java.io.ObjectOutputStream$HandleTable: int size()>
Counter value: 1
SCC 142 : 1
<java.nio.file.attribute.FileTime: long toDays()>
Counter value: 1
SCC 143 : 1
<java.util.stream.IntPipeline$accept__98: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 144 : 1
<java.util.Arrays: int hashCode(long[])>
Counter value: 1
SCC 145 : 1
<java.lang.invoke.MethodHandles$Lookup: void <clinit>()>
Counter value: 1
SCC 146 : 1
<java.util.WeakHashMap$WeakHashMapSpliterator: long estimateSize()>
Counter value: 1
SCC 147 : 1
<java.util.DualPivotQuicksort: void sort(double[],int,int,boolean)>
Counter value: 2
SCC 148 : 1
<java.lang.ClassLoader: boolean isAncestorOf(java.lang.ClassLoader)>
Counter value: 1
SCC 149 : 1
<java.util.WeakHashMap$KeySpliterator: int characteristics()>
Counter value: 1
SCC 150 : 1
<java.lang.invoke.ExplicitCastHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 151 : 1
<java.util.stream.ReferencePipeline$6$1: void accept(java.lang.Object)>
Counter value: 1
SCC 152 : 1
<java.time.OffsetDateTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 153 : 1
<java.util.concurrent.ForkJoinPool: void runWorker(java.util.concurrent.ForkJoinPool$WorkQueue)>
Counter value: 1
SCC 154 : 1
<java.util.stream.DoublePipeline$5: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 155 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: boolean add(java.util.Map$Entry)>
Counter value: 1
SCC 156 : 1
<java.util.stream.ReduceOps$12: java.util.stream.ReduceOps$12ReducingSink makeSink()>
Counter value: 1
SCC 157 : 1
<java.net.InetSocketAddress: void <init>(int,java.lang.String)>
Counter value: 1
SCC 158 : 1
<java.util.concurrent.TimeUnit$2: long toHours(long)>
Counter value: 1
SCC 159 : 1
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 160 : 1
<java.util.stream.IntPipeline$1: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 161 : 1
<sun.reflect.AccessorGenerator: void emitBoxingContantPoolEntries()>
Counter value: 1
SCC 162 : 1
<java.net.PlainSocketImpl: void socketSetOption(int,boolean,java.lang.Object)>
Counter value: 1
SCC 163 : 1
<sun.security.x509.GeneralSubtrees: boolean equals(java.lang.Object)>
Counter value: 1
SCC 164 : 1
<java.net.URLConnection: java.lang.String toString()>
Counter value: 1
SCC 165 : 1
<sun.security.pkcs.PKCS7: java.lang.String toString()>
Counter value: 1
SCC 166 : 1
<sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator: void <init>(sun.nio.fs.UnixDirectoryStream,java.nio.file.DirectoryStream)>
Counter value: 1
SCC 167 : 1
<sun.net.www.protocol.http.HttpURLConnection$10: java.io.IOException run()>
Counter value: 1
SCC 168 : 1
<java.util.EnumSet: java.util.EnumSet clone()>
Counter value: 1
SCC 169 : 1
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
Counter value: 1
SCC 170 : 1
<java.util.stream.ReferencePipeline$Head: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 171 : 1
<java.util.concurrent.LinkedBlockingDeque$Itr: java.util.concurrent.LinkedBlockingDeque$Node firstNode()>
Counter value: 1
SCC 172 : 1
<java.util.TreeMap: java.lang.Object access$200()>
Counter value: 1
SCC 173 : 1
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: long skip(long)>
Counter value: 1
SCC 174 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator$accept__38: java.util.stream.Sink$OfInt bootstrap$(java.util.stream.SpinedBuffer$OfInt)>
Counter value: 1
SCC 175 : 1
<java.text.ParsePosition: java.lang.String toString()>
Counter value: 1
SCC 176 : 1
<java.time.Year: java.time.Year 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 177 : 1
<java.nio.file.spi.FileSystemProvider$1: java.util.List run()>
Counter value: 1
SCC 178 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.String toString()>
Counter value: 2
SCC 179 : 1
<java.net.SocketInputStream: java.nio.channels.FileChannel getChannel()>
Counter value: 1
SCC 180 : 1
<java.net.AbstractPlainSocketImpl: boolean isConnectionResetPending()>
Counter value: 1
SCC 181 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: java.util.Iterator iterator()>
Counter value: 1
SCC 182 : 1
<java.lang.ClassValue$Version: java.lang.ClassValue classValue()>
Counter value: 1
SCC 183 : 1
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>
Counter value: 1
SCC 184 : 1
<java.util.stream.AbstractTask: void onCompletion(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 185 : 1
<java.util.stream.StreamOpFlag: int createFlagMask()>
Counter value: 1
SCC 186 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfLong: void <init>(java.util.Spliterator,java.util.stream.PipelineHelper,long[])>
Counter value: 1
SCC 187 : 1
<java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 188 : 1
<java.util.stream.Nodes$ToArrayTask$OfPrimitive: void <init>(java.util.stream.Node$OfPrimitive,java.lang.Object,int)>
Counter value: 1
SCC 189 : 1
<java.util.concurrent.LinkedBlockingQueue$Node: void <init>(java.lang.Object)>
Counter value: 1
SCC 190 : 1
<java.util.stream.FindOps$FindTask: java.util.stream.AbstractTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 191 : 1
<java.util.BitSet: void trimToSize()>
Counter value: 1
SCC 192 : 1
<java.io.ObjectInputStream$FilterValues: long references()>
Counter value: 1
SCC 193 : 1
<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>
Counter value: 1
SCC 194 : 1
<java.time.chrono.JapaneseEra: void <clinit>()>
Counter value: 1
SCC 195 : 1
<java.lang.invoke.MethodHandleInfoImpl: boolean requiresReceiver()>
Counter value: 1
SCC 196 : 1
<java.lang.ClassLoader: boolean getPackageAssertionStatus(java.lang.String)>
Counter value: 1
SCC 197 : 1
<java.lang.ClassValue$Entry: java.lang.Object value()>
Counter value: 1
SCC 198 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfLong: java.lang.Object emptyConsumer()>
Counter value: 1
SCC 199 : 1
<java.time.chrono.Chronology$1: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 200 : 1
<java.util.stream.Nodes$IntFixedNodeBuilder: void <init>(long)>
Counter value: 1
SCC 201 : 1
<sun.nio.ch.Net: boolean isFastTcpLoopbackRequested()>
Counter value: 1
SCC 202 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 203 : 1
<java.lang.StackTraceElement: java.lang.String getMethodName()>
Counter value: 1
SCC 204 : 1
<java.lang.reflect.Proxy$ProxyClassFactory: java.lang.Class apply(java.lang.ClassLoader,java.lang.Class[])>
Counter value: 1
SCC 205 : 1
<java.util.concurrent.ForkJoinTask: void internalPropagateException(java.lang.Throwable)>
Counter value: 1
SCC 206 : 1
<sun.nio.fs.AbstractPath$1: boolean hasNext()>
Counter value: 1
SCC 207 : 1
<java.lang.invoke.InvokeExactHandle: void <init>(java.lang.invoke.MethodType)>
Counter value: 1
SCC 208 : 1
<java.util.stream.ReferencePipeline$3$1: void accept(java.lang.Object)>
Counter value: 2
SCC 209 : 1
<sun.net.www.http.ChunkedOutputStream: void reset()>
Counter value: 1
SCC 210 : 1
<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void ensureOpen()>
Counter value: 1
SCC 211 : 1
<java.time.LocalDate: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 212 : 1
<java.time.zone.ZoneOffsetTransition: java.time.Instant getInstant()>
Counter value: 1
SCC 213 : 1
<sun.net.www.http.HttpClient$1: java.lang.Object run()>
Counter value: 1
SCC 214 : 1
<sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 215 : 1
<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>
Counter value: 2
SCC 216 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToIntTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceKeysToIntTask,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator)>
Counter value: 1
SCC 217 : 1
<java.net.AbstractPlainSocketImpl: void connectToAddress(java.net.InetAddress,int,int)>
Counter value: 1
SCC 218 : 1
<sun.misc.Perf: void access$100(sun.misc.Perf,java.nio.ByteBuffer)>
Counter value: 1
SCC 219 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble$lambda_emptyConsumer_0__52: void <init>()>
Counter value: 1
SCC 220 : 1
<java.net.HttpCookie$5: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 221 : 1
<sun.security.jca.ProviderList$ServiceList$1: void remove()>
Counter value: 1
SCC 222 : 1
<sun.misc.Perf$1: void run()>
Counter value: 1
SCC 223 : 1
<java.lang.ClassValue$Entry: boolean isPromise()>
Counter value: 1
SCC 224 : 1
<java.util.Spliterators$DoubleArraySpliterator: long estimateSize()>
Counter value: 1
SCC 225 : 1
<java.util.stream.Streams$AbstractStreamBuilderImpl: long estimateSize()>
Counter value: 1
SCC 226 : 1
<java.util.stream.ForEachOps$ForEachOp: java.lang.Void evaluateSequential(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 227 : 1
<java.time.Instant: java.time.Instant plus(long,long)>
Counter value: 1
SCC 228 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: java.util.stream.StreamSpliterators$ArrayBuffer$OfInt bufferCreate(int)>
Counter value: 1
SCC 229 : 1
<java.io.Bits: double getDouble(byte[],int)>
Counter value: 1
SCC 230 : 1
<java.util.OptionalLong: boolean equals(java.lang.Object)>
Counter value: 1
SCC 231 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$lambda_entryConsumer_0__32: void accept(java.lang.Object)>
Counter value: 1
SCC 232 : 1
<sun.util.calendar.JulianCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>
Counter value: 1
SCC 233 : 1
<sun.nio.fs.UnixNativeDispatcher: boolean futimesSupported()>
Counter value: 1
SCC 234 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator: void <init>(java.util.Spliterator)>
Counter value: 1
SCC 235 : 1
<java.util.stream.DoublePipeline$5$1: void begin(long)>
Counter value: 2
SCC 236 : 1
<java.util.stream.SortedOps$SizedDoubleSortingSink: void begin(long)>
Counter value: 1
SCC 237 : 1
<java.util.AbstractMap$2: int size()>
Counter value: 1
SCC 238 : 1
<java.util.stream.LongPipeline: java.util.Spliterator$OfLong adapt(java.util.Spliterator)>
Counter value: 1
SCC 239 : 1
<java.util.concurrent.ForkJoinTask: int externalAwaitDone()>
Counter value: 1
SCC 240 : 1
<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>
Counter value: 1
SCC 241 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate 'with'(java.time.LocalDate)>
Counter value: 1
SCC 242 : 1
<java.util.IdentityHashMap: int size()>
Counter value: 1
SCC 243 : 1
<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry nextEntry()>
Counter value: 1
SCC 244 : 1
<java.io.DataOutputStream: void incCount(int)>
Counter value: 1
SCC 245 : 1
<java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder$1: java.lang.Object run()>
Counter value: 1
SCC 246 : 1
<java.nio.HeapByteBufferR: boolean isReadOnly()>
Counter value: 1
SCC 247 : 1
<java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
Counter value: 1
SCC 248 : 1
<sun.net.www.MessageHeader$HeaderIterator: java.lang.Object next()>
Counter value: 1
SCC 249 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: java.util.Spliterator$OfDouble spliterator()>
Counter value: 1
SCC 250 : 1
<java.util.ArrayDeque: java.lang.Object[] copyElements(java.lang.Object[])>
Counter value: 1
SCC 251 : 1
<java.util.stream.Streams$DoubleStreamBuilderImpl: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 252 : 1
<java.nio.DirectCharBufferS: char getUnchecked(int)>
Counter value: 1
SCC 253 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator wrap(java.util.Spliterator)>
Counter value: 1
SCC 254 : 1
<sun.reflect.ClassFileAssembler: void opc_ifeq(sun.reflect.Label)>
Counter value: 1
SCC 255 : 1
<java.util.ArraysParallelSortHelpers$FJInt$Merger: void compute()>
Counter value: 1
SCC 256 : 1
<java.util.Collections$CheckedMap: boolean containsKey(java.lang.Object)>
Counter value: 2
SCC 257 : 1
<java.lang.reflect.Executable: void <init>()>
Counter value: 1
SCC 258 : 1
<java.util.regex.Pattern$1MatcherIterator: java.lang.Object next()>
Counter value: 1
SCC 259 : 1
<java.util.AbstractCollection: void clear()>
Counter value: 1
SCC 260 : 1
<java.util.stream.ReferencePipeline$10$1$accept__74: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 261 : 1
<java.util.WeakHashMap$KeySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 262 : 1
<java.lang.Short: int compareTo(java.lang.Short)>
Counter value: 1
SCC 263 : 1
<java.lang.reflect.Parameter: java.lang.String getRealName()>
Counter value: 1
SCC 264 : 1
<sun.nio.fs.NativeBuffer: void <clinit>()>
Counter value: 1
SCC 265 : 1
<java.util.concurrent.Executors$PrivilegedThreadFactory: java.security.AccessControlContext access$400(java.util.concurrent.Executors$PrivilegedThreadFactory)>
Counter value: 1
SCC 266 : 1
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: int hashCode()>
Counter value: 1
SCC 267 : 1
<java.util.stream.Nodes: java.util.stream.Node$Builder builder()>
Counter value: 1
SCC 268 : 1
<java.io.StringReader: void close()>
Counter value: 1
SCC 269 : 1
<java.util.Spliterators$IntArraySpliterator: int characteristics()>
Counter value: 1
SCC 270 : 1
<sun.util.locale.UnicodeLocaleExtension: java.util.Set getUnicodeLocaleAttributes()>
Counter value: 1
SCC 271 : 1
<java.util.stream.ReduceOps$8ReducingSink: java.lang.Long get()>
Counter value: 1
SCC 272 : 1
<java.nio.Bits: void copyToArray(long,java.lang.Object,long,long,long)>
Counter value: 1
SCC 273 : 1
<java.util.stream.DoublePipeline: java.util.Spliterator$OfDouble lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 274 : 1
<java.net.HostPortrange: int[] portrange()>
Counter value: 1
SCC 275 : 1
<sun.nio.ch.SocketAdaptor$1: void <init>(sun.nio.ch.SocketAdaptor)>
Counter value: 1
SCC 276 : 1
<java.util.stream.DoublePipeline$5$1: void <init>(java.util.stream.DoublePipeline$5,java.util.stream.Sink)>
Counter value: 1
SCC 277 : 1
<java.time.chrono.ChronoZonedDateTime: java.time.chrono.ChronoLocalDate toLocalDate()>
Counter value: 1
SCC 278 : 1
<java.util.zip.ZipUtils: long dosToJavaTime(long)>
Counter value: 1
SCC 279 : 1
<java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread: void <init>(java.util.concurrent.ForkJoinPool)>
Counter value: 1
SCC 280 : 1
<java.lang.invoke.MethodType: int[] stackDescriptionBits(java.lang.Class[],int)>
Counter value: 1
SCC 281 : 1
<sun.nio.ch.SocketAdaptor: boolean isOutputShutdown()>
Counter value: 1
SCC 282 : 1
<java.time.ZoneOffset: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 283 : 1
<sun.net.www.MessageHeader: java.lang.String findValue(java.lang.String)>
Counter value: 1
SCC 284 : 1
<sun.net.www.http.KeepAliveCache$1: java.lang.Void run()>
Counter value: 1
SCC 285 : 1
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] optimize(java.security.ProtectionDomain[])>
Counter value: 1
SCC 286 : 1
<java.util.stream.SpinedBuffer$OfDouble$1Splitr: java.util.Spliterator$OfDouble arraySpliterator(double[],int,int)>
Counter value: 1
SCC 287 : 1
<javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>(javax.security.auth.SubjectDomainCombiner$1)>
Counter value: 1
SCC 288 : 1
<java.lang.reflect.Proxy: void checkNewProxyPermission(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 289 : 1
<java.util.Vector: boolean remove(java.lang.Object)>
Counter value: 1
SCC 290 : 1
<java.time.chrono.HijrahChronology: int getMinimumYear()>
Counter value: 1
SCC 291 : 1
<java.io.ObjectStreamClass: void initProxy(java.lang.Class,java.lang.ClassNotFoundException,java.io.ObjectStreamClass)>
Counter value: 1
SCC 292 : 1
<java.io.ObjectStreamField: void <init>(java.lang.reflect.Field,boolean,boolean)>
Counter value: 1
SCC 293 : 1
<java.time.temporal.TemporalAdjusters$lambda_previousOrSame_12__61: void <init>(int)>
Counter value: 1
SCC 294 : 1
<java.lang.invoke.ThunkKeyWithObject: int hashCode()>
Counter value: 2
SCC 295 : 1
<java.util.TreeMap$EntrySet: void clear()>
Counter value: 1
SCC 296 : 1
<java.util.EnumMap: void <clinit>()>
Counter value: 1
SCC 297 : 1
<java.util.Hashtable$KeySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 298 : 1
<java.lang.reflect.WeakCache$CacheValue: int hashCode()>
Counter value: 1
SCC 299 : 1
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
Counter value: 1
SCC 300 : 1
<java.util.JapaneseImperialCalendar: java.util.JapaneseImperialCalendar getNormalizedCalendar()>
Counter value: 1
SCC 301 : 1
<java.util.stream.ReduceOps$5: java.util.stream.ReduceOps$5ReducingSink makeSink()>
Counter value: 1
SCC 302 : 1
<sun.security.x509.CertificateIssuerExtension: java.lang.String getName()>
Counter value: 1
SCC 303 : 1
<java.util.Collections$UnmodifiableMap: void putAll(java.util.Map)>
Counter value: 1
SCC 304 : 1
<sun.nio.fs.UnixCopyFile$2: void <init>()>
Counter value: 1
SCC 305 : 1
<javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: java.lang.Object putValue(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 306 : 1
<java.nio.DirectCharBufferU: long ix(int)>
Counter value: 1
SCC 307 : 1
<java.util.concurrent.ThreadLocalRandom: double internalNextDouble(double,double)>
Counter value: 1
SCC 308 : 1
<java.util.Spliterators$1Adapter: java.lang.Object next()>
Counter value: 1
SCC 309 : 1
<sun.reflect.ReflectionFactory: java.lang.reflect.Constructor generateConstructor(java.lang.Class,java.lang.reflect.Constructor)>
Counter value: 1
SCC 310 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: void copyInto(java.lang.Object,int)>
Counter value: 1
SCC 311 : 1
<java.util.Random$RandomDoublesSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 312 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void close()>
Counter value: 1
SCC 313 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 314 : 1
<java.time.LocalTime: java.time.OffsetTime atOffset(java.time.ZoneOffset)>
Counter value: 1
SCC 315 : 1
<sun.nio.ch.SocketChannelImpl: int write(java.nio.ByteBuffer)>
Counter value: 1
SCC 316 : 1
<java.io.BufferedInputStream: void reset()>
Counter value: 1
SCC 317 : 1
<java.nio.Bits: int makeInt(byte,byte,byte,byte)>
Counter value: 1
SCC 318 : 1
<java.util.stream.Streams$RangeLongSpliterator: long splitPoint(long)>
Counter value: 1
SCC 319 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: void setQop(java.lang.String)>
Counter value: 1
SCC 320 : 1
<java.util.Scanner: void cacheResult(java.lang.String)>
Counter value: 1
SCC 321 : 1
<sun.nio.ch.Util: boolean isBufferTooLarge(int)>
Counter value: 1
SCC 322 : 1
<java.lang.reflect.Field: void setFieldAccessor(sun.reflect.FieldAccessor,boolean)>
Counter value: 2
SCC 323 : 1
<sun.nio.ch.DatagramChannelImpl: int read(java.nio.ByteBuffer)>
Counter value: 1
SCC 324 : 1
<java.util.Collections$AsLIFOQueue: java.util.Spliterator spliterator()>
Counter value: 1
SCC 325 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>
Counter value: 1
SCC 326 : 1
<java.net.HttpURLConnection: int getResponseCode()>
Counter value: 1
SCC 327 : 1
<java.nio.DirectShortBufferS: long address()>
Counter value: 1
SCC 328 : 1
<java.lang.ProcessEnvironment$StringValues: boolean contains(java.lang.Object)>
Counter value: 2
SCC 329 : 1
<java.util.stream.Streams$2: void run()>
Counter value: 1
SCC 330 : 1
<java.net.URLClassLoader$5: java.net.URLClassLoader run()>
Counter value: 1
SCC 331 : 1
<java.lang.invoke.StaticFieldSetterHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 332 : 1
<java.util.Collections$AsLIFOQueue: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 333 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 2
SCC 334 : 1
<java.time.chrono.ChronoPeriodImpl: void <init>(java.time.chrono.Chronology,int,int,int)>
Counter value: 1
SCC 335 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$lambda_entryConsumer_0__32: void <init>(java.util.function.Consumer)>
Counter value: 1
SCC 336 : 1
<java.net.InetAddress: byte[] getAddress()>
Counter value: 1
SCC 337 : 1
<java.util.AbstractList: void clear()>
Counter value: 1
SCC 338 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: java.util.spi.CalendarDataProvider getImpl(java.util.Locale)>
Counter value: 1
SCC 339 : 1
<java.time.chrono.ThaiBuddhistChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
Counter value: 1
SCC 340 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate withYear(int)>
Counter value: 1
SCC 341 : 1
<java.lang.invoke.Insert3Handle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 342 : 1
<java.util.Collections$CheckedQueue: boolean equals(java.lang.Object)>
Counter value: 2
SCC 343 : 1
<java.util.Collections$EmptySet: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 344 : 1
<java.io.PrintStream: boolean checkError()>
Counter value: 2
SCC 345 : 1
<sun.util.calendar.Gregorian: sun.util.calendar.CalendarDate getCalendarDate()>
Counter value: 1
SCC 346 : 1
<sun.nio.ch.Util$3: int size()>
Counter value: 2
SCC 347 : 1
<sun.security.x509.IssuingDistributionPointExtension: void encodeThis()>
Counter value: 1
SCC 348 : 1
<java.net.Socket: java.net.InetAddress getLocalAddress()>
Counter value: 1
SCC 349 : 1
<sun.net.www.http.KeepAliveStream: void queueForCleanup(sun.net.www.http.KeepAliveCleanerEntry)>
Counter value: 1
SCC 350 : 1
<java.lang.reflect.Modifier: boolean isMandated(int)>
Counter value: 1
SCC 351 : 1
<java.security.SecureClassLoader: void <init>()>
Counter value: 1
SCC 352 : 1
<sun.security.x509.DistributionPoint: void <clinit>()>
Counter value: 1
SCC 353 : 1
<java.util.stream.IntPipeline$4$1: void <init>(java.util.stream.IntPipeline$4,java.util.stream.Sink)>
Counter value: 1
SCC 354 : 1
<sun.nio.fs.UnixFileKey: java.lang.String toString()>
Counter value: 1
SCC 355 : 1
<sun.security.provider.NativePRNG: void <clinit>()>
Counter value: 1
SCC 356 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate readExternal(java.io.DataInput)>
Counter value: 1
SCC 357 : 1
<java.util.regex.Matcher: java.util.regex.Pattern pattern()>
Counter value: 1
SCC 358 : 1
<java.util.stream.DistinctOps$1$init__83: java.util.function.Supplier bootstrap$()>
Counter value: 1
SCC 359 : 1
<java.util.stream.Sink$ChainedReference: boolean cancellationRequested()>
Counter value: 2
SCC 360 : 1
<sun.nio.ch.ChannelInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 361 : 1
<java.lang.ClassValue: void <init>()>
Counter value: 1
SCC 362 : 1
<java.util.IdentityHashMap$ValueSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 363 : 1
<sun.security.provider.NativePRNG$1: sun.security.provider.NativePRNG$RandomIO run()>
Counter value: 1
SCC 364 : 1
<java.util.stream.SortedOps$RefSortingSink$accept__49: java.util.function.Consumer bootstrap$(java.util.stream.Sink)>
Counter value: 1
SCC 365 : 1
<java.util.Scanner$1: void <init>(java.util.Scanner,int)>
Counter value: 1
SCC 366 : 1
<java.nio.DirectByteBufferR: void <clinit>()>
Counter value: 1
SCC 367 : 1
<sun.net.NetworkClient$2: java.net.Socket run()>
Counter value: 1
SCC 368 : 1
<java.util.concurrent.ConcurrentSkipListMap$Values: int size()>
Counter value: 1
SCC 369 : 1
<java.util.Scanner: boolean makeSpace()>
Counter value: 1
SCC 370 : 1
<java.security.MessageDigest: int access$200(java.security.MessageDigest)>
Counter value: 1
SCC 371 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$ValueSpliterator valueSpliterator()>
Counter value: 1
SCC 372 : 1
<java.util.stream.Nodes$InternalNodeSpliterator: java.util.Deque initStack()>
Counter value: 1
SCC 373 : 1
<java.net.Socket: void createImpl(boolean)>
Counter value: 1
SCC 374 : 1
<java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.String toString()>
Counter value: 1
SCC 375 : 1
<java.util.IdentityHashMap$KeySpliterator: void <init>(java.util.IdentityHashMap,int,int,int,int)>
Counter value: 1
SCC 376 : 1
<sun.net.www.protocol.http.BasicAuthentication: boolean supportsPreemptiveAuthorization()>
Counter value: 1
SCC 377 : 1
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 378 : 1
<java.util.stream.Streams$RangeLongSpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 379 : 1
<java.lang.ProcessEnvironment$StringValues: void clear()>
Counter value: 2
SCC 380 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.Comparator comparator()>
Counter value: 1
SCC 381 : 1
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 382 : 1
<sun.reflect.UnsafeObjectFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 383 : 1
<java.util.TreeMap: java.util.TreeMap$Entry getLowerEntry(java.lang.Object)>
Counter value: 1
SCC 384 : 1
<java.util.concurrent.ConcurrentSkipListMap$Values: java.lang.Object[] toArray()>
Counter value: 1
SCC 385 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamClass getVariantFor(java.lang.Class)>
Counter value: 1
SCC 386 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachEntryTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.Consumer)>
Counter value: 1
SCC 387 : 1
<sun.net.www.protocol.http.BasicAuthentication: boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection,sun.net.www.HeaderParser,java.lang.String)>
Counter value: 1
SCC 388 : 1
<java.util.stream.SliceOps$SliceTask: java.util.stream.SliceOps$SliceTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 389 : 1
<sun.net.www.ParseUtil: void appendAuthority(java.lang.StringBuffer,java.lang.String,java.lang.String,java.lang.String,int)>
Counter value: 1
SCC 390 : 1
<javax.security.auth.Policy$1: java.lang.String run()>
Counter value: 1
SCC 391 : 1
<sun.reflect.'annotation'.AnnotationInvocationHandler$1: java.lang.Object run()>
Counter value: 1
SCC 392 : 1
<java.io.ObjectStreamException: void <init>()>
Counter value: 1
SCC 393 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 394 : 1
<java.lang.invoke.MethodHandleImpl$1: void <init>(java.lang.Object[])>
Counter value: 1
SCC 395 : 1
<java.lang.invoke.SpreadHandle: void <clinit>()>
Counter value: 1
SCC 396 : 1
<sun.nio.ch.SocketAdaptor$SocketInputStream: void <init>(sun.nio.ch.SocketAdaptor)>
Counter value: 1
SCC 397 : 1
<java.util.ArrayDeque$DeqSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 398 : 1
<java.util.Tripwire$lambda_static_0__76: void <init>()>
Counter value: 1
SCC 399 : 1
<java.util.ArrayDeque: java.lang.Object peekFirst()>
Counter value: 1
SCC 400 : 1
<java.util.stream.Nodes$LongArrayNode: void <init>(long)>
Counter value: 1
SCC 401 : 1
<java.util.HashMap$HashMapSpliterator: long estimateSize()>
Counter value: 1
SCC 402 : 1
<java.util.stream.ReduceOps$8: java.util.stream.ReduceOps$8ReducingSink makeSink()>
Counter value: 1
SCC 403 : 1
<java.util.DualPivotQuicksort: void sort(char[],int,int,boolean)>
Counter value: 2
SCC 404 : 1
<java.lang.invoke.SerializedLambda$1: java.lang.Object run()>
Counter value: 1
SCC 405 : 1
<sun.security.x509.PrivateKeyUsageExtension: java.lang.String toString()>
Counter value: 1
SCC 406 : 1
<java.util.stream.Nodes$EmptyNode$OfDouble: java.util.Spliterator spliterator()>
Counter value: 1
SCC 407 : 1
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 408 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>
Counter value: 1
SCC 409 : 1
<sun.security.util.MemoryCache: void emptyQueue()>
Counter value: 1
SCC 410 : 1
<java.util.stream.ReduceOps$10: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 411 : 1
<java.util.Spliterators: java.util.Spliterator$OfDouble emptyDoubleSpliterator()>
Counter value: 1
SCC 412 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfLong: void <init>(java.util.Spliterator$OfLong,long,long)>
Counter value: 1
SCC 413 : 1
<java.util.IdentityHashMap$KeySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 414 : 1
<java.nio.file.Paths: java.nio.file.Path get(java.net.URI)>
Counter value: 1
SCC 415 : 1
<java.util.Spliterators$EmptySpliterator$OfInt: void <init>()>
Counter value: 1
SCC 416 : 1
<sun.util.calendar.JulianCalendar: sun.util.calendar.CalendarDate getCalendarDate()>
Counter value: 1
SCC 417 : 1
<jdk.internal.org.objectweb.asm.Type: void <clinit>()>
Counter value: 1
SCC 418 : 1
<java.util.Vector$VectorSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 419 : 1
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 420 : 1
<java.lang.reflect.Executable: java.lang.reflect.Type[] getAllGenericParameterTypes()>
Counter value: 1
SCC 421 : 1
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 422 : 1
<sun.nio.fs.NativeBuffer: sun.misc.Unsafe access$000()>
Counter value: 1
SCC 423 : 1
<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>
Counter value: 1
SCC 424 : 1
<java.lang.invoke.HandleCache: java.lang.invoke.MethodHandle cacheHandle(java.util.Map,java.lang.invoke.CacheKey,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 425 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate ofEpochDay(java.time.chrono.HijrahChronology,long)>
Counter value: 1
SCC 426 : 1
<java.lang.ProcessEnvironment$StringValues$1: void <init>(java.lang.ProcessEnvironment$StringValues)>
Counter value: 1
SCC 427 : 1
<java.util.stream.Sink: void accept(long)>
Counter value: 1
SCC 428 : 1
<java.util.stream.DistinctOps$1$2: void <init>(java.util.stream.DistinctOps$1,java.util.stream.Sink)>
Counter value: 1
SCC 429 : 1
<sun.net.www.protocol.http.HttpURLConnection: void checkResponseCredentials(boolean)>
Counter value: 1
SCC 430 : 1
<java.lang.invoke.ConstantHandle: void <init>(java.lang.invoke.ConstantHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 431 : 1
<sun.nio.ch.ServerSocketChannelImpl: void kill()>
Counter value: 1
SCC 432 : 1
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 433 : 1
<java.util.Spliterators$LongIteratorSpliterator: int characteristics()>
Counter value: 1
SCC 434 : 1
<java.util.Random$RandomIntsSpliterator: java.util.Random$RandomIntsSpliterator trySplit()>
Counter value: 1
SCC 435 : 1
<sun.security.x509.CertificatePoliciesExtension: void encodeThis()>
Counter value: 1
SCC 436 : 1
<java.lang.invoke.CacheKey: void <init>(java.lang.String,int)>
Counter value: 1
SCC 437 : 1
<java.nio.ByteBufferAsLongBufferL: long get(int)>
Counter value: 1
SCC 438 : 1
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 439 : 1
<java.util.ArraysParallelSortHelpers$FJFloat$Merger: void <init>(java.util.concurrent.CountedCompleter,float[],float[],int,int,int,int,int,int)>
Counter value: 1
SCC 440 : 1
<java.io.ObjectStreamClass$FieldReflectorKey: void <init>(java.lang.Class,java.io.ObjectStreamField[],java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 441 : 1
<java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory: java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool)>
Counter value: 1
SCC 442 : 1
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: float getFloat(java.lang.Object)>
Counter value: 1
SCC 443 : 1
<java.lang.invoke.AsTypeHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 444 : 1
<java.lang.invoke.Insert1Handle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 445 : 1
<sun.net.www.protocol.http.HttpURLConnection: boolean usingProxy()>
Counter value: 1
SCC 446 : 1
<java.time.OffsetTime: java.time.OffsetTime 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 447 : 1
<java.time.OffsetDateTime: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 448 : 1
<java.lang.reflect.Method: int getModifiers()>
Counter value: 1
SCC 449 : 1
<sun.nio.cs.FastCharsetProvider: java.nio.charset.Charset access$100(sun.nio.cs.FastCharsetProvider,java.lang.String)>
Counter value: 1
SCC 450 : 1
<java.net.HttpCookie: void setCommentURL(java.lang.String)>
Counter value: 1
SCC 451 : 1
<java.lang.invoke.HandleCache: java.lang.invoke.MethodHandle getMethodFromPerClassCache(java.util.Map,java.lang.String,java.lang.invoke.MethodType)>
Counter value: 1
SCC 452 : 1
<java.text.MessageFormat: boolean equals(java.lang.Object)>
Counter value: 1
SCC 453 : 1
<java.util.TreeMap$ValueSpliterator: java.util.TreeMap$ValueSpliterator trySplit()>
Counter value: 1
SCC 454 : 1
<sun.net.www.MessageHeader: java.lang.String toString()>
Counter value: 1
SCC 455 : 1
<sun.nio.ch.SocketDispatcher: void close(java.io.FileDescriptor)>
Counter value: 1
SCC 456 : 1
<java.time.chrono.MinguoDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 457 : 1
<java.util.stream.SortedOps$AbstractRefSortingSink: boolean cancellationRequested()>
Counter value: 1
SCC 458 : 1
<java.math.BigDecimal: int compareTo(java.lang.Object)>
Counter value: 1
SCC 459 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$NumberFormatProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 460 : 1
<java.lang.reflect.Proxy: java.lang.Class access$300(java.lang.ClassLoader,java.lang.String,byte[],int,int)>
Counter value: 1
SCC 461 : 1
<java.io.ObjectOutputStream$BlockDataOutputStream: void drain()>
Counter value: 1
SCC 462 : 1
<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 463 : 1
<sun.nio.ch.SocketChannelImpl: void kill()>
Counter value: 1
SCC 464 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfLong: void accept(long)>
Counter value: 1
SCC 465 : 1
<sun.net.www.http.KeepAliveStream$1: void <init>()>
Counter value: 1
SCC 466 : 1
<java.nio.channels.Channels: void writeFully(java.nio.channels.WritableByteChannel,java.nio.ByteBuffer)>
Counter value: 1
SCC 467 : 1
<java.nio.ByteBufferAsCharBufferL: boolean isDirect()>
Counter value: 1
SCC 468 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>
Counter value: 1
SCC 469 : 1
<java.util.Spliterators$EmptySpliterator$OfRef: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 470 : 1
<java.util.Collections$CheckedMap: boolean isEmpty()>
Counter value: 2
SCC 471 : 1
<java.util.Random$RandomIntsSpliterator: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 472 : 1
<java.time.Month: int get(java.time.temporal.TemporalField)>
Counter value: 1
SCC 473 : 1
<java.time.temporal.Temporal: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 474 : 1
<java.net.URLPermission$Authority: boolean implies(java.net.URLPermission$Authority)>
Counter value: 1
SCC 475 : 1
<java.util.Collections$AsLIFOQueue: java.util.stream.Stream stream()>
Counter value: 1
SCC 476 : 1
<java.util.concurrent.ThreadLocalRandom: long nextSeed()>
Counter value: 1
SCC 477 : 1
<java.util.TreeMap$KeySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 478 : 1
<java.util.Collections$AsLIFOQueue: boolean contains(java.lang.Object)>
Counter value: 1
SCC 479 : 1
<java.time.LocalTime: java.time.LocalTime plusSeconds(long)>
Counter value: 1
SCC 480 : 1
<java.time.chrono.Chronology$1: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 481 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$KeySpliterator keySpliterator()>
Counter value: 1
SCC 482 : 1
<java.net.HttpConnectSocketImpl: void setOption(int,java.lang.Object)>
Counter value: 1
SCC 483 : 1
<java.time.Year: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 484 : 1
<java.lang.IncompatibleClassChangeError: void <init>()>
Counter value: 1
SCC 485 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfInt: java.util.function.IntConsumer emptyConsumer()>
Counter value: 1
SCC 486 : 1
<java.lang.invoke.InvokeGenericHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 487 : 1
<java.lang.reflect.ReflectAccess: java.lang.String getConstructorSignature(java.lang.reflect.Constructor)>
Counter value: 1
SCC 488 : 1
<java.util.stream.LongPipeline$6$1: boolean cancellationRequested()>
Counter value: 2
SCC 489 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 490 : 1
<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
Counter value: 1
SCC 491 : 1
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 492 : 1
<java.nio.channels.SocketChannel: void <clinit>()>
Counter value: 1
SCC 493 : 1
<java.util.stream.SpinedBuffer$OfDouble$1Splitr: java.util.Spliterator$OfPrimitive arraySpliterator(java.lang.Object,int,int)>
Counter value: 1
SCC 494 : 1
<java.util.stream.Nodes$ToArrayTask$OfDouble: void <init>(java.util.stream.Node$OfDouble,double[],int)>
Counter value: 1
SCC 495 : 1
<java.net.URLPermission$Authority: boolean equals(java.net.URLPermission$Authority)>
Counter value: 1
SCC 496 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: java.util.Spliterator spliterator()>
Counter value: 1
SCC 497 : 1
<java.util.spi.TimeZoneNameProvider: java.lang.String getGenericDisplayName(java.lang.String,int,java.util.Locale)>
Counter value: 1
SCC 498 : 1
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 499 : 1
<java.util.Date: void <init>(int,int,int,int,int,int)>
Counter value: 1
SCC 500 : 1
<java.net.HttpCookie: java.lang.String getCommentURL()>
Counter value: 1
SCC 501 : 1
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 502 : 1
<java.io.ObjectInputStream$ValidationList$1: java.lang.Void run()>
Counter value: 1
SCC 503 : 1
<java.util.AbstractMap$2$1: void remove()>
Counter value: 2
SCC 504 : 1
<java.nio.Bits: long swap(long)>
Counter value: 1
SCC 505 : 1
<java.net.URLPermission$Authority: int hashCode()>
Counter value: 1
SCC 506 : 1
<sun.reflect.Reflection: void ensureMemberAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)>
Counter value: 1
SCC 507 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfLong: java.util.Spliterator makeSpliterator(java.util.Spliterator,long,long,long,long)>
Counter value: 1
SCC 508 : 1
<java.time.MonthDay: java.time.Month getMonth()>
Counter value: 1
SCC 509 : 1
<java.util.stream.SpinedBuffer$OfLong$1Splitr: java.util.Spliterator$OfPrimitive newSpliterator(int,int,int,int)>
Counter value: 1
SCC 510 : 1
<java.util.stream.SortedOps$RefSortingSink: void accept(java.lang.Object)>
Counter value: 1
SCC 511 : 1
<java.nio.HeapCharBufferR: java.nio.CharBuffer put(java.nio.CharBuffer)>
Counter value: 1
SCC 512 : 1
<java.io.Console: void <init>(java.io.Console$1)>
Counter value: 1
SCC 513 : 1
<java.util.stream.Nodes$LongFixedNodeBuilder: java.util.stream.Node$OfLong build()>
Counter value: 1
SCC 514 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate 'with'(java.time.LocalDate)>
Counter value: 1
SCC 515 : 1
<java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
Counter value: 1
SCC 516 : 1
<java.util.zip.ZipEntry: int hashCode()>
Counter value: 1
SCC 517 : 1
<java.lang.invoke.FoldNonvoidHandle: void <init>(java.lang.invoke.FoldNonvoidHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 518 : 1
<sun.reflect.ClassFileAssembler: short getMaxStack()>
Counter value: 1
SCC 519 : 1
<java.io.ObjectOutputStream: void write(byte[])>
Counter value: 1
SCC 520 : 1
<java.util.HashSet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 521 : 1
<java.time.Duration: java.time.Duration readExternal(java.io.DataInput)>
Counter value: 1
SCC 522 : 1
<sun.nio.ch.ServerSocketChannelImpl: void implCloseSelectableChannel()>
Counter value: 1
SCC 523 : 1
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>
Counter value: 1
SCC 524 : 1
<java.util.SubList: int access$208(java.util.SubList)>
Counter value: 1
SCC 525 : 1
<java.util.Spliterators$4Adapter: void accept(double)>
Counter value: 1
SCC 526 : 1
<java.time.LocalDate: java.time.LocalDate of(int,java.time.Month,int)>
Counter value: 1
SCC 527 : 1
<javax.security.auth.Subject$1: javax.security.auth.Subject run()>
Counter value: 1
SCC 528 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.lang.Object next()>
Counter value: 1
SCC 529 : 1
<java.nio.Bits: byte long3(long)>
Counter value: 1
SCC 530 : 1
<java.util.AbstractQueue: void clear()>
Counter value: 1
SCC 531 : 1
<java.util.Collections$SetFromMap: java.util.Spliterator spliterator()>
Counter value: 2
SCC 532 : 1
<java.util.stream.ForEachOps$ForEachOp$OfLong: void <init>(java.util.function.LongConsumer,boolean)>
Counter value: 1
SCC 533 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel: boolean access$102(java.nio.channels.spi.AbstractInterruptibleChannel,boolean)>
Counter value: 1
SCC 534 : 1
<sun.nio.ch.Net$3: void <init>()>
Counter value: 1
SCC 535 : 1
<java.time.chrono.HijrahChronology: int checkValidYear(long)>
Counter value: 1
SCC 536 : 1
<java.lang.invoke.Cache: void <init>()>
Counter value: 1
SCC 537 : 1
<java.util.LongSummaryStatistics: void accept(long)>
Counter value: 1
SCC 538 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class)>
Counter value: 1
SCC 539 : 1
<java.io.ClassByNameCache: java.io.ClassByNameCache$LoaderRef getCanonicalLoaderRef(java.lang.Object)>
Counter value: 1
SCC 540 : 1
<java.text.RuleBasedCollator: java.lang.String getRules()>
Counter value: 1
SCC 541 : 1
<javax.security.auth.SubjectDomainCombiner$2: void <init>(javax.security.auth.SubjectDomainCombiner)>
Counter value: 1
SCC 542 : 1
<java.util.AbstractMap$1$1: java.lang.Object next()>
Counter value: 2
SCC 543 : 1
<java.lang.invoke.ThunkTable: java.lang.invoke.ThunkTuple get(java.lang.invoke.ThunkKey)>
Counter value: 1
SCC 544 : 1
<java.util.stream.SpinedBuffer$OfInt: void accept(int)>
Counter value: 1
SCC 545 : 1
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: sun.reflect.generics.tree.FieldTypeSignature[] getLowerBoundASTs()>
Counter value: 1
SCC 546 : 1
<java.lang.invoke.MethodHandles$Lookup: void <init>(java.lang.Class,java.lang.Class,int,boolean)>
Counter value: 1
SCC 547 : 1
<java.util.stream.SpinedBuffer$OfInt$1Splitr: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 548 : 1
<java.util.AbstractMap$1: void clear()>
Counter value: 1
SCC 549 : 1
<java.io.InvalidClassException: java.lang.String getMessage()>
Counter value: 1
SCC 550 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] access$602(java.io.ObjectStreamClass,java.io.ObjectStreamField[])>
Counter value: 1
SCC 551 : 1
<java.lang.ApplicationShutdownHooks: void <clinit>()>
Counter value: 1
SCC 552 : 1
<java.util.stream.StreamOpFlag$MaskBuilder: java.util.stream.StreamOpFlag$MaskBuilder clear(java.util.stream.StreamOpFlag$Type)>
Counter value: 1
SCC 553 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: void accept(long)>
Counter value: 1
SCC 554 : 1
<sun.nio.fs.UnixDirectoryStream: java.util.Iterator iterator(java.nio.file.DirectoryStream)>
Counter value: 1
SCC 555 : 1
<java.util.Collections$SingletonSet: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 556 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller$2: void <init>(java.lang.Object[])>
Counter value: 1
SCC 557 : 1
<java.util.TreeMap$KeySet: java.util.Comparator comparator()>
Counter value: 1
SCC 558 : 1
<java.util.Spliterator$OfLong$accept__77: void <init>(java.util.function.Consumer)>
Counter value: 1
SCC 559 : 1
<java.util.stream.DoublePipeline$Head: java.util.Spliterator lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 560 : 1
<sun.misc.URLClassPath$2: java.lang.Object nextElement()>
Counter value: 1
SCC 561 : 1
<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>
Counter value: 1
SCC 562 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfLong: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 563 : 1
<java.time.zone.ZoneOffsetTransition: void <init>(long,java.time.ZoneOffset,java.time.ZoneOffset)>
Counter value: 1
SCC 564 : 1
<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>
Counter value: 1
SCC 565 : 1
<sun.util.locale.provider.AuxLocaleProviderAdapter$NullProvider: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 566 : 1
<java.util.Scanner: void <init>(java.io.File)>
Counter value: 1
SCC 567 : 1
<java.net.SocksSocketImpl: int getPort()>
Counter value: 1
SCC 568 : 1
<java.util.stream.SliceOps$1$1: void begin(long)>
Counter value: 2
SCC 569 : 1
<java.lang.ProcessEnvironment$StringValues$1: void remove()>
Counter value: 2
SCC 570 : 1
<java.nio.file.FileAlreadyExistsException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 571 : 1
<sun.nio.fs.UnixException: void rethrowAsIOException(sun.nio.fs.UnixPath,sun.nio.fs.UnixPath)>
Counter value: 1
SCC 572 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: void increaseCapacity()>
Counter value: 1
SCC 573 : 1
<java.nio.ByteBufferAsDoubleBufferB: int ix(int)>
Counter value: 1
SCC 574 : 1
<java.lang.invoke.MethodHandles$Lookup: void checkClassAccess(java.lang.Class)>
Counter value: 1
SCC 575 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: void clear()>
Counter value: 1
SCC 576 : 1
<java.util.concurrent.ConcurrentHashMap: java.util.Enumeration elements()>
Counter value: 1
SCC 577 : 1
<java.util.LinkedList$DescendingIterator: java.lang.Object next()>
Counter value: 1
SCC 578 : 1
<java.nio.HeapCharBufferR: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 579 : 1
<java.nio.IntBuffer: int compare(int,int)>
Counter value: 1
SCC 580 : 1
<sun.security.x509.CRLExtensions: java.lang.String toString()>
Counter value: 1
SCC 581 : 1
<java.math.BigDecimal: float floatValue()>
Counter value: 1
SCC 582 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 583 : 1
<java.lang.String: void <init>()>
Counter value: 1
SCC 584 : 1
<sun.nio.ch.SocketChannelImpl: void writerCleanup()>
Counter value: 1
SCC 585 : 1
<java.nio.DirectCharBufferRS: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 586 : 1
<java.util.EnumMap$Values: java.util.Iterator iterator()>
Counter value: 1
SCC 587 : 1
<java.util.stream.Streams$IntStreamBuilderImpl: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 588 : 1
<java.io.Console$3: void <init>(java.io.Console,java.io.Writer,boolean)>
Counter value: 1
SCC 589 : 1
<java.io.ObjectStreamClass: void requireInitialized()>
Counter value: 1
SCC 590 : 1
<java.util.ServiceLoader$1: void remove()>
Counter value: 1
SCC 591 : 1
<java.util.ArrayList$SubList: java.util.Spliterator spliterator()>
Counter value: 1
SCC 592 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: void copyInto(java.lang.Object,int)>
Counter value: 1
SCC 593 : 1
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 594 : 1
<java.text.RuleBasedCollator: int hashCode()>
Counter value: 1
SCC 595 : 1
<java.net.NetworkInterface: boolean supportsMulticast()>
Counter value: 1
SCC 596 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 597 : 1
<java.lang.invoke.BruteArgumentMoverHandle: int[] composePermute(int[],int[],int)>
Counter value: 1
SCC 598 : 1
<java.lang.reflect.Proxy$Key2: int hashCode()>
Counter value: 1
SCC 599 : 1
<java.util.Collections$CheckedList: java.lang.Object remove(int)>
Counter value: 2
SCC 600 : 1
<java.nio.HeapCharBufferR: java.nio.CharBuffer put(char[],int,int)>
Counter value: 1
SCC 601 : 1
<java.time.LocalDateTime: int getMinute()>
Counter value: 1
SCC 602 : 1
<java.util.stream.DoublePipeline$Head: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 603 : 1
<java.util.Collections$EmptyList: int hashCode()>
Counter value: 1
SCC 604 : 1
<java.util.stream.Nodes$EmptyNode: void copyInto(java.lang.Object,int)>
Counter value: 1
SCC 605 : 1
<java.util.stream.Nodes$EmptyNode$OfInt: void <init>()>
Counter value: 1
SCC 606 : 1
<java.util.TreeMap$ValueSpliterator: int characteristics()>
Counter value: 1
SCC 607 : 1
<java.util.stream.AbstractTask: int getLeafTarget()>
Counter value: 1
SCC 608 : 1
<sun.misc.Cleaner: sun.misc.Cleaner create(java.lang.Object,java.lang.Runnable)>
Counter value: 1
SCC 609 : 1
<java.util.stream.SortedOps$SizedDoubleSortingSink: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 610 : 1
<sun.security.x509.AccessDescription: java.lang.String toString()>
Counter value: 1
SCC 611 : 1
<java.io.DeleteOnExitHook: void runHooks()>
Counter value: 1
SCC 612 : 1
<java.util.Collections$CheckedList: void add(int,java.lang.Object)>
Counter value: 2
SCC 613 : 1
<java.util.LinkedList: boolean offerFirst(java.lang.Object)>
Counter value: 1
SCC 614 : 1
<java.util.EnumMap$KeySet: java.util.Iterator iterator()>
Counter value: 1
SCC 615 : 1
<java.net.HttpCookie$9: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 616 : 1
<sun.nio.ch.PendingFuture: java.nio.channels.AsynchronousChannel channel()>
Counter value: 1
SCC 617 : 1
<java.io.ByteArrayInputStream: boolean markSupported()>
Counter value: 1
SCC 618 : 1
<java.util.concurrent.ConcurrentHashMap$SearchEntriesTask: void compute()>
Counter value: 1
SCC 619 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] matchFields(java.io.ObjectStreamField[],java.io.ObjectStreamClass)>
Counter value: 1
SCC 620 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: java.lang.String getResourceKeyFor(sun.util.locale.provider.LocaleProviderAdapter$Type,java.lang.String,int,int,boolean)>
Counter value: 1
SCC 621 : 1
<sun.util.resources.ParallelListResourceBundle$KeySet$1: void <init>(sun.util.resources.ParallelListResourceBundle$KeySet)>
Counter value: 1
SCC 622 : 1
<sun.net.www.protocol.http.AuthCacheImpl: void put(java.lang.String,sun.net.www.protocol.http.AuthCacheValue)>
Counter value: 1
SCC 623 : 1
<java.util.concurrent.Executors$PrivilegedCallable: java.lang.Object call()>
Counter value: 1
SCC 624 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>
Counter value: 1
SCC 625 : 1
<java.lang.VMAccess: java.lang.Thread createThread(java.lang.Runnable,java.lang.String,boolean,boolean,boolean,java.lang.ClassLoader)>
Counter value: 1
SCC 626 : 1
<openj9.internal.security.RestrictedSecurity: boolean isFIPSEnabled()>
Counter value: 1
SCC 627 : 1
<java.util.stream.Nodes$SpinedNodeBuilder: java.lang.Object[] asArray(java.util.function.IntFunction)>
Counter value: 1
SCC 628 : 1
<java.lang.invoke.MethodHandleStatics: java.lang.InternalError newInternalError(java.lang.String)>
Counter value: 1
SCC 629 : 1
<java.util.concurrent.LinkedBlockingDeque$DescendingItr: java.util.concurrent.LinkedBlockingDeque$Node firstNode()>
Counter value: 1
SCC 630 : 1
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
Counter value: 1
SCC 631 : 1
<java.net.URI: int join(char[],int[])>
Counter value: 1
SCC 632 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean remove(java.lang.Object)>
Counter value: 1
SCC 633 : 1
<java.util.DualPivotQuicksort: void sort(long[],int,int,long[],int,int)>
Counter value: 1
SCC 634 : 1
<sun.nio.ch.ThreadPool: java.util.concurrent.ThreadFactory defaultThreadFactory()>
Counter value: 1
SCC 635 : 1
<java.time.Instant: java.time.Instant plusMillis(long)>
Counter value: 1
SCC 636 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: java.util.stream.Node$OfLong build()>
Counter value: 1
SCC 637 : 1
<java.util.concurrent.TimeUnit$1: long toMinutes(long)>
Counter value: 1
SCC 638 : 1
<sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes: java.lang.Object fileKey()>
Counter value: 1
SCC 639 : 1
<java.nio.FloatBuffer: java.lang.String toString()>
Counter value: 1
SCC 640 : 1
<java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 641 : 1
<java.nio.DirectByteBuffer: boolean isReadOnly()>
Counter value: 1
SCC 642 : 1
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 643 : 1
<java.util.stream.ForEachOps$ForEachOp$OfDouble: void <init>(java.util.function.DoubleConsumer,boolean)>
Counter value: 1
SCC 644 : 1
<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader getUserSetHeaders()>
Counter value: 1
SCC 645 : 1
<java.util.stream.Nodes$IntFixedNodeBuilder: void accept(int)>
Counter value: 1
SCC 646 : 1
<java.util.IdentityHashMap$IdentityHashMapSpliterator: long estimateSize()>
Counter value: 1
SCC 647 : 1
<java.nio.Bits: void copyFromArray(java.lang.Object,long,long,long,long)>
Counter value: 1
SCC 648 : 1
<java.lang.invoke.MethodHandleImpl$AsVarargsCollector: boolean isVarargsCollector()>
Counter value: 1
SCC 649 : 1
<sun.util.locale.provider.RuleBasedBreakIterator$SafeCharIterator: java.lang.Object clone()>
Counter value: 2
SCC 650 : 1
<java.util.EnumMap$KeyIterator: java.lang.Object next()>
Counter value: 1
SCC 651 : 1
<java.util.ArrayDeque$DeqIterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 652 : 1
<java.util.Spliterators$IntArraySpliterator: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 653 : 1
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDate plusMonths(long)>
Counter value: 1
SCC 654 : 1
<java.time.chrono.HijrahEra: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 655 : 1
<java.util.SubList: java.lang.Object remove(int)>
Counter value: 2
SCC 656 : 1
<java.util.stream.SpinedBuffer: void <init>()>
Counter value: 1
SCC 657 : 1
<java.time.Duration: boolean equals(java.lang.Object)>
Counter value: 1
SCC 658 : 1
<sun.misc.Signal$1: void run()>
Counter value: 1
SCC 659 : 1
<java.util.stream.ReduceOps$5ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 660 : 1
<java.util.stream.SpinedBuffer$OfLong: long get(long)>
Counter value: 1
SCC 661 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: java.lang.String getDisplayName(java.lang.String,int,int,int,java.util.Locale)>
Counter value: 2
SCC 662 : 1
<java.lang.invoke.Insert3Handle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 663 : 1
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 664 : 1
<java.time.temporal.TemporalAdjusters$lambda_previousOrSame_12__61: java.time.temporal.TemporalAdjuster bootstrap$(int)>
Counter value: 1
SCC 665 : 1
<sun.nio.fs.Util: java.lang.String toString(byte[])>
Counter value: 1
SCC 666 : 1
<sun.security.x509.KeyUsageExtension: java.lang.String getName()>
Counter value: 1
SCC 667 : 1
<java.util.stream.SpinedBuffer$OfDouble: void accept(double)>
Counter value: 1
SCC 668 : 1
<jdk.net.ExtendedSocketOptions$ExtSocketOption: java.lang.Class type()>
Counter value: 1
SCC 669 : 1
<sun.reflect.UnsafeBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 670 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 671 : 1
<java.util.stream.ReduceOps$4ReducingSink: void <init>(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)>
Counter value: 1
SCC 672 : 1
<sun.security.x509.X509CRLImpl: void <init>(byte[])>
Counter value: 1
SCC 673 : 1
<sun.misc.Signal: boolean equals(java.lang.Object)>
Counter value: 1
SCC 674 : 1
<sun.nio.ch.SourceChannelImpl: int read(java.nio.ByteBuffer)>
Counter value: 1
SCC 675 : 1
<sun.reflect.'annotation'.AnnotationInvocationHandler: void validateAnnotationMethods(java.lang.reflect.Method[])>
Counter value: 1
SCC 676 : 1
<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.security.AccessControlContext)>
Counter value: 1
SCC 677 : 1
<java.io.ObjectStreamClass: int getPrimDataSize()>
Counter value: 1
SCC 678 : 1
<java.nio.DirectByteBufferR: java.nio.ByteBuffer put(java.nio.ByteBuffer)>
Counter value: 1
SCC 679 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl$4$1: java.lang.Object run()>
Counter value: 1
SCC 680 : 1
<java.net.SocketImpl: java.io.FileDescriptor getFileDescriptor()>
Counter value: 1
SCC 681 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.NavigableSet keySet()>
Counter value: 1
SCC 682 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath getParent()>
Counter value: 1
SCC 683 : 1
<java.util.Spliterators$LongArraySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 684 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: void signal()>
Counter value: 1
SCC 685 : 1
<sun.reflect.MethodAccessorGenerator: java.lang.String generateName(boolean,boolean)>
Counter value: 1
SCC 686 : 1
<java.util.stream.SliceOps$4$lambda_opEvaluateParallelLazy_0__67: java.lang.Object apply(int)>
Counter value: 1
SCC 687 : 1
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 688 : 1
<java.util.stream.SortedOps$SizedLongSortingSink: void accept(long)>
Counter value: 1
SCC 689 : 1
<java.util.LinkedList$ListItr: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 690 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void readFloats(float[],int,int)>
Counter value: 1
SCC 691 : 1
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 692 : 1
<sun.nio.ch.Util$3: java.util.Iterator iterator()>
Counter value: 2
SCC 693 : 1
<java.util.HashMap$KeySpliterator: int characteristics()>
Counter value: 1
SCC 694 : 1
<sun.nio.fs.UnixNativeDispatcher: void unlink(sun.nio.fs.UnixPath)>
Counter value: 1
SCC 695 : 1
<java.nio.IntBuffer: int compareTo(java.lang.Object)>
Counter value: 1
SCC 696 : 1
<java.util.ArrayList$ArrayListSpliterator: void <init>(java.util.ArrayList,int,int,int)>
Counter value: 1
SCC 697 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: boolean access$301(java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask)>
Counter value: 1
SCC 698 : 1
<java.util.jar.JarVerifier$3: java.lang.String nextElement()>
Counter value: 1
SCC 699 : 1
<sun.util.PreHashedMap$2$1$1: java.lang.Object getValue()>
Counter value: 1
SCC 700 : 1
<java.util.stream.SpinedBuffer$OfInt: int get(long)>
Counter value: 1
SCC 701 : 1
<java.nio.Bits: byte char0(char)>
Counter value: 1
SCC 702 : 1
<java.util.Arrays: java.util.Spliterator$OfLong spliterator(long[],int,int)>
Counter value: 1
SCC 703 : 1
<java.lang.invoke.ReceiverBoundHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 704 : 1
<java.util.Collections: java.util.Comparator reverseOrder(java.util.Comparator)>
Counter value: 1
SCC 705 : 1
<java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
Counter value: 1
SCC 706 : 1
<java.time.YearMonth: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 707 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator$accept__44: java.util.stream.Sink$OfDouble bootstrap$(java.util.stream.SpinedBuffer$OfDouble)>
Counter value: 1
SCC 708 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfRef: void forEachRemaining(java.util.function.Consumer)>
Counter value: 2
SCC 709 : 1
<sun.net.www.http.KeepAliveStreamCleaner: void run()>
Counter value: 1
SCC 710 : 1
<sun.net.NetworkClient$3: java.lang.Object run()>
Counter value: 1
SCC 711 : 1
<java.util.stream.Nodes: java.util.stream.Node$OfLong collectLong(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>
Counter value: 1
SCC 712 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asFixedArity()>
Counter value: 1
SCC 713 : 1
<java.lang.invoke.ConstantObjectHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 714 : 1
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode balanceDeletion(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode)>
Counter value: 1
SCC 715 : 1
<java.util.stream.Nodes$CollectorTask: java.lang.Object doLeaf()>
Counter value: 1
SCC 716 : 1
<java.io.ObjectStreamClass: java.lang.Object newInstance()>
Counter value: 1
SCC 717 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: void <init>(java.util.stream.PipelineHelper,java.util.function.Supplier,boolean)>
Counter value: 1
SCC 718 : 1
<java.math.BigDecimal$StringBuilderHelper: int putIntCompact(long)>
Counter value: 1
SCC 719 : 1
<java.nio.IntBuffer: int hashCode()>
Counter value: 1
SCC 720 : 1
<java.util.stream.Sink$ChainedLong: void end()>
Counter value: 2
SCC 721 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 722 : 1
<java.text.RuleBasedCollationKey: int hashCode()>
Counter value: 1
SCC 723 : 1
<sun.net.www.http.HttpClient: boolean getHttpKeepAliveSet()>
Counter value: 1
SCC 724 : 1
<java.util.Collections$UnmodifiableNavigableSet: void <clinit>()>
Counter value: 1
SCC 725 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator: int characteristics()>
Counter value: 2
SCC 726 : 1
<java.util.Arrays: void parallelSort(double[])>
Counter value: 1
SCC 727 : 1
<java.util.Collections$CheckedCollection: java.lang.Object[] zeroLengthElementArray()>
Counter value: 1
SCC 728 : 1
<java.util.stream.Nodes$CollectorTask$OfInt: java.util.stream.AbstractTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 729 : 1
<java.util.concurrent.atomic.AtomicInteger: int getAndDecrement()>
Counter value: 1
SCC 730 : 1
<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>
Counter value: 1
SCC 731 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: java.lang.Object[] toArray()>
Counter value: 2
SCC 732 : 1
<java.util.stream.IntPipeline$Head: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 733 : 1
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 734 : 1
<sun.util.PreHashedMap: int access$000(sun.util.PreHashedMap)>
Counter value: 1
SCC 735 : 1
<java.lang.invoke.ThunkKey: java.lang.Class normalize(java.lang.Class)>
Counter value: 1
SCC 736 : 1
<java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
Counter value: 2
SCC 737 : 1
<java.time.DayOfWeek: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 738 : 1
<java.util.stream.Node$lambda_truncate_0__103: void <init>()>
Counter value: 1
SCC 739 : 1
<sun.security.x509.AuthorityKeyIdentifierExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 740 : 1
<sun.nio.ch.ThreadPool$lambda_defaultThreadFactory_0__35: java.util.concurrent.ThreadFactory bootstrap$()>
Counter value: 1
SCC 741 : 1
<java.io.ObjectInputStream: void readSerialData(java.lang.Object,java.io.ObjectStreamClass)>
Counter value: 1
SCC 742 : 1
<java.io.DataOutputStream: void flush()>
Counter value: 2
SCC 743 : 1
<java.lang.invoke.MethodHandleStatics: void <clinit>()>
Counter value: 1
SCC 744 : 1
<sun.misc.URLClassPath$2: sun.misc.Resource nextElement()>
Counter value: 1
SCC 745 : 1
<java.lang.Short: void <init>(short)>
Counter value: 1
SCC 746 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: int getNCCount()>
Counter value: 1
SCC 747 : 1
<java.nio.DirectCharBufferRS: java.nio.CharBuffer put(char[],int,int)>
Counter value: 1
SCC 748 : 1
<java.util.Tripwire$lambda_static_0__76: java.security.PrivilegedAction bootstrap$()>
Counter value: 1
SCC 749 : 1
<sun.net.ExtendedOptionsImpl$lambda_static_0__80: void <init>()>
Counter value: 1
SCC 750 : 1
<java.util.TreeMap$EntrySpliterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry,java.util.TreeMap$Entry,int,int,int)>
Counter value: 1
SCC 751 : 1
<java.util.stream.Nodes$FixedNodeBuilder: void begin(long)>
Counter value: 1
SCC 752 : 1
<java.util.concurrent.TimeUnit$5: long toSeconds(long)>
Counter value: 1
SCC 753 : 1
<sun.reflect.ClassFileAssembler: short cpi()>
Counter value: 1
SCC 754 : 1
<java.util.concurrent.atomic.AtomicLong: long longValue()>
Counter value: 1
SCC 755 : 1
<java.net.URI: java.lang.String encode(java.lang.String)>
Counter value: 1
SCC 756 : 1
<java.util.Vector$VectorSpliterator: int characteristics()>
Counter value: 1
SCC 757 : 1
<java.util.ArrayDeque: boolean remove(java.lang.Object)>
Counter value: 1
SCC 758 : 1
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 759 : 1
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 760 : 1
<sun.nio.ch.Net$3: java.lang.String run()>
Counter value: 1
SCC 761 : 1
<sun.net.www.http.KeepAliveCleanerEntry: sun.net.www.http.HttpClient getHttpClient()>
Counter value: 1
SCC 762 : 1
<java.util.stream.StreamSupport: java.util.stream.IntStream intStream(java.util.Spliterator$OfInt,boolean)>
Counter value: 1
SCC 763 : 1
<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>
Counter value: 1
SCC 764 : 1
<java.util.Spliterators: void checkFromToBounds(int,int,int)>
Counter value: 1
SCC 765 : 1
<sun.util.calendar.Gregorian: sun.util.calendar.CalendarDate newCalendarDate()>
Counter value: 1
SCC 766 : 1
<java.util.stream.Nodes$EmptyNode$OfLong: long[] asPrimitiveArray()>
Counter value: 1
SCC 767 : 1
<java.lang.Float: void <init>(float)>
Counter value: 1
SCC 768 : 1
<java.util.stream.SliceOps$3$lambda_opEvaluateParallelLazy_0__66: java.lang.Object apply(int)>
Counter value: 1
SCC 769 : 1
<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag$MaskBuilder set(java.util.stream.StreamOpFlag$Type)>
Counter value: 1
SCC 770 : 1
<sun.net.www.protocol.http.HttpURLConnection: boolean sameDestination(java.net.URL,java.net.URL)>
Counter value: 1
SCC 771 : 1
<sun.net.sdp.SdpProvider$Action: void <clinit>()>
Counter value: 1
SCC 772 : 1
<sun.net.sdp.SdpProvider: void convertTcpToSdpIfMatch(java.io.FileDescriptor,sun.net.sdp.SdpProvider$Action,java.net.InetAddress,int)>
Counter value: 1
SCC 773 : 1
<java.time.Year: java.time.Year plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 774 : 1
<sun.net.www.protocol.http.HttpURLConnection: void <init>(java.net.URL,java.net.Proxy,sun.net.www.protocol.http.Handler)>
Counter value: 1
SCC 775 : 1
<java.util.stream.SpinedBuffer$OfInt$1Splitr: java.util.Spliterator$OfPrimitive newSpliterator(int,int,int,int)>
Counter value: 1
SCC 776 : 1
<java.lang.ClassValue$ClassValueMap: void reduceCacheLoad()>
Counter value: 1
SCC 777 : 1
<java.util.Properties$XmlSupport$1: java.lang.Object run()>
Counter value: 1
SCC 778 : 1
<java.net.Socket: void setCreated()>
Counter value: 1
SCC 779 : 1
<java.time.chrono.HijrahChronology: int[] getHijrahDateInfo(int)>
Counter value: 1
SCC 780 : 1
<java.nio.ByteBufferAsLongBufferB: java.nio.LongBuffer put(int,long)>
Counter value: 1
SCC 781 : 1
<java.nio.file.FileTreeWalker$DirectoryNode: java.nio.file.Path directory()>
Counter value: 1
SCC 782 : 1
<sun.nio.ch.Net: int connect(java.io.FileDescriptor,java.net.InetAddress,int)>
Counter value: 1
SCC 783 : 1
<java.lang.reflect.Proxy$1: java.lang.Object run()>
Counter value: 1
SCC 784 : 1
<sun.net.ExtendedOptionsImpl: void <clinit>()>
Counter value: 1
SCC 785 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: void forEach(java.lang.Object)>
Counter value: 1
SCC 786 : 1
<java.net.Socket: void connect(java.net.SocketAddress)>
Counter value: 1
SCC 787 : 1
<sun.security.x509.PolicyInformation: sun.security.x509.CertificatePolicyId getPolicyIdentifier()>
Counter value: 1
SCC 788 : 1
<java.nio.HeapCharBuffer: java.nio.CharBuffer get(char[],int,int)>
Counter value: 1
SCC 789 : 1
<sun.misc.ProxyGenerator$1: java.lang.Void run()>
Counter value: 1
SCC 790 : 1
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate()>
Counter value: 1
SCC 791 : 1
<java.io.ObjectStreamField: boolean isPrimitive()>
Counter value: 1
SCC 792 : 1
<java.util.stream.Nodes$FixedNodeBuilder: void <init>(long,java.util.function.IntFunction)>
Counter value: 1
SCC 793 : 1
<java.time.zone.ZoneOffsetTransitionRule: int hashCode()>
Counter value: 1
SCC 794 : 1
<java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
Counter value: 1
SCC 795 : 1
<sun.net.www.protocol.http.DigestAuthentication: boolean supportsPreemptiveAuthorization()>
Counter value: 1
SCC 796 : 1
<java.util.IdentityHashMap$Values: boolean remove(java.lang.Object)>
Counter value: 1
SCC 797 : 1
<sun.misc.ProxyGenerator: java.lang.String access$900(java.lang.String)>
Counter value: 1
SCC 798 : 1
<java.util.concurrent.LinkedBlockingDeque: java.util.Spliterator spliterator()>
Counter value: 1
SCC 799 : 1
<javax.security.auth.callback.PasswordCallback: void clearPassword()>
Counter value: 1
SCC 800 : 1
<java.util.Vector: boolean removeElement(java.lang.Object)>
Counter value: 1
SCC 801 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 802 : 1
<sun.util.resources.LocaleData: java.util.ResourceBundle getCalendarData(java.util.Locale)>
Counter value: 1
SCC 803 : 1
<sun.security.x509.BasicConstraintsExtension: void encodeThis()>
Counter value: 1
SCC 804 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfDouble: void <init>(int)>
Counter value: 1
SCC 805 : 1
<sun.reflect.ClassFileAssembler: void opc_invokestatic(short,int,int)>
Counter value: 1
SCC 806 : 1
<java.nio.HeapCharBuffer: char getUnchecked(int)>
Counter value: 1
SCC 807 : 1
<sun.misc.Launcher$ExtClassLoader: java.lang.String findLibrary(java.lang.String)>
Counter value: 1
SCC 808 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator$lambda_initPartialTraversalState_0__39: boolean getAsBoolean()>
Counter value: 1
SCC 809 : 1
<java.util.RegularEnumSet: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 810 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class,java.lang.Class[])>
Counter value: 1
SCC 811 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator: java.lang.Object next()>
Counter value: 1
SCC 812 : 1
<java.io.ObjectStreamClass: java.lang.String toString()>
Counter value: 1
SCC 813 : 1
<sun.nio.fs.UnixFileAttributes: java.lang.Object fileKey()>
Counter value: 1
SCC 814 : 1
<java.util.TreeMap$KeySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 815 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: java.lang.String toString()>
Counter value: 1
SCC 816 : 1
<java.util.concurrent.ConcurrentLinkedQueue: boolean offer(java.lang.Object)>
Counter value: 1
SCC 817 : 1
<sun.reflect.NativeMethodAccessorImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
Counter value: 1
SCC 818 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setProxiedClient(java.net.URL,java.lang.String,int,boolean)>
Counter value: 1
SCC 819 : 1
<java.util.concurrent.CountDownLatch: void <init>(int)>
Counter value: 1
SCC 820 : 1
<java.util.stream.StreamOpFlag: int fromCharacteristics(java.util.Spliterator)>
Counter value: 1
SCC 821 : 1
<java.lang.invoke.InvokeExactHandle: void <init>(java.lang.invoke.InvokeExactHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 822 : 1
<java.io.Console$1: void run()>
Counter value: 1
SCC 823 : 1
<java.lang.invoke.SpreadHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,java.lang.Class,int,int)>
Counter value: 1
SCC 824 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfInt: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 825 : 1
<java.util.HashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 826 : 1
<java.net.URLPermission: java.lang.String actions()>
Counter value: 1
SCC 827 : 1
<sun.reflect.ByteVectorImpl: void <init>()>
Counter value: 1
SCC 828 : 1
<java.util.SubList$1: void remove()>
Counter value: 2
SCC 829 : 1
<java.net.SocksSocketImpl$2: java.net.PasswordAuthentication run()>
Counter value: 1
SCC 830 : 1
<java.util.Collections$CheckedMap: java.util.Collection values()>
Counter value: 2
SCC 831 : 1
<sun.misc.ProxyGenerator: void code_lload(int,java.io.DataOutputStream)>
Counter value: 1
SCC 832 : 1
<java.nio.channels.IllegalBlockingModeException: void <init>()>
Counter value: 1
SCC 833 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 834 : 1
<java.util.stream.DistinctOps$1$add__84: void <init>()>
Counter value: 1
SCC 835 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDate plusMonths(long)>
Counter value: 1
SCC 836 : 1
<sun.nio.fs.NativeBuffer$Deallocator: void <init>(long)>
Counter value: 1
SCC 837 : 1
<java.time.chrono.HijrahChronology: java.lang.String getId()>
Counter value: 1
SCC 838 : 1
<java.io.ObjectInputStream$BlockDataInputStream: long readUTFSpan(java.lang.StringBuilder,long)>
Counter value: 1
SCC 839 : 1
<java.util.stream.MatchOps$MatchTask: java.lang.Boolean getEmptyResult()>
Counter value: 1
SCC 840 : 1
<java.nio.CharBuffer: int compareTo(java.nio.CharBuffer)>
Counter value: 1
SCC 841 : 1
<java.util.stream.Nodes$EmptyNode$OfDouble: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 842 : 1
<java.io.UncheckedIOException: java.lang.Throwable getCause()>
Counter value: 1
SCC 843 : 1
<java.util.Collections$UnmodifiableMap: java.lang.Object remove(java.lang.Object)>
Counter value: 1
SCC 844 : 1
<java.lang.Float: long longValue()>
Counter value: 1
SCC 845 : 1
<java.util.TreeMap$NavigableSubMap$EntrySetView: boolean contains(java.lang.Object)>
Counter value: 1
SCC 846 : 1
<jdk.internal.util.xml.impl.ReaderUTF16: void close()>
Counter value: 1
SCC 847 : 1
<java.time.ZoneId: java.time.ZoneId normalized()>
Counter value: 1
SCC 848 : 1
<sun.net.www.http.ChunkedInputStream: int available()>
Counter value: 1
SCC 849 : 1
<java.util.stream.Nodes: java.util.stream.Node$OfInt node(int[])>
Counter value: 1
SCC 850 : 1
<java.lang.invoke.ThunkTuple: void <clinit>()>
Counter value: 1
SCC 851 : 1
<java.io.ObjectStreamClass: void invokeReadObjectNoData(java.lang.Object)>
Counter value: 1
SCC 852 : 1
<java.util.Collections$AsLIFOQueue: boolean remove(java.lang.Object)>
Counter value: 1
SCC 853 : 1
<java.lang.reflect.Method: int hashCode()>
Counter value: 1
SCC 854 : 1
<java.util.Collections$AsLIFOQueue: void clear()>
Counter value: 1
SCC 855 : 1
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 856 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDate plusDays(long)>
Counter value: 1
SCC 857 : 1
<java.security.KeyStore$PasswordProtection: char[] getPassword()>
Counter value: 1
SCC 858 : 1
<sun.util.logging.PlatformLogger: void finest(java.lang.String)>
Counter value: 1
SCC 859 : 1
<sun.security.x509.RFC822Name: boolean equals(java.lang.Object)>
Counter value: 1
SCC 860 : 1
<java.util.stream.Nodes: java.util.stream.Node$OfInt flattenInt(java.util.stream.Node$OfInt)>
Counter value: 1
SCC 861 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate plusYears(long)>
Counter value: 1
SCC 862 : 1
<java.io.ObjectInputStream$GetClassCachingSettingAction: void <init>(java.io.ObjectInputStream$1)>
Counter value: 1
SCC 863 : 1
<sun.reflect.DelegatingConstructorAccessorImpl: void <init>(sun.reflect.ConstructorAccessorImpl)>
Counter value: 1
SCC 864 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: void forEach(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 865 : 1
<java.util.ArraysParallelSortHelpers$FJByte$Sorter: void compute()>
Counter value: 1
SCC 866 : 1
<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void remove(java.nio.channels.FileLock)>
Counter value: 1
SCC 867 : 1
<java.util.Collections$SynchronizedMap: java.util.Set entrySet()>
Counter value: 2
SCC 868 : 1
<java.nio.file.Files: void createAndCheckIsDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
Counter value: 1
SCC 869 : 1
<java.lang.invoke.ArgumentMoverHandle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,int[],java.lang.Object,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 870 : 1
<sun.net.www.http.HttpCapture$1: void <init>()>
Counter value: 1
SCC 871 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: void <init>()>
Counter value: 1
SCC 872 : 1
<java.lang.invoke.Insert3Handle: void <init>(java.lang.invoke.Insert3Handle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 873 : 1
<java.util.stream.AbstractShortCircuitTask: void cancelLaterNodes()>
Counter value: 1
SCC 874 : 1
<java.util.Spliterators$DoubleIteratorSpliterator: java.util.Spliterator$OfDouble trySplit()>
Counter value: 1
SCC 875 : 1
<sun.nio.fs.UnixFileAttributes: int gid()>
Counter value: 1
SCC 876 : 1
<java.time.chrono.AbstractChronology: int lambda$static$b5a61975$1(java.time.chrono.ChronoLocalDateTime,java.time.chrono.ChronoLocalDateTime)>
Counter value: 1
SCC 877 : 1
<sun.security.util.DerInputBuffer: byte[] getBitString(int)>
Counter value: 1
SCC 878 : 1
<java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.String toString()>
Counter value: 1
SCC 879 : 1
<java.lang.reflect.Field: java.lang.String getName()>
Counter value: 1
SCC 880 : 1
<java.util.stream.StreamOpFlag: int createMask(java.util.stream.StreamOpFlag$Type)>
Counter value: 1
SCC 881 : 1
<java.util.Arrays: int hashCode(float[])>
Counter value: 1
SCC 882 : 1
<java.time.temporal.TemporalAccessor: int get(java.time.temporal.TemporalField)>
Counter value: 1
SCC 883 : 1
<java.io.ObjectOutputStream$BlockDataOutputStream: void write(int)>
Counter value: 1
SCC 884 : 1
<java.util.stream.Nodes$IntArrayNode: void <init>(int[])>
Counter value: 1
SCC 885 : 1
<java.time.OffsetDateTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 886 : 1
<java.lang.Byte: int intValue()>
Counter value: 1
SCC 887 : 1
<sun.net.www.MessageHeader: java.lang.String[] access$200(sun.net.www.MessageHeader)>
Counter value: 1
SCC 888 : 1
<java.util.LinkedList: boolean offer(java.lang.Object)>
Counter value: 1
SCC 889 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$Node findLast()>
Counter value: 1
SCC 890 : 1
<java.util.concurrent.ConcurrentHashMap$KeySpliterator: long estimateSize()>
Counter value: 1
SCC 891 : 1
<java.util.concurrent.SynchronousQueue: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 892 : 1
<java.util.TreeMap$NavigableSubMap$SubMapEntryIterator: java.lang.Object next()>
Counter value: 1
SCC 893 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDate plusMonths(long)>
Counter value: 1
SCC 894 : 1
<java.util.Spliterators$DoubleIteratorSpliterator: long estimateSize()>
Counter value: 1
SCC 895 : 1
<java.util.Collections$CheckedMap: boolean equals(java.lang.Object)>
Counter value: 2
SCC 896 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: void addImpl(java.util.spi.TimeZoneNameProvider)>
Counter value: 1
SCC 897 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.Set entrySet()>
Counter value: 1
SCC 898 : 1
<java.util.stream.LongPipeline: void forEach(java.util.function.LongConsumer)>
Counter value: 1
SCC 899 : 1
<java.io.ObjectInputStream$2: java.lang.Boolean run()>
Counter value: 1
SCC 900 : 1
<java.util.jar.JarFile$3: boolean hasMoreElements()>
Counter value: 2
SCC 901 : 1
<java.util.stream.DoublePipeline$StatelessOp: java.util.Spliterator lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 902 : 1
<java.util.ResourceBundle: java.util.Set keySet()>
Counter value: 1
SCC 903 : 1
<java.util.stream.Nodes: java.util.stream.Node flatten(java.util.stream.Node,java.util.function.IntFunction)>
Counter value: 1
SCC 904 : 1
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 905 : 1
<java.lang.Short: int intValue()>
Counter value: 1
SCC 906 : 1
<java.util.Collections$CheckedMap: int size()>
Counter value: 2
SCC 907 : 1
<java.net.HttpCookie$6: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 908 : 1
<java.net.HttpCookie: boolean equals(java.lang.Object)>
Counter value: 1
SCC 909 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 910 : 1
<java.util.stream.ReduceOps$Box: java.lang.Object get()>
Counter value: 1
SCC 911 : 1
<java.lang.reflect.Parameter: java.lang.reflect.Type getParameterizedType()>
Counter value: 1
SCC 912 : 1
<java.util.Collections: java.util.List synchronizedList(java.util.List,java.lang.Object)>
Counter value: 1
SCC 913 : 1
<java.util.stream.LongPipeline$3$1: void accept(long)>
Counter value: 1
SCC 914 : 1
<java.lang.reflect.Method: void specificToStringHeader(java.lang.StringBuilder)>
Counter value: 1
SCC 915 : 1
<sun.security.util.KnownOIDs$1: boolean registerNames()>
Counter value: 1
SCC 916 : 1
<java.util.stream.SliceOps$2$1: void accept(int)>
Counter value: 2
SCC 917 : 1
<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: void <init>(java.util.TreeMap$NavigableSubMap,java.util.TreeMap$Entry,java.util.TreeMap$Entry)>
Counter value: 1
SCC 918 : 1
<java.util.EnumMap$KeyIterator: void <init>(java.util.EnumMap,java.util.EnumMap$1)>
Counter value: 1
SCC 919 : 1
<sun.security.x509.AuthorityInfoAccessExtension: void encodeThis()>
Counter value: 1
SCC 920 : 1
<java.util.concurrent.ConcurrentSkipListMap$ValueSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 921 : 1
<sun.misc.ProxyGenerator$ProxyMethod: void <init>(sun.misc.ProxyGenerator,java.lang.String,java.lang.Class[],java.lang.Class,java.lang.Class[],java.lang.Class)>
Counter value: 1
SCC 922 : 1
<java.util.concurrent.ConcurrentHashMap$SearchMappingsTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 923 : 1
<sun.net.www.http.KeepAliveCache: java.lang.Thread access$002(sun.net.www.http.KeepAliveCache,java.lang.Thread)>
Counter value: 1
SCC 924 : 1
<javax.security.auth.Policy$4: void <init>()>
Counter value: 1
SCC 925 : 1
<java.security.KeyStore$SimpleLoadStoreParameter: void <init>(java.security.KeyStore$ProtectionParameter)>
Counter value: 1
SCC 926 : 1
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: char getChar(java.lang.Object)>
Counter value: 1
SCC 927 : 1
<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Variable getKey()>
Counter value: 1
SCC 928 : 1
<java.util.concurrent.ConcurrentHashMap$ReduceValuesTask: void compute()>
Counter value: 1
SCC 929 : 1
<sun.nio.ch.SocketOptionRegistry$RegistryKey: int hashCode()>
Counter value: 1
SCC 930 : 1
<sun.reflect.ReflectionFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 931 : 1
<java.util.stream.SpinedBuffer$1Splitr: void <init>(java.util.stream.SpinedBuffer,int,int,int,int)>
Counter value: 1
SCC 932 : 1
<java.lang.reflect.Constructor: void <init>(java.lang.Class,java.lang.Class[],java.lang.Class[],int,int,java.lang.String,byte[],byte[])>
Counter value: 1
SCC 933 : 1
<javax.security.auth.PrivateCredentialPermission$CredOwner: java.lang.String toString()>
Counter value: 1
SCC 934 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Method access$2302(java.io.ObjectStreamClass,java.lang.reflect.Method)>
Counter value: 1
SCC 935 : 1
<java.nio.DirectLongBufferU: java.nio.LongBuffer put(int,long)>
Counter value: 1
SCC 936 : 1
<java.lang.invoke.InvokeExactHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 937 : 1
<java.time.chrono.HijrahChronology: void <init>(java.lang.String)>
Counter value: 1
SCC 938 : 1
<java.util.Collections$SynchronizedMap: void putAll(java.util.Map)>
Counter value: 2
SCC 939 : 1
<java.util.Collections$CheckedCollection: java.util.Spliterator spliterator()>
Counter value: 2
SCC 940 : 1
<java.nio.ByteBufferAsCharBufferL: boolean isReadOnly()>
Counter value: 1
SCC 941 : 1
<java.util.concurrent.ForkJoinTask: void helpExpungeStaleExceptions()>
Counter value: 1
SCC 942 : 1
<java.util.concurrent.ConcurrentHashMap$TreeBin: void lockRoot()>
Counter value: 1
SCC 943 : 1
<java.time.Year: java.time.Year of(int)>
Counter value: 1
SCC 944 : 1
<java.util.concurrent.FutureTask: void handlePossibleCancellationInterrupt(int)>
Counter value: 1
SCC 945 : 1
<java.net.SocketImpl: int getLocalPort()>
Counter value: 1
SCC 946 : 1
<java.net.InetSocketAddress: java.lang.String getHostString()>
Counter value: 1
SCC 947 : 1
<java.util.concurrent.TimeUnit$6: long toMicros(long)>
Counter value: 1
SCC 948 : 1
<java.util.TreeMap$NavigableSubMap: boolean isEmpty()>
Counter value: 1
SCC 949 : 1
<sun.nio.ch.FileDispatcherImpl: int pwrite(java.io.FileDescriptor,long,int,long)>
Counter value: 1
SCC 950 : 1
<sun.net.www.protocol.http.AuthenticationInfo: void <init>(char,sun.net.www.protocol.http.AuthScheme,java.net.URL,java.lang.String)>
Counter value: 1
SCC 951 : 1
<sun.nio.ch.Net: java.net.InetSocketAddress checkAddress(java.net.SocketAddress)>
Counter value: 1
SCC 952 : 1
<java.time.LocalDateTime: java.time.OffsetDateTime atOffset(java.time.ZoneOffset)>
Counter value: 1
SCC 953 : 1
<java.util.EnumMap$EnumMapIterator: void checkLastReturnedIndex()>
Counter value: 1
SCC 954 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: java.lang.String getCnonce()>
Counter value: 1
SCC 955 : 1
<java.io.ObjectInputStream: java.lang.Object checkResolve(java.lang.Object)>
Counter value: 1
SCC 956 : 1
<sun.nio.ch.FileChannelImpl: int write(java.nio.ByteBuffer)>
Counter value: 1
SCC 957 : 1
<sun.reflect.ClassFileAssembler: void opc_i2l()>
Counter value: 1
SCC 958 : 1
<java.io.ObjectInputStream$BlockDataInputStream: byte peekByte()>
Counter value: 1
SCC 959 : 1
<javax.security.auth.SubjectDomainCombiner$5: java.lang.Object run()>
Counter value: 1
SCC 960 : 1
<sun.net.www.protocol.http.HttpCallerInfo: void <init>(sun.net.www.protocol.http.HttpCallerInfo,java.lang.String)>
Counter value: 1
SCC 961 : 1
<java.util.Collections$SingletonList: void sort(java.util.Comparator)>
Counter value: 1
SCC 962 : 1
<java.nio.DirectFloatBufferU: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 963 : 1
<sun.util.calendar.ImmutableGregorianDate: int getMinutes()>
Counter value: 2
SCC 964 : 1
<java.util.concurrent.ConcurrentHashMap$SearchMappingsTask: void compute()>
Counter value: 1
SCC 965 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator: int characteristics()>
Counter value: 2
SCC 966 : 1
<java.util.stream.ReferencePipeline$7$1: void accept(java.lang.Object)>
Counter value: 1
SCC 967 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: java.lang.String getResourceKey(java.lang.String,int,int,boolean)>
Counter value: 1
SCC 968 : 1
<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.Class getRawType()>
Counter value: 1
SCC 969 : 1
<sun.security.x509.OtherName: void encode(sun.security.util.DerOutputStream)>
Counter value: 2
SCC 970 : 1
<java.util.concurrent.CountedCompleter: boolean onExceptionalCompletion(java.lang.Throwable,java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 971 : 1
<java.io.ObjectInputStream$BlockDataInputStream: int read(byte[],int,int,boolean)>
Counter value: 1
SCC 972 : 1
<sun.net.NetworkClient: int getReadTimeout()>
Counter value: 1
SCC 973 : 1
<java.util.ArrayDeque: void allocateElements(int)>
Counter value: 1
SCC 974 : 1
<java.util.stream.FindOps$FindOp: java.util.stream.StreamShape inputShape()>
Counter value: 1
SCC 975 : 1
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 976 : 1
<java.net.InetSocketAddress: boolean equals(java.lang.Object)>
Counter value: 1
SCC 977 : 1
<java.lang.invoke.VirtualHandle: void <init>(java.lang.invoke.DirectHandle)>
Counter value: 1
SCC 978 : 1
<java.util.stream.ReferencePipeline$5$1: void <init>(java.util.stream.ReferencePipeline$5,java.util.stream.Sink)>
Counter value: 1
SCC 979 : 1
<java.net.Socket: void setSoTimeout(int)>
Counter value: 1
SCC 980 : 1
<java.util.EnumMap$ValueIterator: java.lang.Object next()>
Counter value: 1
SCC 981 : 1
<java.io.ObjectStreamClass$FieldReflector: void setPrimFieldValues(java.lang.Object,byte[])>
Counter value: 1
SCC 982 : 1
<java.lang.String$CaseInsensitiveComparator: int compare(java.lang.String,java.lang.String)>
Counter value: 1
SCC 983 : 1
<java.util.Collections$UnmodifiableCollection: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 984 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 985 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 2
SCC 986 : 1
<java.util.concurrent.TimeUnit$7: long toDays(long)>
Counter value: 1
SCC 987 : 1
<java.util.stream.ReduceOps$9ReducingSink: java.lang.Object get()>
Counter value: 1
SCC 988 : 1
<java.util.stream.SortedOps$RefSortingSink: void end()>
Counter value: 2
SCC 989 : 1
<java.time.chrono.HijrahChronology: java.util.Properties readConfigProperties(java.lang.String)>
Counter value: 1
SCC 990 : 1
<sun.nio.ch.FileDispatcherImpl: int read(java.io.FileDescriptor,long,int)>
Counter value: 1
SCC 991 : 1
<java.io.ObjectInputStream: java.lang.Enum readEnum(boolean)>
Counter value: 1
SCC 992 : 1
<java.util.OptionalDouble: boolean equals(java.lang.Object)>
Counter value: 1
SCC 993 : 1
<sun.security.jca.ProviderList$ServiceList: int size()>
Counter value: 2
SCC 994 : 1
<java.util.stream.Streams$AbstractStreamBuilderImpl: java.util.Spliterator trySplit()>
Counter value: 1
SCC 995 : 1
<sun.util.calendar.JulianCalendar: sun.util.calendar.Era[] access$000()>
Counter value: 1
SCC 996 : 1
<sun.nio.ch.SocketChannelImpl: boolean finishConnect()>
Counter value: 1
SCC 997 : 1
<java.util.stream.ForEachOps$ForEachOp: java.lang.Void get()>
Counter value: 1
SCC 998 : 1
<sun.reflect.generics.tree.BottomSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
Counter value: 1
SCC 999 : 1
<sun.nio.ch.SocketAdaptor: int getLocalPort()>
Counter value: 1
SCC 1000 : 1
<sun.util.resources.ParallelListResourceBundle$KeySet: java.util.ResourceBundle access$200(sun.util.resources.ParallelListResourceBundle$KeySet)>
Counter value: 1
SCC 1001 : 1
<java.net.InetSocketAddress: void <init>(int)>
Counter value: 1
SCC 1002 : 1
<java.lang.invoke.ConstantFloatHandle: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 1003 : 1
<java.util.stream.Nodes$ToArrayTask$OfInt: void <init>(java.util.stream.Node$OfInt,int[],int,java.util.stream.Nodes$1)>
Counter value: 1
SCC 1004 : 1
<java.util.stream.ReduceOps$13ReducingSink: void combine(java.util.stream.ReduceOps$13ReducingSink)>
Counter value: 1
SCC 1005 : 1
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 1006 : 1
<sun.security.x509.GeneralSubtrees: java.lang.String toString()>
Counter value: 1
SCC 1007 : 1
<java.util.stream.Nodes$CollectorTask: void <init>(java.util.stream.Nodes$CollectorTask,java.util.Spliterator)>
Counter value: 1
SCC 1008 : 1
<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 1009 : 1
<java.nio.LongBuffer: int compareTo(java.lang.Object)>
Counter value: 1
SCC 1010 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 1011 : 1
<java.util.concurrent.ForkJoinWorkerThread: void <init>(java.util.concurrent.ForkJoinPool,boolean)>
Counter value: 1
SCC 1012 : 1
<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 1013 : 1
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: short getShort(java.lang.Object)>
Counter value: 1
SCC 1014 : 1
<sun.security.x509.IssuerAlternativeNameExtension: java.lang.String toString()>
Counter value: 1
SCC 1015 : 1
<java.util.concurrent.ForkJoinPool: java.lang.String toString()>
Counter value: 1
SCC 1016 : 1
<java.nio.ByteBufferAsIntBufferB: int get(int)>
Counter value: 1
SCC 1017 : 1
<java.nio.LongBuffer: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1018 : 1
<sun.invoke.util.Wrapper$Format: int format(int,int,int)>
Counter value: 1
SCC 1019 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 2
SCC 1020 : 1
<java.time.chrono.MinguoDate: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1021 : 1
<sun.util.locale.provider.TimeZoneNameProviderImpl: java.lang.String getDisplayName(java.lang.String,boolean,int,java.util.Locale)>
Counter value: 1
SCC 1022 : 1
<sun.net.www.protocol.http.HttpURLConnection: void writeRequests()>
Counter value: 2
SCC 1023 : 1
<java.nio.channels.spi.AbstractSelectableChannel: java.lang.Object blockingLock()>
Counter value: 1
SCC 1024 : 1
<java.util.stream.SortedOps$AbstractDoubleSortingSink: boolean cancellationRequested()>
Counter value: 1
SCC 1025 : 1
<java.net.AbstractPlainSocketImpl: void socketClose()>
Counter value: 1
SCC 1026 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: java.util.Comparator comparator()>
Counter value: 1
SCC 1027 : 1
<sun.misc.ProxyGenerator$ConstantPool$ValueEntry: void write(java.io.DataOutputStream)>
Counter value: 1
SCC 1028 : 1
<java.nio.FloatBuffer: boolean equals(float,float)>
Counter value: 1
SCC 1029 : 1
<javax.security.auth.Policy: void setPolicy(javax.security.auth.Policy)>
Counter value: 1
SCC 1030 : 1
<java.time.Clock$TickClock: int hashCode()>
Counter value: 2
SCC 1031 : 1
<java.time.Year: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 1032 : 1
<sun.net.www.protocol.http.HttpURLConnection: boolean access$300(sun.net.www.protocol.http.HttpURLConnection,java.lang.String,int,java.net.URL)>
Counter value: 1
SCC 1033 : 1
<sun.net.www.http.KeepAliveCache: void <clinit>()>
Counter value: 1
SCC 1034 : 1
<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1035 : 1
<java.nio.ByteBufferAsLongBufferB: int ix(int)>
Counter value: 1
SCC 1036 : 1
<java.io.SerialCallbackContext: void setUsed()>
Counter value: 1
SCC 1037 : 1
<java.util.Scanner: java.lang.String findPatternInBuffer(java.util.regex.Pattern,int)>
Counter value: 1
SCC 1038 : 1
<java.time.chrono.HijrahChronology: int[] parseMonths(java.lang.String)>
Counter value: 1
SCC 1039 : 1
<java.net.ProtocolException: void <init>(java.lang.String)>
Counter value: 1
SCC 1040 : 1
<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getServerAuth(java.lang.String)>
Counter value: 1
SCC 1041 : 1
<java.time.Duration: int compareTo(java.time.Duration)>
Counter value: 1
SCC 1042 : 1
<java.util.concurrent.TimeUnit$3: long toDays(long)>
Counter value: 1
SCC 1043 : 1
<sun.util.calendar.JulianCalendar$Date: java.lang.String toString()>
Counter value: 1
SCC 1044 : 1
<java.time.OffsetTime: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 1045 : 1
<java.io.FilterOutputStream: void flush()>
Counter value: 2
SCC 1046 : 1
<sun.net.www.http.HttpClient: java.lang.String getRequestMethod()>
Counter value: 1
SCC 1047 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 1048 : 1
<sun.security.util.MemoryCache: void <init>(boolean,int,int)>
Counter value: 1
SCC 1049 : 1
<sun.reflect.MethodAccessorGenerator: int numNonPrimitiveParameterTypes()>
Counter value: 1
SCC 1050 : 1
<java.lang.invoke.FoldNonvoidHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 1051 : 1
<java.nio.ByteBufferAsCharBufferB: int ix(int)>
Counter value: 1
SCC 1052 : 1
<java.net.HttpConnectSocketImpl$2: java.net.Socket run()>
Counter value: 1
SCC 1053 : 1
<java.nio.Bits: byte long6(long)>
Counter value: 1
SCC 1054 : 1
<java.util.concurrent.ThreadLocalRandom$RandomDoublesSpliterator: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 1055 : 1
<java.util.stream.IntPipeline$8: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 1056 : 1
<java.util.Collections: void sort(java.util.List)>
Counter value: 1
SCC 1057 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator: long getExactSizeIfKnown()>
Counter value: 2
SCC 1058 : 1
<java.net.HttpCookie$10: void <init>()>
Counter value: 1
SCC 1059 : 1
<java.util.stream.Nodes$ToArrayTask$OfDouble: void <init>(java.util.stream.Node$OfDouble,double[],int,java.util.stream.Nodes$1)>
Counter value: 1
SCC 1060 : 1
<java.util.EnumMap$KeySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 1061 : 1
<java.nio.DirectByteBuffer: void <init>(sun.nio.ch.DirectBuffer,int,int,int,int,int)>
Counter value: 1
SCC 1062 : 1
<sun.nio.ch.DatagramSocketAdaptor: void close()>
Counter value: 1
SCC 1063 : 1
<java.io.ObjectInputStream$PeekInputStream: int peek()>
Counter value: 1
SCC 1064 : 1
<sun.net.www.protocol.http.HttpURLConnection$10: java.lang.Object run()>
Counter value: 1
SCC 1065 : 1
<java.util.TreeMap$NavigableSubMap: boolean inRange(java.lang.Object)>
Counter value: 1
SCC 1066 : 1
<sun.reflect.ByteVectorImpl: void resize(int)>
Counter value: 1
SCC 1067 : 1
<javax.security.auth.Policy$4: java.lang.Object run()>
Counter value: 1
SCC 1068 : 1
<java.util.IdentityHashMap$KeySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 1069 : 1
<java.net.HttpCookie: void setPortlist(java.lang.String)>
Counter value: 1
SCC 1070 : 1
<java.io.ObjectStreamClass$1: java.lang.Boolean run()>
Counter value: 1
SCC 1071 : 1
<java.util.stream.ReduceOps$11ReducingSink: java.lang.Object get()>
Counter value: 1
SCC 1072 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate plusDays(long)>
Counter value: 1
SCC 1073 : 1
<java.time.OffsetDateTime: int hashCode()>
Counter value: 1
SCC 1074 : 1
<java.time.Clock$SystemClock: int hashCode()>
Counter value: 1
SCC 1075 : 1
<java.util.stream.SliceOps$2$lambda_opEvaluateParallelLazy_0__65: void <init>()>
Counter value: 1
SCC 1076 : 1
<java.lang.invoke.ThunkKeyWithIntArray: boolean equalsThunkKeyWithIntArray(java.lang.invoke.ThunkKeyWithIntArray)>
Counter value: 1
SCC 1077 : 1
<java.util.Collections$CheckedList$1: int nextIndex()>
Counter value: 2
SCC 1078 : 1
<java.security.KeyStore$Builder$2: java.io.IOException access$602(java.security.KeyStore$Builder$2,java.io.IOException)>
Counter value: 1
SCC 1079 : 1
<sun.nio.ch.MembershipKeyImpl: java.lang.String toString()>
Counter value: 1
SCC 1080 : 1
<sun.misc.ObjectInputFilter$Config$Global: sun.misc.ObjectInputFilter$Status checkInput(sun.misc.ObjectInputFilter$FilterInfo)>
Counter value: 1
SCC 1081 : 1
<java.util.stream.ReduceOps$4ReducingSink: void begin(long)>
Counter value: 1
SCC 1082 : 1
<java.time.chrono.ThaiBuddhistDate: long getProlepticMonth()>
Counter value: 1
SCC 1083 : 1
<java.net.SocksSocketImpl: void <init>()>
Counter value: 1
SCC 1084 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: void forEach(java.lang.Object)>
Counter value: 1
SCC 1085 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: java.lang.String getHostString()>
Counter value: 1
SCC 1086 : 1
<java.util.stream.Nodes$ConcNode$OfInt: void <init>(java.util.stream.Node$OfInt,java.util.stream.Node$OfInt)>
Counter value: 1
SCC 1087 : 1
<sun.security.x509.CRLReasonCodeExtension: java.security.cert.CRLReason getReasonCode()>
Counter value: 1
SCC 1088 : 1
<java.util.Collections$UnmodifiableCollection: java.util.Spliterator spliterator()>
Counter value: 2
SCC 1089 : 1
<sun.net.www.http.HttpClient: void setIgnoreContinue(boolean)>
Counter value: 1
SCC 1090 : 1
<sun.nio.fs.NativeBuffer: void release()>
Counter value: 1
SCC 1091 : 1
<sun.net.www.protocol.http.EmptyInputStream: int available()>
Counter value: 1
SCC 1092 : 1
<java.util.LinkedHashMap$LinkedValues: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 1093 : 1
<java.time.zone.Ser: java.lang.Object readInternal(byte,java.io.DataInput)>
Counter value: 1
SCC 1094 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void grow()>
Counter value: 1
SCC 1095 : 1
<java.time.LocalDateTime: int getNano()>
Counter value: 1
SCC 1096 : 1
<java.util.BitSet: java.lang.String toString()>
Counter value: 1
SCC 1097 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.chrono.ChronoZonedDateTime ofBest(java.time.chrono.ChronoLocalDateTimeImpl,java.time.ZoneId,java.time.ZoneOffset)>
Counter value: 1
SCC 1098 : 1
<java.lang.ClassValue: void <clinit>()>
Counter value: 1
SCC 1099 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: java.util.Spliterator$OfInt trySplit()>
Counter value: 1
SCC 1100 : 1
<java.util.SubList: boolean addAll(int,java.util.Collection)>
Counter value: 2
SCC 1101 : 1
<sun.net.www.http.HttpClient: java.io.OutputStream getOutputStream()>
Counter value: 1
SCC 1102 : 1
<java.util.stream.SpinedBuffer$OfLong: int arrayLength(long[])>
Counter value: 1
SCC 1103 : 1
<java.nio.HeapByteBuffer: java.nio.ByteBuffer duplicate()>
Counter value: 1
SCC 1104 : 1
<java.lang.reflect.Proxy$ProxyClassFactory: java.lang.Object apply(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 1105 : 1
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 1106 : 1
<java.lang.reflect.AccessibleObject: void checkAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)>
Counter value: 1
SCC 1107 : 1
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
Counter value: 1
SCC 1108 : 1
<sun.util.calendar.ImmutableGregorianDate: void setNormalized(boolean)>
Counter value: 1
SCC 1109 : 1
<sun.misc.Launcher: java.lang.String access$500()>
Counter value: 1
SCC 1110 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: void remove()>
Counter value: 1
SCC 1111 : 1
<java.util.Collections$CopiesList: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 1112 : 1
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 1113 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamClass$ExceptionInfo access$1002(java.io.ObjectStreamClass,java.io.ObjectStreamClass$ExceptionInfo)>
Counter value: 1
SCC 1114 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.net.PasswordAuthentication privilegedRequestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>
Counter value: 1
SCC 1115 : 1
<sun.security.x509.DeltaCRLIndicatorExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 1116 : 1
<java.io.ObjectInputStream$BlockDataInputStream: long skip(long)>
Counter value: 1
SCC 1117 : 1
<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Class access$000(sun.reflect.'annotation'.AnnotationInvocationHandler)>
Counter value: 1
SCC 1118 : 1
<java.util.Spliterators$IteratorSpliterator: void <init>(java.util.Collection,int)>
Counter value: 1
SCC 1119 : 1
<java.lang.invoke.MethodHandleInfoImpl: java.lang.String getName()>
Counter value: 1
SCC 1120 : 1
<java.time.YearMonth: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1121 : 1
<java.net.HttpCookie: java.lang.String getName()>
Counter value: 1
SCC 1122 : 1
<java.time.chrono.ThaiBuddhistChronology: java.lang.String getId()>
Counter value: 1
SCC 1123 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfLong: java.util.stream.Nodes$SizedCollectorTask$OfLong makeChild(java.util.Spliterator,long,long)>
Counter value: 1
SCC 1124 : 1
<java.util.stream.SortedOps$AbstractIntSortingSink: boolean cancellationRequested()>
Counter value: 1
SCC 1125 : 1
<java.net.SocketImpl: java.net.Socket getSocket()>
Counter value: 1
SCC 1126 : 1
<java.net.SocksSocketImpl: void <init>(java.net.Proxy)>
Counter value: 1
SCC 1127 : 1
<java.util.stream.Streams$ConcatSpliterator$OfLong: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 1128 : 1
<java.util.LinkedList: java.lang.Object poll()>
Counter value: 1
SCC 1129 : 1
<java.util.stream.SpinedBuffer$1Splitr: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 1130 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int getCount()>
Counter value: 1
SCC 1131 : 1
<java.util.concurrent.ThreadLocalRandom: int internalNextInt(int,int)>
Counter value: 1
SCC 1132 : 1
<java.io.ObjectStreamClass: boolean hasReadResolveMethod()>
Counter value: 1
SCC 1133 : 1
<java.util.concurrent.ConcurrentSkipListMap$Values: boolean contains(java.lang.Object)>
Counter value: 1
SCC 1134 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfInt: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 1135 : 1
<java.util.stream.SliceOps$4$1: boolean cancellationRequested()>
Counter value: 2
SCC 1136 : 1
<sun.reflect.AccessorGenerator: void <init>()>
Counter value: 1
SCC 1137 : 1
<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: java.lang.Object getRawResult()>
Counter value: 1
SCC 1138 : 1
<java.util.PrimitiveIterator$OfDouble: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 1139 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: java.lang.String access$000(sun.net.www.protocol.http.DigestAuthentication$Parameters)>
Counter value: 1
SCC 1140 : 1
<java.io.ObjectStreamClass$2: java.lang.Long run()>
Counter value: 1
SCC 1141 : 1
<java.util.concurrent.atomic.AtomicLong: int intValue()>
Counter value: 1
SCC 1142 : 1
<java.util.IdentityHashMap$EntrySet: void <init>(java.util.IdentityHashMap)>
Counter value: 1
SCC 1143 : 1
<java.util.stream.ReduceOps$3ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 1144 : 1
<java.util.Collections$CopiesList: void <init>(int,java.lang.Object)>
Counter value: 1
SCC 1145 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean isEmpty()>
Counter value: 1
SCC 1146 : 1
<java.lang.invoke.ProxyClassesDumper: void validateDumpDir(java.nio.file.Path)>
Counter value: 1
SCC 1147 : 1
<java.util.IntSummaryStatistics: void accept(int)>
Counter value: 1
SCC 1148 : 1
<java.time.chrono.JapaneseDate: int lengthOfMonth()>
Counter value: 1
SCC 1149 : 1
<sun.security.x509.DistributionPoint: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1150 : 1
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 1151 : 1
<sun.net.www.http.KeepAliveStream$1: java.lang.Void run()>
Counter value: 1
SCC 1152 : 1
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle buildTransformHandle(com.ibm.oti.lang.ArgumentHelper,java.lang.invoke.MethodType)>
Counter value: 1
SCC 1153 : 1
<java.util.stream.Nodes$LongArrayNode: void forEach(java.lang.Object)>
Counter value: 1
SCC 1154 : 1
<sun.nio.ch.ServerSocketAdaptor: java.net.InetAddress getInetAddress()>
Counter value: 1
SCC 1155 : 1
<java.lang.ProcessBuilder$Redirect$5: java.lang.String toString()>
Counter value: 1
SCC 1156 : 1
<sun.net.www.http.ClientVector: void put(sun.net.www.http.HttpClient)>
Counter value: 1
SCC 1157 : 1
<java.net.SocketInputStream: int socketRead(java.io.FileDescriptor,byte[],int,int,int)>
Counter value: 1
SCC 1158 : 1
<java.net.Socket: void <clinit>()>
Counter value: 1
SCC 1159 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.Era getEra()>
Counter value: 1
SCC 1160 : 1
<java.util.stream.Nodes$CollectorTask$OfDouble$init__93: java.util.function.BinaryOperator bootstrap$()>
Counter value: 1
SCC 1161 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1162 : 1
<java.util.Spliterators$ArraySpliterator: int characteristics()>
Counter value: 1
SCC 1163 : 1
<java.lang.ClassValue$ClassValueMap: java.lang.ClassValue$Entry overwrittenEntry(java.lang.ClassValue$Entry)>
Counter value: 1
SCC 1164 : 1
<java.util.stream.AbstractShortCircuitTask: void <init>(java.util.stream.AbstractShortCircuitTask,java.util.Spliterator)>
Counter value: 1
SCC 1165 : 1
<java.nio.DirectLongBufferS: java.nio.LongBuffer put(int,long)>
Counter value: 1
SCC 1166 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: java.lang.String toString()>
Counter value: 1
SCC 1167 : 1
<java.util.concurrent.ConcurrentHashMap$ReduceEntriesTask: void compute()>
Counter value: 1
SCC 1168 : 1
<java.util.Spliterators$DoubleArraySpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 1169 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate plusYears(long)>
Counter value: 1
SCC 1170 : 1
<sun.net.www.MessageHeader: java.lang.String getKey(int)>
Counter value: 1
SCC 1171 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfPrimitive: void <init>(java.util.function.Supplier)>
Counter value: 1
SCC 1172 : 1
<java.time.YearMonth: java.time.YearMonth plusMonths(long)>
Counter value: 1
SCC 1173 : 1
<sun.misc.ProxyGenerator$ConstantPool: void write(java.io.OutputStream)>
Counter value: 1
SCC 1174 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 1175 : 1
<java.lang.reflect.Constructor: java.lang.String getName()>
Counter value: 1
SCC 1176 : 1
<java.util.Spliterators$IntArraySpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 1177 : 1
<sun.util.locale.LocaleObjectCache$CacheEntry: java.lang.Object getKey()>
Counter value: 1
SCC 1178 : 1
<java.nio.channels.Channels$WritableByteChannelImpl: void implCloseChannel()>
Counter value: 1
SCC 1179 : 1
<java.util.stream.SortedOps$AbstractLongSortingSink: boolean cancellationRequested()>
Counter value: 1
SCC 1180 : 1
<sun.net.NetProperties: void loadDefaultProperties()>
Counter value: 1
SCC 1181 : 1
<sun.net.www.protocol.http.DigestAuthentication: void checkResponse(java.lang.String,java.lang.String,java.net.URL)>
Counter value: 1
SCC 1182 : 1
<java.util.AbstractMap: void putAll(java.util.Map)>
Counter value: 1
SCC 1183 : 1
<java.util.concurrent.TimeUnit$3: long convert(long,java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 1184 : 1
<sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer: float floatValue()>
Counter value: 1
SCC 1185 : 1
<java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
Counter value: 1
SCC 1186 : 1
<sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.AuthenticationInfo create(boolean,java.lang.String,int,java.net.PasswordAuthentication)>
Counter value: 1
SCC 1187 : 1
<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean add(java.lang.Object)>
Counter value: 1
SCC 1188 : 1
<javax.security.auth.Subject$2: java.security.AccessControlContext run()>
Counter value: 1
SCC 1189 : 1
<java.text.DecimalFormatSymbols: int hashCode()>
Counter value: 1
SCC 1190 : 1
<java.util.stream.Nodes: java.util.stream.Node$Builder$OfDouble doubleBuilder()>
Counter value: 1
SCC 1191 : 1
<java.nio.file.Files$1: boolean accept(java.lang.Object)>
Counter value: 1
SCC 1192 : 1
<java.util.stream.SpinedBuffer$1Splitr: int characteristics()>
Counter value: 1
SCC 1193 : 1
<java.util.stream.ForEachOps$ForEachOp$OfRef: void accept(java.lang.Object)>
Counter value: 2
SCC 1194 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: java.util.Spliterator makeSpliterator(java.util.Spliterator)>
Counter value: 1
SCC 1195 : 1
<sun.misc.ProxyGenerator: void collectCompatibleTypes(java.lang.Class[],java.lang.Class[],java.util.List)>
Counter value: 1
SCC 1196 : 1
<java.util.Spliterators$EmptySpliterator: int characteristics()>
Counter value: 1
SCC 1197 : 1
<java.lang.String: void <init>(java.lang.String)>
Counter value: 1
SCC 1198 : 1
<java.lang.CharacterName$1: java.io.InputStream run()>
Counter value: 1
SCC 1199 : 1
<sun.reflect.ClassFileAssembler: void emitConstantPoolClass(short)>
Counter value: 1
SCC 1200 : 1
<java.nio.ByteBuffer: int compareTo(java.lang.Object)>
Counter value: 1
SCC 1201 : 1
<java.util.TreeMap: java.util.Spliterator descendingKeySpliterator()>
Counter value: 1
SCC 1202 : 1
<java.util.stream.Nodes$AbstractConcNode: java.util.stream.Node getChild(int)>
Counter value: 1
SCC 1203 : 1
<sun.misc.ProxyGenerator: void access$700(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>
Counter value: 1
SCC 1204 : 1
<java.lang.ClassLoader: java.lang.Object clone()>
Counter value: 1
SCC 1205 : 1
<java.util.stream.SpinedBuffer$OfDouble: double[] newArray(int)>
Counter value: 1
SCC 1206 : 1
<sun.net.www.http.HttpCapture: void flush()>
Counter value: 1
SCC 1207 : 1
<sun.security.x509.SubjectAlternativeNameExtension: java.lang.String getName()>
Counter value: 1
SCC 1208 : 1
<sun.security.x509.CRLNumberExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 1209 : 1
<java.lang.invoke.InsertHandle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 1210 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object remove(java.lang.Object)>
Counter value: 1
SCC 1211 : 1
<java.util.EnumMap: boolean access$1000(java.util.EnumMap,java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 1212 : 1
<java.lang.invoke.Cache: java.lang.Object computeValue(java.lang.Class)>
Counter value: 1
SCC 1213 : 1
<java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet,java.lang.Object)>
Counter value: 1
SCC 1214 : 1
<java.util.GregorianCalendar: int getGreatestMinimum(int)>
Counter value: 1
SCC 1215 : 1
<java.util.concurrent.ForkJoinTask$RunnableExecuteAction: boolean exec()>
Counter value: 1
SCC 1216 : 1
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>
Counter value: 1
SCC 1217 : 1
<java.nio.DirectByteBuffer: java.nio.ByteBuffer put(byte)>
Counter value: 1
SCC 1218 : 1
<java.util.stream.Nodes$ConcNode$OfPrimitive: void forEach(java.lang.Object)>
Counter value: 2
SCC 1219 : 1
<java.util.Collections$CheckedCollection$1: void remove()>
Counter value: 2
SCC 1220 : 1
<java.lang.reflect.Method: boolean isVarArgs()>
Counter value: 1
SCC 1221 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean access$100(java.util.concurrent.ScheduledThreadPoolExecutor)>
Counter value: 1
SCC 1222 : 1
<java.lang.reflect.Method: sun.reflect.MethodAccessor acquireMethodAccessor()>
Counter value: 1
SCC 1223 : 1
<java.util.Spliterators: java.util.Spliterator spliterator(java.lang.Object[],int)>
Counter value: 1
SCC 1224 : 1
<java.util.Collections$SynchronizedRandomAccessList: void <init>(java.util.List,java.lang.Object)>
Counter value: 1
SCC 1225 : 1
<java.util.stream.LongPipeline$4$1: void accept(long)>
Counter value: 1
SCC 1226 : 1
<java.util.stream.Nodes$CollectorTask$OfLong$longBuilder__90: java.lang.Object apply(long)>
Counter value: 1
SCC 1227 : 1
<sun.security.x509.ExtendedKeyUsageExtension: java.lang.String toString()>
Counter value: 1
SCC 1228 : 1
<javax.crypto.NullCipherSpi: byte[] engineUpdate(byte[],int,int)>
Counter value: 1
SCC 1229 : 1
<java.lang.J9VMInternals$1: void <init>(java.lang.Throwable,java.util.HashMap)>
Counter value: 1
SCC 1230 : 1
<java.lang.ProcessEnvironment$StringValues: java.util.Iterator iterator()>
Counter value: 1
SCC 1231 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator: java.util.Spliterator trySplit()>
Counter value: 2
SCC 1232 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean contains(java.lang.Object)>
Counter value: 1
SCC 1233 : 1
<java.lang.invoke.PrimitiveHandle: void <init>(java.lang.invoke.MethodType,java.lang.Class,java.lang.String,byte,java.lang.Object)>
Counter value: 1
SCC 1234 : 1
<java.util.JumboEnumSet: boolean isEmpty()>
Counter value: 1
SCC 1235 : 1
<java.util.concurrent.ForkJoinPool: void externalSubmit(java.util.concurrent.ForkJoinTask)>
Counter value: 1
SCC 1236 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.Set entrySet()>
Counter value: 1
SCC 1237 : 1
<sun.misc.URLClassPath$2: boolean next()>
Counter value: 1
SCC 1238 : 1
<sun.security.x509.GeneralSubtrees: java.lang.Object clone()>
Counter value: 1
SCC 1239 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachMappingTask: void compute()>
Counter value: 1
SCC 1240 : 1
<java.util.Optional: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1241 : 1
<sun.security.x509.NameConstraintsExtension: java.lang.String toString()>
Counter value: 1
SCC 1242 : 1
<java.nio.DirectDoubleBufferU: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 1243 : 1
<java.util.stream.Nodes: java.util.stream.Node$OfDouble collectDouble(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>
Counter value: 1
SCC 1244 : 1
<java.util.TreeMap: void putAll(java.util.Map)>
Counter value: 1
SCC 1245 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfLong: void accept(long)>
Counter value: 1
SCC 1246 : 1
<java.util.stream.AbstractPipeline$lambda_opEvaluateParallelLazy_2__64: void <init>()>
Counter value: 1
SCC 1247 : 1
<sun.util.calendar.JulianCalendar: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 1248 : 1
<java.util.Locale$LanguageRange: int hashCode()>
Counter value: 1
SCC 1249 : 1
<java.util.stream.ReduceOps$7ReducingSink: void <init>(java.util.function.Supplier,java.util.function.ObjIntConsumer,java.util.function.BinaryOperator)>
Counter value: 1
SCC 1250 : 1
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1251 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble: java.lang.Object emptyConsumer()>
Counter value: 1
SCC 1252 : 1
<java.nio.file.Files: boolean followLinks(java.nio.file.LinkOption[])>
Counter value: 1
SCC 1253 : 1
<java.util.ArrayDeque: java.lang.Object pop()>
Counter value: 1
SCC 1254 : 1
<java.time.LocalTime: java.time.LocalTime plusMinutes(long)>
Counter value: 1
SCC 1255 : 1
<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: void <clinit>()>
Counter value: 1
SCC 1256 : 1
<java.lang.invoke.MethodHandles$CollectHelper: void <init>(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 1257 : 1
<sun.net.www.protocol.http.AuthenticationInfo: void <init>(char,sun.net.www.protocol.http.AuthScheme,java.lang.String,int,java.lang.String)>
Counter value: 1
SCC 1258 : 1
<java.io.ObjectInputStream: void validateDescriptor(java.io.ObjectStreamClass)>
Counter value: 1
SCC 1259 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble: java.util.Spliterator makeSpliterator(java.util.Spliterator,long,long,long,long)>
Counter value: 1
SCC 1260 : 1
<java.io.ObjectInputStream$readString__63: sun.misc.JavaObjectInputStreamReadString bootstrap$()>
Counter value: 1
SCC 1261 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoEra getEra()>
Counter value: 1
SCC 1262 : 1
<java.time.chrono.ChronoLocalDateImpl: java.time.chrono.ChronoLocalDate 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 1263 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean canRunInCurrentRunState(boolean)>
Counter value: 1
SCC 1264 : 1
<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: boolean writtenOK()>
Counter value: 1
SCC 1265 : 1
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.CalendarDate newCalendarDate()>
Counter value: 1
SCC 1266 : 1
<java.util.Collections$SynchronizedSortedMap: java.util.Comparator comparator()>
Counter value: 2
SCC 1267 : 1
<sun.net.www.http.HttpCaptureOutputStream: void write(int)>
Counter value: 2
SCC 1268 : 1
<java.util.concurrent.Executors$PrivilegedThreadFactory$1: void run()>
Counter value: 1
SCC 1269 : 1
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>
Counter value: 1
SCC 1270 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry checkedEntry(java.util.Map$Entry,java.lang.Class)>
Counter value: 1
SCC 1271 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: void copyInto(java.lang.Object,int)>
Counter value: 1
SCC 1272 : 1
<java.time.chrono.HijrahChronology: int epochMonthToEpochDay(int)>
Counter value: 1
SCC 1273 : 1
<java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
Counter value: 1
SCC 1274 : 1
<java.util.stream.Nodes$EmptyNode$OfDouble: java.util.Spliterator$OfDouble spliterator()>
Counter value: 1
SCC 1275 : 1
<java.lang.invoke.ConstructorHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 1276 : 1
<java.time.OffsetDateTime: int getNano()>
Counter value: 1
SCC 1277 : 1
<java.time.Clock$FixedClock: java.lang.String toString()>
Counter value: 1
SCC 1278 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfRef: void accept(java.lang.Object)>
Counter value: 1
SCC 1279 : 1
<sun.reflect.ByteVectorImpl: byte get(int)>
Counter value: 1
SCC 1280 : 1
<java.util.JumboEnumSet: java.lang.Object clone()>
Counter value: 1
SCC 1281 : 1
<java.time.Year: int compareTo(java.time.Year)>
Counter value: 1
SCC 1282 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfInt: java.util.Spliterator trySplit()>
Counter value: 1
SCC 1283 : 1
<sun.net.NetworkClient: void closeServer()>
Counter value: 1
SCC 1284 : 1
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>
Counter value: 2
SCC 1285 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfRef: void <init>(int)>
Counter value: 1
SCC 1286 : 1
<java.util.concurrent.ForkJoinTask: void quietlyComplete()>
Counter value: 1
SCC 1287 : 1
<java.util.stream.ReduceOps$2: java.util.stream.ReduceOps$2ReducingSink makeSink()>
Counter value: 1
SCC 1288 : 1
<java.util.Collections$CheckedMap: void typeCheck(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 1289 : 1
<java.util.concurrent.ConcurrentSkipListSet: java.lang.Object clone()>
Counter value: 1
SCC 1290 : 1
<java.security.cert.CertPath: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1291 : 1
<java.io.DeleteOnExitHook: void <clinit>()>
Counter value: 1
SCC 1292 : 1
<java.nio.ByteBufferAsIntBufferL: int get(int)>
Counter value: 1
SCC 1293 : 1
<sun.misc.SharedSecrets: void setJavaNetHttpCookieAccess(sun.misc.JavaNetHttpCookieAccess)>
Counter value: 1
SCC 1294 : 1
<java.util.OptionalDouble: int hashCode()>
Counter value: 1
SCC 1295 : 1
<javax.crypto.NullCipherSpi: void engineSetPadding(java.lang.String)>
Counter value: 1
SCC 1296 : 1
<java.lang.invoke.MethodType: void <init>(java.lang.Class,java.lang.Class[],boolean)>
Counter value: 1
SCC 1297 : 1
<java.util.stream.Nodes$EmptyNode$OfInt: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 1298 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: void forEach(java.lang.Object)>
Counter value: 1
SCC 1299 : 1
<java.nio.CharBuffer: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1300 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator$accept__38: void <init>(java.util.stream.SpinedBuffer$OfInt)>
Counter value: 1
SCC 1301 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void clear()>
Counter value: 1
SCC 1302 : 1
<java.nio.channels.Channels$3: void write(byte[],int,int)>
Counter value: 1
SCC 1303 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.chrono.ChronoZonedDateTime 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 1304 : 1
<sun.misc.ProxyGenerator: java.lang.String getParameterDescriptors(java.lang.Class[])>
Counter value: 1
SCC 1305 : 1
<java.util.concurrent.ForkJoinPool: int externalHelpComplete(java.util.concurrent.CountedCompleter,int)>
Counter value: 1
SCC 1306 : 1
<java.time.LocalDateTime: java.time.LocalDateTime 'from'(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 1307 : 1
<sun.nio.ch.SourceChannelImpl: void kill()>
Counter value: 1
SCC 1308 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Method access$1802(java.io.ObjectStreamClass,java.lang.reflect.Method)>
Counter value: 1
SCC 1309 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean access$200(java.util.concurrent.ConcurrentSkipListMap$SubMap)>
Counter value: 1
SCC 1310 : 1
<java.util.stream.LongPipeline$2$1: void <init>(java.util.stream.LongPipeline$2,java.util.stream.Sink)>
Counter value: 1
SCC 1311 : 1
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
Counter value: 1
SCC 1312 : 1
<java.util.stream.ForEachOps$ForEachOrderedTask: void compute()>
Counter value: 1
SCC 1313 : 1
<java.time.chrono.HijrahDate: int getDayOfYear()>
Counter value: 1
SCC 1314 : 1
<java.util.stream.AbstractPipeline: java.lang.Object evaluate(java.util.stream.TerminalOp)>
Counter value: 1
SCC 1315 : 1
<sun.nio.ch.NativeDispatcher: int pwrite(java.io.FileDescriptor,long,int,long)>
Counter value: 1
SCC 1316 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistEra getEra()>
Counter value: 1
SCC 1317 : 1
<sun.security.x509.DistributionPointName: int hashCode()>
Counter value: 1
SCC 1318 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: java.util.concurrent.RunnableScheduledFuture finishPoll(java.util.concurrent.RunnableScheduledFuture)>
Counter value: 1
SCC 1319 : 1
<java.lang.ClassValue$ClassValueMap: int entryDislocation(java.lang.ClassValue$Entry[],int,java.lang.ClassValue$Entry)>
Counter value: 1
SCC 1320 : 1
<java.lang.Class$ReflectCache: void handleCleared(java.lang.Class$ReflectRef)>
Counter value: 1
SCC 1321 : 1
<java.lang.CharSequence$1CodePointIterator: boolean hasNext()>
Counter value: 1
SCC 1322 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfInt: void <init>(int)>
Counter value: 1
SCC 1323 : 1
<java.util.LinkedHashMap$LinkedEntrySet: void clear()>
Counter value: 1
SCC 1324 : 1
<java.util.ArrayDeque: void addFirst(java.lang.Object)>
Counter value: 1
SCC 1325 : 1
<sun.security.x509.AccessDescription: sun.security.x509.GeneralName getAccessLocation()>
Counter value: 1
SCC 1326 : 1
<java.util.stream.Nodes$ToArrayTask$OfPrimitive: java.util.stream.Nodes$ToArrayTask makeChild(int,int)>
Counter value: 1
SCC 1327 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$Node findNear(java.lang.Object,int,java.util.Comparator)>
Counter value: 1
SCC 1328 : 1
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>
Counter value: 1
SCC 1329 : 1
<java.lang.invoke.FilterArgumentsHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 1330 : 1
<java.io.ObjectStreamClass$1: java.lang.Object run()>
Counter value: 1
SCC 1331 : 1
<java.util.LinkedList$LLSpliterator: int characteristics()>
Counter value: 1
SCC 1332 : 1
<java.time.chrono.JapaneseDate: int lengthOfYear()>
Counter value: 1
SCC 1333 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 1334 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToDoubleTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceValuesToDoubleTask,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator)>
Counter value: 1
SCC 1335 : 1
<java.util.LinkedList: java.util.LinkedList superClone()>
Counter value: 1
SCC 1336 : 1
<java.util.Collections$CheckedList: void sort(java.util.Comparator)>
Counter value: 2
SCC 1337 : 1
<java.util.SubList$1: boolean hasPrevious()>
Counter value: 1
SCC 1338 : 1
<java.util.stream.StreamOpFlag: int toStreamFlags(int)>
Counter value: 1
SCC 1339 : 1
<java.time.temporal.IsoFields$Field$1: boolean isSupportedBy(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 1340 : 1
<java.net.AbstractPlainSocketImpl: java.lang.Object getOption(int)>
Counter value: 1
SCC 1341 : 1
<java.lang.invoke.ExplicitCastHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 1342 : 1
<java.net.URI: int compare(java.lang.String,java.lang.String)>
Counter value: 1
SCC 1343 : 1
<java.util.JapaneseImperialCalendar: int getActualMaximum(int)>
Counter value: 2
SCC 1344 : 1
<sun.reflect.ClassFileAssembler: short getMaxLocals()>
Counter value: 1
SCC 1345 : 1
<java.util.stream.LongPipeline: java.util.Spliterator$OfLong lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 1346 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator: int characteristics()>
Counter value: 1
SCC 1347 : 1
<java.util.Collections$CheckedCollection: boolean containsAll(java.util.Collection)>
Counter value: 2
SCC 1348 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: java.lang.String toStyleName(int)>
Counter value: 1
SCC 1349 : 1
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void raise()>
Counter value: 1
SCC 1350 : 1
<java.text.DecimalFormatSymbols: java.lang.String getNaN()>
Counter value: 1
SCC 1351 : 1
<java.util.stream.Nodes$CollectorTask$OfRef$init__95: java.util.function.BinaryOperator bootstrap$()>
Counter value: 1
SCC 1352 : 1
<java.net.PlainSocketImpl: void <init>()>
Counter value: 1
SCC 1353 : 1
<java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
Counter value: 2
SCC 1354 : 1
<java.io.ClassByNameCache$LoaderRef: void <clinit>()>
Counter value: 1
SCC 1355 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive: void <init>(java.util.Spliterator$OfPrimitive,java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive)>
Counter value: 1
SCC 1356 : 1
<java.util.stream.Nodes$EmptyNode: java.lang.Object[] asArray(java.util.function.IntFunction)>
Counter value: 1
SCC 1357 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: void setCachedHA1(java.lang.String)>
Counter value: 1
SCC 1358 : 1
<java.math.BigDecimal: java.math.BigDecimal abs()>
Counter value: 1
SCC 1359 : 1
<sun.security.x509.ReasonFlags: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 1360 : 1
<java.nio.DirectByteBufferR: java.nio.ByteBuffer put(byte)>
Counter value: 1
SCC 1361 : 1
<sun.nio.fs.UnixDirectoryStream: boolean isOpen()>
Counter value: 1
SCC 1362 : 1
<sun.net.www.http.ChunkedOutputStream: int getHeaderSize(int)>
Counter value: 1
SCC 1363 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>
Counter value: 1
SCC 1364 : 1
<java.lang.reflect.Modifier: int constructorModifiers()>
Counter value: 1
SCC 1365 : 1
<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 1366 : 1
<sun.security.x509.CRLDistributionPointsExtension: void encode(java.io.OutputStream,sun.security.util.ObjectIdentifier,boolean)>
Counter value: 1
SCC 1367 : 1
<java.nio.DirectCharBufferRS: java.nio.CharBuffer put(java.nio.CharBuffer)>
Counter value: 1
SCC 1368 : 1
<java.util.concurrent.LinkedBlockingDeque: boolean offerLast(java.lang.Object)>
Counter value: 1
SCC 1369 : 1
<java.nio.HeapCharBufferR: void <init>(char[],int,int,int,int,int)>
Counter value: 1
SCC 1370 : 1
<java.util.stream.MatchOps$MatchOp: java.lang.Boolean evaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 1371 : 1
<java.util.Scanner: void <clinit>()>
Counter value: 1
SCC 1372 : 1
<java.lang.invoke.VirtualHandle: void <clinit>()>
Counter value: 1
SCC 1373 : 1
<java.lang.invoke.AsTypeHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 1374 : 1
<java.nio.Bits: void copyFromCharArray(java.lang.Object,long,long,long)>
Counter value: 1
SCC 1375 : 1
<java.util.Collections$AsLIFOQueue: java.util.Iterator iterator()>
Counter value: 1
SCC 1376 : 1
<java.util.Collections$CheckedCollection: void clear()>
Counter value: 2
SCC 1377 : 1
<java.lang.reflect.Array: int getLength(java.lang.Object)>
Counter value: 1
SCC 1378 : 1
<java.net.URLConnection: int getContentLength()>
Counter value: 1
SCC 1379 : 1
<java.util.concurrent.ForkJoinTask: void <init>()>
Counter value: 1
SCC 1380 : 1
<sun.reflect.ClassFileAssembler: short getLength()>
Counter value: 1
SCC 1381 : 1
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 1382 : 1
<java.util.jar.JarFile$2: java.util.jar.JarFile$JarFileEntry nextElement()>
Counter value: 1
SCC 1383 : 1
<java.time.MonthDay: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 1384 : 1
<sun.net.www.http.HttpClient: void checkTunneling(sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 1385 : 1
<java.util.stream.Nodes$CollectorTask: void onCompletion(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 1386 : 1
<java.util.stream.IntPipeline$6: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 1387 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.net.URL checkURL(java.net.URL)>
Counter value: 1
SCC 1388 : 1
<java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
Counter value: 1
SCC 1389 : 1
<java.lang.invoke.MethodHandleImpl$AsVarargsCollector: java.lang.invoke.MethodHandle asFixedArity()>
Counter value: 1
SCC 1390 : 1
<java.util.Collections$EmptyListIterator: void set(java.lang.Object)>
Counter value: 1
SCC 1391 : 1
<java.nio.DirectLongBufferU: long get(int)>
Counter value: 1
SCC 1392 : 1
<java.util.concurrent.ConcurrentLinkedQueue: boolean isEmpty()>
Counter value: 1
SCC 1393 : 1
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
Counter value: 1
SCC 1394 : 1
<java.util.stream.ReferencePipeline$4$1: void <init>(java.util.stream.ReferencePipeline$4,java.util.stream.Sink)>
Counter value: 1
SCC 1395 : 1
<java.util.Collections$SetFromMap: boolean containsAll(java.util.Collection)>
Counter value: 2
SCC 1396 : 1
<java.util.stream.MatchOps$MatchOp: int getOpFlags()>
Counter value: 1
SCC 1397 : 1
<java.io.ObjectInputStream$HandleTable: void finish(int)>
Counter value: 1
SCC 1398 : 1
<sun.nio.fs.AbstractPath: java.util.Iterator iterator()>
Counter value: 1
SCC 1399 : 1
<sun.net.www.http.ChunkedInputStream: int readAhead(boolean)>
Counter value: 1
SCC 1400 : 1
<sun.reflect.MethodAccessorGenerator$1: java.lang.Object run()>
Counter value: 1
SCC 1401 : 1
<java.lang.Thread: java.lang.String newName()>
Counter value: 1
SCC 1402 : 1
<java.util.Random$RandomLongsSpliterator: long estimateSize()>
Counter value: 1
SCC 1403 : 1
<java.util.EnumMap: boolean equals(java.util.EnumMap)>
Counter value: 1
SCC 1404 : 1
<java.lang.invoke.InsertHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 1405 : 1
<java.util.stream.SortedOps$SizedRefSortingSink: void accept(java.lang.Object)>
Counter value: 1
SCC 1406 : 1
<java.util.Spliterators$EmptySpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 1407 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfDouble: java.util.stream.Nodes$SizedCollectorTask makeChild(java.util.Spliterator,long,long)>
Counter value: 1
SCC 1408 : 1
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 1409 : 1
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object peek()>
Counter value: 1
SCC 1410 : 1
<java.time.LocalTime: java.time.LocalTime plusNanos(long)>
Counter value: 1
SCC 1411 : 1
<java.util.concurrent.ConcurrentHashMap$ValueSpliterator: long estimateSize()>
Counter value: 1
SCC 1412 : 1
<java.nio.DirectCharBufferU: java.nio.CharBuffer compact()>
Counter value: 1
SCC 1413 : 1
<java.util.Spliterators$EmptySpliterator$OfInt: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 1414 : 1
<java.util.Arrays: java.lang.String toString(long[])>
Counter value: 1
SCC 1415 : 1
<java.net.NetworkInterface$1subIFs: boolean hasMoreElements()>
Counter value: 1
SCC 1416 : 1
<java.util.stream.SpinedBuffer: void ensureCapacity(long)>
Counter value: 1
SCC 1417 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl plusSeconds(long)>
Counter value: 1
SCC 1418 : 1
<sun.security.x509.PolicyInformation: java.util.Set getPolicyQualifiers()>
Counter value: 1
SCC 1419 : 1
<java.nio.file.DirectoryIteratorException: java.lang.Throwable getCause()>
Counter value: 1
SCC 1420 : 1
<java.time.Clock$OffsetClock: int hashCode()>
Counter value: 2
SCC 1421 : 1
<sun.nio.fs.UnixFileSystem$FileStoreIterator: java.nio.file.FileStore next()>
Counter value: 1
SCC 1422 : 1
<sun.util.calendar.ImmutableGregorianDate: sun.util.calendar.CalendarDate setTimeOfDay(int,int,int,int)>
Counter value: 1
SCC 1423 : 1
<sun.nio.fs.UnixPath: java.nio.file.Path getParent()>
Counter value: 1
SCC 1424 : 1
<java.time.Instant: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 1425 : 1
<sun.util.calendar.ImmutableGregorianDate: int getZoneOffset()>
Counter value: 2
SCC 1426 : 1
<sun.net.www.protocol.http.HttpURLConnection: boolean followRedirect0(java.lang.String,int,java.net.URL)>
Counter value: 1
SCC 1427 : 1
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 1428 : 1
<java.nio.DirectByteBuffer: boolean isDirect()>
Counter value: 1
SCC 1429 : 1
<sun.reflect.Label: void <init>()>
Counter value: 1
SCC 1430 : 1
<java.util.stream.LongStream$1: long nextLong()>
Counter value: 1
SCC 1431 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: void <init>(int)>
Counter value: 1
SCC 1432 : 1
<java.lang.invoke.ThunkKeyWithInt: int hashCode()>
Counter value: 1
SCC 1433 : 1
<java.util.DualPivotQuicksort: void doSort(char[],int,int,char[],int,int)>
Counter value: 1
SCC 1434 : 1
<java.util.Collections$CheckedCollection: void <init>(java.util.Collection,java.lang.Class)>
Counter value: 1
SCC 1435 : 1
<java.lang.invoke.Insert1Handle: void <init>(java.lang.invoke.Insert1Handle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 1436 : 1
<java.util.HashMap$EntrySet: void clear()>
Counter value: 1
SCC 1437 : 1
<java.io.ObjectStreamClass$3: java.lang.Object run()>
Counter value: 1
SCC 1438 : 1
<java.nio.file.InvalidPathException: java.lang.String getMessage()>
Counter value: 1
SCC 1439 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: int compareTo(java.lang.Object)>
Counter value: 1
SCC 1440 : 1
<java.util.Random$RandomIntsSpliterator: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 1441 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator$lambda_initPartialTraversalState_0__45: java.util.function.BooleanSupplier bootstrap$(java.util.stream.StreamSpliterators$DoubleWrappingSpliterator)>
Counter value: 1
SCC 1442 : 1
<java.lang.reflect.Modifier: boolean isFinal(int)>
Counter value: 1
SCC 1443 : 1
<java.util.ResourceBundle$1: java.lang.String toString()>
Counter value: 1
SCC 1444 : 1
<java.nio.file.Files$FileTypeDetectors$1: java.lang.Object run()>
Counter value: 1
SCC 1445 : 1
<java.time.chrono.HijrahDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 1446 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: java.util.spi.CurrencyNameProvider getImpl(java.util.Locale)>
Counter value: 1
SCC 1447 : 1
<java.net.URLPermission: void parseURI(java.lang.String)>
Counter value: 1
SCC 1448 : 1
<java.util.zip.ZipEntry: long getTime()>
Counter value: 1
SCC 1449 : 1
<java.time.OffsetTime: java.time.OffsetTime 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 1450 : 1
<java.util.stream.SortedOps$SizedLongSortingSink: void begin(long)>
Counter value: 1
SCC 1451 : 1
<java.util.concurrent.Executors$PrivilegedCallable$1: void <init>(java.util.concurrent.Executors$PrivilegedCallable)>
Counter value: 1
SCC 1452 : 1
<java.nio.channels.spi.SelectorProvider: void <init>()>
Counter value: 1
SCC 1453 : 1
<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader$1: java.lang.Object run()>
Counter value: 1
SCC 1454 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.ZoneOffset getOffset()>
Counter value: 1
SCC 1455 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 1456 : 1
<java.io.File: boolean canRead()>
Counter value: 1
SCC 1457 : 1
<java.time.YearMonth: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 1458 : 1
<sun.security.util.Cache: void <init>()>
Counter value: 1
SCC 1459 : 1
<java.util.AbstractMap: void clear()>
Counter value: 1
SCC 1460 : 1
<java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle: java.lang.invoke.MethodHandle asCollector(java.lang.Class,int)>
Counter value: 1
SCC 1461 : 1
<java.lang.Float: float floatValue()>
Counter value: 1
SCC 1462 : 1
<java.lang.reflect.Proxy$KeyX: int hashCode()>
Counter value: 1
SCC 1463 : 1
<java.util.concurrent.ConcurrentHashMap: long mappingCount()>
Counter value: 1
SCC 1464 : 1
<sun.util.calendar.JulianCalendar$Date: void <init>(java.util.TimeZone)>
Counter value: 1
SCC 1465 : 1
<java.util.Collections$SetFromMap: int size()>
Counter value: 1
SCC 1466 : 1
<java.util.stream.SpinedBuffer: void increaseCapacity()>
Counter value: 1
SCC 1467 : 1
<java.time.temporal.IsoFields$Field$1: java.lang.String toString()>
Counter value: 1
SCC 1468 : 1
<java.io.ObjectInputStream$BlockDataInputStream: long getBytesRead()>
Counter value: 1
SCC 1469 : 1
<java.util.Collections$CheckedCollection: java.lang.String toString()>
Counter value: 2
SCC 1470 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: void <init>(java.lang.String,java.net.InetAddress,int)>
Counter value: 1
SCC 1471 : 1
<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader: java.util.concurrent.Callable access$200(java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader)>
Counter value: 1
SCC 1472 : 1
<java.net.URLPermission: boolean implies(java.security.Permission)>
Counter value: 1
SCC 1473 : 1
<sun.nio.fs.UnixPath: int compareTo(java.nio.file.Path)>
Counter value: 1
SCC 1474 : 1
<java.util.stream.AbstractTask: boolean isLeaf()>
Counter value: 1
SCC 1475 : 1
<java.net.HttpCookie$3: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 1476 : 1
<java.util.concurrent.ConcurrentHashMap$KeySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 1477 : 1
<java.util.Spliterators$EmptySpliterator$OfDouble: void <init>()>
Counter value: 1
SCC 1478 : 1
<java.util.stream.ForEachOps$ForEachOp$OfLong: java.lang.Object evaluateSequential(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 1479 : 1
<java.util.stream.Nodes$ToArrayTask$OfPrimitive: java.util.stream.Nodes$ToArrayTask$OfPrimitive makeChild(int,int)>
Counter value: 1
SCC 1480 : 1
<java.util.AbstractList$ListItr: java.lang.Object previous()>
Counter value: 1
SCC 1481 : 1
<java.util.concurrent.ConcurrentHashMap$ValueSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 1482 : 1
<java.lang.ProcessEnvironment$StringKeySet: void clear()>
Counter value: 2
SCC 1483 : 1
<java.io.ObjectInputStream: java.io.ObjectStreamClass readProxyDesc(boolean)>
Counter value: 1
SCC 1484 : 1
<sun.util.PreHashedMap$2$1$1: void <init>(sun.util.PreHashedMap$2$1)>
Counter value: 1
SCC 1485 : 1
<java.time.Instant: java.time.Instant plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 1486 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor: void reExecutePeriodic(java.util.concurrent.RunnableScheduledFuture)>
Counter value: 1
SCC 1487 : 1
<sun.net.www.http.ChunkedInputStream: void close()>
Counter value: 1
SCC 1488 : 1
<java.util.Collections$SynchronizedMap: boolean containsValue(java.lang.Object)>
Counter value: 2
SCC 1489 : 1
<sun.nio.fs.UnixPath: java.nio.file.Path toAbsolutePath()>
Counter value: 1
SCC 1490 : 1
<java.net.InterfaceAddress: int hashCode()>
Counter value: 1
SCC 1491 : 1
<java.util.ArrayDeque: int calculateSize(int)>
Counter value: 1
SCC 1492 : 1
<sun.net.ExtendedOptionsImpl$lambda_static_0__80: java.security.PrivilegedAction bootstrap$()>
Counter value: 1
SCC 1493 : 1
<java.net.HostPortrange: boolean wildcard()>
Counter value: 1
SCC 1494 : 1
<java.io.ObjectInputStream$BlockDataInputStream: int readUTFChar(java.lang.StringBuilder,long)>
Counter value: 1
SCC 1495 : 1
<java.util.stream.ReduceOps$6: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 1496 : 1
<java.util.concurrent.FutureTask: void done()>
Counter value: 1
SCC 1497 : 1
<java.io.Reader: int read(java.nio.CharBuffer)>
Counter value: 1
SCC 1498 : 1
<java.net.URLPermission: java.util.List normalizeHeaders(java.lang.String)>
Counter value: 1
SCC 1499 : 1
<sun.security.x509.PolicyInformation: java.lang.String toString()>
Counter value: 1
SCC 1500 : 1
<java.util.stream.AbstractPipeline: java.util.Spliterator getSourceSpliterator()>
Counter value: 1
SCC 1501 : 1
<sun.util.calendar.JulianCalendar$Date: int getNormalizedYear()>
Counter value: 1
SCC 1502 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: void begin(long)>
Counter value: 1
SCC 1503 : 1
<java.util.Random: int nextInt(int)>
Counter value: 1
SCC 1504 : 1
<java.time.YearMonth: void <clinit>()>
Counter value: 1
SCC 1505 : 1
<java.time.Instant: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 1506 : 1
<sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 1507 : 1
<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: void remove()>
Counter value: 1
SCC 1508 : 1
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 1509 : 1
<sun.net.www.http.HttpClient: boolean available()>
Counter value: 1
SCC 1510 : 1
<java.lang.invoke.ConvertHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,byte,java.lang.Object)>
Counter value: 1
SCC 1511 : 1
<java.util.stream.Nodes$DoubleArrayNode: java.util.Spliterator spliterator()>
Counter value: 1
SCC 1512 : 1
<sun.net.NetworkClient$2: void <init>(sun.net.NetworkClient)>
Counter value: 1
SCC 1513 : 1
<java.net.HttpConnectSocketImpl: void <init>(java.net.Proxy)>
Counter value: 1
SCC 1514 : 1
<sun.util.calendar.JulianCalendar: sun.util.calendar.JulianCalendar$Date getCalendarDate()>
Counter value: 1
SCC 1515 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setCookieHeader()>
Counter value: 1
SCC 1516 : 1
<sun.misc.InnocuousThread: void <clinit>()>
Counter value: 1
SCC 1517 : 1
<java.time.Ser: java.lang.Object readInternal(byte,java.io.ObjectInput)>
Counter value: 1
SCC 1518 : 1
<java.util.concurrent.TimeUnit$5: long convert(long,java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 1519 : 1
<java.lang.invoke.MethodHandles$Lookup: void accessCheckArgRetTypes(java.lang.invoke.MethodType)>
Counter value: 1
SCC 1520 : 1
<java.time.temporal.WeekFields: int hashCode()>
Counter value: 1
SCC 1521 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsKey(java.lang.Object)>
Counter value: 1
SCC 1522 : 1
<java.time.OffsetTime: java.lang.String toString()>
Counter value: 1
SCC 1523 : 1
<java.util.stream.AbstractPipeline$lambda_opEvaluateParallelLazy_2__64: java.lang.Object apply(int)>
Counter value: 1
SCC 1524 : 1
<java.util.IntSummaryStatistics: int getMin()>
Counter value: 1
SCC 1525 : 1
<java.util.stream.Nodes$ArrayNode: void <init>(long,java.util.function.IntFunction)>
Counter value: 1
SCC 1526 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahChronology getChronology()>
Counter value: 1
SCC 1527 : 1
<java.lang.invoke.ThunkKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1528 : 1
<java.util.stream.Streams$RangeIntSpliterator: long estimateSize()>
Counter value: 1
SCC 1529 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean inBounds(java.lang.Object,java.util.Comparator)>
Counter value: 1
SCC 1530 : 1
<java.nio.charset.Charset: java.lang.String toString()>
Counter value: 1
SCC 1531 : 1
<sun.reflect.UnsafeShortFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 1532 : 1
<java.util.IdentityHashMap$EntryIterator: void remove()>
Counter value: 1
SCC 1533 : 1
<java.util.IntSummaryStatistics: long getCount()>
Counter value: 1
SCC 1534 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: void <init>(java.util.Spliterator$OfInt,java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt)>
Counter value: 1
SCC 1535 : 1
<java.util.TreeMap$NavigableSubMap: java.util.TreeMap$Entry absLowFence()>
Counter value: 1
SCC 1536 : 1
<java.lang.invoke.LambdaForm: void compileToBytecode()>
Counter value: 1
SCC 1537 : 1
<sun.security.util.MemoryCache$HardCacheEntry: boolean isValid(long)>
Counter value: 1
SCC 1538 : 1
<java.io.ObjectInputStream: java.lang.Class resolveProxyClass(java.lang.String[])>
Counter value: 1
SCC 1539 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 1540 : 1
<Main: void <init>()>
Counter value: 1
SCC 1541 : 1
<java.util.concurrent.ConcurrentSkipListMap$Values: java.util.Iterator iterator()>
Counter value: 1
SCC 1542 : 1
<java.security.Provider: void putAll(java.util.Map)>
Counter value: 1
SCC 1543 : 1
<sun.misc.ProxyGenerator$ConstantPool$ValueEntry: void <init>(java.lang.Object)>
Counter value: 1
SCC 1544 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToIntTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 1545 : 1
<sun.text.CompactByteArray: byte elementAt(char)>
Counter value: 1
SCC 1546 : 1
<sun.net.www.protocol.http.HttpURLConnection$4: java.lang.Object run()>
Counter value: 1
SCC 1547 : 1
<java.lang.invoke.VarargsCollectorHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.Class,boolean)>
Counter value: 1
SCC 1548 : 1
<sun.security.util.Cache$EqualByteArray: int hashCode()>
Counter value: 1
SCC 1549 : 1
<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient getNewHttpClient(java.net.URL,java.net.Proxy,int)>
Counter value: 1
SCC 1550 : 1
<java.util.concurrent.CountedCompleter: java.util.concurrent.CountedCompleter nextComplete()>
Counter value: 1
SCC 1551 : 1
<java.net.InetSocketAddress: int checkPort(int)>
Counter value: 1
SCC 1552 : 1
<sun.nio.ch.AsynchronousFileChannelImpl: void invalidateAllLocks()>
Counter value: 1
SCC 1553 : 1
<sun.net.www.protocol.http.HttpURLConnection: void disconnectWeb()>
Counter value: 1
SCC 1554 : 1
<sun.nio.fs.NativeBuffer: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 1555 : 1
<sun.net.www.http.KeepAliveKey: void <init>(java.net.URL,java.lang.Object)>
Counter value: 1
SCC 1556 : 1
<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.GenericDeclaration getGenericDeclaration()>
Counter value: 1
SCC 1557 : 1
<java.nio.ByteBufferAsCharBufferB: boolean isReadOnly()>
Counter value: 1
SCC 1558 : 1
<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.String getName()>
Counter value: 1
SCC 1559 : 1
<java.nio.HeapCharBuffer: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 1560 : 1
<java.util.concurrent.LinkedBlockingDeque: void unlink(java.util.concurrent.LinkedBlockingDeque$Node)>
Counter value: 1
SCC 1561 : 1
<java.nio.DirectCharBufferS: java.nio.CharBuffer put(java.nio.CharBuffer)>
Counter value: 1
SCC 1562 : 1
<java.lang.reflect.Constructor: java.lang.String toString()>
Counter value: 1
SCC 1563 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: java.util.spi.TimeZoneNameProvider getImpl(java.util.Locale)>
Counter value: 1
SCC 1564 : 1
<sun.nio.fs.UnixPath: int compareTo(java.lang.Object)>
Counter value: 1
SCC 1565 : 1
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 1566 : 1
<java.util.ArrayDeque$DeqSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 1567 : 1
<java.util.EnumMap$EntryIterator$Entry: void <init>(java.util.EnumMap$EntryIterator,int)>
Counter value: 1
SCC 1568 : 1
<java.nio.file.Files$FileTypeDetectors$2: java.util.List run()>
Counter value: 1
SCC 1569 : 1
<java.util.stream.ForEachOps$ForEachOp$OfLong: java.lang.Object get()>
Counter value: 1
SCC 1570 : 1
<java.util.OptionalLong: void <init>(long)>
Counter value: 1
SCC 1571 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: void advance()>
Counter value: 1
SCC 1572 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 1573 : 1
<java.io.ObjectStreamClass: void setObjFieldValues(java.lang.Object,java.lang.Object[])>
Counter value: 1
SCC 1574 : 1
<java.util.stream.LongPipeline$Head: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 1575 : 1
<sun.security.x509.DistributionPointName: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 1576 : 1
<java.nio.Bits: int swap(int)>
Counter value: 1
SCC 1577 : 1
<java.util.concurrent.LinkedBlockingDeque: boolean add(java.lang.Object)>
Counter value: 1
SCC 1578 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator$lambda_initPartialTraversalState_0__39: java.util.function.BooleanSupplier bootstrap$(java.util.stream.StreamSpliterators$IntWrappingSpliterator)>
Counter value: 1
SCC 1579 : 1
<sun.nio.ch.ChannelInputStream: int available()>
Counter value: 1
SCC 1580 : 1
<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.LocalDateTime createDateTime(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneOffset)>
Counter value: 1
SCC 1581 : 1
<java.util.stream.LongPipeline$StatelessOp: java.util.stream.LongStream sequential()>
Counter value: 1
SCC 1582 : 1
<java.util.concurrent.TimeUnit$4: long convert(long,java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 1583 : 1
<sun.util.PreHashedMap$2$1$1: int hashCode()>
Counter value: 2
SCC 1584 : 1
<java.util.concurrent.LinkedBlockingDeque: java.lang.String toString()>
Counter value: 1
SCC 1585 : 1
<java.util.stream.Streams$RangeIntSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 1586 : 1
<java.util.stream.Nodes$EmptyNode$OfLong: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 1587 : 1
<java.nio.CharBuffer: java.nio.CharBuffer put(char[],int,int)>
Counter value: 1
SCC 1588 : 1
<java.util.WeakHashMap$WeakHashMapSpliterator: void <init>(java.util.WeakHashMap,int,int,int,int)>
Counter value: 1
SCC 1589 : 1
<sun.nio.ch.Util$3: java.lang.Object[] toArray()>
Counter value: 2
SCC 1590 : 1
<sun.nio.ch.ChannelInputStream: int read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer,boolean)>
Counter value: 1
SCC 1591 : 1
<java.lang.reflect.Executable: boolean hasRealParameterData()>
Counter value: 1
SCC 1592 : 1
<java.util.stream.AbstractTask: boolean isLeftmostNode()>
Counter value: 1
SCC 1593 : 1
<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: void close()>
Counter value: 2
SCC 1594 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceKeysTask,java.util.function.Function,java.util.function.BiFunction)>
Counter value: 1
SCC 1595 : 1
<java.nio.HeapLongBufferR: java.nio.LongBuffer put(int,long)>
Counter value: 1
SCC 1596 : 1
<java.util.concurrent.TimeUnit$5: long toMicros(long)>
Counter value: 1
SCC 1597 : 1
<java.security.Policy$3: java.security.ProtectionDomain run()>
Counter value: 1
SCC 1598 : 1
<java.net.AbstractPlainSocketImpl: int available()>
Counter value: 1
SCC 1599 : 1
<java.net.HttpCookie: java.lang.Object clone()>
Counter value: 1
SCC 1600 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive bufferCreate(int)>
Counter value: 1
SCC 1601 : 1
<javax.crypto.NullCipherSpi: void engineSetMode(java.lang.String)>
Counter value: 1
SCC 1602 : 1
<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 1603 : 1
<java.time.YearMonth: java.time.YearMonth plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 1604 : 1
<java.time.ZonedDateTime: int getNano()>
Counter value: 1
SCC 1605 : 1
<java.io.ByteArrayOutputStream: int size()>
Counter value: 1
SCC 1606 : 1
<sun.reflect.generics.visitor.Reifier: void visitBottomSignature(sun.reflect.generics.tree.BottomSignature)>
Counter value: 1
SCC 1607 : 1
<java.util.Spliterators$DoubleIteratorSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 1608 : 1
<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>
Counter value: 1
SCC 1609 : 1
<java.util.stream.SpinedBuffer$OfInt$1Splitr: void arrayForOne(int[],int,java.util.function.IntConsumer)>
Counter value: 1
SCC 1610 : 1
<java.util.DualPivotQuicksort: void doSort(short[],int,int,short[],int,int)>
Counter value: 1
SCC 1611 : 1
<java.util.stream.Nodes$DoubleFixedNodeBuilder: void begin(long)>
Counter value: 1
SCC 1612 : 1
<java.io.InputStream: void mark(int)>
Counter value: 1
SCC 1613 : 1
<java.lang.Class$ReflectCache: java.lang.Object find(java.lang.Class$CacheKey)>
Counter value: 1
SCC 1614 : 1
<java.util.stream.ReduceOps$3ReducingSink: void begin(long)>
Counter value: 1
SCC 1615 : 1
<java.net.AbstractPlainSocketImpl: boolean isConnectionReset()>
Counter value: 1
SCC 1616 : 1
<java.lang.invoke.ProxyClassesDumper$1: void <init>(java.nio.file.Path)>
Counter value: 1
SCC 1617 : 1
<java.util.Collections$EmptySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 1618 : 1
<java.util.stream.DistinctOps$1$1: void <init>(java.util.stream.DistinctOps$1,java.util.stream.Sink)>
Counter value: 1
SCC 1619 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamClass getSuperDesc()>
Counter value: 1
SCC 1620 : 1
<java.io.ObjectOutputStream$BlockDataOutputStream: void close()>
Counter value: 2
SCC 1621 : 1
<java.math.BigDecimal$StringBuilderHelper: char[] getCompactCharArray()>
Counter value: 1
SCC 1622 : 1
<sun.net.www.protocol.http.HttpURLConnection$2: java.lang.Object run()>
Counter value: 1
SCC 1623 : 1
<sun.util.calendar.ImmutableGregorianDate: int getDayOfWeek()>
Counter value: 2
SCC 1624 : 1
<sun.nio.ch.Util$BufferCache: java.nio.ByteBuffer get(int)>
Counter value: 1
SCC 1625 : 1
<java.net.URLPermission: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1626 : 1
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1627 : 1
<java.util.stream.IntPipeline: java.util.stream.Node$Builder makeNodeBuilder(long,java.util.function.IntFunction)>
Counter value: 1
SCC 1628 : 1
<java.util.BitSet: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1629 : 1
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate date(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 1630 : 1
<java.io.ObjectStreamClass: java.lang.String getMethodSignature(java.lang.Class[],java.lang.Class)>
Counter value: 1
SCC 1631 : 1
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 1632 : 1
<sun.net.www.protocol.http.HttpURLConnection: void sendCONNECTRequest()>
Counter value: 1
SCC 1633 : 1
<sun.reflect.ClassFileAssembler: void opc_swap()>
Counter value: 1
SCC 1634 : 1
<java.net.URLClassLoader: void <init>(java.net.URL[],java.security.AccessControlContext)>
Counter value: 1
SCC 1635 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: boolean isApparentlyUnblocked()>
Counter value: 1
SCC 1636 : 1
<java.util.spi.CurrencyNameProvider: java.lang.String getDisplayName(java.lang.String,java.util.Locale)>
Counter value: 1
SCC 1637 : 1
<java.util.EnumMap$EntryIterator: void <init>(java.util.EnumMap)>
Counter value: 1
SCC 1638 : 1
<java.util.stream.ReduceOps$4ReducingSink: void combine(java.util.stream.ReduceOps$4ReducingSink)>
Counter value: 1
SCC 1639 : 1
<java.util.Spliterators$IntIteratorSpliterator: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 1640 : 1
<java.util.Hashtable: void clear()>
Counter value: 1
SCC 1641 : 1
<java.time.zone.ZoneOffsetTransitionRule: java.lang.String toString()>
Counter value: 1
SCC 1642 : 1
<java.lang.invoke.MethodType: java.lang.Class lastParameterType()>
Counter value: 1
SCC 1643 : 1
<sun.invoke.util.Wrapper: boolean isSigned()>
Counter value: 1
SCC 1644 : 1
<sun.security.x509.X509CertImpl: javax.security.auth.x500.X500Principal getX500Principal(java.security.cert.X509Certificate,boolean)>
Counter value: 1
SCC 1645 : 1
<sun.security.x509.SubjectAlternativeNameExtension: java.lang.String toString()>
Counter value: 1
SCC 1646 : 1
<java.io.SerialCallbackContext: void <init>(java.lang.Object,java.io.ObjectStreamClass)>
Counter value: 1
SCC 1647 : 1
<java.nio.CharBufferSpliterator: int characteristics()>
Counter value: 1
SCC 1648 : 1
<java.util.stream.LongPipeline$accept__97: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 1649 : 1
<java.lang.invoke.MethodHandle: java.lang.Class getReferenceClass()>
Counter value: 1
SCC 1650 : 1
<java.nio.charset.Charset$3: java.lang.Object run()>
Counter value: 1
SCC 1651 : 1
<sun.nio.fs.UnixCopyFile: void copyFile(sun.nio.fs.UnixPath,sun.nio.fs.UnixFileAttributes,sun.nio.fs.UnixPath,sun.nio.fs.UnixCopyFile$Flags,long)>
Counter value: 1
SCC 1652 : 1
<java.nio.charset.CodingErrorAction: java.lang.String toString()>
Counter value: 1
SCC 1653 : 1
<java.util.concurrent.ForkJoinPool: void tryAddWorker(long)>
Counter value: 1
SCC 1654 : 1
<java.util.stream.ReduceOps$11ReducingSink: void <init>(double,java.util.function.DoubleBinaryOperator)>
Counter value: 1
SCC 1655 : 1
<java.lang.invoke.ThunkKeyWithInt: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1656 : 1
<sun.security.x509.CRLDistributionPointsExtension: java.lang.String toString()>
Counter value: 1
SCC 1657 : 1
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>
Counter value: 1
SCC 1658 : 1
<java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
Counter value: 2
SCC 1659 : 1
<java.time.format.DateTimeParseContext: java.lang.String toString()>
Counter value: 1
SCC 1660 : 1
<java.util.Map$Entry$lambda_comparingByKey_6d558cbf_1__60: void <init>(java.util.Comparator)>
Counter value: 1
SCC 1661 : 1
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>
Counter value: 1
SCC 1662 : 1
<java.lang.invoke.MethodType: java.lang.Class[] ptypes()>
Counter value: 1
SCC 1663 : 1
<java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
Counter value: 1
SCC 1664 : 1
<java.util.stream.Nodes$CollectorTask$OfDouble$init__93: void <init>()>
Counter value: 1
SCC 1665 : 1
<java.nio.file.Files: boolean isWritable(java.nio.file.Path)>
Counter value: 1
SCC 1666 : 1
<java.time.chrono.AbstractChronology: java.time.chrono.Chronology of(java.lang.String)>
Counter value: 1
SCC 1667 : 1
<sun.util.locale.provider.BreakDictionary$1: java.io.BufferedInputStream run()>
Counter value: 1
SCC 1668 : 1
<java.nio.StringCharBuffer: boolean isDirect()>
Counter value: 1
SCC 1669 : 1
<java.util.IdentityHashMap$ValueIterator: void <init>(java.util.IdentityHashMap,java.util.IdentityHashMap$1)>
Counter value: 1
SCC 1670 : 1
<java.util.Collections$CheckedSortedSet: void <init>(java.util.SortedSet,java.lang.Class)>
Counter value: 1
SCC 1671 : 1
<java.nio.channels.spi.AbstractSelectionKey: boolean isValid()>
Counter value: 1
SCC 1672 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: void clear()>
Counter value: 1
SCC 1673 : 1
<java.net.NetworkInterface: boolean isPointToPoint()>
Counter value: 1
SCC 1674 : 1
<java.util.concurrent.ForkJoinTask: int externalInterruptibleAwaitDone()>
Counter value: 1
SCC 1675 : 1
<java.time.chrono.ChronoPeriodImpl: java.lang.String toString()>
Counter value: 1
SCC 1676 : 1
<java.util.stream.DoublePipeline$8$1: void accept(double)>
Counter value: 2
SCC 1677 : 1
<java.util.Arrays: void sort(double[])>
Counter value: 1
SCC 1678 : 1
<java.util.Spliterators$DoubleArraySpliterator: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 1679 : 1
<java.util.EnumMap: java.lang.Object[] access$600(java.util.EnumMap)>
Counter value: 1
SCC 1680 : 1
<sun.nio.fs.DefaultFileTypeDetector: java.nio.file.spi.FileTypeDetector create()>
Counter value: 1
SCC 1681 : 1
<java.util.concurrent.CountedCompleter: void <clinit>()>
Counter value: 1
SCC 1682 : 1
<sun.reflect.ClassFileAssembler: void opc_aload_3()>
Counter value: 1
SCC 1683 : 1
<java.time.OffsetTime: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1684 : 1
<java.util.stream.FindOps$init__102: void <init>()>
Counter value: 1
SCC 1685 : 1
<java.lang.ProcessEnvironment$StringValues: boolean remove(java.lang.Object)>
Counter value: 2
SCC 1686 : 1
<java.nio.DirectCharBufferU: boolean isDirect()>
Counter value: 1
SCC 1687 : 1
<java.util.concurrent.ForkJoinTask$AdaptedRunnable: java.lang.Object getRawResult()>
Counter value: 1
SCC 1688 : 1
<sun.nio.ch.ServerSocketAdaptor: java.lang.String toString()>
Counter value: 1
SCC 1689 : 1
<java.util.stream.ForEachOps$ForEachOp$OfLong: void accept(long)>
Counter value: 2
SCC 1690 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToIntTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 1691 : 1
<java.lang.Byte: float floatValue()>
Counter value: 1
SCC 1692 : 1
<sun.misc.ProxyGenerator$ProxyMethod: void codeUnwrapReturnValue(java.lang.Class,java.io.DataOutputStream)>
Counter value: 1
SCC 1693 : 1
<java.util.ResourceBundle$CacheKey: java.lang.String getFormat()>
Counter value: 1
SCC 1694 : 1
<sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator: sun.reflect.generics.factory.GenericsFactory getFactory()>
Counter value: 1
SCC 1695 : 1
<java.util.Spliterators$IntIteratorSpliterator: java.util.Spliterator$OfInt trySplit()>
Counter value: 1
SCC 1696 : 1
<java.io.ObjectInputStream: int available()>
Counter value: 1
SCC 1697 : 1
<sun.reflect.UnsafeByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 1698 : 1
<java.io.ObjectInputStream$BlockDataInputStream: boolean getBlockDataMode()>
Counter value: 1
SCC 1699 : 1
<sun.nio.fs.UnixException: void rethrowAsIOException(sun.nio.fs.UnixPath)>
Counter value: 1
SCC 1700 : 1
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 1701 : 1
<sun.net.www.http.KeepAliveStreamCleaner$1: java.lang.Integer run()>
Counter value: 1
SCC 1702 : 1
<java.util.concurrent.ConcurrentHashMap$ValueSpliterator: void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,long)>
Counter value: 1
SCC 1703 : 1
<sun.nio.fs.UnixDirectoryStream: java.util.concurrent.locks.Lock writeLock()>
Counter value: 1
SCC 1704 : 1
<java.util.stream.MatchOps$2MatchSink: void accept(int)>
Counter value: 1
SCC 1705 : 1
<java.io.ObjectStreamClass: void access$900(java.io.ObjectStreamClass)>
Counter value: 1
SCC 1706 : 1
<java.util.stream.LongPipeline$StatefulOp: java.util.stream.LongStream sequential()>
Counter value: 1
SCC 1707 : 1
<java.io.BufferedInputStream: void mark(int)>
Counter value: 1
SCC 1708 : 1
<java.nio.DirectByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>
Counter value: 1
SCC 1709 : 1
<java.util.stream.Nodes$ConcNode: void forEach(java.util.function.Consumer)>
Counter value: 2
SCC 1710 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: void <init>(java.util.Spliterator$OfLong,java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong)>
Counter value: 1
SCC 1711 : 1
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>
Counter value: 1
SCC 1712 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySpliterator: void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,long,java.util.concurrent.ConcurrentHashMap)>
Counter value: 1
SCC 1713 : 1
<java.lang.ClassValue$Entry: java.lang.ClassValue$Version version()>
Counter value: 1
SCC 1714 : 1
<sun.nio.ch.DatagramChannelImpl: boolean isConnected()>
Counter value: 1
SCC 1715 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle prepareForInvoker(java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 1716 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$BreakIteratorProviderDelegate: void addImpl(java.text.spi.BreakIteratorProvider)>
Counter value: 1
SCC 1717 : 1
<sun.nio.fs.UnixUserPrincipals$User: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1718 : 1
<java.io.FilterInputStream: void mark(int)>
Counter value: 2
SCC 1719 : 1
<java.lang.invoke.SecurityFrameInjector: java.lang.invoke.MethodHandle wrapHandleWithInjectedSecurityFrameIfRequired(java.lang.invoke.MethodHandles$Lookup,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 1720 : 1
<java.util.ArraysParallelSortHelpers$FJDouble$Merger: void <init>(java.util.concurrent.CountedCompleter,double[],double[],int,int,int,int,int,int)>
Counter value: 1
SCC 1721 : 1
<sun.nio.ch.IOStatus: int normalize(int)>
Counter value: 1
SCC 1722 : 1
<java.util.Collections$ReverseComparator: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 1723 : 1
<sun.net.www.protocol.http.HttpURLConnection$3: void <init>(sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 1724 : 1
<java.util.HashMap$KeySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 1725 : 1
<java.util.stream.ForEachOps$ForEachOp$OfDouble: java.util.stream.StreamShape inputShape()>
Counter value: 1
SCC 1726 : 1
<java.util.concurrent.ConcurrentHashMap$ValueSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 1727 : 1
<java.util.IdentityHashMap$ValueSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 1728 : 1
<jdk.internal.util.xml.impl.ReaderUTF16: int read(char[],int,int)>
Counter value: 1
SCC 1729 : 1
<java.util.Vector: java.lang.Object remove(int)>
Counter value: 1
SCC 1730 : 1
<sun.util.PreHashedMap: java.lang.Object[] access$200(sun.util.PreHashedMap)>
Counter value: 1
SCC 1731 : 1
<sun.security.provider.NativePRNG: sun.security.util.Debug access$100()>
Counter value: 1
SCC 1732 : 1
<java.util.stream.SpinedBuffer$OfDouble$1Splitr: void arrayForOne(java.lang.Object,int,java.lang.Object)>
Counter value: 1
SCC 1733 : 1
<sun.net.www.MessageHeader: void setIfNotSet(java.lang.String,java.lang.String)>
Counter value: 1
SCC 1734 : 1
<sun.nio.fs.NativeBuffer: void setOwner(java.lang.Object)>
Counter value: 1
SCC 1735 : 1
<java.nio.Bits: byte long2(long)>
Counter value: 1
SCC 1736 : 1
<sun.reflect.ClassFileAssembler: void opc_invokespecial(short,int,int)>
Counter value: 1
SCC 1737 : 1
<java.lang.reflect.MalformedParametersException: void <init>(java.lang.String)>
Counter value: 1
SCC 1738 : 1
<java.util.stream.SpinedBuffer$OfInt: java.lang.Object newArray(int)>
Counter value: 1
SCC 1739 : 1
<java.lang.ClassValue$Version: boolean isLive()>
Counter value: 1
SCC 1740 : 1
<java.util.ArraysParallelSortHelpers$Relay: void <init>(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 1741 : 1
<java.lang.reflect.Proxy$KeyX: void <init>(java.lang.Class[])>
Counter value: 1
SCC 1742 : 1
<com.ibm.oti.util.Util: boolean doesClassLoaderDescendFrom(java.lang.ClassLoader,java.lang.ClassLoader)>
Counter value: 1
SCC 1743 : 1
<sun.security.provider.certpath.X509CertificatePair: void clearCache()>
Counter value: 1
SCC 1744 : 1
<java.lang.Class$3: java.lang.invoke.MethodHandle run()>
Counter value: 1
SCC 1745 : 1
<java.util.stream.Nodes: java.util.stream.Node$Builder$OfLong longBuilder()>
Counter value: 1
SCC 1746 : 1
<java.time.Clock$OffsetClock: boolean equals(java.lang.Object)>
Counter value: 2
SCC 1747 : 1
<sun.reflect.DelegatingMethodAccessorImpl: void <init>(sun.reflect.MethodAccessorImpl)>
Counter value: 1
SCC 1748 : 1
<sun.security.x509.OIDName: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 1749 : 1
<sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator: sun.reflect.generics.visitor.Reifier getReifier()>
Counter value: 1
SCC 1750 : 1
<sun.reflect.ClassFileAssembler: void emitConstantPoolNameAndType(short,short)>
Counter value: 1
SCC 1751 : 1
<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.io.OutputStream,long)>
Counter value: 1
SCC 1752 : 1
<java.util.stream.SpinedBuffer$OfInt$1Splitr: void <init>(java.util.stream.SpinedBuffer$OfInt,int,int,int,int)>
Counter value: 1
SCC 1753 : 1
<java.nio.DirectDoubleBufferS: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 1754 : 1
<java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
Counter value: 2
SCC 1755 : 1
<sun.net.www.protocol.http.HttpURLConnection: void access$400(sun.net.www.protocol.http.HttpURLConnection,boolean)>
Counter value: 1
SCC 1756 : 1
<java.util.stream.AbstractTask: long getTargetSize(long)>
Counter value: 1
SCC 1757 : 1
<java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 1758 : 1
<java.lang.invoke.ThunkKey: java.lang.invoke.MethodType computeThunkableType(java.lang.invoke.MethodType,int,int)>
Counter value: 1
SCC 1759 : 1
<java.lang.ProcessEnvironment$StringEnvironment: boolean containsKey(java.lang.Object)>
Counter value: 2
SCC 1760 : 1
<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>
Counter value: 1
SCC 1761 : 1
<java.time.LocalTime: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 1762 : 1
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>
Counter value: 1
SCC 1763 : 1
<sun.util.BuddhistCalendar: int hashCode()>
Counter value: 1
SCC 1764 : 1
<java.util.regex.Pattern$1MatcherIterator: java.lang.String next()>
Counter value: 1
SCC 1765 : 1
<java.lang.Float: int compareTo(java.lang.Float)>
Counter value: 1
SCC 1766 : 1
<sun.nio.ch.DatagramChannelImpl: void implCloseSelectableChannel()>
Counter value: 1
SCC 1767 : 1
<java.util.stream.Nodes$EmptyNode$OfRef: java.util.Spliterator spliterator()>
Counter value: 1
SCC 1768 : 1
<sun.misc.Launcher$BootClassPathHolder$1: java.net.URL[] run()>
Counter value: 1
SCC 1769 : 1
<javax.security.auth.SubjectDomainCombiner: boolean cachePolicy()>
Counter value: 1
SCC 1770 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: java.util.stream.StreamSpliterators$ArrayBuffer$OfLong bufferCreate(int)>
Counter value: 1
SCC 1771 : 1
<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.Object getValue()>
Counter value: 1
SCC 1772 : 1
<sun.security.x509.DistributionPointName: java.lang.String toString()>
Counter value: 1
SCC 1773 : 1
<java.util.concurrent.ConcurrentSkipListMap: void <init>(java.util.SortedMap)>
Counter value: 1
SCC 1774 : 1
<sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: java.lang.String toString()>
Counter value: 2
SCC 1775 : 1
<java.lang.invoke.FoldHandle: void <init>(java.lang.invoke.FoldHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 1776 : 1
<java.net.HostPortrange: java.lang.String hostname()>
Counter value: 1
SCC 1777 : 1
<java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory$1: java.lang.Object run()>
Counter value: 1
SCC 1778 : 1
<java.lang.String: void <init>(java.lang.StringBuffer)>
Counter value: 1
SCC 1779 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator$lambda_getComparator_d5a01062_1__58: void <init>()>
Counter value: 1
SCC 1780 : 1
<sun.nio.fs.UnixPath: byte[] getByteArrayForSysCalls()>
Counter value: 1
SCC 1781 : 1
<java.lang.invoke.ThunkKey: void <init>(java.lang.invoke.MethodType)>
Counter value: 1
SCC 1782 : 1
<java.util.TreeMap$NavigableSubMap: java.util.TreeMap$Entry absHighest()>
Counter value: 1
SCC 1783 : 1
<java.util.EnumMap$EntryIterator$Entry: void <init>(java.util.EnumMap$EntryIterator,int,java.util.EnumMap$1)>
Counter value: 1
SCC 1784 : 1
<java.util.stream.SpinedBuffer: long capacity()>
Counter value: 1
SCC 1785 : 1
<sun.reflect.ClassFileAssembler: void <init>()>
Counter value: 1
SCC 1786 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate readExternal(java.io.ObjectInput)>
Counter value: 1
SCC 1787 : 1
<sun.net.www.protocol.http.HttpURLConnection$7: java.lang.Object run()>
Counter value: 1
SCC 1788 : 1
<java.util.LongSummaryStatistics: long getMin()>
Counter value: 1
SCC 1789 : 1
<java.util.stream.ReduceOps$13: java.util.stream.ReduceOps$13ReducingSink makeSink()>
Counter value: 1
SCC 1790 : 1
<java.net.SocksSocketImpl: int getLocalPort()>
Counter value: 1
SCC 1791 : 1
<sun.util.locale.provider.RuleBasedBreakIterator: java.lang.Object clone()>
Counter value: 1
SCC 1792 : 1
<java.time.temporal.IsoFields$Field$1: java.time.temporal.ValueRange rangeRefinedBy(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 1793 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: int getFirstDayOfWeek(java.util.Locale)>
Counter value: 2
SCC 1794 : 1
<java.util.EnumMap$Values: int size()>
Counter value: 1
SCC 1795 : 1
<java.io.ClassByNameCache$LookupKey: void <init>(java.lang.String,java.lang.ClassLoader,java.io.ClassByNameCache)>
Counter value: 1
SCC 1796 : 1
<java.util.Collections$CheckedMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 2
SCC 1797 : 1
<sun.nio.fs.UnixFileAttributes: int uid()>
Counter value: 1
SCC 1798 : 1
<java.util.stream.Nodes$CollectionNode: java.util.Spliterator spliterator()>
Counter value: 1
SCC 1799 : 1
<java.nio.Bits: byte long7(long)>
Counter value: 1
SCC 1800 : 1
<java.net.InetSocketAddress: void <clinit>()>
Counter value: 1
SCC 1801 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$LocaleNameProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 1802 : 1
<java.io.ObjectStreamClass: java.security.ProtectionDomain[] getProtectionDomains(java.lang.reflect.Constructor,java.lang.Class)>
Counter value: 1
SCC 1803 : 1
<java.net.AbstractPlainDatagramSocketImpl$1: java.lang.Object run()>
Counter value: 1
SCC 1804 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle varargsArray(java.lang.Class,int)>
Counter value: 1
SCC 1805 : 1
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
Counter value: 1
SCC 1806 : 1
<java.util.Collections$AsLIFOQueue: boolean offer(java.lang.Object)>
Counter value: 1
SCC 1807 : 1
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: float getFloat(java.lang.Object)>
Counter value: 1
SCC 1808 : 1
<sun.security.x509.X509CRLImpl: byte[] getEncoded()>
Counter value: 1
SCC 1809 : 1
<java.io.InvalidClassException: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 1810 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: boolean authQop()>
Counter value: 1
SCC 1811 : 1
<java.text.DecimalFormat: java.lang.String getNegativePrefix()>
Counter value: 1
SCC 1812 : 1
<sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.String,java.lang.String)>
Counter value: 1
SCC 1813 : 1
<java.nio.DirectShortBufferS: long ix(int)>
Counter value: 1
SCC 1814 : 1
<java.util.TreeMap: java.util.TreeMap$Entry access$500(java.util.TreeMap)>
Counter value: 1
SCC 1815 : 1
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>
Counter value: 1
SCC 1816 : 1
<java.util.stream.IntPipeline$6$1: void accept(int)>
Counter value: 1
SCC 1817 : 1
<java.util.Tripwire: void trip(java.lang.Class,java.lang.String)>
Counter value: 1
SCC 1818 : 1
<sun.reflect.MethodAccessorGenerator: sun.reflect.ConstructorAccessor generateConstructor(java.lang.Class,java.lang.Class[],java.lang.Class[],int)>
Counter value: 1
SCC 1819 : 1
<sun.misc.InnocuousThread: java.lang.ThreadGroup access$000()>
Counter value: 1
SCC 1820 : 1
<java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
Counter value: 1
SCC 1821 : 1
<java.lang.invoke.ConstantLongHandle: void <init>(java.lang.invoke.MethodType,long)>
Counter value: 1
SCC 1822 : 1
<java.util.stream.Sink$ChainedLong: boolean cancellationRequested()>
Counter value: 2
SCC 1823 : 1
<java.util.stream.Nodes$CollectorTask$OfLong: java.util.stream.AbstractTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 1824 : 1
<sun.invoke.util.Wrapper$Format: int other(int)>
Counter value: 1
SCC 1825 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysTask: void compute()>
Counter value: 1
SCC 1826 : 1
<java.nio.channels.NoConnectionPendingException: void <init>()>
Counter value: 1
SCC 1827 : 1
<java.lang.ProcessEnvironment$StringValues: int hashCode()>
Counter value: 2
SCC 1828 : 1
<java.net.URI: java.lang.String normalize(java.lang.String)>
Counter value: 1
SCC 1829 : 1
<java.text.DecimalFormatSymbols: char getPerMill()>
Counter value: 1
SCC 1830 : 1
<java.nio.DirectCharBufferS: java.nio.ByteOrder order()>
Counter value: 1
SCC 1831 : 1
<java.io.ObjectInputStream$setValidator__62: void <init>()>
Counter value: 1
SCC 1832 : 1
<java.nio.Bits: char getCharL(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 1833 : 1
<java.security.AccessControlContext: int hashCode()>
Counter value: 2
SCC 1834 : 1
<java.io.ObjectStreamClass$1: void <init>()>
Counter value: 1
SCC 1835 : 1
<java.lang.invoke.HandleCache: void <clinit>()>
Counter value: 1
SCC 1836 : 1
<java.util.SubList: void rangeCheckForAdd(int)>
Counter value: 1
SCC 1837 : 1
<java.nio.ByteBufferAsCharBufferL: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 1838 : 1
<java.util.Collections$CheckedList$1: java.lang.Object previous()>
Counter value: 2
SCC 1839 : 1
<java.util.stream.PipelineHelper: void <init>()>
Counter value: 1
SCC 1840 : 1
<sun.security.x509.GeneralName: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 1841 : 1
<java.util.LinkedList$LLSpliterator: long estimateSize()>
Counter value: 1
SCC 1842 : 1
<java.util.stream.SortedOps$OfRef: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 1843 : 1
<sun.net.www.http.HttpClient: void writeRequests(sun.net.www.MessageHeader,sun.net.www.http.PosterOutputStream,boolean)>
Counter value: 1
SCC 1844 : 1
<java.nio.file.attribute.FileTime: int hashCode()>
Counter value: 1
SCC 1845 : 1
<java.util.Collections$CheckedCollection$1: boolean hasNext()>
Counter value: 2
SCC 1846 : 1
<java.util.ArrayList$ListItr: int previousIndex()>
Counter value: 1
SCC 1847 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToIntTask: java.lang.Integer getRawResult()>
Counter value: 1
SCC 1848 : 1
<java.util.EnumMap$Values: void clear()>
Counter value: 1
SCC 1849 : 1
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 1850 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
Counter value: 1
SCC 1851 : 1
<java.util.LongSummaryStatistics: long getSum()>
Counter value: 1
SCC 1852 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator: boolean hasCharacteristics(int)>
Counter value: 2
SCC 1853 : 1
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>
Counter value: 1
SCC 1854 : 1
<java.lang.reflect.Method: java.lang.String toString()>
Counter value: 1
SCC 1855 : 1
<java.lang.reflect.Proxy$1: void <init>(java.lang.reflect.Constructor)>
Counter value: 1
SCC 1856 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator: long estimateSize()>
Counter value: 1
SCC 1857 : 1
<java.util.WeakHashMap: boolean containsNullValue()>
Counter value: 1
SCC 1858 : 1
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: byte getByte(java.lang.Object)>
Counter value: 1
SCC 1859 : 1
<sun.misc.ProxyGenerator$ExceptionTableEntry: void <init>(short,short,short,short)>
Counter value: 1
SCC 1860 : 1
<java.util.stream.ReduceOps$3ReducingSink: void combine(java.util.stream.ReduceOps$3ReducingSink)>
Counter value: 1
SCC 1861 : 1
<java.util.stream.SortedOps$DoubleSortingSink: void end()>
Counter value: 2
SCC 1862 : 1
<java.util.EnumMap$EnumMapIterator: boolean hasNext()>
Counter value: 1
SCC 1863 : 1
<sun.nio.ch.Util$5: java.lang.Void run()>
Counter value: 1
SCC 1864 : 1
<sun.reflect.ClassFileAssembler: int getStack()>
Counter value: 1
SCC 1865 : 1
<java.io.ObjectInputStream$Logging: sun.util.logging.PlatformLogger access$400()>
Counter value: 1
SCC 1866 : 1
<java.net.URLConnection: long skipForward(java.io.InputStream,long)>
Counter value: 1
SCC 1867 : 1
<java.lang.Class: boolean isAnnotation()>
Counter value: 1
SCC 1868 : 1
<java.util.TimeZone: java.time.ZoneId toZoneId()>
Counter value: 1
SCC 1869 : 1
<sun.security.x509.EDIPartyName: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1870 : 1
<sun.security.x509.CertificateIssuerExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 1871 : 1
<sun.reflect.UnsafeObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 1872 : 1
<java.nio.Buffer: int markValue()>
Counter value: 1
SCC 1873 : 1
<sun.util.PreHashedMap$1$1: boolean hasNext()>
Counter value: 1
SCC 1874 : 1
<sun.security.provider.NativePRNG$1: java.lang.Object run()>
Counter value: 1
SCC 1875 : 1
<java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
Counter value: 1
SCC 1876 : 1
<java.util.stream.Nodes$ConcNode: java.util.Spliterator spliterator()>
Counter value: 1
SCC 1877 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Method access$1700(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class)>
Counter value: 1
SCC 1878 : 1
<java.security.Provider: java.lang.Object remove(java.lang.Object)>
Counter value: 1
SCC 1879 : 1
<java.util.DoubleSummaryStatistics: void sumWithCompensation(double)>
Counter value: 1
SCC 1880 : 1
<sun.security.x509.X500Name: java.lang.String getName()>
Counter value: 1
SCC 1881 : 1
<java.time.ZoneId: java.time.ZoneId of(java.lang.String,java.util.Map)>
Counter value: 1
SCC 1882 : 1
<java.util.concurrent.FutureTask: void removeWaiter(java.util.concurrent.FutureTask$WaitNode)>
Counter value: 1
SCC 1883 : 1
<java.util.stream.StreamOpFlag: int combineOpFlags(int,int)>
Counter value: 1
SCC 1884 : 1
<java.util.ArraysParallelSortHelpers$FJObject$Merger: void <init>(java.util.concurrent.CountedCompleter,java.lang.Object[],java.lang.Object[],int,int,int,int,int,int,java.util.Comparator)>
Counter value: 1
SCC 1885 : 1
<sun.reflect.ClassFileAssembler: void opc_new(short)>
Counter value: 1
SCC 1886 : 1
<java.lang.invoke.Cache: java.util.Map computeValue(java.lang.Class)>
Counter value: 1
SCC 1887 : 1
<java.io.ObjectInputStream$FilterValues: long streamBytes()>
Counter value: 1
SCC 1888 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator$accept__44: void <init>(java.util.stream.SpinedBuffer$OfDouble)>
Counter value: 1
SCC 1889 : 1
<sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 1890 : 1
<sun.nio.fs.UnixCopyFile$2: java.lang.Void run()>
Counter value: 1
SCC 1891 : 1
<java.util.concurrent.TimeUnit$1: long toHours(long)>
Counter value: 1
SCC 1892 : 1
<java.util.SubList: void checkForComodification()>
Counter value: 1
SCC 1893 : 1
<sun.nio.fs.NativeBuffers: void copyCStringToNativeBuffer(byte[],sun.nio.fs.NativeBuffer)>
Counter value: 1
SCC 1894 : 1
<java.util.concurrent.LinkedBlockingDeque$AbstractItr: boolean hasNext()>
Counter value: 1
SCC 1895 : 1
<jdk.internal.misc.TerminatingThreadLocal: void set(java.lang.Object)>
Counter value: 1
SCC 1896 : 1
<java.text.DateFormat: java.lang.Object clone()>
Counter value: 1
SCC 1897 : 1
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>
Counter value: 2
SCC 1898 : 1
<java.io.Console$LineReader: boolean ready()>
Counter value: 2
SCC 1899 : 1
<sun.nio.ch.SocketAdaptor: boolean isInputShutdown()>
Counter value: 1
SCC 1900 : 1
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 1901 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void remove()>
Counter value: 1
SCC 1902 : 1
<sun.nio.ch.Net: java.net.InetSocketAddress localAddress(java.io.FileDescriptor)>
Counter value: 1
SCC 1903 : 1
<java.lang.invoke.SecurityFrameInjector$SecurityFrameInjectorLoaderLock: void <init>()>
Counter value: 1
SCC 1904 : 1
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 1905 : 1
<java.util.concurrent.ConcurrentHashMap$TreeBin: void contendedLock()>
Counter value: 1
SCC 1906 : 1
<sun.nio.ch.SocketChannelImpl: void implCloseSelectableChannel()>
Counter value: 1
SCC 1907 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator: void <init>(java.util.concurrent.ConcurrentSkipListMap$SubMap)>
Counter value: 1
SCC 1908 : 1
<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String reducePath(java.lang.String)>
Counter value: 1
SCC 1909 : 1
<java.lang.invoke.PermuteHandle: void <init>(java.lang.invoke.PermuteHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 1910 : 1
<java.util.stream.Nodes$IntArrayNode: void copyInto(java.lang.Object,int)>
Counter value: 1
SCC 1911 : 1
<java.io.ObjectInputStream$ValidationList$1: java.lang.Object run()>
Counter value: 1
SCC 1912 : 1
<java.util.stream.Nodes$ConcNode$OfPrimitive: java.util.stream.Node$OfPrimitive getChild(int)>
Counter value: 1
SCC 1913 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator: java.util.Spliterator trySplit()>
Counter value: 2
SCC 1914 : 1
<java.util.stream.ReduceOps$13: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 1915 : 1
<sun.reflect.misc.ReflectUtil: void conservativeCheckMemberAccess(java.lang.reflect.Member)>
Counter value: 1
SCC 1916 : 1
<java.util.Collections: java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet)>
Counter value: 1
SCC 1917 : 1
<java.util.stream.StreamOpFlag: void <init>(java.lang.String,int,int,java.util.stream.StreamOpFlag$MaskBuilder)>
Counter value: 1
SCC 1918 : 1
<java.lang.ClassLoader: boolean getClassAssertionStatusHelper(java.lang.String)>
Counter value: 1
SCC 1919 : 1
<java.time.LocalDate: int compareTo(java.time.chrono.ChronoLocalDate)>
Counter value: 1
SCC 1920 : 1
<java.util.stream.SpinedBuffer$OfLong$1Splitr: java.util.Spliterator$OfPrimitive arraySpliterator(java.lang.Object,int,int)>
Counter value: 1
SCC 1921 : 1
<sun.net.www.MessageHeader: void parseHeader(java.io.InputStream)>
Counter value: 1
SCC 1922 : 1
<java.util.stream.DistinctOps$1$addAll__85: java.util.function.BiConsumer bootstrap$()>
Counter value: 1
SCC 1923 : 1
<java.io.DeleteOnExitHook$1: void run()>
Counter value: 1
SCC 1924 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: java.lang.Object[] toArray()>
Counter value: 1
SCC 1925 : 1
<java.util.AbstractList$ListItr: void set(java.lang.Object)>
Counter value: 1
SCC 1926 : 1
<java.util.stream.Nodes$FixedNodeBuilder: void accept(java.lang.Object)>
Counter value: 1
SCC 1927 : 1
<sun.security.x509.PrivateKeyUsageExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 1928 : 1
<java.nio.channels.Channels$1: void <init>(java.nio.channels.WritableByteChannel)>
Counter value: 1
SCC 1929 : 1
<sun.nio.cs.StreamDecoder: void <init>(java.nio.channels.ReadableByteChannel,java.nio.charset.CharsetDecoder,int)>
Counter value: 1
SCC 1930 : 1
<java.lang.invoke.SecurityFrameInjector$2: java.lang.Class injectSecurityFrameIntoLoader(java.lang.ClassLoader,java.security.ProtectionDomain)>
Counter value: 1
SCC 1931 : 1
<java.time.Instant: boolean equals(java.lang.Object)>
Counter value: 1
SCC 1932 : 1
<sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger getHttpLogger()>
Counter value: 1
SCC 1933 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: void <init>(java.time.chrono.ChronoLocalDate,java.time.LocalTime)>
Counter value: 1
SCC 1934 : 1
<java.util.zip.ZipEntry: java.lang.String toString()>
Counter value: 1
SCC 1935 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToIntTask: java.lang.Integer getRawResult()>
Counter value: 1
SCC 1936 : 1
<sun.net.www.protocol.http.HttpURLConnection$8: java.lang.Object run()>
Counter value: 1
SCC 1937 : 1
<java.util.concurrent.TimeUnit$2: long toNanos(long)>
Counter value: 1
SCC 1938 : 1
<java.util.TreeMap$Values: boolean remove(java.lang.Object)>
Counter value: 1
SCC 1939 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType dropFirstParameterType()>
Counter value: 1
SCC 1940 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: void cancelAll()>
Counter value: 1
SCC 1941 : 1
<sun.net.www.http.KeepAliveCache: sun.net.www.http.HttpClient get(java.net.URL,java.lang.Object)>
Counter value: 1
SCC 1942 : 1
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 1943 : 1
<java.util.concurrent.ConcurrentLinkedQueue$Node: boolean casNext(java.util.concurrent.ConcurrentLinkedQueue$Node,java.util.concurrent.ConcurrentLinkedQueue$Node)>
Counter value: 1
SCC 1944 : 1
<java.lang.ProcessBuilder$Redirect: boolean append()>
Counter value: 1
SCC 1945 : 1
<java.util.stream.SliceOps$lambda_castingArray_0__68: void <init>()>
Counter value: 1
SCC 1946 : 1
<java.net.HttpCookie: long getMaxAge()>
Counter value: 1
SCC 1947 : 1
<java.text.AttributedString$AttributedStringIterator: java.lang.Object clone()>
Counter value: 1
SCC 1948 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator: long estimateSize()>
Counter value: 2
SCC 1949 : 1
<java.util.IdentityHashMap$ValueSpliterator: void <init>(java.util.IdentityHashMap,int,int,int,int)>
Counter value: 1
SCC 1950 : 1
<java.net.HttpConnectSocketImpl: void doTunneling(java.net.HttpURLConnection)>
Counter value: 1
SCC 1951 : 1
<java.util.stream.SpinedBuffer$OfDouble$1Splitr: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 1952 : 1
<java.util.stream.AbstractShortCircuitTask: boolean taskCanceled()>
Counter value: 1
SCC 1953 : 1
<java.util.EnumMap: int access$210(java.util.EnumMap)>
Counter value: 1
SCC 1954 : 1
<java.time.YearMonth: java.time.YearMonth withYear(int)>
Counter value: 1
SCC 1955 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: void end()>
Counter value: 1
SCC 1956 : 1
<java.nio.HeapFloatBuffer: float get(int)>
Counter value: 1
SCC 1957 : 1
<java.util.EnumMap: java.lang.Enum[] access$1100(java.util.EnumMap)>
Counter value: 1
SCC 1958 : 1
<java.util.TreeMap$NavigableSubMap: int size()>
Counter value: 1
SCC 1959 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySpliterator: void <init>(java.util.Comparator,java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Node,java.lang.Object,int)>
Counter value: 1
SCC 1960 : 1
<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>
Counter value: 1
SCC 1961 : 1
<sun.net.www.http.HttpClient: boolean parseHTTP(sun.net.www.MessageHeader,sun.net.ProgressSource,sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 2
SCC 1962 : 1
<java.util.stream.SpinedBuffer$OfInt: java.util.Spliterator$OfInt spliterator()>
Counter value: 1
SCC 1963 : 1
<java.io.ObjectInputStream: java.io.ObjectStreamClass readNonProxyDesc(boolean)>
Counter value: 1
SCC 1964 : 1
<javax.security.auth.Policy: javax.security.auth.Policy getPolicyNoCheck()>
Counter value: 1
SCC 1965 : 1
<java.net.HttpCookie$8: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 1966 : 1
<java.net.SocketException: void <init>(java.lang.String)>
Counter value: 1
SCC 1967 : 1
<java.util.stream.ForEachOps$ForEachOrderedTask$lambda_doCompute_0__86: void <init>()>
Counter value: 1
SCC 1968 : 1
<sun.net.www.protocol.http.AuthenticationInfo: void removeFromCache()>
Counter value: 1
SCC 1969 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfPrimitive: void forEachRemaining(java.lang.Object)>
Counter value: 2
SCC 1970 : 1
<java.util.Vector: void removeAllElements()>
Counter value: 1
SCC 1971 : 1
<javax.security.auth.SubjectDomainCombiner$2: java.lang.Void run()>
Counter value: 1
SCC 1972 : 1
<java.time.chrono.ThaiBuddhistDate: int hashCode()>
Counter value: 1
SCC 1973 : 1
<sun.nio.cs.FastCharsetProvider: java.util.Map access$000(sun.nio.cs.FastCharsetProvider)>
Counter value: 1
SCC 1974 : 1
<java.lang.invoke.FilterArgumentsHandle: void <init>(java.lang.invoke.FilterArgumentsHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 1975 : 1
<java.util.ResourceBundle$LoaderReference: java.util.ResourceBundle$CacheKey getCacheKey()>
Counter value: 1
SCC 1976 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 1977 : 1
<sun.net.www.http.KeepAliveCache: void run()>
Counter value: 1
SCC 1978 : 1
<java.util.stream.IntPipeline$7: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 1979 : 1
<java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
Counter value: 1
SCC 1980 : 1
<java.lang.invoke.ThunkKeyWithObjectArray: int hashCode()>
Counter value: 1
SCC 1981 : 1
<java.lang.invoke.ConstantIntHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 1982 : 1
<java.lang.ProcessEnvironment$StringValues: void <init>(java.util.Collection)>
Counter value: 1
SCC 1983 : 1
<java.util.stream.SortedOps$DoubleSortingSink: void begin(long)>
Counter value: 1
SCC 1984 : 1
<sun.misc.ProxyGenerator: void access$1300(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>
Counter value: 1
SCC 1985 : 1
<java.util.Spliterators$EmptySpliterator: void <init>()>
Counter value: 1
SCC 1986 : 1
<java.time.Year: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 1987 : 1
<java.security.Provider: void clear()>
Counter value: 1
SCC 1988 : 1
<java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
Counter value: 1
SCC 1989 : 1
<java.lang.reflect.Executable: java.lang.String sharedToString(int,boolean,java.lang.Class[],java.lang.Class[])>
Counter value: 1
SCC 1990 : 1
<java.util.stream.DoublePipeline$3$1: void accept(double)>
Counter value: 1
SCC 1991 : 1
<java.nio.Bits: void putLongB(java.nio.ByteBuffer,int,long)>
Counter value: 1
SCC 1992 : 1
<java.util.ArraysParallelSortHelpers$EmptyCompleter: void compute()>
Counter value: 1
SCC 1993 : 1
<sun.misc.ProxyGenerator$ConstantPool: short getValue(java.lang.Object)>
Counter value: 1
SCC 1994 : 1
<jdk.internal.org.objectweb.asm.TypePath: java.lang.String toString()>
Counter value: 1
SCC 1995 : 1
<sun.net.NetProperties$1: java.lang.Object run()>
Counter value: 1
SCC 1996 : 1
<java.util.regex.Matcher: java.util.regex.Matcher useAnchoringBounds(boolean)>
Counter value: 1
SCC 1997 : 1
<sun.misc.ProxyGenerator: java.lang.String getFieldType(java.lang.Class)>
Counter value: 1
SCC 1998 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: java.lang.String access$600(java.net.InetSocketAddress$InetSocketAddressHolder)>
Counter value: 1
SCC 1999 : 1
<java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node first()>
Counter value: 1
SCC 2000 : 1
<java.util.Collections$SynchronizedList: java.lang.Object remove(int)>
Counter value: 2
SCC 2001 : 1
<java.util.stream.SpinedBuffer$OfLong$1Splitr: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 2002 : 1
<java.util.stream.SpinedBuffer$OfLong$1Splitr: void arrayForOne(long[],int,java.util.function.LongConsumer)>
Counter value: 1
SCC 2003 : 1
<java.util.stream.Nodes$ArrayNode: java.lang.String toString()>
Counter value: 1
SCC 2004 : 1
<java.util.EnumMap$Values: boolean contains(java.lang.Object)>
Counter value: 1
SCC 2005 : 1
<javax.security.auth.SubjectDomainCombiner: void printInputDomains(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
Counter value: 1
SCC 2006 : 1
<java.io.ObjectInputStream$HandleTable$HandleList: void <init>()>
Counter value: 1
SCC 2007 : 1
<sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.net.Proxy,int,sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 2008 : 1
<java.util.OptionalLong: void <init>()>
Counter value: 1
SCC 2009 : 1
<java.util.concurrent.TimeUnit$1: int excessNanos(long,long)>
Counter value: 1
SCC 2010 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator$lambda_getComparator_d5a01062_1__58: java.util.Comparator bootstrap$()>
Counter value: 1
SCC 2011 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 2012 : 1
<sun.util.locale.provider.RuleBasedBreakIterator: int hashCode()>
Counter value: 1
SCC 2013 : 1
<java.nio.ByteBufferAsCharBufferB: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 2014 : 1
<sun.net.www.http.KeepAliveCache: int getMaxConnections()>
Counter value: 1
SCC 2015 : 1
<java.util.DualPivotQuicksort: void sort(short[],int,int,boolean)>
Counter value: 2
SCC 2016 : 1
<java.util.stream.AbstractPipeline: void copyIntoWithCancel(java.util.stream.Sink,java.util.Spliterator)>
Counter value: 1
SCC 2017 : 1
<java.time.chrono.ChronoZonedDateTime: java.time.LocalTime toLocalTime()>
Counter value: 1
SCC 2018 : 1
<java.util.Spliterators$1Adapter: boolean hasNext()>
Counter value: 1
SCC 2019 : 1
<java.nio.ShortBuffer: int compareTo(java.lang.Object)>
Counter value: 1
SCC 2020 : 1
<java.lang.reflect.Constructor: int hashCode()>
Counter value: 1
SCC 2021 : 1
<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableSet navigableKeySet()>
Counter value: 2
SCC 2022 : 1
<sun.nio.ch.DatagramSocketAdaptor$1: void close()>
Counter value: 1
SCC 2023 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfInt: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 2024 : 1
<java.util.Collections$CheckedCollection: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 2
SCC 2025 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 2026 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getMethod()>
Counter value: 1
SCC 2027 : 1
<java.lang.invoke.WrongMethodTypeException: void <init>(java.lang.String)>
Counter value: 1
SCC 2028 : 1
<sun.net.www.http.ChunkedOutputStream: void write(byte[],int,int)>
Counter value: 1
SCC 2029 : 1
<java.util.concurrent.ConcurrentHashMap$TreeBin: boolean removeTreeNode(java.util.concurrent.ConcurrentHashMap$TreeNode)>
Counter value: 1
SCC 2030 : 1
<java.util.concurrent.atomic.AtomicInteger: java.lang.String toString()>
Counter value: 1
SCC 2031 : 1
<java.time.LocalTime: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 2032 : 1
<java.time.Clock$SystemClock: java.lang.String toString()>
Counter value: 1
SCC 2033 : 1
<sun.nio.ch.SocketAdaptor: void setSoTimeout(int)>
Counter value: 1
SCC 2034 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 2035 : 1
<sun.nio.ch.SocketAdaptor: void setBooleanOption(java.net.SocketOption,boolean)>
Counter value: 1
SCC 2036 : 1
<sun.nio.ch.ThreadPool: java.lang.Thread lambda$defaultThreadFactory$0(java.lang.Runnable)>
Counter value: 1
SCC 2037 : 1
<java.lang.ref.Reference$ClearBeforeEnqueue$1: java.lang.Boolean run()>
Counter value: 1
SCC 2038 : 1
<java.util.stream.Nodes$EmptyNode$OfLong: void <init>()>
Counter value: 1
SCC 2039 : 1
<java.net.SocksSocketImpl$5: java.lang.Object run()>
Counter value: 1
SCC 2040 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] makeArrays()>
Counter value: 1
SCC 2041 : 1
<sun.security.util.MemoryCache$HardCacheEntry: void invalidate()>
Counter value: 1
SCC 2042 : 1
<sun.net.www.protocol.http.AuthenticationInfo: void requestCompleted(java.lang.String)>
Counter value: 1
SCC 2043 : 1
<sun.nio.fs.UnixNativeDispatcher: void <clinit>()>
Counter value: 1
SCC 2044 : 1
<java.util.Arrays: double[] copyOf(double[],int)>
Counter value: 1
SCC 2045 : 1
<sun.misc.URLClassPath: void <init>(java.net.URL[],java.security.AccessControlContext)>
Counter value: 1
SCC 2046 : 1
<java.util.Collections$2: int characteristics()>
Counter value: 1
SCC 2047 : 1
<java.net.InetSocketAddress: boolean isUnresolved()>
Counter value: 1
SCC 2048 : 1
<java.util.stream.IntPipeline$7$1: boolean cancellationRequested()>
Counter value: 2
SCC 2049 : 1
<java.time.chrono.JapaneseDate: long toEpochDay()>
Counter value: 1
SCC 2050 : 1
<sun.util.resources.ParallelListResourceBundle$KeySet$1: java.lang.Object next()>
Counter value: 1
SCC 2051 : 1
<java.util.EnumMap: java.util.Set keySet()>
Counter value: 1
SCC 2052 : 1
<java.time.chrono.JapaneseEra: java.lang.String getName()>
Counter value: 1
SCC 2053 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator$accept__48: java.util.stream.Sink$OfInt bootstrap$(java.util.function.IntConsumer)>
Counter value: 1
SCC 2054 : 1
<java.util.stream.Nodes$SpinedNodeBuilder: void copyInto(java.lang.Object[],int)>
Counter value: 1
SCC 2055 : 1
<sun.nio.fs.UnixDirectoryStream: sun.nio.fs.UnixPath access$100(sun.nio.fs.UnixDirectoryStream)>
Counter value: 1
SCC 2056 : 1
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>
Counter value: 1
SCC 2057 : 1
<java.lang.invoke.InnerClassLambdaMetafactory: void <clinit>()>
Counter value: 1
SCC 2058 : 1
<java.lang.NoSuchMethodException: void <init>()>
Counter value: 1
SCC 2059 : 1
<java.util.stream.Streams$RangeIntSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 2060 : 1
<java.util.stream.ReduceOps$6ReducingSink: void accept(int)>
Counter value: 1
SCC 2061 : 1
<java.util.stream.Nodes$ConcNode$OfDouble: java.util.Spliterator spliterator()>
Counter value: 1
SCC 2062 : 1
<java.util.Spliterators$IntArraySpliterator: void <init>(int[],int,int,int)>
Counter value: 1
SCC 2063 : 1
<java.net.HttpURLConnection: boolean getInstanceFollowRedirects()>
Counter value: 1
SCC 2064 : 1
<java.io.DataInputStream: boolean readBoolean()>
Counter value: 1
SCC 2065 : 1
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: int read()>
Counter value: 1
SCC 2066 : 1
<sun.text.normalizer.CharacterIteratorWrapper: java.lang.Object clone()>
Counter value: 1
SCC 2067 : 1
<java.io.ObjectInputStream$GetClassCachingSettingAction: java.lang.Object run()>
Counter value: 1
SCC 2068 : 1
<sun.nio.ch.DatagramChannelImpl: void kill()>
Counter value: 1
SCC 2069 : 1
<java.nio.HeapByteBuffer: java.nio.ByteBuffer slice()>
Counter value: 1
SCC 2070 : 1
<java.io.DataInputStream: double readDouble()>
Counter value: 1
SCC 2071 : 1
<sun.net.www.protocol.http.HttpURLConnection: void disconnectInternal()>
Counter value: 1
SCC 2072 : 1
<java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>
Counter value: 1
SCC 2073 : 1
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>
Counter value: 2
SCC 2074 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 2075 : 1
<java.nio.DirectCharBufferRS: void <init>(sun.nio.ch.DirectBuffer,int,int,int,int,int)>
Counter value: 1
SCC 2076 : 1
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 2077 : 1
<java.util.concurrent.CancellationException: void <init>()>
Counter value: 1
SCC 2078 : 1
<java.net.ServerSocket$1: java.lang.Object run()>
Counter value: 1
SCC 2079 : 1
<sun.nio.ch.Util: java.lang.reflect.Constructor access$402(java.lang.reflect.Constructor)>
Counter value: 1
SCC 2080 : 1
<java.util.stream.Nodes$EmptyNode$OfDouble: double[] asPrimitiveArray()>
Counter value: 1
SCC 2081 : 1
<java.lang.invoke.PrimitiveHandle: void <init>(java.lang.invoke.PrimitiveHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 2082 : 1
<java.time.YearMonth: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 2083 : 1
<java.lang.invoke.StaticFieldGetterHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 2084 : 1
<sun.nio.ch.SocketChannelImpl: int read(java.nio.ByteBuffer)>
Counter value: 1
SCC 2085 : 1
<java.util.RegularEnumSet$EnumSetIterator: void remove()>
Counter value: 1
SCC 2086 : 1
<java.util.AbstractQueue: boolean add(java.lang.Object)>
Counter value: 1
SCC 2087 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 2088 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 2089 : 1
<java.util.concurrent.ConcurrentSkipListSet: java.util.Comparator comparator()>
Counter value: 1
SCC 2090 : 1
<sun.invoke.util.Wrapper: boolean isOther()>
Counter value: 1
SCC 2091 : 1
<java.util.stream.DistinctOps$1: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 2092 : 1
<java.util.stream.LongPipeline: java.util.Spliterator$OfLong access$000(java.util.Spliterator)>
Counter value: 1
SCC 2093 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 2094 : 1
<sun.net.NetworkClient$1: java.lang.Void run()>
Counter value: 1
SCC 2095 : 1
<sun.security.x509.X509Key: void parseKeyBits()>
Counter value: 1
SCC 2096 : 1
<java.util.LinkedHashMap$LinkedEntrySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 2097 : 1
<java.nio.channels.Channels: java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)>
Counter value: 1
SCC 2098 : 1
<java.util.concurrent.ConcurrentSkipListMap$ValueIterator: java.lang.Object next()>
Counter value: 1
SCC 2099 : 1
<java.util.Random$RandomIntsSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 2100 : 1
<java.util.stream.IntPipeline$1$1: void <init>(java.util.stream.IntPipeline$1,java.util.stream.Sink)>
Counter value: 1
SCC 2101 : 1
<java.lang.reflect.WeakCache$LookupValue: java.lang.Object get()>
Counter value: 1
SCC 2102 : 1
<java.time.OffsetDateTime: java.time.LocalDate toLocalDate()>
Counter value: 1
SCC 2103 : 1
<java.time.YearMonth: int hashCode()>
Counter value: 1
SCC 2104 : 1
<java.net.Socket: void setImpl()>
Counter value: 1
SCC 2105 : 1
<java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: void <clinit>()>
Counter value: 1
SCC 2106 : 1
<sun.nio.fs.UnixNativeDispatcher$1: java.lang.Object run()>
Counter value: 1
SCC 2107 : 1
<java.nio.file.Files$AcceptAllFilter: boolean accept(java.lang.Object)>
Counter value: 1
SCC 2108 : 1
<sun.reflect.ClassDefiner$1: void <init>(java.lang.ClassLoader)>
Counter value: 1
SCC 2109 : 1
<java.util.Arrays: void sort(double[],int,int)>
Counter value: 1
SCC 2110 : 1
<java.lang.reflect.WeakCache$Factory: java.lang.Object get()>
Counter value: 1
SCC 2111 : 1
<java.lang.invoke.ConstantHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 2112 : 1
<sun.nio.ch.PendingFuture: boolean cancel(boolean)>
Counter value: 1
SCC 2113 : 1
<java.util.stream.DoublePipeline$accept__96: java.util.function.DoubleConsumer bootstrap$(java.util.stream.Sink)>
Counter value: 1
SCC 2114 : 1
<java.util.stream.Nodes$SizedCollectorTask: void begin(long)>
Counter value: 1
SCC 2115 : 1
<java.net.URLConnection: int readBytes(int[],int,java.io.InputStream)>
Counter value: 1
SCC 2116 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock: java.lang.String toString()>
Counter value: 1
SCC 2117 : 1
<java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 2118 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 2119 : 1
<sun.nio.ch.SocketChannelImpl: boolean ensureReadOpen()>
Counter value: 1
SCC 2120 : 1
<java.util.stream.Streams$RangeIntSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 2121 : 1
<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String scheme()>
Counter value: 1
SCC 2122 : 1
<java.util.Collections$UnmodifiableSortedMap: void <init>(java.util.SortedMap)>
Counter value: 1
SCC 2123 : 1
<sun.net.www.protocol.http.HttpURLConnection$1: java.lang.Object run()>
Counter value: 1
SCC 2124 : 1
<java.util.Collections$CheckedList$1: java.lang.Object next()>
Counter value: 2
SCC 2125 : 1
<java.nio.file.spi.FileSystemProvider$1: void <init>()>
Counter value: 1
SCC 2126 : 1
<java.lang.reflect.Parameter: boolean isSynthetic()>
Counter value: 1
SCC 2127 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 2128 : 1
<java.util.ArrayList$Itr: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 2129 : 1
<java.nio.charset.Charset: java.nio.charset.spi.CharsetProvider access$100()>
Counter value: 1
SCC 2130 : 1
<sun.util.BuddhistCalendar: java.lang.String toString()>
Counter value: 1
SCC 2131 : 1
<java.util.stream.TerminalOp: java.lang.Object evaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 2132 : 1
<java.io.ClassByNameCache$LookupKey: java.io.ClassByNameCache$CacheKey createCacheKey()>
Counter value: 1
SCC 2133 : 1
<java.lang.invoke.ConvertHandle: void throwWrongMethodTypeException(java.lang.invoke.MethodType,java.lang.invoke.MethodType,int)>
Counter value: 1
SCC 2134 : 1
<java.util.stream.SpinedBuffer$OfLong: int arrayLength(java.lang.Object)>
Counter value: 1
SCC 2135 : 1
<java.util.LinkedList$LLSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 2136 : 1
<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
Counter value: 1
SCC 2137 : 1
<java.util.ArrayDeque: void clear()>
Counter value: 1
SCC 2138 : 1
<java.util.TreeMap$DescendingSubMap: java.util.Iterator keyIterator()>
Counter value: 1
SCC 2139 : 1
<java.net.URLClassLoader: void close()>
Counter value: 2
SCC 2140 : 1
<sun.misc.ObjectInputFilter$Config$Global$lambda_checkInput_8__99: void <init>(java.lang.Class)>
Counter value: 1
SCC 2141 : 1
<java.lang.invoke.MethodHandleImpl: boolean assertCorrectArity(java.lang.invoke.MethodHandle,int)>
Counter value: 1
SCC 2142 : 1
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 2143 : 1
<java.lang.invoke.CollectHandle: void <init>(java.lang.invoke.MethodHandle,int,int)>
Counter value: 1
SCC 2144 : 1
<java.io.Console: void <init>()>
Counter value: 1
SCC 2145 : 1
<java.lang.Thread: void <init>(java.lang.Runnable)>
Counter value: 1
SCC 2146 : 1
<java.lang.ClassValue: java.lang.Object get(java.lang.Class)>
Counter value: 1
SCC 2147 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator: java.lang.Object next()>
Counter value: 1
SCC 2148 : 1
<java.io.ObjectStreamClass: java.lang.String access$2600(java.lang.Class)>
Counter value: 1
SCC 2149 : 1
<java.lang.VMAccess: java.lang.Object getMethodHandleCache(java.lang.Class)>
Counter value: 1
SCC 2150 : 1
<java.net.HttpConnectSocketImpl$1: void <init>()>
Counter value: 1
SCC 2151 : 1
<java.time.OffsetDateTime: java.time.OffsetDateTime 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 2152 : 1
<sun.reflect.ClassFileAssembler: void emitConstantPoolUTF8(java.lang.String)>
Counter value: 1
SCC 2153 : 1
<java.util.DualPivotQuicksort: void sort(float[],int,int,float[],int,int)>
Counter value: 1
SCC 2154 : 1
<java.util.IdentityHashMap: boolean containsMapping(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 2155 : 1
<java.net.SocksSocketImpl$4: java.lang.Object run()>
Counter value: 1
SCC 2156 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap clone()>
Counter value: 1
SCC 2157 : 1
<sun.net.www.protocol.http.DigestAuthentication: boolean isAuthorizationStale(java.lang.String)>
Counter value: 1
SCC 2158 : 1
<sun.misc.PathPermissions$1: java.lang.Object run()>
Counter value: 1
SCC 2159 : 1
<java.io.ObjectStreamClass: java.security.ProtectionDomain[] access$2200(java.io.ObjectStreamClass,java.lang.reflect.Constructor,java.lang.Class)>
Counter value: 1
SCC 2160 : 1
<java.util.concurrent.ThreadLocalRandom$RandomLongsSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 2161 : 1
<java.util.Spliterators$LongArraySpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 2162 : 1
<sun.security.util.MemoryCache: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 2163 : 1
<java.net.AbstractPlainDatagramSocketImpl: void close()>
Counter value: 1
SCC 2164 : 1
<java.time.ZonedDateTime: java.time.ZoneId getZone()>
Counter value: 1
SCC 2165 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasPrevious()>
Counter value: 1
SCC 2166 : 1
<java.util.stream.SortedOps$AbstractIntSortingSink: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 2167 : 1
<java.util.Spliterators$DoubleIteratorSpliterator: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 2168 : 1
<java.lang.invoke.MethodHandle: boolean directHandleOriginatedInFindVirtual()>
Counter value: 1
SCC 2169 : 1
<java.time.chrono.HijrahChronology: int getMaximumMonthLength()>
Counter value: 1
SCC 2170 : 1
<java.util.Collections$UnmodifiableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 2171 : 1
<java.util.jar.JarFile$1: java.lang.String nextElement()>
Counter value: 1
SCC 2172 : 1
<java.lang.invoke.PermuteHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 2173 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfLong: java.util.Spliterator trySplit()>
Counter value: 1
SCC 2174 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 2175 : 1
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>
Counter value: 1
SCC 2176 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToDoubleTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 2177 : 1
<java.net.HttpCookie$7: void <init>()>
Counter value: 1
SCC 2178 : 1
<java.net.HttpCookie: java.util.List splitMultiCookies(java.lang.String)>
Counter value: 1
SCC 2179 : 1
<java.net.ProxySelector: java.net.ProxySelector getDefault()>
Counter value: 1
SCC 2180 : 1
<java.util.jar.JarVerifier$4: java.lang.String nextElement()>
Counter value: 1
SCC 2181 : 1
<java.lang.invoke.ConstantIntHandle: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 2182 : 1
<java.lang.StackTraceElement: java.lang.String getClassName()>
Counter value: 1
SCC 2183 : 1
<java.io.ObjectStreamClass$EntryFuture: java.lang.Thread getOwner()>
Counter value: 1
SCC 2184 : 1
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 2185 : 1
<java.nio.file.FileTreeWalker$DirectoryNode: java.lang.Object key()>
Counter value: 1
SCC 2186 : 1
<java.util.stream.ReduceOps$12ReducingSink: void accept(double)>
Counter value: 1
SCC 2187 : 1
<java.util.stream.IntPipeline$10$1: void accept(int)>
Counter value: 2
SCC 2188 : 1
<java.lang.invoke.ComputedCalls: void load()>
Counter value: 1
SCC 2189 : 1
<sun.nio.ch.Util$3: void clear()>
Counter value: 2
SCC 2190 : 1
<java.util.stream.DoublePipeline: java.util.Spliterator$OfDouble access$000(java.util.Spliterator)>
Counter value: 1
SCC 2191 : 1
<sun.nio.fs.UnixPath: void initOffsets()>
Counter value: 1
SCC 2192 : 1
<java.net.URLConnection: java.net.URL getURL()>
Counter value: 1
SCC 2193 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: void push(java.util.concurrent.ForkJoinTask)>
Counter value: 1
SCC 2194 : 1
<sun.reflect.UnsafeShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 2195 : 1
<java.security.cert.CertPath: java.lang.String getType()>
Counter value: 1
SCC 2196 : 1
<sun.misc.ProxyGenerator$ConstantPool: short getIndirect(sun.misc.ProxyGenerator$ConstantPool$IndirectEntry)>
Counter value: 1
SCC 2197 : 1
<sun.net.www.HeaderParser: java.lang.String toString()>
Counter value: 1
SCC 2198 : 1
<java.util.Random$RandomIntsSpliterator: void <init>(java.util.Random,long,long,int,int)>
Counter value: 1
SCC 2199 : 1
<java.util.concurrent.FutureTask: java.lang.Object get()>
Counter value: 1
SCC 2200 : 1
<java.util.Collections$SynchronizedMap: int size()>
Counter value: 2
SCC 2201 : 1
<java.util.stream.Streams$ConcatSpliterator$OfInt: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 2202 : 1
<java.util.stream.SpinedBuffer$OfInt$1Splitr: java.util.Spliterator$OfPrimitive arraySpliterator(java.lang.Object,int,int)>
Counter value: 1
SCC 2203 : 1
<java.util.stream.IntPipeline: java.util.function.IntConsumer adapt(java.util.stream.Sink)>
Counter value: 1
SCC 2204 : 1
<sun.security.x509.CertificatePolicyId: sun.security.util.ObjectIdentifier getIdentifier()>
Counter value: 1
SCC 2205 : 1
<java.io.ObjectStreamClass$WeakClassKey: void <init>(java.lang.Class,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 2206 : 1
<java.time.YearMonth: long getProlepticMonth()>
Counter value: 1
SCC 2207 : 1
<java.util.AbstractMap$1$1: void remove()>
Counter value: 2
SCC 2208 : 1
<java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory$1: void <init>(java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory,java.util.concurrent.ForkJoinPool)>
Counter value: 1
SCC 2209 : 1
<java.util.stream.Streams$ConcatSpliterator: long estimateSize()>
Counter value: 2
SCC 2210 : 1
<java.util.concurrent.ConcurrentLinkedQueue: boolean casTail(java.util.concurrent.ConcurrentLinkedQueue$Node,java.util.concurrent.ConcurrentLinkedQueue$Node)>
Counter value: 1
SCC 2211 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: void clear()>
Counter value: 2
SCC 2212 : 1
<java.net.DatagramPacket$1: java.lang.Void run()>
Counter value: 1
SCC 2213 : 1
<java.lang.invoke.ArgumentMoverHandle: void <init>(java.lang.invoke.ArgumentMoverHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 2214 : 1
<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>
Counter value: 1
SCC 2215 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfLong: void <init>(java.util.Spliterator$OfLong,long,long,long,long)>
Counter value: 1
SCC 2216 : 1
<java.util.Collections$CopiesList: int hashCode()>
Counter value: 2
SCC 2217 : 1
<java.time.chrono.HijrahDate: java.time.chrono.Era getEra()>
Counter value: 1
SCC 2218 : 1
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 2219 : 1
<java.util.Spliterators$ArraySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 2220 : 1
<java.util.JapaneseImperialCalendar: long getYearOffsetInMillis(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 2221 : 1
<java.net.Authenticator: void reset()>
Counter value: 1
SCC 2222 : 1
<java.nio.DirectByteBuffer: byte get()>
Counter value: 1
SCC 2223 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamClass$ExceptionInfo access$1102(java.io.ObjectStreamClass,java.io.ObjectStreamClass$ExceptionInfo)>
Counter value: 1
SCC 2224 : 1
<java.util.Arrays: void sort(int[],int,int)>
Counter value: 1
SCC 2225 : 1
<java.lang.invoke.GuardWithTestHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 2226 : 1
<java.io.WriteAbortedException: java.lang.Throwable getCause()>
Counter value: 1
SCC 2227 : 1
<java.lang.ClassValue$Identity: void <init>()>
Counter value: 1
SCC 2228 : 1
<java.util.TreeMap$DescendingKeyIterator: java.lang.Object next()>
Counter value: 1
SCC 2229 : 1
<java.util.ArrayDeque: java.util.Iterator iterator()>
Counter value: 1
SCC 2230 : 1
<sun.security.x509.CertificateIssuerExtension: java.lang.String toString()>
Counter value: 1
SCC 2231 : 1
<sun.reflect.ClassFileAssembler: void opc_i2d()>
Counter value: 1
SCC 2232 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: void accept(double)>
Counter value: 1
SCC 2233 : 1
<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>
Counter value: 1
SCC 2234 : 1
<javax.security.auth.Subject$ClassSet: int size()>
Counter value: 2
SCC 2235 : 1
<sun.net.sdp.SdpSupport: void convertSocket(java.io.FileDescriptor)>
Counter value: 1
SCC 2236 : 1
<java.net.HostPortrange: int[] defaultPort()>
Counter value: 1
SCC 2237 : 1
<sun.security.x509.AuthorityKeyIdentifierExtension: java.lang.String toString()>
Counter value: 1
SCC 2238 : 1
<java.net.Proxy: int hashCode()>
Counter value: 1
SCC 2239 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 2240 : 1
<sun.reflect.ClassFileAssembler: void emitInt(int)>
Counter value: 1
SCC 2241 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: int previousIndex()>
Counter value: 1
SCC 2242 : 1
<sun.misc.ProxyGenerator$ProxyMethod: void codeFieldInitialization(java.io.DataOutputStream)>
Counter value: 1
SCC 2243 : 1
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findSpecialImpl(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,java.lang.Class)>
Counter value: 1
SCC 2244 : 1
<java.util.Spliterator$OfInt$accept__75: void <init>(java.util.function.Consumer)>
Counter value: 1
SCC 2245 : 1
<java.util.concurrent.SynchronousQueue: java.lang.Object peek()>
Counter value: 1
SCC 2246 : 1
<java.io.ObjectStreamClass$ExceptionInfo: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 2247 : 1
<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>
Counter value: 1
SCC 2248 : 1
<java.util.stream.IntPipeline$3$1: void accept(int)>
Counter value: 2
SCC 2249 : 1
<java.lang.invoke.MethodHandleCache: void processReferenceQueue()>
Counter value: 1
SCC 2250 : 1
<java.lang.ClassValue$ClassValueMap: void <clinit>()>
Counter value: 1
SCC 2251 : 1
<sun.reflect.'annotation'.AnnotationType$1: java.lang.Object run()>
Counter value: 1
SCC 2252 : 1
<java.util.stream.ReduceOps$3ReducingSink: void <init>(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator)>
Counter value: 1
SCC 2253 : 1
<java.time.ZonedDateTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 2254 : 1
<java.util.TreeMap$Values: boolean contains(java.lang.Object)>
Counter value: 1
SCC 2255 : 1
<java.nio.file.FileSystemNotFoundException: void <init>(java.lang.String)>
Counter value: 1
SCC 2256 : 1
<sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
Counter value: 1
SCC 2257 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfDouble: java.util.stream.Nodes$SizedCollectorTask$OfDouble makeChild(java.util.Spliterator,long,long)>
Counter value: 1
SCC 2258 : 1
<java.util.stream.ReduceOps$2ReducingSink: void <init>(java.util.function.BinaryOperator)>
Counter value: 1
SCC 2259 : 1
<java.time.MonthDay: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 2260 : 1
<java.net.AbstractPlainSocketImpl: void connect(java.net.InetAddress,int)>
Counter value: 1
SCC 2261 : 1
<java.util.stream.ReferencePipeline$10$1$accept__74: java.util.function.LongConsumer bootstrap$(java.util.stream.Sink)>
Counter value: 1
SCC 2262 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 2263 : 1
<java.security.spec.PSSParameterSpec: java.lang.String toString()>
Counter value: 1
SCC 2264 : 1
<sun.reflect.NativeMethodAccessorImpl: void setParent(sun.reflect.DelegatingMethodAccessorImpl)>
Counter value: 1
SCC 2265 : 1
<java.util.concurrent.ForkJoinTask$AdaptedCallable: java.lang.Object getRawResult()>
Counter value: 1
SCC 2266 : 1
<sun.util.calendar.JulianCalendar$Date: void setNormalizedYear(int)>
Counter value: 1
SCC 2267 : 1
<java.nio.HeapDoubleBuffer: double get(int)>
Counter value: 1
SCC 2268 : 1
<java.net.Socket: void checkAddress(java.net.InetAddress,java.lang.String)>
Counter value: 1
SCC 2269 : 1
<java.util.Collections$SynchronizedNavigableMap: java.util.NavigableSet keySet()>
Counter value: 1
SCC 2270 : 1
<java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator: java.util.Spliterator$OfPrimitive trySplit()>
Counter value: 1
SCC 2271 : 1
<java.util.stream.StreamOpFlag: void <clinit>()>
Counter value: 1
SCC 2272 : 1
<sun.nio.fs.UnixSecureDirectoryStream: java.util.Iterator iterator()>
Counter value: 1
SCC 2273 : 1
<java.nio.DirectByteBuffer$Deallocator: void <init>(long,long,int,java.nio.DirectByteBuffer$1)>
Counter value: 1
SCC 2274 : 1
<java.lang.invoke.InterfaceHandle: void <init>(java.lang.invoke.InterfaceHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 2275 : 1
<java.lang.ProcessEnvironment$StringEnvironment: void clear()>
Counter value: 2
SCC 2276 : 1
<java.lang.invoke.SecurityFrameInjector$2: void <init>(java.lang.Class,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 2277 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: void inflateSpine()>
Counter value: 1
SCC 2278 : 1
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 2279 : 1
<java.util.Collections$CheckedList: int hashCode()>
Counter value: 2
SCC 2280 : 1
<java.util.DualPivotQuicksort: void sort(int[],int,int,int[],int,int)>
Counter value: 1
SCC 2281 : 1
<java.util.concurrent.LinkedBlockingDeque$LBDSpliterator: void <init>(java.util.concurrent.LinkedBlockingDeque)>
Counter value: 1
SCC 2282 : 1
<sun.misc.ProxyGenerator: void code_ldc(int,java.io.DataOutputStream)>
Counter value: 1
SCC 2283 : 1
<sun.security.provider.X509Factory: int readBERInternal(java.io.InputStream,java.io.ByteArrayOutputStream,int)>
Counter value: 2
SCC 2284 : 1
<java.util.WeakHashMap$EntrySet: int size()>
Counter value: 1
SCC 2285 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 2286 : 1
<java.util.stream.Nodes$EmptyNode$OfLong: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 2287 : 1
<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getProxyAuthKey(java.lang.String,int,java.lang.String,sun.net.www.protocol.http.AuthScheme)>
Counter value: 1
SCC 2288 : 1
<java.util.stream.DoublePipeline$StatefulOp: java.util.stream.DoubleStream sequential()>
Counter value: 1
SCC 2289 : 1
<java.util.EnumMap: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 2290 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachTransformedMappingTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.BiFunction,java.util.function.Consumer)>
Counter value: 1
SCC 2291 : 1
<java.lang.invoke.MethodHandle: void <init>(java.lang.invoke.MethodType,byte,java.lang.Object)>
Counter value: 1
SCC 2292 : 1
<sun.security.x509.PrivateKeyUsageExtension: java.lang.String getName()>
Counter value: 1
SCC 2293 : 1
<java.lang.invoke.MethodHandle: int getModifiers()>
Counter value: 1
SCC 2294 : 1
<java.lang.invoke.Insert3Handle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 2295 : 1
<java.util.ArrayList$SubList$1: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 2296 : 1
<java.util.concurrent.TimeUnit: long toMicros(long)>
Counter value: 1
SCC 2297 : 1
<java.util.EnumMap$EntrySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 2298 : 1
<java.lang.ref.Reference$1: boolean tryHandlePendingReference()>
Counter value: 1
SCC 2299 : 1
<java.time.chrono.HijrahDate: int getEraValue()>
Counter value: 1
SCC 2300 : 1
<java.util.stream.LongPipeline$accept__97: java.util.function.LongConsumer bootstrap$(java.util.stream.Sink)>
Counter value: 1
SCC 2301 : 1
<javax.security.auth.Subject$SecureSet$5: java.lang.Object run()>
Counter value: 1
SCC 2302 : 1
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>
Counter value: 2
SCC 2303 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: byte[] nextToken(byte[])>
Counter value: 1
SCC 2304 : 1
<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.util.Map$Entry)>
Counter value: 1
SCC 2305 : 1
<sun.net.www.HeaderParser: java.lang.String findValue(int)>
Counter value: 1
SCC 2306 : 1
<java.util.stream.DoublePipeline$2$1: void <init>(java.util.stream.DoublePipeline$2,java.util.stream.Sink)>
Counter value: 1
SCC 2307 : 1
<sun.util.PreHashedMap$2$1$1: java.lang.Object getKey()>
Counter value: 1
SCC 2308 : 1
<java.util.stream.ReferencePipeline$9: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 2309 : 1
<java.time.chrono.ThaiBuddhistDate: long toEpochDay()>
Counter value: 1
SCC 2310 : 1
<java.util.stream.SpinedBuffer$OfLong: long[][] newArrayArray(int)>
Counter value: 1
SCC 2311 : 1
<sun.nio.fs.UnixUserPrincipals$User: java.lang.String toString()>
Counter value: 1
SCC 2312 : 1
<java.util.stream.Nodes$InternalNodeSpliterator: void <init>(java.util.stream.Node)>
Counter value: 1
SCC 2313 : 1
<java.lang.ProcessBuilder$Redirect$1: java.lang.String toString()>
Counter value: 1
SCC 2314 : 1
<sun.nio.ch.SocketChannelImpl: void readerCleanup()>
Counter value: 1
SCC 2315 : 1
<java.io.DataOutputStream: void writeInt(int)>
Counter value: 1
SCC 2316 : 1
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterReturnValue(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 2317 : 1
<java.util.stream.IntPipeline$7$1: void <init>(java.util.stream.IntPipeline$7,java.util.stream.Sink)>
Counter value: 1
SCC 2318 : 1
<java.util.stream.ReferencePipeline$8$1$accept__72: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 2319 : 1
<java.lang.invoke.SerializedLambda$1: java.lang.reflect.Method run()>
Counter value: 1
SCC 2320 : 1
<java.util.SubList: java.lang.Object set(int,java.lang.Object)>
Counter value: 2
SCC 2321 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.Chronology getChronology()>
Counter value: 1
SCC 2322 : 1
<sun.security.x509.OtherName: boolean equals(java.lang.Object)>
Counter value: 1
SCC 2323 : 1
<java.util.Collections$CopiesList: boolean contains(java.lang.Object)>
Counter value: 1
SCC 2324 : 1
<java.util.stream.ForEachOps$ForEachOp$OfInt: java.lang.Object evaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 2325 : 1
<java.lang.ref.Reference: boolean access$000()>
Counter value: 1
SCC 2326 : 1
<javax.security.auth.SubjectDomainCombiner$4: void <init>()>
Counter value: 1
SCC 2327 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: java.util.Spliterator makeSpliterator(java.util.Spliterator)>
Counter value: 1
SCC 2328 : 1
<java.net.Proxy: java.lang.String toString()>
Counter value: 1
SCC 2329 : 1
<java.util.stream.SliceOps$3: java.util.Spliterator$OfLong unorderedSkipLimitSpliterator(java.util.Spliterator$OfLong,long,long,long)>
Counter value: 1
SCC 2330 : 1
<java.net.HttpCookie: long expiryDate2DeltaSeconds(java.lang.String)>
Counter value: 1
SCC 2331 : 1
<java.util.stream.Streams$ConcatSpliterator$OfLong: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 2332 : 1
<java.util.stream.ReferencePipeline$11$1: void <init>(java.util.stream.ReferencePipeline$11,java.util.stream.Sink)>
Counter value: 1
SCC 2333 : 1
<sun.misc.InnocuousThread$1: java.lang.Thread run()>
Counter value: 1
SCC 2334 : 1
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 2335 : 1
<java.util.concurrent.ConcurrentSkipListMap$ValueSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 2336 : 1
<sun.misc.ProxyGenerator$PrimitiveTypeInfo: void add(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 2337 : 1
<java.util.concurrent.TimeUnit$2: long toDays(long)>
Counter value: 1
SCC 2338 : 1
<java.util.IdentityHashMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 2339 : 1
<sun.net.sdp.SdpProvider$PortRangeRule: sun.net.sdp.SdpProvider$Action action()>
Counter value: 1
SCC 2340 : 1
<sun.security.x509.PrivateKeyUsageExtension: void encodeThis()>
Counter value: 1
SCC 2341 : 1
<java.util.stream.FindOps$FindSink$OfLong: java.util.OptionalLong get()>
Counter value: 1
SCC 2342 : 1
<java.time.ZonedDateTime: java.time.chrono.ChronoZonedDateTime withZoneSameLocal(java.time.ZoneId)>
Counter value: 1
SCC 2343 : 1
<sun.net.www.protocol.http.HttpURLConnection$lambda_getNetProperty_0__33: void <init>(java.lang.String)>
Counter value: 1
SCC 2344 : 1
<sun.misc.ProxyGenerator: java.util.List access$1100(java.lang.Class[])>
Counter value: 1
SCC 2345 : 1
<java.util.HashMap$Values: java.util.Spliterator spliterator()>
Counter value: 1
SCC 2346 : 1
<java.util.stream.ReferencePipeline$9$1$accept__73: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 2347 : 1
<java.util.stream.ReferencePipeline$Head: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 2348 : 1
<sun.security.util.MemoryCache: sun.security.util.MemoryCache$CacheEntry newEntry(java.lang.Object,java.lang.Object,long,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 2349 : 1
<java.time.temporal.IsoFields$Field$4: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal,long)>
Counter value: 1
SCC 2350 : 1
<java.util.IdentityHashMap: void clear()>
Counter value: 1
SCC 2351 : 1
<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo getHttpProxyAuthentication(sun.net.www.protocol.http.AuthenticationHeader)>
Counter value: 1
SCC 2352 : 1
<sun.util.resources.ParallelListResourceBundle$KeySet: java.util.Set access$100(sun.util.resources.ParallelListResourceBundle$KeySet)>
Counter value: 1
SCC 2353 : 1
<sun.nio.cs.FastCharsetProvider$1: java.lang.Object next()>
Counter value: 1
SCC 2354 : 1
<sun.security.provider.certpath.X509CertPath: void <init>(java.util.List)>
Counter value: 1
SCC 2355 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate addMonth(int)>
Counter value: 1
SCC 2356 : 1
<java.lang.invoke.MethodHandle: boolean isVarargsCollector()>
Counter value: 1
SCC 2357 : 1
<sun.security.provider.NativePRNG$RandomIO: void <init>(java.io.File,java.io.File)>
Counter value: 1
SCC 2358 : 1
<java.util.Hashtable: java.lang.Object clone()>
Counter value: 1
SCC 2359 : 1
<java.security.spec.PSSParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,int,int)>
Counter value: 1
SCC 2360 : 1
<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>
Counter value: 1
SCC 2361 : 1
<sun.nio.cs.StreamDecoder: sun.nio.cs.StreamDecoder forDecoder(java.nio.channels.ReadableByteChannel,java.nio.charset.CharsetDecoder,int)>
Counter value: 1
SCC 2362 : 1
<java.lang.invoke.SecurityFrameInjector: boolean isCallerSensitive(java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 2363 : 1
<sun.security.rsa.PSSParameters: void engineInit(byte[])>
Counter value: 1
SCC 2364 : 1
<java.time.LocalTime: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 2365 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: java.util.Spliterator$OfDouble trySplit()>
Counter value: 1
SCC 2366 : 1
<sun.nio.ch.ServerSocketAdaptor: int getLocalPort()>
Counter value: 1
SCC 2367 : 1
<sun.util.PreHashedMap$1$1: java.lang.Object next()>
Counter value: 1
SCC 2368 : 1
<sun.reflect.MethodAccessorGenerator: sun.reflect.MagicAccessorImpl generate(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class,java.lang.Class[],int,boolean,boolean,java.lang.Class)>
Counter value: 1
SCC 2369 : 1
<sun.nio.ch.SocketAdaptor$SocketInputStream: int read(java.nio.ByteBuffer)>
Counter value: 1
SCC 2370 : 1
<java.time.Year: java.time.Year plusYears(long)>
Counter value: 1
SCC 2371 : 1
<java.util.concurrent.ForkJoinPool: int helpComplete(java.util.concurrent.ForkJoinPool$WorkQueue,java.util.concurrent.CountedCompleter,int)>
Counter value: 1
SCC 2372 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: java.util.stream.Node build()>
Counter value: 1
SCC 2373 : 1
<java.util.Collections$UnmodifiableCollection: boolean containsAll(java.util.Collection)>
Counter value: 2
SCC 2374 : 1
<java.time.chrono.MinguoDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 2375 : 1
<java.time.ZonedDateTime: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 2376 : 1
<java.util.stream.ReferencePipeline$9$1$accept__73: java.util.function.DoubleConsumer bootstrap$(java.util.stream.Sink)>
Counter value: 1
SCC 2377 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator: java.util.Comparator getComparator()>
Counter value: 2
SCC 2378 : 1
<java.nio.Bits: char swap(char)>
Counter value: 1
SCC 2379 : 1
<java.nio.DirectCharBufferRU: java.nio.ByteOrder order()>
Counter value: 1
SCC 2380 : 1
<java.io.ObjectInputStream$PeekInputStream: void close()>
Counter value: 2
SCC 2381 : 1
<java.util.stream.Streams$RangeLongSpliterator: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 2382 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: boolean equals(java.lang.Object)>
Counter value: 1
SCC 2383 : 1
<sun.nio.ch.IOStatus: boolean check(int)>
Counter value: 1
SCC 2384 : 1
<java.util.stream.MatchOps$BooleanTerminalSink: boolean cancellationRequested()>
Counter value: 1
SCC 2385 : 1
<java.lang.reflect.Parameter: void <init>(java.lang.String,int,java.lang.reflect.Executable,int)>
Counter value: 1
SCC 2386 : 1
<java.time.YearMonth: java.time.YearMonth 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 2387 : 1
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext,java.security.Permission[])>
Counter value: 1
SCC 2388 : 1
<java.nio.Bits: char makeChar(byte,byte)>
Counter value: 1
SCC 2389 : 1
<sun.net.www.protocol.http.DigestAuthentication: void <init>(boolean,java.lang.String,int,java.lang.String,java.lang.String,java.net.PasswordAuthentication,sun.net.www.protocol.http.DigestAuthentication$Parameters)>
Counter value: 1
SCC 2390 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator: void <init>(java.util.concurrent.ConcurrentSkipListMap$SubMap)>
Counter value: 1
SCC 2391 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble: void <init>(java.util.Spliterator$OfDouble,long,long,long,long)>
Counter value: 1
SCC 2392 : 1
<sun.net.www.MeteredStream: boolean markSupported()>
Counter value: 1
SCC 2393 : 1
<java.util.HashMap$ValueSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 2394 : 1
<sun.security.x509.X509CRLImpl: java.lang.String toStringWithAlgName(java.lang.String)>
Counter value: 1
SCC 2395 : 1
<java.text.MessageFormat: int hashCode()>
Counter value: 1
SCC 2396 : 1
<java.util.Calendar: int compareTo(java.util.Calendar)>
Counter value: 1
SCC 2397 : 1
<java.nio.ByteBuffer: boolean equals(byte,byte)>
Counter value: 1
SCC 2398 : 1
<java.time.Month: java.time.Month plus(long)>
Counter value: 1
SCC 2399 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToIntTask: void compute()>
Counter value: 1
SCC 2400 : 1
<java.util.stream.SpinedBuffer$OfLong: void <init>()>
Counter value: 1
SCC 2401 : 1
<sun.net.www.http.HttpCaptureOutputStream: void write(byte[])>
Counter value: 2
SCC 2402 : 1
<java.time.ZonedDateTime: java.time.chrono.ChronoLocalDateTime toLocalDateTime()>
Counter value: 1
SCC 2403 : 1
<java.lang.ref.Reference: void dequeue()>
Counter value: 1
SCC 2404 : 1
<java.util.stream.MatchOps$MatchKind: boolean access$100(java.util.stream.MatchOps$MatchKind)>
Counter value: 1
SCC 2405 : 1
<java.nio.LongBuffer: boolean equals(long,long)>
Counter value: 1
SCC 2406 : 1
<java.nio.channels.spi.AbstractSelectableChannel: void <clinit>()>
Counter value: 1
SCC 2407 : 1
<java.util.SubList: java.lang.Object get(int)>
Counter value: 2
SCC 2408 : 1
<java.util.concurrent.TimeUnit$4: int excessNanos(long,long)>
Counter value: 1
SCC 2409 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: boolean isEmpty()>
Counter value: 1
SCC 2410 : 1
<java.util.Scanner: java.lang.String toString()>
Counter value: 1
SCC 2411 : 1
<java.util.stream.DoublePipeline: void forEach(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 2412 : 1
<java.util.stream.AbstractPipeline: void <init>(java.util.Spliterator,int,boolean)>
Counter value: 1
SCC 2413 : 1
<sun.misc.ProxyGenerator$ConstantPool: short getClass(java.lang.String)>
Counter value: 1
SCC 2414 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.invoke.WrongMethodTypeException throwNewWMTE(java.lang.IllegalArgumentException)>
Counter value: 1
SCC 2415 : 1
<java.util.stream.ReferencePipeline$10$1: void accept(java.lang.Object)>
Counter value: 1
SCC 2416 : 1
<sun.security.x509.DNSName: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 2417 : 1
<sun.net.www.MessageHeader: java.util.Iterator multiValueIterator(java.lang.String)>
Counter value: 1
SCC 2418 : 1
<sun.reflect.UnsafeLongFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 2419 : 1
<java.util.Collections$SetFromMap: boolean isEmpty()>
Counter value: 1
SCC 2420 : 1
<java.util.WeakHashMap$ValueSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 2421 : 1
<java.nio.DirectIntBufferS: long address()>
Counter value: 1
SCC 2422 : 1
<java.util.concurrent.ThreadLocalRandom$RandomIntsSpliterator: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 2423 : 1
<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>
Counter value: 1
SCC 2424 : 1
<sun.misc.ProxyGenerator$ProxyMethod: void codeWrapArgument(java.lang.Class,int,java.io.DataOutputStream)>
Counter value: 1
SCC 2425 : 1
<java.util.stream.FindOps$FindTask: void <init>(java.util.stream.FindOps$FindTask,java.util.Spliterator)>
Counter value: 1
SCC 2426 : 1
<java.util.BitSet: java.lang.Object clone()>
Counter value: 2
SCC 2427 : 1
<java.nio.DirectDoubleBufferU: long address()>
Counter value: 1
SCC 2428 : 1
<java.util.stream.Nodes$FixedNodeBuilder: void end()>
Counter value: 1
SCC 2429 : 1
<javax.crypto.spec.PBEParameterSpec: int getIterationCount()>
Counter value: 1
SCC 2430 : 1
<java.util.EnumMap$EntryIterator: void remove()>
Counter value: 1
SCC 2431 : 1
<sun.reflect.UnsafeFloatFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 2432 : 1
<sun.nio.fs.UnixPath: boolean isAbsolute()>
Counter value: 1
SCC 2433 : 1
<java.util.concurrent.ForkJoinPool: boolean awaitWork(java.util.concurrent.ForkJoinPool$WorkQueue,int)>
Counter value: 1
SCC 2434 : 1
<java.util.Calendar$1: sun.util.calendar.ZoneInfo run()>
Counter value: 1
SCC 2435 : 1
<javax.crypto.PermissionsEnumerator: boolean hasMoreElements()>
Counter value: 2
SCC 2436 : 1
<java.util.DualPivotQuicksort: void doSort(double[],int,int,double[],int,int)>
Counter value: 1
SCC 2437 : 1
<java.time.chrono.JapaneseDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 2438 : 1
<java.nio.LongBuffer: int compareTo(java.nio.LongBuffer)>
Counter value: 1
SCC 2439 : 1
<java.nio.file.FileTreeWalker$DirectoryNode: void <init>(java.nio.file.Path,java.lang.Object,java.nio.file.DirectoryStream)>
Counter value: 1
SCC 2440 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive: void forEachRemaining(java.lang.Object)>
Counter value: 2
SCC 2441 : 1
<sun.net.www.protocol.http.Handler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>
Counter value: 1
SCC 2442 : 1
<java.util.stream.ReferencePipeline$2$1: void begin(long)>
Counter value: 2
SCC 2443 : 1
<java.util.stream.ForEachOps$ForEachOp$OfInt: void accept(int)>
Counter value: 2
SCC 2444 : 1
<java.util.Random$RandomLongsSpliterator: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 2445 : 1
<java.util.concurrent.Executors$PrivilegedCallable: java.util.concurrent.Callable access$000(java.util.concurrent.Executors$PrivilegedCallable)>
Counter value: 1
SCC 2446 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 2447 : 1
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 2448 : 1
<java.nio.file.spi.FileSystemProvider: java.util.List loadInstalledProviders()>
Counter value: 1
SCC 2449 : 1
<jdk.internal.util.xml.impl.ReaderUTF8: void close()>
Counter value: 1
SCC 2450 : 1
<sun.security.provider.NativePRNG$RandomIO$1: java.lang.Object run()>
Counter value: 1
SCC 2451 : 1
<java.util.AbstractMap: java.util.Set keySet()>
Counter value: 1
SCC 2452 : 1
<java.nio.channels.Channels$ReadableByteChannelImpl: void implCloseChannel()>
Counter value: 1
SCC 2453 : 1
<java.nio.Bits: int getIntB(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 2454 : 1
<java.util.stream.DoublePipeline$3: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 2455 : 1
<sun.misc.ProxyGenerator: void access$1000(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>
Counter value: 1
SCC 2456 : 1
<java.util.stream.SpinedBuffer$OfInt: java.lang.String toString()>
Counter value: 1
SCC 2457 : 1
<java.util.EnumMap: void typeCheck(java.lang.Enum)>
Counter value: 1
SCC 2458 : 1
<java.lang.Double: long longValue()>
Counter value: 1
SCC 2459 : 1
<java.security.Policy$UnsupportedEmptyCollection: boolean implies(java.security.Permission)>
Counter value: 1
SCC 2460 : 1
<java.util.stream.ReduceOps$1ReducingSink: void <init>(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)>
Counter value: 1
SCC 2461 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: java.util.concurrent.ForkJoinTask pop()>
Counter value: 1
SCC 2462 : 1
<sun.nio.ch.SinkChannelImpl: int write(java.nio.ByteBuffer)>
Counter value: 1
SCC 2463 : 1
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 2464 : 1
<java.nio.DirectCharBufferRS: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 2465 : 1
<java.util.Spliterators: java.util.Spliterator$OfLong emptyLongSpliterator()>
Counter value: 1
SCC 2466 : 1
<java.nio.DirectCharBufferS: void <init>(sun.nio.ch.DirectBuffer,int,int,int,int,int)>
Counter value: 1
SCC 2467 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive bufferCreate(int)>
Counter value: 1
SCC 2468 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 2469 : 1
<java.nio.DirectCharBufferS: void <clinit>()>
Counter value: 1
SCC 2470 : 1
<java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>
Counter value: 1
SCC 2471 : 1
<java.nio.Bits: void putCharB(java.nio.ByteBuffer,int,char)>
Counter value: 1
SCC 2472 : 1
<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>
Counter value: 1
SCC 2473 : 1
<java.util.stream.Nodes$InternalNodeSpliterator: java.util.stream.Node findNextLeafNode(java.util.Deque)>
Counter value: 1
SCC 2474 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.ListIterator listIterator(int)>
Counter value: 1
SCC 2475 : 1
<java.time.chrono.MinguoDate: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 2476 : 1
<java.util.stream.ReduceOps$1ReducingSink: void begin(long)>
Counter value: 1
SCC 2477 : 1
<sun.net.www.protocol.http.DigestAuthentication: java.lang.String getHeaderValue(java.lang.String,java.lang.String)>
Counter value: 1
SCC 2478 : 1
<java.util.Collections$CheckedCollection: java.lang.String badElementMsg(java.lang.Object)>
Counter value: 1
SCC 2479 : 1
<sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
Counter value: 1
SCC 2480 : 1
<java.util.stream.ReferencePipeline$10$1: void <init>(java.util.stream.ReferencePipeline$10,java.util.stream.Sink)>
Counter value: 1
SCC 2481 : 1
<java.io.ObjectInputStream$HandleTable: void markDependency(int,int)>
Counter value: 1
SCC 2482 : 1
<java.lang.invoke.ThunkKeyWithObject: void <init>(java.lang.invoke.MethodType,java.lang.Object)>
Counter value: 1
SCC 2483 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: java.util.Spliterator$OfLong makeSpliterator(java.util.Spliterator$OfLong)>
Counter value: 1
SCC 2484 : 1
<java.net.NetworkInterface: byte[] getHardwareAddress()>
Counter value: 1
SCC 2485 : 1
<java.util.IdentityHashMap$EntrySet: int size()>
Counter value: 1
SCC 2486 : 1
<java.io.FilterOutputStream: void write(byte[],int,int)>
Counter value: 1
SCC 2487 : 1
<java.lang.reflect.Parameter: int hashCode()>
Counter value: 1
SCC 2488 : 1
<java.util.stream.Sink$ChainedDouble: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 2489 : 1
<java.util.Spliterator$OfPrimitive: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 2490 : 1
<sun.net.www.protocol.http.HttpURLConnection: boolean checkReuseConnection()>
Counter value: 1
SCC 2491 : 1
<java.lang.reflect.Method: java.lang.Class getReturnType()>
Counter value: 1
SCC 2492 : 1
<java.util.stream.Streams$ConcatSpliterator$OfPrimitive: boolean tryAdvance(java.lang.Object)>
Counter value: 2
SCC 2493 : 1
<java.io.ClassByNameCache$CreateReaperAction: void <init>(java.io.ClassByNameCache,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 2494 : 1
<java.time.MonthDay: java.time.MonthDay of(int,int)>
Counter value: 1
SCC 2495 : 1
<java.time.chrono.HijrahDate: void <init>(java.time.chrono.HijrahChronology,long)>
Counter value: 1
SCC 2496 : 1
<java.time.ZoneId$1: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 2497 : 1
<java.util.JapaneseImperialCalendar: int actualMonthLength()>
Counter value: 1
SCC 2498 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: void copyInto(java.lang.Object,int)>
Counter value: 1
SCC 2499 : 1
<java.lang.reflect.Field: java.lang.Class getType()>
Counter value: 1
SCC 2500 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef: java.util.Spliterator makeSpliterator(java.util.Spliterator,long,long,long,long)>
Counter value: 1
SCC 2501 : 1
<java.net.HttpConnectSocketImpl$2: void <init>(java.net.HttpConnectSocketImpl,java.lang.String,int)>
Counter value: 1
SCC 2502 : 1
<java.lang.Shutdown: void add(int,boolean,java.lang.Runnable)>
Counter value: 1
SCC 2503 : 1
<java.lang.invoke.InterfaceHandle: void <init>(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>
Counter value: 1
SCC 2504 : 1
<java.lang.Class: java.lang.String getTypeName()>
Counter value: 1
SCC 2505 : 1
<java.nio.DirectCharBufferRS: java.nio.ByteOrder order()>
Counter value: 1
SCC 2506 : 1
<sun.nio.fs.UnixDirectoryStream: boolean closeImpl()>
Counter value: 1
SCC 2507 : 1
<java.nio.DirectFloatBufferS: long ix(int)>
Counter value: 1
SCC 2508 : 1
<java.time.chrono.HijrahChronology: java.lang.String getCalendarType()>
Counter value: 1
SCC 2509 : 1
<sun.misc.Signal: int getNumber()>
Counter value: 1
SCC 2510 : 1
<java.util.concurrent.Executors$PrivilegedThreadFactory$1$1: java.lang.Void run()>
Counter value: 1
SCC 2511 : 1
<java.io.ClassByNameCache$Key: int hashCode()>
Counter value: 1
SCC 2512 : 1
<java.util.stream.ForEachOps$ForEachOp$OfRef: void <init>(java.util.function.Consumer,boolean)>
Counter value: 1
SCC 2513 : 1
<java.util.TreeMap: int access$400(java.util.TreeMap)>
Counter value: 1
SCC 2514 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller$1: java.lang.Object computeValue(java.lang.Class)>
Counter value: 1
SCC 2515 : 1
<java.lang.Float: int compareTo(java.lang.Object)>
Counter value: 1
SCC 2516 : 1
<sun.nio.fs.UnixCopyFile: void access$000(sun.nio.fs.UnixPath,sun.nio.fs.UnixFileAttributes,sun.nio.fs.UnixPath,sun.nio.fs.UnixCopyFile$Flags,long)>
Counter value: 1
SCC 2517 : 1
<sun.reflect.ClassFileAssembler: void opc_invokeinterface(short,int,byte,int)>
Counter value: 1
SCC 2518 : 1
<java.io.ObjectInputStream: short readShort()>
Counter value: 1
SCC 2519 : 1
<java.util.Collections$CheckedMap: java.lang.String badKeyMsg(java.lang.Object)>
Counter value: 1
SCC 2520 : 1
<java.lang.reflect.Constructor: sun.reflect.generics.factory.GenericsFactory getFactory()>
Counter value: 1
SCC 2521 : 1
<java.util.stream.Nodes$EmptyNode$OfLong: java.util.Spliterator$OfLong spliterator()>
Counter value: 1
SCC 2522 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath getFileName()>
Counter value: 1
SCC 2523 : 1
<java.lang.invoke.InnerClassLambdaMetafactory$1: java.lang.Object run()>
Counter value: 1
SCC 2524 : 1
<java.net.HttpCookie$4: void <init>()>
Counter value: 1
SCC 2525 : 1
<java.util.stream.Nodes$CollectorTask$OfInt$intBuilder__88: void <init>()>
Counter value: 1
SCC 2526 : 1
<java.util.stream.ReduceOps$11ReducingSink: void combine(java.util.stream.ReduceOps$11ReducingSink)>
Counter value: 1
SCC 2527 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 2528 : 1
<java.lang.reflect.Constructor: sun.reflect.generics.repository.ConstructorRepository getGenericInfo()>
Counter value: 1
SCC 2529 : 1
<java.util.SubList$1: void <init>(java.util.SubList,int)>
Counter value: 1
SCC 2530 : 1
<java.nio.StringCharBuffer: java.nio.CharBuffer compact()>
Counter value: 1
SCC 2531 : 1
<javax.security.auth.callback.PasswordCallback: void <init>(java.lang.String,boolean)>
Counter value: 1
SCC 2532 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfInt: void <init>(long,java.util.function.IntSupplier)>
Counter value: 1
SCC 2533 : 1
<java.util.concurrent.ThreadLocalRandom$RandomIntsSpliterator: void <init>(long,long,int,int)>
Counter value: 1
SCC 2534 : 1
<java.util.stream.SliceOps$4$1: void begin(long)>
Counter value: 2
SCC 2535 : 1
<java.time.chrono.AbstractChronology: void <init>()>
Counter value: 1
SCC 2536 : 1
<java.util.TreeMap$EntrySpliterator$lambda_getComparator_d5a01062_1__59: void <init>()>
Counter value: 1
SCC 2537 : 1
<sun.misc.ProxyGenerator$ConstantPool: short getString(java.lang.String)>
Counter value: 1
SCC 2538 : 1
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>
Counter value: 1
SCC 2539 : 1
<sun.security.util.DerInputBuffer: sun.security.util.BitArray getUnalignedBitString()>
Counter value: 1
SCC 2540 : 1
<java.io.ObjectInputStream: void <clinit>()>
Counter value: 1
SCC 2541 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath toUnixPath(java.nio.file.Path)>
Counter value: 1
SCC 2542 : 1
<java.lang.invoke.ConstantObjectHandle: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 2543 : 1
<sun.util.calendar.JulianCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>
Counter value: 1
SCC 2544 : 1
<java.util.stream.DoublePipeline$4: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 2545 : 1
<java.lang.invoke.PrimitiveHandle: java.lang.Class getReferenceClass()>
Counter value: 1
SCC 2546 : 1
<java.util.Vector$VectorSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 2547 : 1
<java.util.TreeMap$NavigableSubMap$SubMapIterator: java.util.TreeMap$Entry prevEntry()>
Counter value: 1
SCC 2548 : 1
<java.util.concurrent.ConcurrentSkipListMap$Values: void clear()>
Counter value: 1
SCC 2549 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamClass$FieldReflector getReflector(java.io.ObjectStreamField[],java.io.ObjectStreamClass)>
Counter value: 1
SCC 2550 : 1
<java.nio.DirectLongBufferRU: java.nio.LongBuffer put(int,long)>
Counter value: 1
SCC 2551 : 1
<java.lang.invoke.ThunkKeyWithObject: boolean equalsThunkKeyWithObject(java.lang.invoke.ThunkKeyWithObject)>
Counter value: 1
SCC 2552 : 1
<java.lang.invoke.ConvertHandle: void <init>(java.lang.invoke.ConvertHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 2553 : 1
<java.util.HashMap$KeySet: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 2554 : 1
<java.util.ArrayList$ArrayListSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 2555 : 1
<java.util.concurrent.TimeUnit$4: long toSeconds(long)>
Counter value: 1
SCC 2556 : 1
<sun.reflect.ClassFileAssembler: void opc_aaload()>
Counter value: 1
SCC 2557 : 1
<java.lang.Short: double doubleValue()>
Counter value: 1
SCC 2558 : 1
<java.nio.DirectShortBufferU: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 2559 : 1
<java.util.stream.Nodes$ConcNode$OfLong: void <init>(java.util.stream.Node$OfLong,java.util.stream.Node$OfLong)>
Counter value: 1
SCC 2560 : 1
<java.security.KeyStore$Builder$FileBuilder$1: java.security.KeyStore run()>
Counter value: 1
SCC 2561 : 1
<sun.security.x509.NameConstraintsExtension: java.lang.String getName()>
Counter value: 1
SCC 2562 : 1
<sun.net.www.http.HttpClient: void putInKeepAliveCache()>
Counter value: 1
SCC 2563 : 1
<java.lang.invoke.PassThroughHandle: void <init>(java.lang.invoke.PassThroughHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 2564 : 1
<sun.net.www.http.HttpCapture: void init()>
Counter value: 1
SCC 2565 : 1
<java.util.stream.SliceOps$3: java.util.stream.Node opEvaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction)>
Counter value: 1
SCC 2566 : 1
<java.nio.ByteBufferAsCharBufferB: char get()>
Counter value: 1
SCC 2567 : 1
<sun.security.x509.PolicyInformation: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 2568 : 1
<java.util.stream.LongPipeline$1$1: void accept(long)>
Counter value: 1
SCC 2569 : 1
<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getProxyAuth(java.lang.String)>
Counter value: 1
SCC 2570 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfLong: java.util.stream.Nodes$SizedCollectorTask makeChild(java.util.Spliterator,long,long)>
Counter value: 1
SCC 2571 : 1
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>
Counter value: 1
SCC 2572 : 1
<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 2573 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 2574 : 1
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 2575 : 1
<java.util.Spliterators$DoubleArraySpliterator: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 2576 : 1
<java.util.stream.SpinedBuffer$OfDouble: int arrayLength(java.lang.Object)>
Counter value: 1
SCC 2577 : 1
<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>
Counter value: 1
SCC 2578 : 1
<java.lang.invoke.MethodHandleInfoImpl: boolean isMethod()>
Counter value: 1
SCC 2579 : 1
<java.util.concurrent.LinkedBlockingDeque$DescendingItr: java.util.concurrent.LinkedBlockingDeque$Node nextNode(java.util.concurrent.LinkedBlockingDeque$Node)>
Counter value: 1
SCC 2580 : 1
<java.util.concurrent.ConcurrentSkipListMap$ValueSpliterator: void <init>(java.util.Comparator,java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Node,java.lang.Object,int)>
Counter value: 1
SCC 2581 : 1
<java.util.stream.SliceOps: java.util.Spliterator sliceSpliterator(java.util.stream.StreamShape,java.util.Spliterator,long,long)>
Counter value: 1
SCC 2582 : 1
<java.util.stream.ReduceOps$5ReducingSink: void combine(java.util.stream.ReduceOps$5ReducingSink)>
Counter value: 1
SCC 2583 : 1
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinPool access$000()>
Counter value: 1
SCC 2584 : 1
<sun.misc.ProxyGenerator: void checkReturnTypes(java.util.List)>
Counter value: 1
SCC 2585 : 1
<sun.nio.ch.SourceChannelImpl: void ensureOpen()>
Counter value: 1
SCC 2586 : 1
<java.nio.CharBuffer: char charAt(int)>
Counter value: 1
SCC 2587 : 1
<java.net.InetSocketAddress: java.lang.String getHostName()>
Counter value: 1
SCC 2588 : 1
<sun.net.www.protocol.http.AuthenticationInfo: void endAuthRequest(java.lang.String)>
Counter value: 1
SCC 2589 : 1
<sun.nio.ch.KQueueSelectorImpl: java.nio.channels.Selector wakeup()>
Counter value: 1
SCC 2590 : 1
<sun.nio.cs.FastCharsetProvider: java.util.Iterator charsets()>
Counter value: 1
SCC 2591 : 1
<sun.net.www.http.ChunkedOutputStream: boolean checkError()>
Counter value: 2
SCC 2592 : 1
<sun.net.www.protocol.http.EmptyInputStream: int read()>
Counter value: 1
SCC 2593 : 1
<java.util.RegularEnumSet: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 2594 : 1
<java.net.Socket: boolean isInputShutdown()>
Counter value: 1
SCC 2595 : 1
<sun.nio.ch.Invoker$GroupAndInvokeCount: void setInvokeCount(int)>
Counter value: 1
SCC 2596 : 1
<sun.util.PreHashedMap$2$1$1: java.lang.String getKey()>
Counter value: 1
SCC 2597 : 1
<java.util.concurrent.ConcurrentSkipListSet: int size()>
Counter value: 1
SCC 2598 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$BreakIteratorProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 2599 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator: int characteristics()>
Counter value: 1
SCC 2600 : 1
<java.nio.DirectCharBufferU: char get()>
Counter value: 1
SCC 2601 : 1
<java.util.stream.ReferencePipeline$8$1$accept__72: java.util.function.IntConsumer bootstrap$(java.util.stream.Sink)>
Counter value: 1
SCC 2602 : 1
<java.nio.file.FileTreeIterator: boolean hasNext()>
Counter value: 1
SCC 2603 : 1
<java.util.stream.AbstractSpinedBuffer: void <init>(int)>
Counter value: 1
SCC 2604 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class[],boolean)>
Counter value: 1
SCC 2605 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToDoubleTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 2606 : 1
<java.net.SocksSocketImpl$2: void <init>(java.net.SocksSocketImpl,java.net.InetAddress)>
Counter value: 1
SCC 2607 : 1
<sun.util.PreHashedMap$1$1: void remove()>
Counter value: 1
SCC 2608 : 1
<java.io.SerialCallbackContext: void check()>
Counter value: 1
SCC 2609 : 1
<java.nio.file.FileTreeIterator: void close()>
Counter value: 1
SCC 2610 : 1
<java.io.ObjectStreamClass$2: java.lang.Object run()>
Counter value: 1
SCC 2611 : 1
<java.lang.invoke.ThunkTable$Properties$1: java.lang.Object run()>
Counter value: 1
SCC 2612 : 1
<java.lang.invoke.SecurityFrameInjector$1: void <init>()>
Counter value: 1
SCC 2613 : 1
<sun.reflect.'annotation'.AnnotationParser$1: java.lang.Object run()>
Counter value: 1
SCC 2614 : 1
<java.lang.ClassLoader: boolean getClassAssertionStatus(java.lang.String)>
Counter value: 1
SCC 2615 : 1
<java.util.concurrent.LinkedBlockingQueue: boolean offer(java.lang.Object)>
Counter value: 1
SCC 2616 : 1
<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.invoke.LambdaForm$NamedFunction)>
Counter value: 1
SCC 2617 : 1
<sun.nio.ch.Util$3: java.lang.String toString()>
Counter value: 2
SCC 2618 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: java.util.Spliterator makeSpliterator(java.util.Spliterator)>
Counter value: 1
SCC 2619 : 1
<java.lang.invoke.MethodType$InternTableAddLock: void <init>()>
Counter value: 1
SCC 2620 : 1
<java.util.stream.Nodes$DoubleArrayNode: void <init>(long)>
Counter value: 1
SCC 2621 : 1
<java.util.ArraysParallelSortHelpers$FJFloat$Sorter: void compute()>
Counter value: 1
SCC 2622 : 1
<java.util.stream.ReduceOps$ReduceOp: java.lang.Object evaluateSequential(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 2623 : 1
<java.util.concurrent.CountedCompleter: void onCompletion(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 2624 : 1
<java.net.Inet6Address: boolean isAnyLocalAddress()>
Counter value: 1
SCC 2625 : 1
<javax.security.auth.Subject$SecureSet: boolean add(java.lang.Object)>
Counter value: 1
SCC 2626 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller: void <clinit>()>
Counter value: 1
SCC 2627 : 1
<java.time.temporal.ChronoUnit: boolean isDateBased()>
Counter value: 1
SCC 2628 : 1
<java.util.zip.ZipUtils: long extendedDosToJavaTime(long)>
Counter value: 1
SCC 2629 : 1
<java.nio.ByteBufferAsCharBufferL: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 2630 : 1
<java.util.stream.SpinedBuffer: void inflateSpine()>
Counter value: 1
SCC 2631 : 1
<java.util.stream.SortedOps$IntSortingSink: void begin(long)>
Counter value: 1
SCC 2632 : 1
<java.net.InetAddress: java.net.InetAddress anyLocalAddress()>
Counter value: 1
SCC 2633 : 1
<java.net.NetworkInterface$1subIFs: java.lang.Object nextElement()>
Counter value: 1
SCC 2634 : 1
<java.time.OffsetDateTime: void <clinit>()>
Counter value: 1
SCC 2635 : 1
<java.time.chrono.JapaneseChronology: int prolepticYear(java.time.chrono.Era,int)>
Counter value: 1
SCC 2636 : 1
<java.util.stream.MatchOps$MatchTask: java.lang.Boolean doLeaf()>
Counter value: 1
SCC 2637 : 1
<java.util.stream.ReferencePipeline$8$1: void begin(long)>
Counter value: 2
SCC 2638 : 1
<java.util.zip.InflaterInputStream: void reset()>
Counter value: 1
SCC 2639 : 1
<java.util.IdentityHashMap$ValueSpliterator: int characteristics()>
Counter value: 1
SCC 2640 : 1
<sun.nio.ch.DefaultAsynchronousChannelProvider: java.nio.channels.spi.AsynchronousChannelProvider createProvider(java.lang.String)>
Counter value: 1
SCC 2641 : 1
<java.util.Spliterators$AbstractSpliterator$HoldingConsumer: void accept(java.lang.Object)>
Counter value: 1
SCC 2642 : 1
<java.io.OptionalDataException: void <init>(boolean)>
Counter value: 1
SCC 2643 : 1
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 2644 : 1
<java.util.stream.LongPipeline$6$1: void accept(long)>
Counter value: 1
SCC 2645 : 1
<java.util.BitSet: int nextSetBit(int)>
Counter value: 1
SCC 2646 : 1
<java.time.chrono.JapaneseChronology: java.lang.String getCalendarType()>
Counter value: 1
SCC 2647 : 1
<java.time.temporal.IsoFields$Field$1: long getFrom(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 2648 : 1
<java.util.stream.SortedOps$SizedLongSortingSink: void end()>
Counter value: 2
SCC 2649 : 1
<sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.String,java.lang.String)>
Counter value: 1
SCC 2650 : 1
<java.lang.invoke.Insert1IntHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 2651 : 1
<java.util.stream.SliceOps$2: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 2652 : 1
<java.util.concurrent.LinkedBlockingDeque$AbstractItr: java.util.concurrent.LinkedBlockingDeque$Node succ(java.util.concurrent.LinkedBlockingDeque$Node)>
Counter value: 1
SCC 2653 : 1
<java.lang.invoke.MethodHandleImpl$3: java.lang.invoke.LambdaForm apply(java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 2654 : 1
<sun.net.www.protocol.http.DigestAuthentication: java.lang.String encode(java.lang.String,char[],java.security.MessageDigest)>
Counter value: 1
SCC 2655 : 1
<java.util.stream.ReduceOps$5: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 2656 : 1
<java.util.stream.Streams$RangeIntSpliterator: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 2657 : 1
<sun.net.www.ParseUtil: void appendEncoded(java.lang.StringBuffer,char)>
Counter value: 1
SCC 2658 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator: long estimateSize()>
Counter value: 2
SCC 2659 : 1
<java.util.stream.ReduceOps$8ReducingSink: java.lang.Object get()>
Counter value: 1
SCC 2660 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 2661 : 1
<java.util.Spliterators$IntIteratorSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 2662 : 1
<java.time.YearMonth: java.time.YearMonth 'with'(int,int)>
Counter value: 1
SCC 2663 : 1
<java.util.jar.JarVerifier$3: java.lang.Object nextElement()>
Counter value: 1
SCC 2664 : 1
<java.lang.reflect.Proxy$Key2: void <init>(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 2665 : 1
<java.util.concurrent.CountedCompleter: void <init>(java.util.concurrent.CountedCompleter,int)>
Counter value: 1
SCC 2666 : 1
<java.util.stream.ReduceOps$8ReducingSink: void combine(java.util.stream.ReduceOps$8ReducingSink)>
Counter value: 1
SCC 2667 : 1
<java.util.ArrayList$SubList: boolean addAll(int,java.util.Collection)>
Counter value: 2
SCC 2668 : 1
<java.nio.DirectDoubleBufferU: double get(int)>
Counter value: 1
SCC 2669 : 1
<java.util.ArraysParallelSortHelpers$FJDouble$Merger: void compute()>
Counter value: 1
SCC 2670 : 1
<sun.nio.ch.Util$3: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 2671 : 1
<java.util.IdentityHashMap$EntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 2672 : 1
<java.util.concurrent.ForkJoinPool: boolean tryCompensate(java.util.concurrent.ForkJoinPool$WorkQueue)>
Counter value: 1
SCC 2673 : 1
<java.util.stream.SpinedBuffer$OfInt: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 2674 : 1
<java.util.ArrayDeque$DeqSpliterator: int getFence()>
Counter value: 1
SCC 2675 : 1
<java.lang.invoke.Insert2Handle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 2676 : 1
<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String cacheKey(boolean)>
Counter value: 1
SCC 2677 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatProviderDelegate: void addImpl(java.text.spi.DateFormatProvider)>
Counter value: 1
SCC 2678 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setReadTimeout(int)>
Counter value: 1
SCC 2679 : 1
<java.time.chrono.HijrahChronology$lambda_readConfigProperties_0__79: void <init>(java.lang.String)>
Counter value: 1
SCC 2680 : 1
<java.util.EventObject: java.lang.String toString()>
Counter value: 1
SCC 2681 : 1
<java.net.HttpCookie$11: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 2682 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 2683 : 1
<sun.misc.URLClassPath$2: boolean hasMoreElements()>
Counter value: 1
SCC 2684 : 1
<java.util.Collections$SynchronizedNavigableMap: java.util.Set keySet()>
Counter value: 1
SCC 2685 : 1
<java.util.Spliterators$2Adapter: void accept(int)>
Counter value: 1
SCC 2686 : 1
<java.util.stream.FindOps$FindOp: void <init>(boolean,java.util.stream.StreamShape,java.lang.Object,java.util.function.Predicate,java.util.function.Supplier)>
Counter value: 1
SCC 2687 : 1
<java.time.zone.Ser: java.lang.Object read(java.io.DataInput)>
Counter value: 1
SCC 2688 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToLongTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToLongTask,java.util.function.ToLongBiFunction,long,java.util.function.LongBinaryOperator)>
Counter value: 1
SCC 2689 : 1
<java.lang.invoke.IndirectHandle: void <init>(java.lang.invoke.MethodType,java.lang.Class,java.lang.String,byte,int)>
Counter value: 1
SCC 2690 : 1
<java.time.chrono.HijrahDate: java.lang.String toString()>
Counter value: 1
SCC 2691 : 1
<sun.net.www.protocol.http.AuthCacheImpl: void <init>()>
Counter value: 1
SCC 2692 : 1
<java.util.HashSet: java.lang.Object clone()>
Counter value: 1
SCC 2693 : 1
<java.nio.channels.AsynchronousCloseException: void <init>()>
Counter value: 1
SCC 2694 : 1
<java.util.concurrent.ForkJoinTask: void expungeStaleExceptions()>
Counter value: 1
SCC 2695 : 1
<java.net.URI: int compareTo(java.net.URI)>
Counter value: 1
SCC 2696 : 1
<java.util.stream.LongPipeline$StatelessOp: boolean opIsStateful()>
Counter value: 1
SCC 2697 : 1
<sun.nio.fs.UnixDirectoryStream: java.nio.file.DirectoryStream$Filter access$200(sun.nio.fs.UnixDirectoryStream)>
Counter value: 1
SCC 2698 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfLong: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 2699 : 1
<sun.reflect.MethodAccessorImpl: void <init>()>
Counter value: 1
SCC 2700 : 1
<sun.security.util.ResourcesMgr$2: java.util.ResourceBundle run()>
Counter value: 1
SCC 2701 : 1
<java.io.ObjectInputStream$BlockDataInputStream: int peek()>
Counter value: 1
SCC 2702 : 1
<java.nio.ByteBufferAsShortBufferL: short get(int)>
Counter value: 1
SCC 2703 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator$accept__53: java.util.stream.Sink$OfDouble bootstrap$(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 2704 : 1
<java.util.stream.ReferencePipeline: java.util.Spliterator wrap(java.util.stream.PipelineHelper,java.util.function.Supplier,boolean)>
Counter value: 1
SCC 2705 : 1
<java.util.Currency: java.lang.String toString()>
Counter value: 1
SCC 2706 : 1
<sun.nio.ch.Net: java.net.InetSocketAddress getLoopbackAddress(int)>
Counter value: 1
SCC 2707 : 1
<java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>
Counter value: 1
SCC 2708 : 1
<sun.nio.ch.Util$4: java.lang.Object run()>
Counter value: 1
SCC 2709 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToIntTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 2710 : 1
<java.lang.ClassValue$Entry: java.lang.ClassValue$Entry refreshVersion(java.lang.ClassValue$Version)>
Counter value: 1
SCC 2711 : 1
<java.util.Collections$CheckedNavigableMap: java.util.NavigableSet navigableKeySet()>
Counter value: 2
SCC 2712 : 1
<java.net.HttpCookie: void setComment(java.lang.String)>
Counter value: 1
SCC 2713 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean add(java.lang.Object)>
Counter value: 1
SCC 2714 : 1
<sun.security.x509.CertificatePolicyMap: java.lang.String toString()>
Counter value: 1
SCC 2715 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean remove(java.lang.Object)>
Counter value: 1
SCC 2716 : 1
<sun.reflect.ClassFileAssembler: void emitConstantPoolInterfaceMethodref(short,short)>
Counter value: 1
SCC 2717 : 1
<java.time.Duration: java.lang.String toString()>
Counter value: 1
SCC 2718 : 1
<sun.misc.ProxyGenerator: void codeClassForName(java.lang.Class,java.io.DataOutputStream)>
Counter value: 1
SCC 2719 : 1
<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getHost()>
Counter value: 1
SCC 2720 : 1
<java.io.Console: boolean access$400(boolean)>
Counter value: 1
SCC 2721 : 1
<sun.net.www.ParseUtil: void appendEscape(java.lang.StringBuffer,byte)>
Counter value: 1
SCC 2722 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 2723 : 1
<java.util.Collections$AsLIFOQueue: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 2724 : 1
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 2725 : 1
<sun.nio.fs.UnixNativeDispatcher$1: java.lang.Void run()>
Counter value: 1
SCC 2726 : 1
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 2727 : 1
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
Counter value: 2
SCC 2728 : 1
<sun.reflect.UnsafeObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 2729 : 1
<java.util.stream.SpinedBuffer$OfLong: long[] newArray(int)>
Counter value: 1
SCC 2730 : 1
<java.io.ClassByNameCache$FutureValue: void <init>(java.io.ClassByNameCache$CacheKey,java.io.ClassByNameCache)>
Counter value: 1
SCC 2731 : 1
<sun.net.www.http.HttpClient: boolean isInKeepAliveCache()>
Counter value: 1
SCC 2732 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 2733 : 1
<java.nio.Bits: long getLongB(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 2734 : 1
<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.String toString()>
Counter value: 1
SCC 2735 : 1
<java.lang.invoke.MethodHandles$Lookup: boolean isWeakenedLookup()>
Counter value: 1
SCC 2736 : 1
<java.util.IdentityHashMap$EntrySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 2737 : 1
<sun.net.www.http.HttpClient: void <clinit>()>
Counter value: 1
SCC 2738 : 1
<java.util.regex.Pattern$CharPropertyNames$CloneableProperty: java.lang.Object clone()>
Counter value: 1
SCC 2739 : 1
<java.lang.invoke.ConstantObjectHandle: void <init>(java.lang.invoke.ConstantObjectHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 2740 : 1
<sun.nio.ch.SocketChannelImpl: void ensureWriteOpen()>
Counter value: 1
SCC 2741 : 1
<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>
Counter value: 1
SCC 2742 : 1
<sun.util.logging.PlatformLogger: void warning(java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 2743 : 1
<java.util.stream.Nodes$LongArrayNode: void copyInto(java.lang.Object,int)>
Counter value: 1
SCC 2744 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
Counter value: 1
SCC 2745 : 1
<java.net.URI: void split(char[],int[])>
Counter value: 1
SCC 2746 : 1
<sun.nio.ch.OptionKey: int name()>
Counter value: 1
SCC 2747 : 1
<java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
Counter value: 1
SCC 2748 : 1
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
Counter value: 1
SCC 2749 : 1
<java.lang.invoke.CollectHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 2750 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: boolean equals(java.lang.Object)>
Counter value: 2
SCC 2751 : 1
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 2752 : 1
<java.lang.reflect.Modifier: boolean isSynthetic(int)>
Counter value: 1
SCC 2753 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfRef: void <init>(long,java.util.function.Supplier)>
Counter value: 1
SCC 2754 : 1
<java.util.Collections$CheckedList$1: void add(java.lang.Object)>
Counter value: 2
SCC 2755 : 1
<sun.security.x509.CertificatePoliciesExtension: java.lang.String getName()>
Counter value: 1
SCC 2756 : 1
<sun.nio.fs.UnixFileAttributes: boolean isSymbolicLink()>
Counter value: 1
SCC 2757 : 1
<sun.nio.ch.FileDispatcherImpl: void close(java.io.FileDescriptor)>
Counter value: 1
SCC 2758 : 1
<java.lang.ClassValue$Entry: void assertNotPromise()>
Counter value: 1
SCC 2759 : 1
<sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator: sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator access$000()>
Counter value: 1
SCC 2760 : 1
<java.nio.DirectDoubleBufferS: double get(int)>
Counter value: 1
SCC 2761 : 1
<java.lang.invoke.BruteArgumentMoverHandle: int[] insertPermute(int[],int,int,int)>
Counter value: 1
SCC 2762 : 1
<java.nio.channels.spi.AbstractSelector: void deregister(java.nio.channels.spi.AbstractSelectionKey)>
Counter value: 1
SCC 2763 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 2764 : 1
<java.util.LinkedHashMap: void reinitialize()>
Counter value: 1
SCC 2765 : 1
<java.lang.invoke.PrimitiveHandle: java.lang.invoke.MethodHandle asVarargsCollector(java.lang.Class)>
Counter value: 1
SCC 2766 : 1
<java.nio.channels.spi.AbstractSelector: void close()>
Counter value: 1
SCC 2767 : 1
<sun.net.www.protocol.http.HttpURLConnection: void connect()>
Counter value: 1
SCC 2768 : 1
<java.util.stream.ReduceOps$12ReducingSink: void combine(java.util.stream.ReduceOps$12ReducingSink)>
Counter value: 1
SCC 2769 : 1
<java.net.PasswordAuthentication: java.lang.String getUserName()>
Counter value: 1
SCC 2770 : 1
<java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder$1: void <init>()>
Counter value: 1
SCC 2771 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfInt: void accept(int)>
Counter value: 1
SCC 2772 : 1
<java.util.ArrayDeque: java.util.Spliterator spliterator()>
Counter value: 1
SCC 2773 : 1
<java.util.concurrent.LinkedBlockingDeque: void addLast(java.lang.Object)>
Counter value: 1
SCC 2774 : 1
<javax.security.auth.Policy$1: void <init>()>
Counter value: 1
SCC 2775 : 1
<java.util.Random$RandomLongsSpliterator: void <init>(java.util.Random,long,long,long,long)>
Counter value: 1
SCC 2776 : 1
<java.time.chrono.JapaneseDate: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 2777 : 1
<java.util.ArraysParallelSortHelpers$FJShort$Merger: void <init>(java.util.concurrent.CountedCompleter,short[],short[],int,int,int,int,int,int)>
Counter value: 1
SCC 2778 : 1
<java.nio.channels.spi.SelectorProvider: boolean loadProviderAsService()>
Counter value: 1
SCC 2779 : 1
<java.util.stream.LongPipeline$7: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 2780 : 1
<java.util.stream.SpinedBuffer$OfLong: java.lang.Object newArray(int)>
Counter value: 1
SCC 2781 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: boolean access$800(java.net.InetSocketAddress$InetSocketAddressHolder)>
Counter value: 1
SCC 2782 : 1
<java.util.ArrayDeque: java.lang.Object clone()>
Counter value: 1
SCC 2783 : 1
<java.lang.invoke.PrimitiveHandle: java.lang.String getMethodName()>
Counter value: 1
SCC 2784 : 1
<java.util.Base64: java.util.Base64$Encoder getEncoder()>
Counter value: 1
SCC 2785 : 1
<javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>
Counter value: 1
SCC 2786 : 1
<java.util.concurrent.TimeUnit$5: long toMillis(long)>
Counter value: 1
SCC 2787 : 1
<sun.nio.fs.AbstractPath: void <init>()>
Counter value: 1
SCC 2788 : 1
<sun.nio.fs.UnixPath: java.nio.file.Path getFileName()>
Counter value: 1
SCC 2789 : 1
<java.io.FilterInputStream: boolean markSupported()>
Counter value: 2
SCC 2790 : 1
<sun.security.x509.GeneralSubtree: int hashCode()>
Counter value: 1
SCC 2791 : 1
<java.util.TreeMap$EntrySet: int size()>
Counter value: 1
SCC 2792 : 1
<java.nio.LongBuffer: int compare(long,long)>
Counter value: 1
SCC 2793 : 1
<sun.misc.Cleaner: boolean remove(sun.misc.Cleaner)>
Counter value: 1
SCC 2794 : 1
<java.security.spec.PSSParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>
Counter value: 1
SCC 2795 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.Iterator valueIterator()>
Counter value: 1
SCC 2796 : 1
<java.util.stream.IntPipeline$7$1: void begin(long)>
Counter value: 2
SCC 2797 : 1
<sun.security.x509.AuthorityKeyIdentifierExtension: java.lang.String getName()>
Counter value: 1
SCC 2798 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 2799 : 1
<java.util.concurrent.TimeUnit$7: long toSeconds(long)>
Counter value: 1
SCC 2800 : 1
<sun.net.www.http.HttpClient: int getProxyPortUsed()>
Counter value: 1
SCC 2801 : 1
<sun.reflect.MagicAccessorImpl: void <init>()>
Counter value: 1
SCC 2802 : 1
<sun.nio.ch.SocketAdaptor: java.net.InetAddress getLocalAddress()>
Counter value: 1
SCC 2803 : 1
<java.io.ObjectOutputStream: void flush()>
Counter value: 1
SCC 2804 : 1
<java.net.HttpCookie$12: java.util.List parse(java.lang.String)>
Counter value: 1
SCC 2805 : 1
<java.time.LocalTime: java.time.LocalTime withNano(int)>
Counter value: 1
SCC 2806 : 1
<javax.crypto.extObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>
Counter value: 1
SCC 2807 : 1
<java.lang.Double: java.lang.String toString()>
Counter value: 1
SCC 2808 : 1
<java.time.temporal.IsoFields$Field$2: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal,long)>
Counter value: 1
SCC 2809 : 1
<sun.invoke.util.Wrapper: int stackSlots()>
Counter value: 1
SCC 2810 : 1
<java.util.Random$RandomLongsSpliterator: int characteristics()>
Counter value: 1
SCC 2811 : 1
<java.lang.Class: java.lang.Object setMethodHandleCache(java.lang.Object)>
Counter value: 1
SCC 2812 : 1
<sun.reflect.ReflectionFactory: java.lang.reflect.Constructor newConstructor(java.lang.Class,java.lang.Class[],java.lang.Class[],int,int,java.lang.String,byte[],byte[])>
Counter value: 1
SCC 2813 : 1
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 2814 : 1
<java.lang.StringBuilder: java.lang.String substring(int,int)>
Counter value: 1
SCC 2815 : 1
<java.util.IdentityHashMap$EntryIterator$Entry: java.lang.String toString()>
Counter value: 1
SCC 2816 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 2817 : 1
<java.lang.invoke.MethodHandleInfoImpl: java.lang.Class getDeclaringClass()>
Counter value: 1
SCC 2818 : 1
<java.util.concurrent.ThreadLocalRandom$RandomDoublesSpliterator: java.util.concurrent.ThreadLocalRandom$RandomDoublesSpliterator trySplit()>
Counter value: 1
SCC 2819 : 1
<sun.security.x509.AccessDescription: int hashCode()>
Counter value: 1
SCC 2820 : 1
<java.lang.invoke.MethodHandles$Lookup: int getClassModifiers(java.lang.Class)>
Counter value: 1
SCC 2821 : 1
<java.util.stream.Nodes$LongFixedNodeBuilder: java.lang.String toString()>
Counter value: 1
SCC 2822 : 1
<java.util.EnumMap: int size()>
Counter value: 1
SCC 2823 : 1
<java.util.concurrent.LinkedBlockingQueue: void clear()>
Counter value: 1
SCC 2824 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
Counter value: 1
SCC 2825 : 1
<java.util.stream.DoublePipeline$4$1: void accept(double)>
Counter value: 1
SCC 2826 : 1
<sun.nio.ch.SocketChannelImpl: boolean isConnected()>
Counter value: 1
SCC 2827 : 1
<java.lang.invoke.SecurityFrameInjector$3: java.lang.Object run()>
Counter value: 1
SCC 2828 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
Counter value: 1
SCC 2829 : 1
<java.util.stream.ReduceOps$6ReducingSink: void combine(java.util.stream.ReduceOps$6ReducingSink)>
Counter value: 1
SCC 2830 : 1
<java.util.WeakHashMap$KeySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 2831 : 1
<java.lang.invoke.VirtualHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 2832 : 1
<java.util.Spliterators$IntIteratorSpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 2833 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] access$100()>
Counter value: 1
SCC 2834 : 1
<sun.nio.ch.FileChannelImpl: void implCloseChannel()>
Counter value: 1
SCC 2835 : 1
<java.util.stream.ReferencePipeline: java.util.stream.StreamShape getOutputShape()>
Counter value: 1
SCC 2836 : 1
<java.time.format.DateTimePrintContext: java.lang.String toString()>
Counter value: 1
SCC 2837 : 1
<java.lang.J9VMInternals$1: java.lang.Object run()>
Counter value: 1
SCC 2838 : 1
<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>
Counter value: 1
SCC 2839 : 1
<java.io.ObjectStreamClass: java.lang.Long access$700(java.lang.Class)>
Counter value: 1
SCC 2840 : 1
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 2841 : 1
<java.nio.DoubleBuffer: boolean equals(java.lang.Object)>
Counter value: 1
SCC 2842 : 1
<java.util.stream.MatchOps$MatchTask: java.lang.Object doLeaf()>
Counter value: 1
SCC 2843 : 1
<java.net.HttpConnectSocketImpl: java.net.Socket privilegedDoTunnel(java.lang.String,int)>
Counter value: 1
SCC 2844 : 1
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 2845 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: void <init>(java.util.Map$Entry,java.lang.Class)>
Counter value: 1
SCC 2846 : 1
<sun.reflect.ClassFileAssembler: void opc_dup_x1()>
Counter value: 1
SCC 2847 : 1
<java.lang.StringBuilder: char[] getValue()>
Counter value: 1
SCC 2848 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl: java.util.concurrent.ScheduledThreadPoolExecutor access$100(sun.nio.ch.AsynchronousChannelGroupImpl)>
Counter value: 1
SCC 2849 : 1
<sun.nio.ch.NativeThreadSet: int add()>
Counter value: 1
SCC 2850 : 1
<java.text.DecimalFormatSymbols: char getDigit()>
Counter value: 1
SCC 2851 : 1
<java.net.HttpCookie: void setPath(java.lang.String)>
Counter value: 1
SCC 2852 : 1
<java.net.SocketInputStream: int read()>
Counter value: 1
SCC 2853 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 2854 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>
Counter value: 1
SCC 2855 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfPrimitive: boolean tryAdvance(java.lang.Object)>
Counter value: 2
SCC 2856 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: java.lang.String toString()>
Counter value: 2
SCC 2857 : 1
<java.io.ObjectInputStream$HandleTable$HandleList: int get(int)>
Counter value: 1
SCC 2858 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: long estimateSize()>
Counter value: 1
SCC 2859 : 1
<java.util.stream.LongPipeline$Head: java.util.stream.LongStream sequential()>
Counter value: 1
SCC 2860 : 1
<java.util.TreeMap$NavigableSubMap$EntrySetView: void <init>(java.util.TreeMap$NavigableSubMap)>
Counter value: 1
SCC 2861 : 1
<sun.nio.ch.SocketAdaptor$2: void <init>(sun.nio.ch.SocketAdaptor)>
Counter value: 1
SCC 2862 : 1
<sun.reflect.FieldAccessorImpl: void <init>()>
Counter value: 1
SCC 2863 : 1
<java.util.concurrent.ThreadLocalRandom$RandomLongsSpliterator: long estimateSize()>
Counter value: 1
SCC 2864 : 1
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>
Counter value: 1
SCC 2865 : 1
<java.util.IdentityHashMap$EntrySet: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 2866 : 1
<java.lang.invoke.ProxyClassesDumper: java.lang.String encodeForFilename(java.lang.String)>
Counter value: 1
SCC 2867 : 1
<java.lang.reflect.Parameter: java.lang.String toString()>
Counter value: 1
SCC 2868 : 1
<sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator: int compare(java.lang.String,java.lang.String)>
Counter value: 1
SCC 2869 : 1
<sun.net.www.http.KeepAliveCache: void <init>()>
Counter value: 1
SCC 2870 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle makeInjectedInvoker(java.lang.Class)>
Counter value: 1
SCC 2871 : 1
<java.net.HttpCookie$1: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 2872 : 1
<java.nio.channels.AlreadyConnectedException: void <init>()>
Counter value: 1
SCC 2873 : 1
<java.time.Clock: int hashCode()>
Counter value: 1
SCC 2874 : 1
<java.util.Scanner: java.lang.Readable makeReadable(java.nio.channels.ReadableByteChannel)>
Counter value: 1
SCC 2875 : 1
<java.lang.invoke.AsTypeHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 2876 : 1
<sun.net.www.HeaderParser: java.util.Iterator keys()>
Counter value: 1
SCC 2877 : 1
<sun.reflect.ClassFileAssembler: void emitShort(short,short)>
Counter value: 1
SCC 2878 : 1
<java.util.stream.Nodes$FixedNodeBuilder: java.util.stream.Node build()>
Counter value: 1
SCC 2879 : 1
<java.util.stream.LongPipeline$2$1: void accept(long)>
Counter value: 2
SCC 2880 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 2881 : 1
<sun.util.PreHashedMap$2$1: java.util.Map$Entry next()>
Counter value: 1
SCC 2882 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void rangeCheck(int)>
Counter value: 1
SCC 2883 : 1
<java.util.stream.Nodes$IntArrayNode: long count()>
Counter value: 1
SCC 2884 : 1
<sun.net.www.MimeEntry: java.lang.String getTempFileTemplate()>
Counter value: 1
SCC 2885 : 1
<java.util.Arrays: java.lang.String toString(double[])>
Counter value: 1
SCC 2886 : 1
<java.lang.ProcessEnvironment$StringEntrySet: boolean contains(java.lang.Object)>
Counter value: 2
SCC 2887 : 1
<sun.reflect.UnsafeDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>
Counter value: 1
SCC 2888 : 1
<java.time.format.DateTimeFormatter: java.time.Period lambda$static$0(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 2889 : 1
<java.security.KeyStore$Builder$FileBuilder: java.security.Provider access$200(java.security.KeyStore$Builder$FileBuilder)>
Counter value: 1
SCC 2890 : 1
<sun.reflect.'annotation'.AnnotationType: java.lang.String toString()>
Counter value: 1
SCC 2891 : 1
<java.time.LocalTime: int getHour()>
Counter value: 1
SCC 2892 : 1
<java.nio.DirectFloatBufferS: long address()>
Counter value: 1
SCC 2893 : 1
<java.util.TreeMap$ValueSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 2894 : 1
<java.util.ArrayDeque: void <init>(int)>
Counter value: 1
SCC 2895 : 1
<sun.security.provider.certpath.X509CertificatePair: java.lang.String toString()>
Counter value: 1
SCC 2896 : 1
<java.util.concurrent.FutureTask: void run()>
Counter value: 1
SCC 2897 : 1
<java.util.IdentityHashMap: void putAll(java.util.Map)>
Counter value: 1
SCC 2898 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.chrono.ChronoZonedDateTimeImpl ensureValid(java.time.chrono.Chronology,java.time.temporal.Temporal)>
Counter value: 1
SCC 2899 : 1
<java.util.Collections$ReverseComparator2: boolean equals(java.lang.Object)>
Counter value: 2
SCC 2900 : 1
<java.lang.invoke.MethodHandles$Lookup: void checkAccess(java.lang.Class,java.lang.Class,java.lang.String,int,java.lang.invoke.MethodHandle,boolean)>
Counter value: 1
SCC 2901 : 1
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 2902 : 1
<java.util.LinkedList$ListItr: boolean hasPrevious()>
Counter value: 1
SCC 2903 : 1
<java.util.concurrent.ConcurrentLinkedQueue$Node: void lazySetNext(java.util.concurrent.ConcurrentLinkedQueue$Node)>
Counter value: 1
SCC 2904 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
Counter value: 1
SCC 2905 : 1
<java.lang.reflect.AccessibleObject: void setAccessible0(java.lang.reflect.AccessibleObject,boolean)>
Counter value: 1
SCC 2906 : 1
<javax.security.auth.Subject$1: java.lang.Object run()>
Counter value: 1
SCC 2907 : 1
<sun.misc.ProxyGenerator$1: void <init>(java.lang.String,byte[])>
Counter value: 1
SCC 2908 : 1
<java.lang.invoke.MethodType: java.lang.invoke.InvokeExactHandle getInvokeExactHandle()>
Counter value: 1
SCC 2909 : 1
<java.util.stream.SortedOps$OfInt: java.util.stream.Node opEvaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction)>
Counter value: 1
SCC 2910 : 1
<java.io.File: boolean delete()>
Counter value: 1
SCC 2911 : 1
<java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory: void <init>()>
Counter value: 1
SCC 2912 : 1
<java.time.YearMonth: java.time.YearMonth minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 2913 : 1
<java.nio.CharBufferSpliterator: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 2914 : 1
<java.lang.J9VMInternals$2: java.lang.Object run()>
Counter value: 1
SCC 2915 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath getRoot()>
Counter value: 1
SCC 2916 : 1
<java.util.Hashtable$KeySet: void clear()>
Counter value: 1
SCC 2917 : 1
<java.text.StringCharacterIterator: java.lang.Object clone()>
Counter value: 1
SCC 2918 : 1
<java.util.concurrent.FutureTask: boolean runAndReset()>
Counter value: 1
SCC 2919 : 1
<java.util.IdentityHashMap$KeySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 2920 : 1
<sun.nio.ch.FileChannelImpl: int access$000(long,long)>
Counter value: 1
SCC 2921 : 1
<java.time.chrono.HijrahChronology: int epochMonthToMonth(int)>
Counter value: 1
SCC 2922 : 1
<sun.nio.ch.ThreadPool$lambda_defaultThreadFactory_0__35: void <init>()>
Counter value: 1
SCC 2923 : 1
<java.util.stream.MatchOps$MatchOp: java.lang.Boolean evaluateSequential(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 2924 : 1
<java.util.stream.FindOps$FindSink$OfInt: java.lang.Object get()>
Counter value: 1
SCC 2925 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.Class getReferenceClass()>
Counter value: 2
SCC 2926 : 1
<java.nio.Bits: byte long4(long)>
Counter value: 1
SCC 2927 : 1
<java.lang.Class$2: java.lang.reflect.Field run()>
Counter value: 1
SCC 2928 : 1
<java.time.LocalTime: java.time.LocalTime 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 2929 : 1
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 2930 : 1
<java.lang.Class: boolean access$000()>
Counter value: 1
SCC 2931 : 1
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>
Counter value: 1
SCC 2932 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: boolean remove(java.lang.Object)>
Counter value: 2
SCC 2933 : 1
<java.util.stream.Nodes$ConcNode$OfDouble: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 2934 : 1
<sun.net.www.protocol.http.HttpURLConnection$9: java.lang.Object run()>
Counter value: 1
SCC 2935 : 1
<java.nio.DirectByteBuffer$Deallocator: void run()>
Counter value: 1
SCC 2936 : 1
<java.util.stream.Nodes$ConcNode$OfInt: java.util.Spliterator spliterator()>
Counter value: 1
SCC 2937 : 1
<java.util.Collections$CopiesList: int size()>
Counter value: 1
SCC 2938 : 1
<sun.reflect.generics.repository.ConstructorRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
Counter value: 1
SCC 2939 : 1
<java.io.ObjectStreamClass: boolean hasBlockExternalData()>
Counter value: 1
SCC 2940 : 1
<java.util.Collections: java.util.List nCopies(int,java.lang.Object)>
Counter value: 1
SCC 2941 : 1
<java.net.HostPortrange: boolean equals(java.net.HostPortrange)>
Counter value: 1
SCC 2942 : 1
<java.util.stream.ReduceOps$5ReducingSink: void <init>(int,java.util.function.IntBinaryOperator)>
Counter value: 1
SCC 2943 : 1
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoLocalDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 2944 : 1
<sun.net.www.protocol.http.NTLMAuthenticationProxy: boolean isTrustedSite(java.net.URL)>
Counter value: 1
SCC 2945 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>
Counter value: 1
SCC 2946 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 2947 : 1
<java.nio.DirectCharBufferS: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 2948 : 1
<java.lang.reflect.Proxy: void checkProxyAccess(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>
Counter value: 1
SCC 2949 : 1
<java.util.concurrent.TimeUnit$7: long toMillis(long)>
Counter value: 1
SCC 2950 : 1
<java.util.stream.IntPipeline$StatefulOp: java.util.stream.IntStream sequential()>
Counter value: 1
SCC 2951 : 1
<java.util.stream.ReduceOps$10: java.util.stream.ReduceOps$10ReducingSink makeSink()>
Counter value: 1
SCC 2952 : 1
<jdk.internal.org.objectweb.asm.Type: int hashCode()>
Counter value: 1
SCC 2953 : 1
<java.util.ArraysParallelSortHelpers$FJLong$Sorter: void <init>(java.util.concurrent.CountedCompleter,long[],long[],int,int,int,int)>
Counter value: 1
SCC 2954 : 1
<sun.net.www.protocol.http.NTLMAuthenticationProxy: boolean supportsTransparentAuth()>
Counter value: 1
SCC 2955 : 1
<java.util.stream.SliceOps$3: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 2956 : 1
<java.util.Collections$UnmodifiableList$1: void add(java.lang.Object)>
Counter value: 1
SCC 2957 : 1
<java.util.Collections$CheckedList: java.util.ListIterator listIterator()>
Counter value: 1
SCC 2958 : 1
<java.net.SocketImpl: java.lang.String toString()>
Counter value: 1
SCC 2959 : 1
<sun.net.www.protocol.http.HttpURLConnection: sun.util.logging.PlatformLogger access$000()>
Counter value: 1
SCC 2960 : 1
<java.lang.invoke.HandleCache: java.util.Map getSpecialCache(java.lang.Class)>
Counter value: 1
SCC 2961 : 1
<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: int read()>
Counter value: 1
SCC 2962 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.ValueRange rangeRefinedBy(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 2963 : 1
<java.util.stream.Nodes$DoubleArrayNode: java.lang.String toString()>
Counter value: 1
SCC 2964 : 1
<java.util.Spliterators: java.util.Spliterator$OfLong spliterator(long[],int,int,int)>
Counter value: 1
SCC 2965 : 1
<java.util.stream.Streams$RangeLongSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 2966 : 1
<java.util.stream.Nodes$LongFixedNodeBuilder: void <init>(long)>
Counter value: 1
SCC 2967 : 1
<javax.crypto.NullCipherSpi: java.security.AlgorithmParameters engineGetParameters()>
Counter value: 1
SCC 2968 : 1
<java.util.concurrent.ConcurrentSkipListMap: void clear()>
Counter value: 1
SCC 2969 : 1
<java.net.NetworkInterface$1checkedAddresses: void <init>(java.net.NetworkInterface)>
Counter value: 1
SCC 2970 : 1
<sun.net.www.http.HttpCapture$1: java.lang.Object run()>
Counter value: 1
SCC 2971 : 1
<java.time.ZonedDateTime: java.time.LocalDateTime toLocalDateTime()>
Counter value: 1
SCC 2972 : 1
<java.time.LocalTime: java.time.LocalTime plusHours(long)>
Counter value: 1
SCC 2973 : 1
<sun.nio.ch.Util$3: boolean add(java.lang.Object)>
Counter value: 1
SCC 2974 : 1
<java.util.stream.SpinedBuffer: java.lang.Object get(long)>
Counter value: 1
SCC 2975 : 1
<sun.reflect.UnsafeLongFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 2976 : 1
<java.util.stream.SliceOps$3$1: boolean cancellationRequested()>
Counter value: 2
SCC 2977 : 1
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: byte getByte(java.lang.Object)>
Counter value: 1
SCC 2978 : 1
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 2979 : 1
<java.nio.ByteBufferAsCharBufferRL: boolean isDirect()>
Counter value: 1
SCC 2980 : 1
<java.time.LocalDateTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 2981 : 1
<java.util.IdentityHashMap: int access$100(java.lang.Object,int)>
Counter value: 1
SCC 2982 : 1
<java.lang.CloneNotSupportedException: void <init>(java.lang.String)>
Counter value: 1
SCC 2983 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor: void <clinit>()>
Counter value: 1
SCC 2984 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: void initPartialTraversalState()>
Counter value: 1
SCC 2985 : 1
<java.util.concurrent.ForkJoinPool: void deregisterWorker(java.util.concurrent.ForkJoinWorkerThread,java.lang.Throwable)>
Counter value: 1
SCC 2986 : 1
<sun.security.util.DerOutputStream: void putEnumerated(int)>
Counter value: 1
SCC 2987 : 1
<sun.security.x509.CertificatePolicyId: int hashCode()>
Counter value: 1
SCC 2988 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void clear()>
Counter value: 1
SCC 2989 : 1
<java.util.IdentityHashMap$EntrySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 2990 : 1
<java.lang.invoke.MethodHandles$Lookup: void checkAccess(java.lang.invoke.MethodHandle,boolean)>
Counter value: 1
SCC 2991 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamClass$ClassDataSlot[] getClassDataLayout()>
Counter value: 1
SCC 2992 : 1
<java.util.Collections$CheckedCollection: java.util.Iterator iterator()>
Counter value: 2
SCC 2993 : 1
<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: int read()>
Counter value: 1
SCC 2994 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 2995 : 1
<java.util.stream.AbstractShortCircuitTask: void setLocalResult(java.lang.Object)>
Counter value: 1
SCC 2996 : 1
<java.io.ObjectStreamClass$EntryFuture: java.lang.Object get()>
Counter value: 1
SCC 2997 : 1
<java.io.StringReader: int read(char[],int,int)>
Counter value: 1
SCC 2998 : 1
<sun.reflect.AccessorGenerator: void emitWideningBytecodeForPrimitiveConversion(sun.reflect.ClassFileAssembler,java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 2999 : 1
<java.util.Vector: java.lang.Object clone()>
Counter value: 1
SCC 3000 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
Counter value: 2
SCC 3001 : 1
<java.lang.reflect.AccessibleObject: void <clinit>()>
Counter value: 1
SCC 3002 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] makeFillArrays()>
Counter value: 1
SCC 3003 : 1
<java.util.stream.ForEachOps: java.util.stream.TerminalOp makeDouble(java.util.function.DoubleConsumer,boolean)>
Counter value: 1
SCC 3004 : 1
<java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory$1: java.util.concurrent.ForkJoinWorkerThread run()>
Counter value: 1
SCC 3005 : 1
<java.nio.HeapLongBuffer: long get(int)>
Counter value: 1
SCC 3006 : 1
<java.io.BufferedWriter: void close()>
Counter value: 2
SCC 3007 : 1
<java.util.stream.ReduceOps$3: int getOpFlags()>
Counter value: 1
SCC 3008 : 1
<java.util.stream.SliceOps: long access$000(long,long)>
Counter value: 1
SCC 3009 : 1
<java.lang.invoke.FieldHandle: boolean isVMSlotCorrectlyTagged()>
Counter value: 1
SCC 3010 : 1
<java.net.Socket: void <init>(java.net.Proxy)>
Counter value: 1
SCC 3011 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToLongTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceValuesToLongTask,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator)>
Counter value: 1
SCC 3012 : 1
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 3013 : 1
<java.util.TreeMap$TreeMapSpliterator: int getEstimate()>
Counter value: 1
SCC 3014 : 1
<java.text.DecimalFormat: java.lang.String getPositiveSuffix()>
Counter value: 1
SCC 3015 : 1
<java.util.concurrent.ConcurrentSkipListMap$Values: void <init>(java.util.concurrent.ConcurrentNavigableMap)>
Counter value: 1
SCC 3016 : 1
<java.io.ObjectStreamClass: long computeDefaultSUID(java.lang.Class)>
Counter value: 1
SCC 3017 : 1
<sun.security.provider.certpath.X509CertPath: java.util.List getCertificates()>
Counter value: 1
SCC 3018 : 1
<java.time.Month: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 3019 : 1
<java.util.LinkedList$DescendingIterator: boolean hasNext()>
Counter value: 1
SCC 3020 : 1
<sun.reflect.UnsafeLongFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 3021 : 1
<java.io.ObjectInputStream$1: void <init>()>
Counter value: 1
SCC 3022 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDate plusYears(long)>
Counter value: 1
SCC 3023 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3024 : 1
<java.util.Spliterators: java.util.Spliterator$OfDouble spliterator(double[],int,int,int)>
Counter value: 1
SCC 3025 : 1
<java.util.stream.SliceOps$3$1: void begin(long)>
Counter value: 2
SCC 3026 : 1
<sun.nio.fs.NativeBuffer: java.lang.Object owner()>
Counter value: 1
SCC 3027 : 1
<java.time.chrono.HijrahDate: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 3028 : 1
<java.util.concurrent.TimeUnit$5: long toNanos(long)>
Counter value: 1
SCC 3029 : 1
<java.time.Clock$TickClock: java.lang.String toString()>
Counter value: 1
SCC 3030 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfLong: void <init>(java.util.function.Supplier)>
Counter value: 1
SCC 3031 : 1
<java.io.ObjectStreamClass$4: void <init>()>
Counter value: 1
SCC 3032 : 1
<java.util.LinkedList$ListItr: void add(java.lang.Object)>
Counter value: 1
SCC 3033 : 1
<java.nio.channels.NotYetConnectedException: void <init>()>
Counter value: 1
SCC 3034 : 1
<java.lang.invoke.GuardWithTestHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 3035 : 1
<java.util.stream.SliceOps$1: java.util.stream.Node opEvaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction)>
Counter value: 1
SCC 3036 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate plusMonths(long)>
Counter value: 1
SCC 3037 : 1
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 3038 : 1
<java.util.stream.LongPipeline$4$1: void <init>(java.util.stream.LongPipeline$4,java.util.stream.Sink)>
Counter value: 1
SCC 3039 : 1
<java.util.stream.Streams$RangeLongSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 3040 : 1
<java.util.ArraysParallelSortHelpers$FJChar$Merger: void compute()>
Counter value: 1
SCC 3041 : 1
<java.lang.invoke.Insert2Handle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 3042 : 1
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 3043 : 1
<java.util.stream.Nodes$DoubleArrayNode: java.util.Spliterator$OfDouble spliterator()>
Counter value: 1
SCC 3044 : 1
<sun.security.x509.SubjectAlternativeNameExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 3045 : 1
<sun.net.www.protocol.http.HttpURLConnection$6: java.lang.Object run()>
Counter value: 1
SCC 3046 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: void clear()>
Counter value: 1
SCC 3047 : 1
<sun.util.calendar.ImmutableGregorianDate: sun.util.calendar.CalendarDate setDate(int,int,int)>
Counter value: 1
SCC 3048 : 1
<java.time.chrono.HijrahChronology: void registerVariants()>
Counter value: 1
SCC 3049 : 1
<java.io.ObjectInputStream: java.lang.Object resolveObject(java.lang.Object)>
Counter value: 1
SCC 3050 : 1
<java.util.stream.ForEachOps$ForEachOp$OfDouble: java.lang.Object get()>
Counter value: 1
SCC 3051 : 1
<java.nio.StringCharBuffer: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 3052 : 1
<java.security.Security$2: java.lang.Void run()>
Counter value: 1
SCC 3053 : 1
<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>
Counter value: 1
SCC 3054 : 1
<sun.nio.ch.FileDispatcherImpl: void preClose(java.io.FileDescriptor)>
Counter value: 1
SCC 3055 : 1
<java.time.chrono.JapaneseChronology: java.lang.String getId()>
Counter value: 1
SCC 3056 : 1
<javax.security.auth.Policy: boolean access$002(boolean)>
Counter value: 1
SCC 3057 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator$lambda_forEachRemaining_0__55: void <init>(java.util.stream.StreamSpliterators$DistinctSpliterator,java.util.function.Consumer)>
Counter value: 1
SCC 3058 : 1
<java.util.concurrent.ThreadLocalRandom: int next(int)>
Counter value: 1
SCC 3059 : 1
<java.util.Spliterators$EmptySpliterator$OfDouble: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 3060 : 1
<sun.util.locale.provider.RuleBasedBreakIterator$1: java.io.BufferedInputStream run()>
Counter value: 1
SCC 3061 : 1
<java.io.Bits: int getInt(byte[],int)>
Counter value: 1
SCC 3062 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandleImpl$Intrinsic intrinsicName()>
Counter value: 1
SCC 3063 : 1
<java.util.stream.AbstractShortCircuitTask: void compute()>
Counter value: 1
SCC 3064 : 1
<java.time.Instant: java.time.Instant 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 3065 : 1
<java.util.Base64: java.util.Base64$Decoder getDecoder()>
Counter value: 1
SCC 3066 : 1
<java.util.Date: long parse(java.lang.String)>
Counter value: 1
SCC 3067 : 1
<java.nio.ByteBufferAsCharBufferB: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 3068 : 1
<sun.net.NetworkClient: void setReadTimeout(int)>
Counter value: 1
SCC 3069 : 1
<java.io.ObjectStreamClass: java.lang.String getName()>
Counter value: 1
SCC 3070 : 1
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>
Counter value: 1
SCC 3071 : 1
<java.io.ObjectInputStream$BlockDataInputStream: short readShort()>
Counter value: 1
SCC 3072 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 2
SCC 3073 : 1
<java.security.Signature: java.lang.String access$000(java.security.Signature)>
Counter value: 1
SCC 3074 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: boolean isPeriodic()>
Counter value: 1
SCC 3075 : 1
<java.util.stream.SliceOps$3$1: void <init>(java.util.stream.SliceOps$3,java.util.stream.Sink)>
Counter value: 1
SCC 3076 : 1
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object[] toArray()>
Counter value: 1
SCC 3077 : 1
<java.io.WriteAbortedException: void <init>(java.lang.String,java.lang.Exception)>
Counter value: 1
SCC 3078 : 1
<java.util.stream.SpinedBuffer$OfDouble: java.lang.String toString()>
Counter value: 1
SCC 3079 : 1
<java.util.concurrent.TimeUnit$7: int excessNanos(long,long)>
Counter value: 1
SCC 3080 : 1
<java.util.stream.DistinctOps$1$lambda_opEvaluateParallel_0__81: java.util.function.Consumer bootstrap$(java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.ConcurrentHashMap)>
Counter value: 1
SCC 3081 : 1
<sun.nio.ch.SocketAdaptor: int access$100(sun.nio.ch.SocketAdaptor)>
Counter value: 1
SCC 3082 : 1
<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate()>
Counter value: 1
SCC 3083 : 1
<java.lang.invoke.SecurityFrameInjector$4: java.lang.Class run()>
Counter value: 1
SCC 3084 : 1
<java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 3085 : 1
<sun.util.resources.ParallelListResourceBundle$KeySet$1: java.lang.String next()>
Counter value: 1
SCC 3086 : 1
<sun.net.www.protocol.http.NTLMAuthenticationProxy: void finest(java.lang.Exception)>
Counter value: 1
SCC 3087 : 1
<java.io.ObjectInputStream: void access$1300(byte[],int,float[],int,int)>
Counter value: 1
SCC 3088 : 1
<sun.misc.ProxyGenerator$ConstantPool: void setReadOnly()>
Counter value: 1
SCC 3089 : 1
<java.util.stream.StreamOpFlag: int toCharacteristics(int)>
Counter value: 1
SCC 3090 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfDouble: void <init>(java.util.stream.Node$OfDouble)>
Counter value: 1
SCC 3091 : 1
<java.nio.DirectByteBuffer: long address()>
Counter value: 1
SCC 3092 : 1
<sun.net.www.protocol.jar.JarURLConnection: java.lang.String getContentType()>
Counter value: 1
SCC 3093 : 1
<sun.nio.ch.Util: boolean access$200(int)>
Counter value: 1
SCC 3094 : 1
<java.util.stream.IntPipeline: java.util.stream.Node evaluateToNode(java.util.stream.PipelineHelper,java.util.Spliterator,boolean,java.util.function.IntFunction)>
Counter value: 1
SCC 3095 : 1
<java.lang.invoke.MethodHandleInfoImpl: boolean isField()>
Counter value: 1
SCC 3096 : 1
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object[] toArray()>
Counter value: 1
SCC 3097 : 1
<java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
Counter value: 2
SCC 3098 : 1
<java.util.concurrent.TimeUnit$2: int excessNanos(long,long)>
Counter value: 1
SCC 3099 : 1
<java.util.stream.AbstractSpinedBuffer: long count()>
Counter value: 1
SCC 3100 : 1
<java.util.stream.Sink$ChainedLong: void begin(long)>
Counter value: 2
SCC 3101 : 1
<java.lang.Class$2: java.lang.Object run()>
Counter value: 1
SCC 3102 : 1
<sun.util.calendar.BaseCalendar: boolean validate(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 3103 : 1
<java.util.Collections$SynchronizedCollection: void clear()>
Counter value: 2
SCC 3104 : 1
<sun.nio.ch.Util$3: boolean equals(java.lang.Object)>
Counter value: 2
SCC 3105 : 1
<java.time.chrono.HijrahChronology: int getMaximumDayOfYear()>
Counter value: 1
SCC 3106 : 1
<java.time.temporal.IsoFields$Field: int access$700(int)>
Counter value: 1
SCC 3107 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 3108 : 1
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 3109 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.Iterator entryIterator()>
Counter value: 1
SCC 3110 : 1
<java.nio.ShortBuffer: java.lang.String toString()>
Counter value: 1
SCC 3111 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3112 : 1
<com.ibm.oti.util.WeakReferenceNode: void remove()>
Counter value: 1
SCC 3113 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfLong: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 3114 : 1
<java.nio.HeapCharBufferR: java.nio.CharBuffer compact()>
Counter value: 1
SCC 3115 : 1
<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 3116 : 1
<sun.net.www.protocol.http.AuthCacheValue: void <clinit>()>
Counter value: 1
SCC 3117 : 1
<java.util.WeakHashMap$EntrySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 3118 : 1
<sun.reflect.ReflectionFactory: void setConstructorAccessor(java.lang.reflect.Constructor,sun.reflect.ConstructorAccessor)>
Counter value: 1
SCC 3119 : 1
<java.util.stream.DoublePipeline: java.util.Spliterator$OfDouble adapt(java.util.Spliterator)>
Counter value: 1
SCC 3120 : 1
<java.time.ZoneOffset: int get(java.time.temporal.TemporalField)>
Counter value: 1
SCC 3121 : 1
<java.util.HashMap$ValueSpliterator: int characteristics()>
Counter value: 1
SCC 3122 : 1
<sun.misc.ProxyGenerator$MethodInfo: void <init>(sun.misc.ProxyGenerator,java.lang.String,java.lang.String,int)>
Counter value: 1
SCC 3123 : 1
<java.util.IdentityHashMap: java.util.Set entrySet()>
Counter value: 1
SCC 3124 : 1
<sun.security.x509.X509CertInfo: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3125 : 1
<java.lang.invoke.FoldHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 3126 : 1
<java.security.SecureRandom$1: java.lang.Object run()>
Counter value: 1
SCC 3127 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Constructor access$1302(java.io.ObjectStreamClass,java.lang.reflect.Constructor)>
Counter value: 1
SCC 3128 : 1
<java.lang.J9VMInternals$3: java.lang.Object run()>
Counter value: 1
SCC 3129 : 1
<sun.nio.ch.Util$5: java.lang.Object run()>
Counter value: 1
SCC 3130 : 1
<java.util.Collections$AsLIFOQueue: int size()>
Counter value: 1
SCC 3131 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: boolean tryUnpush(java.util.concurrent.ForkJoinTask)>
Counter value: 1
SCC 3132 : 1
<sun.misc.InnocuousThread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,java.lang.ClassLoader,sun.misc.InnocuousThread$1)>
Counter value: 1
SCC 3133 : 1
<java.lang.invoke.Insert1IntHandle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,int,java.lang.Object[],java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 3134 : 1
<java.util.Collections$EmptyMap: boolean containsKey(java.lang.Object)>
Counter value: 1
SCC 3135 : 1
<sun.security.rsa.PSSParameters: byte[] getEncoded(java.security.spec.PSSParameterSpec)>
Counter value: 1
SCC 3136 : 1
<java.nio.file.attribute.FileTime: java.time.Instant toInstant()>
Counter value: 1
SCC 3137 : 1
<java.util.Collections$UnmodifiableList$1: int previousIndex()>
Counter value: 2
SCC 3138 : 1
<java.io.ObjectInputStream: java.lang.Object readObject()>
Counter value: 1
SCC 3139 : 1
<sun.misc.ProxyGenerator$ConstantPool: void <init>()>
Counter value: 1
SCC 3140 : 1
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object unlinkLast()>
Counter value: 1
SCC 3141 : 1
<sun.reflect.ReflectionFactory: sun.reflect.LangReflectAccess langReflectAccess()>
Counter value: 1
SCC 3142 : 1
<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: boolean exec()>
Counter value: 1
SCC 3143 : 1
<java.net.SocksSocketImpl: int readSocksReply(java.io.InputStream,byte[],long)>
Counter value: 1
SCC 3144 : 1
<java.util.AbstractMap$1: int size()>
Counter value: 1
SCC 3145 : 1
<java.nio.channels.Channels: java.io.Reader newReader(java.nio.channels.ReadableByteChannel,java.nio.charset.CharsetDecoder,int)>
Counter value: 1
SCC 3146 : 1
<java.net.Socket$1: void <init>(java.net.Socket)>
Counter value: 1
SCC 3147 : 1
<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
Counter value: 1
SCC 3148 : 1
<java.time.Instant: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3149 : 1
<sun.net.www.http.ChunkedInputStream: int fastRead(byte[],int,int)>
Counter value: 1
SCC 3150 : 1
<java.net.HttpCookie: void setHttpOnly(boolean)>
Counter value: 1
SCC 3151 : 1
<java.util.stream.ReduceOps$1ReducingSink: void accept(java.lang.Object)>
Counter value: 1
SCC 3152 : 1
<sun.util.logging.PlatformLogger: void fine(java.lang.String)>
Counter value: 1
SCC 3153 : 1
<sun.misc.ProxyGenerator: int getWordsPerType(java.lang.Class)>
Counter value: 1
SCC 3154 : 1
<java.util.stream.MatchOps$MatchOp: java.util.stream.StreamShape inputShape()>
Counter value: 1
SCC 3155 : 1
<java.lang.UNIXProcess$DeferredCloseInputStream: int read(byte[])>
Counter value: 1
SCC 3156 : 1
<java.io.ObjectInputStream$BlockDataInputStream: java.lang.String readUTFBody(long)>
Counter value: 1
SCC 3157 : 1
<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 3158 : 1
<java.util.stream.AbstractTask: void <init>(java.util.stream.AbstractTask,java.util.Spliterator)>
Counter value: 1
SCC 3159 : 1
<java.text.RuleBasedCollationKey: int compareTo(java.lang.Object)>
Counter value: 1
SCC 3160 : 1
<sun.security.x509.BasicConstraintsExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 3161 : 1
<sun.security.x509.PolicyConstraintsExtension: void encodeThis()>
Counter value: 1
SCC 3162 : 1
<java.io.ObjectStreamClass$WeakClassKey: int hashCode()>
Counter value: 1
SCC 3163 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfInt: void <init>(java.util.stream.Node$OfInt)>
Counter value: 1
SCC 3164 : 1
<java.util.concurrent.ThreadLocalRandom$RandomDoublesSpliterator: int characteristics()>
Counter value: 1
SCC 3165 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 3166 : 1
<java.time.OffsetDateTime: int compareInstant(java.time.OffsetDateTime,java.time.OffsetDateTime)>
Counter value: 1
SCC 3167 : 1
<java.util.EnumMap$EntryIterator$Entry: java.lang.String toString()>
Counter value: 1
SCC 3168 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfDouble: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 3169 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: void acceptConsumed(java.lang.Object)>
Counter value: 1
SCC 3170 : 1
<sun.security.provider.NativePRNG$RandomIO$1: java.io.OutputStream run()>
Counter value: 1
SCC 3171 : 1
<sun.net.www.protocol.http.HttpURLConnection$9: void <init>(sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 3172 : 1
<java.util.TreeMap: java.util.TreeMap$Entry getFloorEntry(java.lang.Object)>
Counter value: 1
SCC 3173 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 3174 : 1
<java.util.stream.DistinctOps$1: java.util.stream.Node opEvaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction)>
Counter value: 1
SCC 3175 : 1
<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getServerAuth(java.net.URL)>
Counter value: 1
SCC 3176 : 1
<java.util.Collections$UnmodifiableMap: boolean isEmpty()>
Counter value: 2
SCC 3177 : 1
<java.util.Random: long internalNextLong(long,long)>
Counter value: 1
SCC 3178 : 1
<java.time.OffsetTime: java.time.OffsetTime minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3179 : 1
<java.net.Socket$2: java.io.InputStream run()>
Counter value: 1
SCC 3180 : 1
<java.io.Console: void <clinit>()>
Counter value: 1
SCC 3181 : 1
<java.util.Collections: java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap)>
Counter value: 1
SCC 3182 : 1
<java.time.OffsetDateTime: java.lang.String toString()>
Counter value: 1
SCC 3183 : 1
<java.time.temporal.IsoFields$Field$3: java.time.temporal.ValueRange rangeRefinedBy(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 3184 : 1
<java.lang.invoke.SecurityFrameInjector: java.lang.Class probeLoaderToSecurityFrameMap(java.lang.ClassLoader)>
Counter value: 1
SCC 3185 : 1
<sun.security.x509.ExtendedKeyUsageExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 3186 : 1
<java.lang.ClassValue: java.lang.ClassValue$Entry[] getCacheCarefully(java.lang.Class)>
Counter value: 1
SCC 3187 : 1
<javax.security.auth.SubjectDomainCombiner$1: java.lang.Void run()>
Counter value: 1
SCC 3188 : 1
<sun.net.www.protocol.http.HttpURLConnection$5: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.lang.String)>
Counter value: 1
SCC 3189 : 1
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 3190 : 1
<java.time.chrono.ChronoPeriodImpl: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3191 : 1
<java.security.spec.ECFieldFp: int hashCode()>
Counter value: 1
SCC 3192 : 1
<java.lang.CharacterName$1: java.lang.Object run()>
Counter value: 1
SCC 3193 : 1
<java.util.stream.SliceOps$2$1: void <init>(java.util.stream.SliceOps$2,java.util.stream.Sink)>
Counter value: 1
SCC 3194 : 1
<java.nio.channels.spi.AbstractSelectableChannel: boolean haveValidKeys()>
Counter value: 1
SCC 3195 : 1
<java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.Object[] toArray()>
Counter value: 1
SCC 3196 : 1
<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)>
Counter value: 1
SCC 3197 : 1
<java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object)>
Counter value: 2
SCC 3198 : 1
<java.io.PrintStream: void print(java.lang.Object)>
Counter value: 1
SCC 3199 : 1
<java.util.stream.StreamOpFlag$Type: void <init>(java.lang.String,int)>
Counter value: 1
SCC 3200 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3201 : 1
<sun.reflect.UnsafeIntegerFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 3202 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator$accept__53: void <init>(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 3203 : 1
<java.util.concurrent.ThreadLocalRandom$RandomLongsSpliterator: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 3204 : 1
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext,java.security.Permission[])>
Counter value: 1
SCC 3205 : 1
<java.util.Spliterators: void <clinit>()>
Counter value: 1
SCC 3206 : 1
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3207 : 1
<sun.security.x509.GeneralNames: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 3208 : 1
<java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: java.nio.channels.spi.AsynchronousChannelProvider loadProviderAsService()>
Counter value: 1
SCC 3209 : 1
<java.util.IdentityHashMap$KeySpliterator: java.util.IdentityHashMap$KeySpliterator trySplit()>
Counter value: 1
SCC 3210 : 1
<java.util.AbstractMap$1$1: void <init>(java.util.AbstractMap$1)>
Counter value: 1
SCC 3211 : 1
<sun.misc.SharedSecrets: void setJavaOISAccess(sun.misc.JavaOISAccess)>
Counter value: 1
SCC 3212 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 3213 : 1
<java.util.TreeMap$EntrySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 3214 : 1
<java.util.LinkedList: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3215 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: boolean useAuthCache()>
Counter value: 1
SCC 3216 : 1
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: short getShort(java.lang.Object)>
Counter value: 1
SCC 3217 : 1
<java.nio.file.FileTreeWalker$Event: void <init>(java.nio.file.FileTreeWalker$EventType,java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes,java.io.IOException)>
Counter value: 1
SCC 3218 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.lang.Object next()>
Counter value: 1
SCC 3219 : 1
<java.util.stream.FindOps$FindTask: java.lang.Object getEmptyResult()>
Counter value: 1
SCC 3220 : 1
<java.util.stream.LongPipeline$Head: void forEach(java.util.function.LongConsumer)>
Counter value: 1
SCC 3221 : 1
<java.util.TreeMap$KeySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 3222 : 1
<java.lang.ClassValue$ClassValueMap: java.lang.ClassValue$Entry probeHomeLocation(java.lang.ClassValue$Entry[],java.lang.ClassValue)>
Counter value: 1
SCC 3223 : 1
<java.lang.Math: int addExact(int,int)>
Counter value: 1
SCC 3224 : 1
<java.nio.ByteBufferAsCharBufferRB: boolean isDirect()>
Counter value: 1
SCC 3225 : 1
<sun.reflect.NativeConstructorAccessorImpl: void <init>(java.lang.reflect.Constructor)>
Counter value: 1
SCC 3226 : 1
<java.util.stream.SpinedBuffer: void accept(java.lang.Object)>
Counter value: 1
SCC 3227 : 1
<java.util.ArrayList$SubList: java.lang.Object set(int,java.lang.Object)>
Counter value: 1
SCC 3228 : 1
<java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner,boolean)>
Counter value: 1
SCC 3229 : 1
<java.util.Collections$SingletonMap: boolean containsKey(java.lang.Object)>
Counter value: 1
SCC 3230 : 1
<java.nio.DirectByteBuffer$Deallocator: void <init>(long,long,int)>
Counter value: 1
SCC 3231 : 1
<java.util.stream.SpinedBuffer$OfLong: void accept(long)>
Counter value: 1
SCC 3232 : 1
<java.util.concurrent.ForkJoinPool: int getParallelism()>
Counter value: 1
SCC 3233 : 1
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 3234 : 1
<java.nio.DirectCharBufferU: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 3235 : 1
<java.lang.reflect.Method: sun.reflect.generics.repository.MethodRepository getGenericInfo()>
Counter value: 1
SCC 3236 : 1
<java.io.BufferedReader$1: java.lang.Object next()>
Counter value: 1
SCC 3237 : 1
<java.util.stream.IntPipeline$StatelessOp: java.util.stream.IntStream sequential()>
Counter value: 1
SCC 3238 : 1
<sun.net.www.http.HttpClient: int getDefaultPort()>
Counter value: 1
SCC 3239 : 1
<java.util.Collections$CheckedList$1: void <init>(java.util.Collections$CheckedList,java.util.ListIterator)>
Counter value: 1
SCC 3240 : 1
<java.util.stream.AbstractPipeline: void <clinit>()>
Counter value: 1
SCC 3241 : 1
<java.nio.channels.ConnectionPendingException: void <init>()>
Counter value: 1
SCC 3242 : 1
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 3243 : 1
<java.lang.Thread$State: void <init>(java.lang.String,int)>
Counter value: 1
SCC 3244 : 1
<sun.security.x509.KeyIdentifier: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3245 : 1
<java.util.Spliterators$LongIteratorSpliterator: java.util.Spliterator$OfLong trySplit()>
Counter value: 1
SCC 3246 : 1
<java.util.Properties$XmlSupport: sun.util.spi.XmlPropertiesProvider access$000(java.lang.ClassLoader)>
Counter value: 1
SCC 3247 : 1
<java.time.LocalTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3248 : 1
<java.util.concurrent.TimeUnit$6: long toHours(long)>
Counter value: 1
SCC 3249 : 1
<java.time.chrono.JapaneseEra: int getValue()>
Counter value: 1
SCC 3250 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: void <init>(java.util.concurrent.ConcurrentSkipListMap)>
Counter value: 1
SCC 3251 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: int pollAndExecCC(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 3252 : 1
<sun.nio.ch.SelectionKeyImpl: java.nio.channels.Selector selector()>
Counter value: 1
SCC 3253 : 1
<java.util.concurrent.TimeUnit$7: long toHours(long)>
Counter value: 1
SCC 3254 : 1
<sun.reflect.MethodAccessorGenerator: sun.reflect.SerializationConstructorAccessorImpl generateSerializationConstructor(java.lang.Class,java.lang.Class[],java.lang.Class[],int,java.lang.Class)>
Counter value: 1
SCC 3255 : 1
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3256 : 1
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
Counter value: 2
SCC 3257 : 1
<java.util.stream.Nodes: double[] access$700()>
Counter value: 1
SCC 3258 : 1
<java.lang.reflect.Proxy$Key1: void <init>(java.lang.Class)>
Counter value: 1
SCC 3259 : 1
<sun.nio.fs.UnixPath: java.lang.String getPathForExceptionMessage()>
Counter value: 1
SCC 3260 : 1
<sun.nio.ch.FileDispatcher: void <init>()>
Counter value: 1
SCC 3261 : 1
<java.net.URLClassLoader$4: java.net.URLClassLoader run()>
Counter value: 1
SCC 3262 : 1
<sun.nio.fs.UnixSecureDirectoryStream: void close()>
Counter value: 1
SCC 3263 : 1
<java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
Counter value: 2
SCC 3264 : 1
<java.util.LinkedHashSet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3265 : 1
<java.net.URLConnection: long getLastModified()>
Counter value: 1
SCC 3266 : 1
<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3267 : 1
<java.util.stream.DoublePipeline$5$1$accept__69: java.util.function.DoubleConsumer bootstrap$(java.util.stream.Sink)>
Counter value: 1
SCC 3268 : 1
<java.util.Arrays: java.util.Spliterator$OfInt spliterator(int[],int,int)>
Counter value: 1
SCC 3269 : 1
<java.time.YearMonth: int getYear()>
Counter value: 1
SCC 3270 : 1
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 3271 : 1
<java.util.Spliterators$IntArraySpliterator: java.util.Spliterator$OfInt trySplit()>
Counter value: 1
SCC 3272 : 1
<java.lang.invoke.MethodHandleInfoImpl: java.lang.String toString()>
Counter value: 1
SCC 3273 : 1
<java.util.concurrent.TimeUnit$2: long toSeconds(long)>
Counter value: 1
SCC 3274 : 1
<java.util.Arrays: int hashCode(boolean[])>
Counter value: 1
SCC 3275 : 1
<java.util.ArrayDeque: java.lang.Object removeFirst()>
Counter value: 1
SCC 3276 : 1
<java.util.Collections$UnmodifiableMap: void clear()>
Counter value: 1
SCC 3277 : 1
<java.util.TreeMap$EntrySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 3278 : 1
<sun.misc.LRUCache: void <init>(int)>
Counter value: 1
SCC 3279 : 1
<java.util.IdentityHashMap$KeySet: int hashCode()>
Counter value: 1
SCC 3280 : 1
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 3281 : 1
<java.util.concurrent.ConcurrentHashMap$CollectionView: void clear()>
Counter value: 1
SCC 3282 : 1
<java.time.zone.ZoneOffsetTransitionRule: java.time.zone.ZoneOffsetTransitionRule of(java.time.Month,int,java.time.DayOfWeek,java.time.LocalTime,boolean,java.time.zone.ZoneOffsetTransitionRule$TimeDefinition,java.time.ZoneOffset,java.time.ZoneOffset,java.time.ZoneOffset)>
Counter value: 1
SCC 3283 : 1
<java.lang.reflect.Field: java.lang.String toString()>
Counter value: 1
SCC 3284 : 1
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3285 : 1
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDate plusDays(long)>
Counter value: 1
SCC 3286 : 1
<java.util.ArraysParallelSortHelpers$FJChar$Merger: void <init>(java.util.concurrent.CountedCompleter,char[],char[],int,int,int,int,int,int)>
Counter value: 1
SCC 3287 : 1
<sun.nio.fs.UnixUserPrincipals$User: java.lang.String getName()>
Counter value: 1
SCC 3288 : 1
<java.lang.Float: int compare(float,float)>
Counter value: 1
SCC 3289 : 1
<java.util.JumboEnumSet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 3290 : 1
<jdk.internal.org.objectweb.asm.Type: java.lang.String getDescriptor()>
Counter value: 1
SCC 3291 : 1
<java.nio.ByteBufferAsCharBufferB: boolean isDirect()>
Counter value: 1
SCC 3292 : 1
<java.util.stream.SortedOps$OfRef: java.util.stream.Node opEvaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction)>
Counter value: 1
SCC 3293 : 1
<java.util.DualPivotQuicksort: void sort(char[],int,int,char[],int,int)>
Counter value: 1
SCC 3294 : 1
<sun.security.provider.X509Factory: void checkHeaderFooter(java.lang.String,java.lang.String)>
Counter value: 1
SCC 3295 : 1
<java.util.concurrent.ForkJoinTask: void <clinit>()>
Counter value: 1
SCC 3296 : 1
<java.util.SubList: java.util.Iterator iterator()>
Counter value: 1
SCC 3297 : 1
<sun.net.www.protocol.http.HttpURLConnection: void plainConnect0()>
Counter value: 1
SCC 3298 : 1
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDate plusYears(long)>
Counter value: 1
SCC 3299 : 1
<java.lang.invoke.SecurityFrameInjector: void <clinit>()>
Counter value: 1
SCC 3300 : 1
<java.util.concurrent.ConcurrentSkipListMap$ValueIterator: void <init>(java.util.concurrent.ConcurrentSkipListMap)>
Counter value: 1
SCC 3301 : 1
<java.time.Duration: java.time.Duration ofNanos(long)>
Counter value: 1
SCC 3302 : 1
<sun.util.calendar.JulianCalendar$Date: void setKnownEra(sun.util.calendar.Era)>
Counter value: 1
SCC 3303 : 1
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate date(int,int,int)>
Counter value: 1
SCC 3304 : 1
<java.util.Collections$SingletonList: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3305 : 1
<java.util.Scanner: void ensureOpen()>
Counter value: 1
SCC 3306 : 1
<java.net.Socket: void setBound()>
Counter value: 1
SCC 3307 : 1
<java.util.ArrayPrefixHelpers$IntCumulateTask: void compute()>
Counter value: 1
SCC 3308 : 1
<java.lang.reflect.Proxy$KeyFactory: java.lang.Object apply(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3309 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void acquireSharedInterruptibly(int)>
Counter value: 1
SCC 3310 : 1
<java.util.concurrent.SynchronousQueue: void clear()>
Counter value: 1
SCC 3311 : 1
<sun.misc.ProxyGenerator: void <init>(java.lang.String,java.lang.Class[],int)>
Counter value: 1
SCC 3312 : 1
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>
Counter value: 1
SCC 3313 : 1
<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>
Counter value: 1
SCC 3314 : 1
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>
Counter value: 1
SCC 3315 : 1
<java.nio.DirectIntBufferU: long address()>
Counter value: 1
SCC 3316 : 1
<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.String toString()>
Counter value: 2
SCC 3317 : 1
<java.util.stream.SortedOps$OfLong: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 3318 : 1
<java.util.EnumMap$EntrySet: void <init>(java.util.EnumMap)>
Counter value: 1
SCC 3319 : 1
<java.time.DayOfWeek: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 3320 : 1
<java.util.stream.DoublePipeline: java.util.Spliterator wrap(java.util.stream.PipelineHelper,java.util.function.Supplier,boolean)>
Counter value: 1
SCC 3321 : 1
<java.io.UnixFileSystem: boolean delete(java.io.File)>
Counter value: 1
SCC 3322 : 1
<javax.security.auth.AuthPermission: void <init>(java.lang.String)>
Counter value: 1
SCC 3323 : 1
<java.util.stream.Nodes$CollectorTask$OfRef: java.lang.Object doLeaf()>
Counter value: 1
SCC 3324 : 1
<java.util.stream.FindOps$FindSink$OfDouble: void accept(double)>
Counter value: 1
SCC 3325 : 1
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: int available()>
Counter value: 1
SCC 3326 : 1
<sun.reflect.ReflectionFactory$1: java.lang.Object run()>
Counter value: 1
SCC 3327 : 1
<java.lang.SecurityManager$2: java.lang.Object run()>
Counter value: 1
SCC 3328 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate withYear(java.time.chrono.JapaneseEra,int)>
Counter value: 1
SCC 3329 : 1
<java.lang.invoke.CatchHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 3330 : 1
<java.util.concurrent.ConcurrentSkipListSet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3331 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 3332 : 1
<java.util.concurrent.ConcurrentSkipListSet: boolean isEmpty()>
Counter value: 1
SCC 3333 : 1
<java.net.URI: int compareIgnoringCase(java.lang.String,java.lang.String)>
Counter value: 1
SCC 3334 : 1
<java.util.stream.SortedOps$IntSortingSink: void accept(int)>
Counter value: 1
SCC 3335 : 1
<sun.net.www.protocol.http.AuthenticationHeader$SchemeMapValue: void <init>(sun.net.www.HeaderParser,java.lang.String)>
Counter value: 1
SCC 3336 : 1
<java.lang.invoke.InnerClassLambdaMetafactory$2: java.lang.Object run()>
Counter value: 1
SCC 3337 : 1
<java.util.TreeMap$AscendingSubMap: java.util.Comparator comparator()>
Counter value: 1
SCC 3338 : 1
<java.lang.Object: void wait(long)>
Counter value: 1
SCC 3339 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble: java.util.Spliterator trySplit()>
Counter value: 1
SCC 3340 : 1
<java.nio.Bits: short getShortB(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 3341 : 1
<sun.reflect.MethodAccessorGenerator$1: void <init>(sun.reflect.MethodAccessorGenerator,java.lang.String,byte[],java.lang.Class)>
Counter value: 1
SCC 3342 : 1
<java.util.Random$RandomDoublesSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 3343 : 1
<java.util.zip.ZipEntry: java.lang.Object clone()>
Counter value: 2
SCC 3344 : 1
<sun.nio.ch.ThreadPool$lambda_defaultThreadFactory_0__35: java.lang.Thread newThread(java.lang.Runnable)>
Counter value: 1
SCC 3345 : 1
<java.nio.DirectByteBufferR: java.nio.ByteBuffer slice()>
Counter value: 1
SCC 3346 : 1
<java.lang.StackTraceElement: java.lang.String getFileName()>
Counter value: 1
SCC 3347 : 1
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3348 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void readShorts(short[],int,int)>
Counter value: 1
SCC 3349 : 1
<sun.nio.fs.AbstractPath$1: void <init>(sun.nio.fs.AbstractPath)>
Counter value: 1
SCC 3350 : 1
<java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 3351 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: void forEach(java.lang.Object)>
Counter value: 1
SCC 3352 : 1
<java.time.zone.ZoneRules: boolean isFixedOffset()>
Counter value: 1
SCC 3353 : 1
<sun.nio.fs.UnixPath: java.nio.file.FileSystem getFileSystem()>
Counter value: 1
SCC 3354 : 1
<sun.misc.SharedSecrets: sun.misc.JavaNetHttpCookieAccess getJavaNetHttpCookieAccess()>
Counter value: 1
SCC 3355 : 1
<java.lang.invoke.MethodType: java.lang.Class parameterType(int)>
Counter value: 1
SCC 3356 : 1
<sun.security.x509.PolicyMappingsExtension: java.lang.String toString()>
Counter value: 1
SCC 3357 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: boolean lambda$initPartialTraversalState$0()>
Counter value: 1
SCC 3358 : 1
<java.net.SocksSocketImpl$7: java.lang.Void run()>
Counter value: 1
SCC 3359 : 1
<jdk.net.ExtendedSocketOptions$ExtSocketOption: java.lang.String toString()>
Counter value: 1
SCC 3360 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfLong: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 3361 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 2
SCC 3362 : 1
<java.time.OffsetDateTime: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3363 : 1
<javax.crypto.spec.RC5ParameterSpec: int getRounds()>
Counter value: 1
SCC 3364 : 1
<java.util.Arrays: java.util.Spliterator$OfDouble spliterator(double[],int,int)>
Counter value: 1
SCC 3365 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter: java.util.spi.LocaleServiceProvider getImpl(java.util.Map,java.util.Locale)>
Counter value: 1
SCC 3366 : 1
<sun.nio.cs.StreamEncoder: void implClose()>
Counter value: 1
SCC 3367 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef$lambda_tryAdvance_0__31: void accept(java.lang.Object)>
Counter value: 1
SCC 3368 : 1
<java.time.chrono.Chronology$1: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 3369 : 1
<sun.net.www.MessageHeader: boolean filterNTLMResponses(java.lang.String)>
Counter value: 1
SCC 3370 : 1
<sun.util.logging.PlatformLogger: void finer(java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 3371 : 1
<java.util.TreeMap$DescendingKeySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 3372 : 1
<java.util.Spliterators$IteratorSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 3373 : 1
<java.time.zone.ZoneOffsetTransition: int hashCode()>
Counter value: 1
SCC 3374 : 1
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 3375 : 1
<java.util.HashMap$Values: boolean contains(java.lang.Object)>
Counter value: 1
SCC 3376 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 3377 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfRef: void <init>(java.util.stream.Nodes$SizedCollectorTask$OfRef,java.util.Spliterator,long,long)>
Counter value: 1
SCC 3378 : 1
<java.util.ArraysParallelSortHelpers$FJChar$Sorter: void <init>(java.util.concurrent.CountedCompleter,char[],char[],int,int,int,int)>
Counter value: 1
SCC 3379 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setAuthenticationProperty(java.lang.String,java.lang.String)>
Counter value: 1
SCC 3380 : 1
<javax.crypto.spec.RC2ParameterSpec: int getEffectiveKeyBits()>
Counter value: 1
SCC 3381 : 1
<java.io.ObjectInputStream: java.io.IOException readFatalException()>
Counter value: 1
SCC 3382 : 1
<sun.nio.ch.SocketChannelImpl: boolean isInputOpen()>
Counter value: 1
SCC 3383 : 1
<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>
Counter value: 1
SCC 3384 : 1
<java.util.Collections$EmptyIterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 3385 : 1
<java.nio.file.attribute.FileTime: long toMillis()>
Counter value: 1
SCC 3386 : 1
<java.net.HostPortrange: void <clinit>()>
Counter value: 1
SCC 3387 : 1
<java.util.stream.SortedOps$SizedIntSortingSink: void end()>
Counter value: 2
SCC 3388 : 1
<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
Counter value: 1
SCC 3389 : 1
<java.util.regex.Matcher: boolean requireEnd()>
Counter value: 1
SCC 3390 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachTransformedValueTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.Function,java.util.function.Consumer)>
Counter value: 1
SCC 3391 : 1
<java.lang.ClassValue$ClassValueMap: void addToCache(java.lang.ClassValue,java.lang.ClassValue$Entry)>
Counter value: 1
SCC 3392 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToDoubleTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 3393 : 1
<java.lang.CharSequence$1CodePointIterator: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 3394 : 1
<java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node succ(java.util.concurrent.ConcurrentLinkedQueue$Node)>
Counter value: 1
SCC 3395 : 1
<java.util.stream.Nodes: int[] access$500()>
Counter value: 1
SCC 3396 : 1
<java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator: void <init>(java.util.concurrent.ConcurrentLinkedQueue)>
Counter value: 1
SCC 3397 : 1
<java.lang.invoke.MethodHandleStatics: java.lang.InternalError newInternalError(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 3398 : 1
<java.util.stream.ReduceOps$6ReducingSink: java.lang.Object get()>
Counter value: 1
SCC 3399 : 1
<java.util.stream.ReduceOps$ReduceOp: java.lang.Object evaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 3400 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: boolean isEmpty()>
Counter value: 2
SCC 3401 : 1
<java.util.stream.Nodes$EmptyNode$OfLong: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3402 : 1
<sun.misc.ProxyGenerator: void addProxyMethod(java.lang.reflect.Method,java.lang.Class)>
Counter value: 1
SCC 3403 : 1
<java.lang.invoke.MethodType: int hashCode()>
Counter value: 1
SCC 3404 : 1
<javax.security.auth.Subject$SecureSet$2: java.lang.Object run()>
Counter value: 1
SCC 3405 : 1
<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getHeaderName()>
Counter value: 1
SCC 3406 : 1
<java.util.LongSummaryStatistics: void accept(int)>
Counter value: 1
SCC 3407 : 1
<java.util.stream.MatchOps$MatchTask: void <init>(java.util.stream.MatchOps$MatchTask,java.util.Spliterator)>
Counter value: 1
SCC 3408 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: int characteristics()>
Counter value: 1
SCC 3409 : 1
<java.util.stream.ForEachOps$ForEachOrderedTask$lambda_doCompute_0__86: java.lang.Object apply(int)>
Counter value: 1
SCC 3410 : 1
<java.util.Scanner: void throwFor()>
Counter value: 1
SCC 3411 : 1
<java.util.stream.ForEachOps: java.util.stream.TerminalOp makeInt(java.util.function.IntConsumer,boolean)>
Counter value: 1
SCC 3412 : 1
<sun.reflect.ByteVectorFactory: sun.reflect.ByteVector create()>
Counter value: 1
SCC 3413 : 1
<java.util.concurrent.TimeUnit$3: long toMicros(long)>
Counter value: 1
SCC 3414 : 1
<sun.reflect.ClassFileAssembler: void opc_aload_0()>
Counter value: 1
SCC 3415 : 1
<java.security.cert.PolicyQualifierInfo: java.lang.String toString()>
Counter value: 1
SCC 3416 : 1
<java.util.concurrent.ForkJoinPool$DefaultCommonPoolForkJoinWorkerThreadFactory: void <init>()>
Counter value: 1
SCC 3417 : 1
<java.util.stream.ForEachOps$ForEachTask: void <init>(java.util.stream.ForEachOps$ForEachTask,java.util.Spliterator)>
Counter value: 1
SCC 3418 : 1
<sun.misc.ProxyGenerator$ConstantPool: short getInterfaceMethodRef(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 3419 : 1
<java.util.Set: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3420 : 1
<java.util.concurrent.ConcurrentLinkedQueue: void updateHead(java.util.concurrent.ConcurrentLinkedQueue$Node,java.util.concurrent.ConcurrentLinkedQueue$Node)>
Counter value: 1
SCC 3421 : 1
<sun.nio.fs.UnixMountEntry: boolean hasOption(java.lang.String)>
Counter value: 1
SCC 3422 : 1
<java.util.Collections$CheckedList$1: void set(java.lang.Object)>
Counter value: 2
SCC 3423 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void add(int,java.lang.Object)>
Counter value: 1
SCC 3424 : 1
<java.util.InputMismatchException: void <init>()>
Counter value: 1
SCC 3425 : 1
<java.lang.Short: long longValue()>
Counter value: 1
SCC 3426 : 1
<java.util.IdentityHashMap$Values: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 3427 : 1
<java.util.stream.DoublePipeline$5$1: boolean cancellationRequested()>
Counter value: 2
SCC 3428 : 1
<sun.net.www.protocol.http.HttpURLConnection$5: java.lang.Object run()>
Counter value: 1
SCC 3429 : 1
<java.util.stream.IntPipeline: void <clinit>()>
Counter value: 1
SCC 3430 : 1
<java.util.stream.Nodes$CollectorTask$OfLong$init__91: java.util.function.BinaryOperator bootstrap$()>
Counter value: 1
SCC 3431 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive: void <init>()>
Counter value: 1
SCC 3432 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$LocaleNameProviderDelegate: void addImpl(java.util.spi.LocaleNameProvider)>
Counter value: 1
SCC 3433 : 1
<java.nio.Bits: void copySwapMemory(java.lang.Object,long,java.lang.Object,long,long,long)>
Counter value: 1
SCC 3434 : 1
<java.util.ArrayList$SubList$1: void remove()>
Counter value: 1
SCC 3435 : 1
<java.lang.reflect.Modifier: int methodModifiers()>
Counter value: 1
SCC 3436 : 1
<java.net.HttpCookie: int hashCode()>
Counter value: 1
SCC 3437 : 1
<java.util.stream.Nodes: java.util.stream.Node$OfLong flattenLong(java.util.stream.Node$OfLong)>
Counter value: 1
SCC 3438 : 1
<java.util.stream.DoublePipeline$2$1: void accept(double)>
Counter value: 1
SCC 3439 : 1
<java.util.Vector$VectorSpliterator: int getFence()>
Counter value: 1
SCC 3440 : 1
<java.io.Console: boolean access$300()>
Counter value: 1
SCC 3441 : 1
<sun.misc.ProxyGenerator$PrimitiveTypeInfo: void <clinit>()>
Counter value: 1
SCC 3442 : 1
<java.util.stream.SortedOps$AbstractLongSortingSink: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 3443 : 1
<java.util.AbstractMap$2$1: void <init>(java.util.AbstractMap$2)>
Counter value: 1
SCC 3444 : 1
<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getAuth(java.lang.String,java.net.URL)>
Counter value: 1
SCC 3445 : 1
<java.nio.DirectIntBufferS: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 3446 : 1
<sun.util.PreHashedMap$1: int size()>
Counter value: 1
SCC 3447 : 1
<java.util.stream.LongPipeline$5$1: void <init>(java.util.stream.LongPipeline$5,java.util.stream.Sink)>
Counter value: 1
SCC 3448 : 1
<java.util.Spliterator$OfLong: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 3449 : 1
<java.util.concurrent.ThreadLocalRandom$RandomIntsSpliterator: long estimateSize()>
Counter value: 1
SCC 3450 : 1
<java.nio.ByteBufferAsCharBufferB: char get(int)>
Counter value: 1
SCC 3451 : 1
<sun.reflect.AccessorGenerator: short indexForPrimitiveType(java.lang.Class)>
Counter value: 1
SCC 3452 : 1
<java.lang.reflect.Method: int getParameterCount()>
Counter value: 1
SCC 3453 : 1
<sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.net.Proxy,int,boolean,sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 3454 : 1
<java.util.Collections$UnmodifiableList: void sort(java.util.Comparator)>
Counter value: 1
SCC 3455 : 1
<java.lang.invoke.LambdaForm$NamedFunction: void <init>(java.lang.reflect.Method)>
Counter value: 1
SCC 3456 : 1
<java.lang.invoke.MethodHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 3457 : 1
<java.util.Scanner: java.lang.String getCompleteTokenInBuffer(java.util.regex.Pattern)>
Counter value: 1
SCC 3458 : 1
<java.util.ArrayList$ListItr: void add(java.lang.Object)>
Counter value: 1
SCC 3459 : 1
<java.security.AccessControlContext: java.security.AccessControlContext optimize()>
Counter value: 1
SCC 3460 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Method access$1600(java.io.ObjectStreamClass)>
Counter value: 1
SCC 3461 : 1
<sun.security.x509.URIName: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3462 : 1
<java.util.TreeMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 3463 : 1
<sun.util.calendar.ZoneInfoFile: boolean useOldMapping()>
Counter value: 1
SCC 3464 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3465 : 1
<sun.net.www.http.KeepAliveCleanerEntry: void <init>(sun.net.www.http.KeepAliveStream,sun.net.www.http.HttpClient)>
Counter value: 1
SCC 3466 : 1
<java.util.HashMap: void reinitialize()>
Counter value: 1
SCC 3467 : 1
<javax.security.auth.Subject: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3468 : 1
<java.net.Socket: void setTcpNoDelay(boolean)>
Counter value: 1
SCC 3469 : 1
<sun.reflect.DelegatingMethodAccessorImpl: void setDelegate(sun.reflect.MethodAccessorImpl)>
Counter value: 1
SCC 3470 : 1
<java.io.FilterOutputStream: void write(int)>
Counter value: 2
SCC 3471 : 1
<java.lang.invoke.MethodHandle: void throwIllegalArgumentExceptionForMHArgCount()>
Counter value: 1
SCC 3472 : 1
<java.util.EnumMap$EnumMapIterator: void remove()>
Counter value: 1
SCC 3473 : 1
<java.time.temporal.IsoFields$Field$1: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal,long)>
Counter value: 1
SCC 3474 : 1
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinTask fork()>
Counter value: 1
SCC 3475 : 1
<java.lang.InstantiationException: void <init>(java.lang.String)>
Counter value: 1
SCC 3476 : 1
<java.util.HashMap$ValueSpliterator: void <init>(java.util.HashMap,int,int,int,int)>
Counter value: 1
SCC 3477 : 1
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>
Counter value: 2
SCC 3478 : 1
<java.lang.Double: int compareTo(java.lang.Object)>
Counter value: 1
SCC 3479 : 1
<java.util.stream.DistinctOps$1$addAll__85: void accept(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3480 : 1
<java.util.stream.Nodes$CollectorTask$OfDouble: java.util.stream.AbstractTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 3481 : 1
<java.util.SortedSet$1: java.util.Comparator getComparator()>
Counter value: 1
SCC 3482 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: java.util.spi.CalendarNameProvider getImpl(java.util.Locale)>
Counter value: 1
SCC 3483 : 1
<java.util.Collections$UnmodifiableList: java.lang.Object remove(int)>
Counter value: 1
SCC 3484 : 1
<java.lang.Float: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3485 : 1
<java.lang.ClassValue: java.lang.ClassValue$ClassValueMap getMap(java.lang.Class)>
Counter value: 1
SCC 3486 : 1
<java.io.ObjectInputStream$ValidationList$1: void <init>(java.io.ObjectInputStream$ValidationList)>
Counter value: 1
SCC 3487 : 1
<sun.nio.ch.Net$1: void <init>()>
Counter value: 1
SCC 3488 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 3489 : 1
<sun.misc.Cleaner: sun.misc.Cleaner add(sun.misc.Cleaner)>
Counter value: 1
SCC 3490 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfInt: java.util.Spliterator makeSpliterator(java.util.Spliterator,long,long,long,long)>
Counter value: 1
SCC 3491 : 1
<java.io.ObjectStreamClass: java.lang.Object invokeReadResolve(java.lang.Object)>
Counter value: 1
SCC 3492 : 1
<sun.net.www.protocol.http.AuthenticationHeader: boolean isPresent()>
Counter value: 1
SCC 3493 : 1
<sun.net.www.protocol.file.FileURLConnection: java.lang.String getHeaderField(java.lang.String)>
Counter value: 1
SCC 3494 : 1
<java.net.NetworkInterface$1checkedAddresses: boolean hasMoreElements()>
Counter value: 1
SCC 3495 : 1
<sun.nio.fs.UnixDirectoryStream: void close()>
Counter value: 1
SCC 3496 : 1
<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider access$102(java.nio.channels.spi.SelectorProvider)>
Counter value: 1
SCC 3497 : 1
<java.net.URLClassLoader$5: java.lang.Object run()>
Counter value: 1
SCC 3498 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfLong: java.util.Spliterator$OfLong makeSpliterator(java.util.Spliterator$OfLong,long,long,long,long)>
Counter value: 1
SCC 3499 : 1
<java.lang.ClassValue$Version: java.lang.ClassValue$Entry promise()>
Counter value: 1
SCC 3500 : 1
<sun.nio.fs.UnixFileSystem$3: boolean matches(java.nio.file.Path)>
Counter value: 1
SCC 3501 : 1
<java.util.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 3502 : 1
<java.util.concurrent.ThreadLocalRandom$RandomIntsSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 3503 : 1
<java.util.Vector$ListItr: java.lang.Object previous()>
Counter value: 1
SCC 3504 : 1
<java.lang.ProcessBuilder$Redirect$4: java.lang.String toString()>
Counter value: 1
SCC 3505 : 1
<java.lang.invoke.MethodHandleImpl$ArrayAccessor$1: java.lang.Object computeValue(java.lang.Class)>
Counter value: 1
SCC 3506 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal,long)>
Counter value: 1
SCC 3507 : 1
<java.util.stream.Nodes$DoubleFixedNodeBuilder: java.util.stream.Node build()>
Counter value: 1
SCC 3508 : 1
<sun.net.www.protocol.http.HttpURLConnection$7: java.net.ProxySelector run()>
Counter value: 1
SCC 3509 : 1
<sun.security.provider.X509Factory: java.security.cert.CertPath engineGenerateCertPath(java.util.List)>
Counter value: 1
SCC 3510 : 1
<java.util.Spliterators$3Adapter: long nextLong()>
Counter value: 1
SCC 3511 : 1
<java.util.IdentityHashMap$Values: java.lang.Object[] toArray()>
Counter value: 1
SCC 3512 : 1
<sun.reflect.AccessorGenerator: void emitConstructor()>
Counter value: 1
SCC 3513 : 1
<sun.reflect.ByteVectorImpl: int getLength()>
Counter value: 1
SCC 3514 : 1
<sun.invoke.util.Wrapper$Format: int unsigned(int)>
Counter value: 1
SCC 3515 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CollatorProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 3516 : 1
<sun.security.util.Pem: byte[] decode(java.lang.String)>
Counter value: 1
SCC 3517 : 1
<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getServerAuthKey(java.net.URL,java.lang.String,sun.net.www.protocol.http.AuthScheme)>
Counter value: 1
SCC 3518 : 1
<sun.reflect.AccessorGenerator: short unboxingMethodForPrimitiveType(java.lang.Class)>
Counter value: 1
SCC 3519 : 1
<java.lang.invoke.MethodHandle: java.lang.String mapKindToBytecode()>
Counter value: 2
SCC 3520 : 1
<java.util.Spliterators$EmptySpliterator$OfRef: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 3521 : 1
<java.time.chrono.MinguoDate: java.lang.String toString()>
Counter value: 1
SCC 3522 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 3523 : 1
<java.nio.FloatBuffer: int compareTo(java.lang.Object)>
Counter value: 1
SCC 3524 : 1
<java.util.stream.ReferencePipeline$StatelessOp: void <init>(java.util.stream.AbstractPipeline,java.util.stream.StreamShape,int)>
Counter value: 1
SCC 3525 : 1
<java.lang.Double: float floatValue()>
Counter value: 1
SCC 3526 : 1
<java.io.ObjectStreamClass$5: int compare(java.io.ObjectStreamClass$MemberSignature,java.io.ObjectStreamClass$MemberSignature)>
Counter value: 1
SCC 3527 : 1
<java.lang.invoke.MethodHandleInfoImpl: int getReferenceKind()>
Counter value: 1
SCC 3528 : 1
<java.util.concurrent.ThreadLocalRandom: double nextDouble()>
Counter value: 1
SCC 3529 : 1
<java.lang.invoke.MethodHandleInfoImpl$1: java.lang.reflect.Member run()>
Counter value: 1
SCC 3530 : 1
<java.util.IdentityHashMap$EntrySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 3531 : 1
<java.time.chrono.JapaneseEra: sun.util.calendar.Era getPrivateEra()>
Counter value: 1
SCC 3532 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 3533 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: void <clinit>()>
Counter value: 1
SCC 3534 : 1
<sun.security.x509.X509CertImpl: void <init>(byte[])>
Counter value: 1
SCC 3535 : 1
<java.nio.file.FileSystemException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 3536 : 1
<java.util.AbstractList: int indexOf(java.lang.Object)>
Counter value: 1
SCC 3537 : 1
<java.util.Scanner: boolean hasNext()>
Counter value: 1
SCC 3538 : 1
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
Counter value: 1
SCC 3539 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator wrap(java.util.Spliterator)>
Counter value: 1
SCC 3540 : 1
<java.io.ObjectInputStream: void access$1200(java.io.ObjectInputStream)>
Counter value: 1
SCC 3541 : 1
<java.lang.VMAccess: java.lang.Object setMethodHandleCache(java.lang.Class,java.lang.Object)>
Counter value: 1
SCC 3542 : 1
<java.util.stream.Nodes$ToArrayTask: void compute()>
Counter value: 1
SCC 3543 : 1
<java.time.ZonedDateTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3544 : 1
<java.net.SocksSocketImpl: java.lang.String access$300(java.net.SocksSocketImpl)>
Counter value: 1
SCC 3545 : 1
<javax.crypto.PermissionsEnumerator: java.lang.Object nextElement()>
Counter value: 1
SCC 3546 : 1
<java.util.concurrent.SynchronousQueue: boolean contains(java.lang.Object)>
Counter value: 1
SCC 3547 : 1
<java.util.Collections$CopiesList$lambda_stream_0__47: java.util.function.IntFunction bootstrap$(java.util.Collections$CopiesList)>
Counter value: 1
SCC 3548 : 1
<sun.nio.ch.SocketChannelImpl: java.nio.channels.SocketChannel setOption(java.net.SocketOption,java.lang.Object)>
Counter value: 1
SCC 3549 : 1
<java.util.PrimitiveIterator$OfLong: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 3550 : 1
<java.util.Scanner: boolean hasNextLine()>
Counter value: 1
SCC 3551 : 1
<sun.nio.ch.SimpleAsynchronousFileChannelImpl: sun.nio.ch.NativeThreadSet access$000(sun.nio.ch.SimpleAsynchronousFileChannelImpl)>
Counter value: 1
SCC 3552 : 1
<java.util.stream.FindOps$FindSink$OfInt: void accept(int)>
Counter value: 1
SCC 3553 : 1
<java.nio.StringCharBuffer: char get(int)>
Counter value: 1
SCC 3554 : 1
<java.lang.Class$ReflectRef: void run()>
Counter value: 1
SCC 3555 : 1
<java.time.Year: java.time.Year minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3556 : 1
<java.util.ArraysParallelSortHelpers$FJObject$Merger: void compute()>
Counter value: 1
SCC 3557 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: java.util.Spliterator$OfLong trySplit()>
Counter value: 1
SCC 3558 : 1
<java.util.stream.Streams$RangeLongSpliterator: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 3559 : 1
<java.math.MathContext: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3560 : 1
<java.util.Collections$AsLIFOQueue: java.lang.String toString()>
Counter value: 1
SCC 3561 : 1
<java.lang.invoke.DirectHandle: void <init>(java.lang.invoke.DirectHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 3562 : 1
<java.util.stream.Nodes$SizedCollectorTask: void <init>(java.util.stream.Nodes$SizedCollectorTask,java.util.Spliterator,long,long,int)>
Counter value: 1
SCC 3563 : 1
<sun.reflect.ClassFileAssembler: void opc_if_icmpeq(sun.reflect.Label)>
Counter value: 1
SCC 3564 : 1
<java.util.stream.Streams$ConcatSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 2
SCC 3565 : 1
<sun.net.sdp.SdpSupport$1: void <init>()>
Counter value: 1
SCC 3566 : 1
<java.util.stream.StreamSupport: java.util.stream.Stream stream(java.util.Spliterator,boolean)>
Counter value: 1
SCC 3567 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: void ascend()>
Counter value: 1
SCC 3568 : 1
<sun.security.util.KnownOIDs$9: boolean registerNames()>
Counter value: 1
SCC 3569 : 1
<java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>
Counter value: 1
SCC 3570 : 1
<sun.nio.ch.ServerSocketChannelImpl: boolean isBound()>
Counter value: 1
SCC 3571 : 1
<java.io.ObjectInputStream: boolean access$1100(java.io.ObjectInputStream)>
Counter value: 1
SCC 3572 : 1
<java.net.AbstractPlainSocketImpl: void <clinit>()>
Counter value: 1
SCC 3573 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: void accept(int)>
Counter value: 1
SCC 3574 : 1
<java.time.LocalDate: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 3575 : 1
<java.util.Date: int compareTo(java.util.Date)>
Counter value: 1
SCC 3576 : 1
<java.util.stream.SliceOps$lambda_castingArray_0__68: java.lang.Object apply(int)>
Counter value: 1
SCC 3577 : 1
<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 3578 : 1
<java.io.ObjectStreamField: void setOffset(int)>
Counter value: 1
SCC 3579 : 1
<java.time.chrono.HijrahChronology: int epochDayToEpochMonth(int)>
Counter value: 1
SCC 3580 : 1
<java.util.EnumMap$EntrySet: java.lang.Object[] toArray()>
Counter value: 1
SCC 3581 : 1
<sun.security.x509.SubjectAlternativeNameExtension: sun.security.x509.GeneralNames get(java.lang.String)>
Counter value: 1
SCC 3582 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator wrap(java.util.Spliterator)>
Counter value: 1
SCC 3583 : 1
<sun.nio.ch.FileChannelImpl: void ensureOpen()>
Counter value: 1
SCC 3584 : 1
<java.util.Collections$CheckedMap: int hashCode()>
Counter value: 2
SCC 3585 : 1
<java.net.URLConnection: void setConnectTimeout(int)>
Counter value: 1
SCC 3586 : 1
<java.nio.file.Files: boolean isAccessible(java.nio.file.Path,java.nio.file.AccessMode[])>
Counter value: 1
SCC 3587 : 1
<java.io.ObjectStreamClass: void invokeReadObject(java.lang.Object,java.io.ObjectInputStream)>
Counter value: 1
SCC 3588 : 1
<java.util.concurrent.ForkJoinPool: void externalPush(java.util.concurrent.ForkJoinTask)>
Counter value: 1
SCC 3589 : 1
<java.util.IdentityHashMap$EntrySpliterator: java.util.IdentityHashMap$EntrySpliterator trySplit()>
Counter value: 1
SCC 3590 : 1
<java.time.LocalTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3591 : 1
<java.time.ZoneOffset: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 3592 : 1
<java.util.Collections$UnmodifiableList$1: void forEachRemaining(java.util.function.Consumer)>
Counter value: 2
SCC 3593 : 1
<java.time.OffsetTime: long toEpochNano()>
Counter value: 1
SCC 3594 : 1
<java.util.stream.SpinedBuffer$OfDouble: java.lang.Object[] newArrayArray(int)>
Counter value: 1
SCC 3595 : 1
<java.util.stream.SpinedBuffer: java.lang.String toString()>
Counter value: 1
SCC 3596 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean contains(java.lang.Object)>
Counter value: 2
SCC 3597 : 1
<sun.net.www.http.KeepAliveStream: java.lang.Thread access$000()>
Counter value: 1
SCC 3598 : 1
<java.util.HashMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 3599 : 1
<java.util.HashMap$EntrySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3600 : 1
<sun.net.www.protocol.http.HttpURLConnection$3: java.net.ResponseCache run()>
Counter value: 1
SCC 3601 : 1
<sun.reflect.generics.repository.MethodRepository: sun.reflect.generics.repository.MethodRepository make(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
Counter value: 1
SCC 3602 : 1
<sun.net.NetworkClient: boolean serverIsOpen()>
Counter value: 1
SCC 3603 : 1
<sun.net.ResourceManager: void afterUdpClose()>
Counter value: 1
SCC 3604 : 1
<sun.reflect.UnsafeByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3605 : 1
<java.util.stream.Streams$RangeIntSpliterator: int splitPoint(long)>
Counter value: 1
SCC 3606 : 1
<sun.util.locale.provider.LocaleResources: java.lang.String[] getCalendarNames(java.lang.String)>
Counter value: 1
SCC 3607 : 1
<java.lang.StackTraceElement: boolean isNativeMethod()>
Counter value: 1
SCC 3608 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 3609 : 1
<jdk.internal.org.objectweb.asm.Type: java.lang.String getMethodDescriptor(jdk.internal.org.objectweb.asm.Type,jdk.internal.org.objectweb.asm.Type[])>
Counter value: 1
SCC 3610 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Method access$2502(java.io.ObjectStreamClass,java.lang.reflect.Method)>
Counter value: 1
SCC 3611 : 1
<sun.nio.ch.FileDispatcherImpl: void release(java.io.FileDescriptor,long,long)>
Counter value: 1
SCC 3612 : 1
<sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: int hashCode()>
Counter value: 1
SCC 3613 : 1
<java.nio.file.FileSystemException: void <init>(java.lang.String)>
Counter value: 1
SCC 3614 : 1
<java.util.ArrayDeque$DeqIterator: void <init>(java.util.ArrayDeque)>
Counter value: 1
SCC 3615 : 1
<java.util.Collections$CheckedNavigableMap: java.util.Set keySet()>
Counter value: 1
SCC 3616 : 1
<java.util.concurrent.ForkJoinPool: void <init>(int,java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory,java.lang.Thread$UncaughtExceptionHandler,int,java.lang.String)>
Counter value: 1
SCC 3617 : 1
<java.util.JumboEnumSet: int access$110(java.util.JumboEnumSet)>
Counter value: 1
SCC 3618 : 1
<java.util.Scanner: void cacheResult()>
Counter value: 1
SCC 3619 : 1
<java.util.concurrent.ConcurrentHashMap$ReduceEntriesTask: java.util.Map$Entry getRawResult()>
Counter value: 1
SCC 3620 : 1
<java.nio.IntBuffer: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3621 : 1
<java.util.Iterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 3622 : 1
<java.util.AbstractMap$2$1: java.lang.Object next()>
Counter value: 2
SCC 3623 : 1
<java.util.stream.SpinedBuffer$OfDouble: double[][] newArrayArray(int)>
Counter value: 1
SCC 3624 : 1
<java.time.chrono.ThaiBuddhistDate: void <init>(java.time.LocalDate)>
Counter value: 1
SCC 3625 : 1
<java.util.stream.Streams$ConcatSpliterator$OfInt: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 3626 : 1
<java.util.concurrent.ForkJoinTask$RunnableExecuteAction: java.lang.Void getRawResult()>
Counter value: 1
SCC 3627 : 1
<sun.net.sdp.SdpProvider$Action: void <init>(java.lang.String,int)>
Counter value: 1
SCC 3628 : 1
<sun.nio.ch.Util$BufferCache: boolean isEmpty()>
Counter value: 1
SCC 3629 : 1
<java.util.Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer: void accept(double)>
Counter value: 1
SCC 3630 : 1
<java.lang.invoke.FieldCacheKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3631 : 1
<java.io.ObjectInputStream: java.lang.Object readObject0(java.lang.Class,boolean)>
Counter value: 1
SCC 3632 : 1
<java.time.chrono.JapaneseEra: void <init>(int,java.time.LocalDate)>
Counter value: 1
SCC 3633 : 1
<java.io.ObjectInputStream$BlockDataInputStream: int currentBlockRemaining()>
Counter value: 1
SCC 3634 : 1
<java.util.stream.ReduceOps$4ReducingSink: void accept(java.lang.Object)>
Counter value: 1
SCC 3635 : 1
<java.net.SocketAddress: void <init>()>
Counter value: 1
SCC 3636 : 1
<java.io.ObjectStreamClass: boolean hasWriteObjectData()>
Counter value: 1
SCC 3637 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: java.lang.String getAlgorithm()>
Counter value: 1
SCC 3638 : 1
<java.io.ClassByNameCache$LookupKey: int hashCode(java.lang.String,java.lang.ClassLoader)>
Counter value: 1
SCC 3639 : 1
<java.nio.CharBuffer: int compare(char,char)>
Counter value: 1
SCC 3640 : 1
<java.util.stream.Nodes$ConcNode$OfInt: java.util.Spliterator$OfInt spliterator()>
Counter value: 1
SCC 3641 : 1
<java.lang.ProcessBuilder$Redirect$4: boolean append()>
Counter value: 1
SCC 3642 : 1
<java.util.Random$RandomDoublesSpliterator: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 3643 : 1
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 3644 : 1
<java.lang.reflect.Constructor: void setConstructorAccessor(sun.reflect.ConstructorAccessor)>
Counter value: 2
SCC 3645 : 1
<sun.security.x509.AuthorityInfoAccessExtension: java.lang.String getName()>
Counter value: 1
SCC 3646 : 1
<java.util.concurrent.Executors$RunnableAdapter: java.lang.Object call()>
Counter value: 1
SCC 3647 : 1
<javax.security.auth.SubjectDomainCombiner$5: java.lang.String run()>
Counter value: 1
SCC 3648 : 1
<java.util.LinkedHashMap$LinkedKeySet: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 3649 : 1
<java.io.ClassByNameCache: void <init>()>
Counter value: 1
SCC 3650 : 1
<javax.security.auth.Subject$ClassSet: java.util.Iterator iterator()>
Counter value: 2
SCC 3651 : 1
<java.time.Instant: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 3652 : 1
<java.util.concurrent.TimeUnit$3: long toMillis(long)>
Counter value: 1
SCC 3653 : 1
<java.nio.CharBuffer: int compareTo(java.lang.Object)>
Counter value: 1
SCC 3654 : 1
<java.util.stream.Streams$AbstractStreamBuilderImpl: int characteristics()>
Counter value: 1
SCC 3655 : 1
<sun.net.www.http.KeepAliveStream: java.lang.Thread access$002(java.lang.Thread)>
Counter value: 1
SCC 3656 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3657 : 1
<java.util.Spliterators$DoubleIteratorSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 3658 : 1
<java.io.UncheckedIOException: void <init>(java.io.IOException)>
Counter value: 1
SCC 3659 : 1
<java.util.stream.Nodes$CollectorTask$OfRef$lambda_new_0__94: void <init>(java.util.function.IntFunction)>
Counter value: 1
SCC 3660 : 1
<sun.net.www.http.ChunkedInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 3661 : 1
<java.util.stream.IntPipeline$StatefulOp: java.util.Spliterator lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 3662 : 1
<java.nio.channels.FileChannel: void <init>()>
Counter value: 1
SCC 3663 : 1
<sun.nio.ch.ExtendedSocketOption$1: java.lang.String name()>
Counter value: 1
SCC 3664 : 1
<sun.misc.ProxyGenerator: void <clinit>()>
Counter value: 1
SCC 3665 : 1
<sun.net.www.MessageHeader: void print(java.io.PrintStream)>
Counter value: 1
SCC 3666 : 1
<java.util.LinkedHashMap$LinkedKeySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3667 : 1
<java.util.concurrent.FutureTask: boolean cancel(boolean)>
Counter value: 1
SCC 3668 : 1
<java.util.ArraysParallelSortHelpers$FJByte$Merger: void <init>(java.util.concurrent.CountedCompleter,byte[],byte[],int,int,int,int,int,int)>
Counter value: 1
SCC 3669 : 1
<java.util.ArraysParallelSortHelpers$FJShort$Merger: void compute()>
Counter value: 1
SCC 3670 : 1
<java.time.zone.ZoneOffsetTransitionRule: java.time.zone.ZoneOffsetTransition createTransition(int)>
Counter value: 1
SCC 3671 : 1
<java.util.concurrent.ForkJoinPool: int lockRunState()>
Counter value: 1
SCC 3672 : 1
<java.util.concurrent.ForkJoinPool$EmptyTask: java.lang.Void getRawResult()>
Counter value: 1
SCC 3673 : 1
<java.nio.file.Files: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>
Counter value: 1
SCC 3674 : 1
<java.util.Spliterator$OfDouble$accept__78: java.util.function.DoubleConsumer bootstrap$(java.util.function.Consumer)>
Counter value: 1
SCC 3675 : 1
<java.time.OffsetTime: java.time.OffsetTime 'with'(java.time.LocalTime,java.time.ZoneOffset)>
Counter value: 1
SCC 3676 : 1
<java.util.AbstractMap$2: boolean isEmpty()>
Counter value: 1
SCC 3677 : 1
<sun.nio.fs.UnixFileAttributes: sun.nio.fs.UnixFileKey fileKey()>
Counter value: 1
SCC 3678 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 3679 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setProxiedClient(java.net.URL,java.lang.String,int)>
Counter value: 1
SCC 3680 : 1
<java.lang.invoke.CollectHandle: java.lang.invoke.MethodType collectMethodType(java.lang.invoke.MethodType,int,int)>
Counter value: 1
SCC 3681 : 1
<java.util.stream.ReduceOps$7: java.util.stream.ReduceOps$7ReducingSink makeSink()>
Counter value: 1
SCC 3682 : 1
<java.util.Spliterators$LongArraySpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 3683 : 1
<java.time.YearMonth: int compareTo(java.time.YearMonth)>
Counter value: 1
SCC 3684 : 1
<java.lang.'annotation'.AnnotationFormatError: void <init>(java.lang.String)>
Counter value: 1
SCC 3685 : 1
<sun.reflect.MethodAccessorGenerator: void <clinit>()>
Counter value: 1
SCC 3686 : 1
<java.lang.reflect.Parameter: java.lang.String getName()>
Counter value: 1
SCC 3687 : 1
<sun.net.www.protocol.http.HttpURLConnection: void checkURLFile()>
Counter value: 1
SCC 3688 : 1
<java.util.concurrent.TimeUnit$1: long toSeconds(long)>
Counter value: 1
SCC 3689 : 1
<java.nio.Bits: void keepAlive(java.lang.Object)>
Counter value: 1
SCC 3690 : 1
<java.lang.invoke.SecurityFrameInjector$4: java.lang.Object run()>
Counter value: 1
SCC 3691 : 1
<java.nio.DirectByteBufferR: boolean isDirect()>
Counter value: 1
SCC 3692 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.Collection values()>
Counter value: 1
SCC 3693 : 1
<java.nio.DirectCharBufferS: char get()>
Counter value: 1
SCC 3694 : 1
<java.net.SocketOutputStream: void <init>(java.net.AbstractPlainSocketImpl)>
Counter value: 1
SCC 3695 : 1
<java.util.ServiceLoader: java.lang.String toString()>
Counter value: 1
SCC 3696 : 1
<java.text.ParsePosition: int hashCode()>
Counter value: 1
SCC 3697 : 1
<java.lang.ProcessEnvironment$StringEntrySet$1: void remove()>
Counter value: 2
SCC 3698 : 1
<java.net.SocksSocketImpl: java.io.OutputStream access$202(java.net.SocksSocketImpl,java.io.OutputStream)>
Counter value: 1
SCC 3699 : 1
<java.time.chrono.AbstractChronology: int compareTo(java.lang.Object)>
Counter value: 1
SCC 3700 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator: boolean lambda$initPartialTraversalState$0()>
Counter value: 1
SCC 3701 : 1
<java.text.DigitList: java.lang.String toString()>
Counter value: 1
SCC 3702 : 1
<sun.util.calendar.ZoneInfo: java.lang.String toString()>
Counter value: 1
SCC 3703 : 1
<java.time.OffsetDateTime: java.time.OffsetDateTime plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3704 : 1
<java.util.stream.IntPipeline: java.util.Spliterator$OfInt spliterator()>
Counter value: 1
SCC 3705 : 1
<java.util.TreeMap$DescendingSubMap: java.util.Spliterator keySpliterator()>
Counter value: 1
SCC 3706 : 1
<sun.reflect.AccessorGenerator: boolean isStatic()>
Counter value: 1
SCC 3707 : 1
<java.util.concurrent.ConcurrentHashMap$ValueSpliterator: int characteristics()>
Counter value: 1
SCC 3708 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: int getPort()>
Counter value: 1
SCC 3709 : 1
<sun.net.www.HeaderParser: java.lang.String findValue(java.lang.String,java.lang.String)>
Counter value: 1
SCC 3710 : 1
<java.util.stream.ReferencePipeline$11: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 3711 : 1
<java.lang.invoke.InnerClassLambdaMetafactory: java.lang.invoke.ProxyClassesDumper access$100()>
Counter value: 1
SCC 3712 : 1
<java.nio.DirectLongBufferU: long address()>
Counter value: 1
SCC 3713 : 1
<sun.net.www.protocol.http.HttpURLConnection$1: void <init>(java.lang.String,java.net.URL,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.Authenticator$RequestorType)>
Counter value: 1
SCC 3714 : 1
<java.io.IOError: void <init>(java.lang.Throwable)>
Counter value: 1
SCC 3715 : 1
<java.util.stream.StreamOpFlag$Type: void <clinit>()>
Counter value: 1
SCC 3716 : 1
<sun.nio.ch.SocketChannelImpl: boolean connect(java.net.SocketAddress)>
Counter value: 1
SCC 3717 : 1
<java.util.stream.SliceOps$SliceTask: void <init>(java.util.stream.AbstractPipeline,java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction,long,long)>
Counter value: 1
SCC 3718 : 1
<java.util.IdentityHashMap$Values: java.util.Iterator iterator()>
Counter value: 1
SCC 3719 : 1
<sun.nio.ch.SocketChannelImpl: java.lang.String toString()>
Counter value: 1
SCC 3720 : 1
<java.util.GregorianCalendar: int hashCode()>
Counter value: 1
SCC 3721 : 1
<java.lang.invoke.WrongMethodTypeException: void <init>()>
Counter value: 1
SCC 3722 : 1
<java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>
Counter value: 2
SCC 3723 : 1
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
Counter value: 1
SCC 3724 : 1
<java.io.File: void deleteOnExit()>
Counter value: 1
SCC 3725 : 1
<java.text.CalendarBuilder: java.lang.String toString()>
Counter value: 1
SCC 3726 : 1
<java.util.concurrent.ForkJoinTask: int doJoin()>
Counter value: 1
SCC 3727 : 1
<java.util.stream.Nodes$DoubleArrayNode: double[] asPrimitiveArray()>
Counter value: 1
SCC 3728 : 1
<java.util.Arrays: int hashCode(int[])>
Counter value: 1
SCC 3729 : 1
<java.io.ObjectStreamField: java.lang.String getSignature()>
Counter value: 1
SCC 3730 : 1
<java.net.ServerSocket: boolean isClosed()>
Counter value: 1
SCC 3731 : 1
<java.nio.ByteBufferAsCharBufferRL: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 3732 : 1
<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>
Counter value: 1
SCC 3733 : 1
<java.util.stream.ReduceOps$1: java.util.stream.ReduceOps$1ReducingSink makeSink()>
Counter value: 1
SCC 3734 : 1
<java.io.ClassByNameCache$Key: void <init>(java.lang.String,int)>
Counter value: 1
SCC 3735 : 1
<java.time.zone.ZoneRules: java.time.zone.ZoneRules readExternal(java.io.DataInput)>
Counter value: 1
SCC 3736 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] access$800(java.lang.Class)>
Counter value: 1
SCC 3737 : 1
<java.lang.reflect.Executable: java.lang.reflect.Parameter[] privateGetParameters()>
Counter value: 1
SCC 3738 : 1
<java.net.HttpRetryException: void <init>(java.lang.String,int)>
Counter value: 1
SCC 3739 : 1
<java.util.OptionalLong: int hashCode()>
Counter value: 1
SCC 3740 : 1
<java.util.Collections$UnmodifiableNavigableMap: java.util.NavigableSet navigableKeySet()>
Counter value: 2
SCC 3741 : 1
<java.util.concurrent.CopyOnWriteArrayList: void resetLock()>
Counter value: 1
SCC 3742 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 3743 : 1
<java.util.Random$RandomDoublesSpliterator: void <init>(java.util.Random,long,long,double,double)>
Counter value: 1
SCC 3744 : 1
<java.util.concurrent.atomic.AtomicLong: double doubleValue()>
Counter value: 1
SCC 3745 : 1
<java.util.regex.Matcher: java.util.regex.Matcher useTransparentBounds(boolean)>
Counter value: 1
SCC 3746 : 1
<java.util.TreeMap$NavigableSubMap: java.util.NavigableSet navigableKeySet()>
Counter value: 1
SCC 3747 : 1
<java.lang.invoke.SecurityFrameInjector$1: byte[] run()>
Counter value: 1
SCC 3748 : 1
<java.lang.ClassValue: java.lang.Object getFromBackup(java.lang.ClassValue$Entry[],java.lang.Class)>
Counter value: 1
SCC 3749 : 1
<sun.reflect.ClassFileAssembler: void append(sun.reflect.ClassFileAssembler)>
Counter value: 1
SCC 3750 : 1
<java.net.DatagramSocket$1: java.lang.Void run()>
Counter value: 1
SCC 3751 : 1
<java.util.concurrent.ConcurrentSkipListSet: void clear()>
Counter value: 1
SCC 3752 : 1
<java.time.chrono.HijrahChronology: int epochMonthLength(int)>
Counter value: 1
SCC 3753 : 1
<java.util.Optional: int hashCode()>
Counter value: 1
SCC 3754 : 1
<sun.reflect.Label: void bind()>
Counter value: 1
SCC 3755 : 1
<java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: java.nio.channels.spi.AsynchronousChannelProvider access$100()>
Counter value: 1
SCC 3756 : 1
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
Counter value: 2
SCC 3757 : 1
<java.io.ObjectStreamClass: void computeFieldOffsets()>
Counter value: 1
SCC 3758 : 1
<java.io.PrintStream: void close()>
Counter value: 1
SCC 3759 : 1
<java.util.jar.Attributes: boolean containsValue(java.lang.Object)>
Counter value: 2
SCC 3760 : 1
<java.time.MonthDay: int compareTo(java.time.MonthDay)>
Counter value: 1
SCC 3761 : 1
<sun.reflect.DelegatingConstructorAccessorImpl: java.lang.Object newInstance(java.lang.Object[])>
Counter value: 2
SCC 3762 : 1
<java.nio.DirectCharBufferRU: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 3763 : 1
<java.time.chrono.JapaneseDate: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 3764 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
Counter value: 1
SCC 3765 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesTask: void compute()>
Counter value: 1
SCC 3766 : 1
<java.util.Spliterators$IteratorSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 3767 : 1
<java.util.Collections$SingletonSet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3768 : 1
<java.util.stream.SliceOps: java.lang.Object[] lambda$castingArray$0(int)>
Counter value: 1
SCC 3769 : 1
<java.text.Collator: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3770 : 1
<java.nio.ByteBufferAsShortBufferB: short get(int)>
Counter value: 1
SCC 3771 : 1
<java.time.chrono.AbstractChronology: java.time.chrono.Chronology registerChrono(java.time.chrono.Chronology)>
Counter value: 1
SCC 3772 : 1
<java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
Counter value: 1
SCC 3773 : 1
<java.nio.Bits: short swap(short)>
Counter value: 1
SCC 3774 : 1
<java.nio.ByteBufferAsCharBufferRB: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 3775 : 1
<java.lang.reflect.Field: sun.reflect.FieldAccessor acquireFieldAccessor(boolean)>
Counter value: 1
SCC 3776 : 1
<sun.net.www.protocol.http.HttpURLConnection$2: java.net.CookieHandler run()>
Counter value: 1
SCC 3777 : 1
<java.time.chrono.Chronology: java.time.chrono.Chronology of(java.lang.String)>
Counter value: 1
SCC 3778 : 1
<sun.nio.ch.Invoker: void <clinit>()>
Counter value: 1
SCC 3779 : 1
<java.lang.ProcessBuilder$NullOutputStream: void write(int)>
Counter value: 1
SCC 3780 : 1
<java.util.concurrent.ForkJoinPool$1: java.lang.Object run()>
Counter value: 1
SCC 3781 : 1
<java.time.chrono.ChronoLocalDateImpl: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3782 : 1
<java.util.stream.ReduceOps$9: java.util.stream.ReduceOps$9ReducingSink makeSink()>
Counter value: 1
SCC 3783 : 1
<java.nio.ByteBufferAsIntBufferL: int ix(int)>
Counter value: 1
SCC 3784 : 1
<java.util.concurrent.ConcurrentSkipListSet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 3785 : 1
<java.util.stream.MatchOps$MatchKind: void <init>(java.lang.String,int,boolean,boolean)>
Counter value: 1
SCC 3786 : 1
<java.util.stream.Nodes$LongArrayNode: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3787 : 1
<java.time.chrono.AbstractChronology: java.time.chrono.Chronology of0(java.lang.String)>
Counter value: 1
SCC 3788 : 1
<java.io.OptionalDataException: void <init>(int)>
Counter value: 1
SCC 3789 : 1
<java.util.HashMap$EntrySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 3790 : 1
<java.time.chrono.Ser: void readExternal(java.io.ObjectInput)>
Counter value: 1
SCC 3791 : 1
<sun.misc.ProxyGenerator: int access$408(sun.misc.ProxyGenerator)>
Counter value: 1
SCC 3792 : 1
<java.lang.invoke.ThunkTuple: java.lang.invoke.ThunkTuple newShareable(java.lang.invoke.MethodType)>
Counter value: 1
SCC 3793 : 1
<java.nio.DirectCharBufferS: java.nio.CharBuffer get(char[],int,int)>
Counter value: 1
SCC 3794 : 1
<java.lang.StackTraceElement: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3795 : 1
<java.util.concurrent.ConcurrentHashMap$SearchValuesTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.Function,java.util.concurrent.atomic.AtomicReference)>
Counter value: 1
SCC 3796 : 1
<java.util.stream.Nodes$IntArrayNode: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 3797 : 1
<java.util.Spliterators$EmptySpliterator$OfRef: void <init>()>
Counter value: 1
SCC 3798 : 1
<java.util.stream.SliceOps: java.util.function.IntFunction castingArray()>
Counter value: 1
SCC 3799 : 1
<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>
Counter value: 1
SCC 3800 : 1
<java.util.stream.SpinedBuffer$OfDouble$1Splitr: void arrayForOne(double[],int,java.util.function.DoubleConsumer)>
Counter value: 1
SCC 3801 : 1
<sun.net.NetworkClient: java.net.Socket doConnect(java.lang.String,int)>
Counter value: 1
SCC 3802 : 1
<java.io.Console: java.io.Console access$602(java.io.Console)>
Counter value: 1
SCC 3803 : 1
<java.util.stream.SpinedBuffer$OfDouble: java.lang.Object newArray(int)>
Counter value: 1
SCC 3804 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: void acceptConsumed(java.lang.Object)>
Counter value: 1
SCC 3805 : 1
<java.util.EnumMap$Values: void <init>(java.util.EnumMap,java.util.EnumMap$1)>
Counter value: 1
SCC 3806 : 1
<sun.nio.cs.FastCharsetProvider$1: void remove()>
Counter value: 1
SCC 3807 : 1
<java.net.HttpCookie$10: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 3808 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel$1: void <init>(java.nio.channels.spi.AbstractInterruptibleChannel)>
Counter value: 1
SCC 3809 : 1
<java.io.ClassByNameCache$CreateReaperAction: java.lang.Thread run()>
Counter value: 1
SCC 3810 : 1
<java.util.stream.StreamOpFlag$MaskBuilder: void <init>(java.util.Map)>
Counter value: 1
SCC 3811 : 1
<java.lang.invoke.ThunkKeyWithObject: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3812 : 1
<java.time.YearMonth: java.time.YearMonth of(int,int)>
Counter value: 1
SCC 3813 : 1
<java.lang.ClassLoader: java.lang.Object[] getSigners(java.lang.Class)>
Counter value: 1
SCC 3814 : 1
<java.util.stream.DoubleStream$1: boolean hasNext()>
Counter value: 1
SCC 3815 : 1
<java.util.SubList: int access$000(java.util.SubList)>
Counter value: 1
SCC 3816 : 1
<java.util.stream.IntPipeline: java.util.Spliterator$OfInt access$000(java.util.Spliterator)>
Counter value: 1
SCC 3817 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Constructor access$1500(java.lang.Class)>
Counter value: 1
SCC 3818 : 1
<com.ibm.oti.util.WeakReferenceNode: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 3819 : 1
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
Counter value: 1
SCC 3820 : 1
<java.util.stream.Nodes$ConcNode$OfLong: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 3821 : 1
<sun.reflect.ClassFileAssembler: void opc_ifnonnull(sun.reflect.Label)>
Counter value: 1
SCC 3822 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller$2: java.lang.Object run()>
Counter value: 1
SCC 3823 : 1
<javax.security.auth.SubjectDomainCombiner$4: java.lang.String run()>
Counter value: 1
SCC 3824 : 1
<java.util.concurrent.ThreadLocalRandom: long nextLong()>
Counter value: 1
SCC 3825 : 1
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3826 : 1
<java.util.stream.Nodes$CollectorTask$OfRef$init__95: java.lang.Object apply(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3827 : 1
<java.util.stream.SpinedBuffer$OfDouble: int arrayLength(double[])>
Counter value: 1
SCC 3828 : 1
<java.time.chrono.ChronoLocalDateImpl: java.time.chrono.ChronoLocalDate ensureValid(java.time.chrono.Chronology,java.time.temporal.Temporal)>
Counter value: 1
SCC 3829 : 1
<java.net.InetSocketAddress: java.lang.String toString()>
Counter value: 1
SCC 3830 : 1
<java.util.stream.Nodes$CollectorTask: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.LongFunction,java.util.function.BinaryOperator)>
Counter value: 1
SCC 3831 : 1
<sun.net.NetProperties: void access$000()>
Counter value: 1
SCC 3832 : 1
<java.util.stream.Nodes$ArrayNode: java.util.Spliterator spliterator()>
Counter value: 1
SCC 3833 : 1
<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.lang.Object next()>
Counter value: 1
SCC 3834 : 1
<sun.nio.fs.Cancellable: void run()>
Counter value: 1
SCC 3835 : 1
<java.util.stream.Nodes$EmptyNode$OfRef: void <init>(java.util.stream.Nodes$1)>
Counter value: 1
SCC 3836 : 1
<java.security.AccessControlContext: boolean equals(java.lang.Object)>
Counter value: 2
SCC 3837 : 1
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
Counter value: 1
SCC 3838 : 1
<sun.nio.ch.Util$2: java.lang.String run()>
Counter value: 1
SCC 3839 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: boolean isAuthorizationStale(java.lang.String)>
Counter value: 1
SCC 3840 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: int access$400(java.net.InetSocketAddress$InetSocketAddressHolder)>
Counter value: 1
SCC 3841 : 1
<java.util.concurrent.ConcurrentSkipListMap$Node: boolean isBaseHeader()>
Counter value: 1
SCC 3842 : 1
<sun.reflect.ClassFileAssembler: void incStack()>
Counter value: 1
SCC 3843 : 1
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.CalendarDate getCalendarDate()>
Counter value: 1
SCC 3844 : 1
<sun.nio.ch.SharedFileLockTable: java.util.List removeAll()>
Counter value: 1
SCC 3845 : 1
<java.nio.charset.Charset$3: java.util.SortedMap run()>
Counter value: 1
SCC 3846 : 1
<java.util.stream.SortedOps$OfInt: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 3847 : 1
<java.lang.Short: short shortValue()>
Counter value: 1
SCC 3848 : 1
<java.net.HttpConnectSocketImpl: int getPort()>
Counter value: 1
SCC 3849 : 1
<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>
Counter value: 1
SCC 3850 : 1
<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>
Counter value: 1
SCC 3851 : 1
<java.nio.DirectCharBufferRU: java.nio.CharBuffer put(java.nio.CharBuffer)>
Counter value: 1
SCC 3852 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: void <clinit>()>
Counter value: 1
SCC 3853 : 1
<java.lang.reflect.Executable: boolean equalParamTypes(java.lang.Class[],java.lang.Class[])>
Counter value: 1
SCC 3854 : 1
<java.util.stream.Sink: void accept(double)>
Counter value: 1
SCC 3855 : 1
<java.util.stream.Nodes$EmptyNode$OfInt: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 3856 : 1
<java.lang.invoke.SecurityFrameInjector: java.lang.invoke.MethodHandle wrapHandleWithInjectedSecurityFrame(java.lang.invoke.MethodHandle,java.lang.Class)>
Counter value: 1
SCC 3857 : 1
<sun.misc.VM: boolean isDirectMemoryPageAligned()>
Counter value: 1
SCC 3858 : 1
<java.net.HttpConnectSocketImpl: int getLocalPort()>
Counter value: 1
SCC 3859 : 1
<java.util.stream.SpinedBuffer$OfInt: int arrayLength(int[])>
Counter value: 1
SCC 3860 : 1
<java.time.chrono.HijrahChronology: int getDayOfYear(int,int)>
Counter value: 1
SCC 3861 : 1
<java.util.stream.AbstractTask: void <clinit>()>
Counter value: 1
SCC 3862 : 1
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 3863 : 1
<java.time.chrono.ThaiBuddhistChronology: java.lang.String getCalendarType()>
Counter value: 1
SCC 3864 : 1
<java.time.chrono.HijrahDate: long getProlepticMonth()>
Counter value: 1
SCC 3865 : 1
<java.util.stream.ReduceOps$5ReducingSink: java.lang.Object get()>
Counter value: 1
SCC 3866 : 1
<sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(boolean)>
Counter value: 1
SCC 3867 : 1
<java.time.chrono.HijrahChronology: int yearMonthToDayOfYear(int,int)>
Counter value: 1
SCC 3868 : 1
<java.util.OptionalDouble: java.lang.String toString()>
Counter value: 1
SCC 3869 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator: int characteristics()>
Counter value: 1
SCC 3870 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: void <init>(java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue,java.util.concurrent.RunnableScheduledFuture[])>
Counter value: 1
SCC 3871 : 1
<java.util.LinkedList: java.lang.Object pollFirst()>
Counter value: 1
SCC 3872 : 1
<java.net.URLConnection: void setReadTimeout(int)>
Counter value: 1
SCC 3873 : 1
<java.util.stream.SliceOps: java.util.function.IntFunction access$100()>
Counter value: 1
SCC 3874 : 1
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 3875 : 1
<java.lang.reflect.Modifier: java.lang.String toString(int)>
Counter value: 1
SCC 3876 : 1
<java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet: void <init>()>
Counter value: 1
SCC 3877 : 1
<java.lang.ProcessEnvironment$StringEnvironment: boolean containsValue(java.lang.Object)>
Counter value: 2
SCC 3878 : 1
<java.util.SubList$1: void add(java.lang.Object)>
Counter value: 2
SCC 3879 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: java.util.stream.Node build()>
Counter value: 1
SCC 3880 : 1
<java.lang.reflect.Executable: boolean isVarArgs()>
Counter value: 1
SCC 3881 : 1
<java.lang.reflect.Method: boolean isDefault()>
Counter value: 1
SCC 3882 : 1
<java.io.ObjectInputStream$FilterValues: long depth()>
Counter value: 1
SCC 3883 : 1
<java.util.stream.IntPipeline$5$1: void <init>(java.util.stream.IntPipeline$5,java.util.stream.Sink)>
Counter value: 1
SCC 3884 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: java.lang.String getSymbol(java.lang.String,java.util.Locale)>
Counter value: 2
SCC 3885 : 1
<java.util.concurrent.ForkJoinPool$EmptyTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 3886 : 1
<sun.security.x509.CRLReasonCodeExtension: java.lang.String getName()>
Counter value: 1
SCC 3887 : 1
<sun.net.NetworkClient$1: void <init>(int[],java.lang.String[])>
Counter value: 1
SCC 3888 : 1
<java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3889 : 1
<sun.nio.ch.SelectorProviderImpl: void <init>()>
Counter value: 1
SCC 3890 : 1
<java.util.concurrent.ConcurrentLinkedQueue$Itr: void <init>(java.util.concurrent.ConcurrentLinkedQueue)>
Counter value: 1
SCC 3891 : 1
<sun.net.www.http.HttpClient: int getKeepAliveTimeout()>
Counter value: 1
SCC 3892 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfPrimitive: void <init>(java.util.Spliterator$OfPrimitive,long,long,long,long)>
Counter value: 1
SCC 3893 : 1
<java.util.Collections$CheckedCollection: boolean add(java.lang.Object)>
Counter value: 2
SCC 3894 : 1
<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: void write(byte[])>
Counter value: 1
SCC 3895 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 3896 : 1
<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>
Counter value: 1
SCC 3897 : 1
<java.lang.ClassValue$ClassValueMap: void sizeCache(int)>
Counter value: 1
SCC 3898 : 1
<java.lang.IllegalAccessException: void <init>()>
Counter value: 1
SCC 3899 : 1
<java.time.chrono.ChronoPeriodImpl: boolean isZero()>
Counter value: 1
SCC 3900 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getSerialFields(java.lang.Class)>
Counter value: 1
SCC 3901 : 1
<sun.reflect.ClassFileAssembler: void emitShort(short)>
Counter value: 1
SCC 3902 : 1
<sun.net.www.protocol.http.HttpURLConnection$10: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.io.IOException,java.lang.Object[])>
Counter value: 1
SCC 3903 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 3904 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToLongTask: void compute()>
Counter value: 1
SCC 3905 : 1
<java.util.Vector$Itr: void remove()>
Counter value: 1
SCC 3906 : 1
<java.time.chrono.ChronoLocalDate: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 3907 : 1
<sun.net.www.HeaderParser: sun.net.www.HeaderParser subsequence(int,int)>
Counter value: 1
SCC 3908 : 1
<java.time.chrono.ThaiBuddhistDate: java.lang.String toString()>
Counter value: 1
SCC 3909 : 1
<java.nio.channels.spi.AbstractSelectionKey: void invalidate()>
Counter value: 1
SCC 3910 : 1
<java.lang.Math: double max(double,double)>
Counter value: 1
SCC 3911 : 1
<java.util.concurrent.ForkJoinWorkerThread: void <clinit>()>
Counter value: 1
SCC 3912 : 1
<java.util.DualPivotQuicksort: void sort(short[],int,int,short[],int,int)>
Counter value: 1
SCC 3913 : 1
<java.lang.reflect.Method: void setMethodAccessor(sun.reflect.MethodAccessor)>
Counter value: 2
SCC 3914 : 1
<java.io.Console: char[] access$200(java.io.Console)>
Counter value: 1
SCC 3915 : 1
<java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 3916 : 1
<java.util.Scanner: java.lang.String nextLine()>
Counter value: 1
SCC 3917 : 1
<java.util.stream.DoublePipeline$StatelessOp: boolean opIsStateful()>
Counter value: 1
SCC 3918 : 1
<java.net.Inet6Address$Inet6AddressHolder: boolean isAnyLocalAddress()>
Counter value: 1
SCC 3919 : 1
<java.util.concurrent.LinkedBlockingQueue: java.util.Iterator iterator()>
Counter value: 1
SCC 3920 : 1
<java.time.OffsetTime: java.time.OffsetTime plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3921 : 1
<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
Counter value: 1
SCC 3922 : 1
<java.util.concurrent.LinkedBlockingQueue: void signalNotEmpty()>
Counter value: 1
SCC 3923 : 1
<java.io.ObjectStreamClass$5: void <init>()>
Counter value: 1
SCC 3924 : 1
<sun.text.IntHashtable: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3925 : 1
<java.net.Inet4Address: boolean isAnyLocalAddress()>
Counter value: 1
SCC 3926 : 1
<java.lang.ProcessEnvironment$StringEntrySet: java.util.Map$Entry vvEntry(java.lang.Object)>
Counter value: 1
SCC 3927 : 1
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 3928 : 1
<java.util.concurrent.TimeUnit$2: long toMillis(long)>
Counter value: 1
SCC 3929 : 1
<java.util.stream.SortedOps$AbstractRefSortingSink: void <init>(java.util.stream.Sink,java.util.Comparator)>
Counter value: 1
SCC 3930 : 1
<java.util.stream.Nodes$CollectorTask$OfRef$lambda_new_0__94: java.lang.Object apply(long)>
Counter value: 1
SCC 3931 : 1
<java.time.chrono.JapaneseEra: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 3932 : 1
<sun.security.x509.GeneralName: sun.security.x509.GeneralNameInterface getName()>
Counter value: 1
SCC 3933 : 1
<java.util.IdentityHashMap$EntryIterator: void <init>(java.util.IdentityHashMap,java.util.IdentityHashMap$1)>
Counter value: 1
SCC 3934 : 1
<java.lang.StringBuilder: void setCharAt(int,char)>
Counter value: 1
SCC 3935 : 1
<sun.net.sdp.SdpProvider: void <init>()>
Counter value: 1
SCC 3936 : 1
<java.io.ObjectStreamClass$ExceptionInfo: java.io.InvalidClassException newInvalidClassException()>
Counter value: 1
SCC 3937 : 1
<java.util.Arrays$ArrayList: java.lang.Object set(int,java.lang.Object)>
Counter value: 1
SCC 3938 : 1
<java.nio.DirectCharBufferU: void <clinit>()>
Counter value: 1
SCC 3939 : 1
<sun.net.www.http.PosterOutputStream: void write(int)>
Counter value: 1
SCC 3940 : 1
<java.util.stream.ReduceOps$ReduceTask: void <init>(java.util.stream.ReduceOps$ReduceOp,java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 3941 : 1
<sun.misc.ProxyGenerator$ConstantPool: short getUtf8(java.lang.String)>
Counter value: 1
SCC 3942 : 1
<java.nio.channels.spi.SelectorProvider: boolean access$200()>
Counter value: 1
SCC 3943 : 1
<java.text.ChoiceFormat: java.lang.Object clone()>
Counter value: 2
SCC 3944 : 1
<java.net.HttpConnectSocketImpl: java.net.InetAddress getInetAddress()>
Counter value: 1
SCC 3945 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef$lambda_forEachRemaining_1__57: java.util.function.Consumer bootstrap$()>
Counter value: 1
SCC 3946 : 1
<java.time.OffsetTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 3947 : 1
<java.io.ClassByNameCache: void update(java.io.ClassByNameCache$CacheKey,java.lang.Class)>
Counter value: 1
SCC 3948 : 1
<javax.crypto.spec.RC2ParameterSpec: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3949 : 1
<java.util.Spliterators$EmptySpliterator$OfDouble: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 3950 : 1
<java.lang.reflect.Executable: void separateWithCommas(java.lang.Class[],java.lang.StringBuilder)>
Counter value: 1
SCC 3951 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType probeTable()>
Counter value: 1
SCC 3952 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller$1: void <init>()>
Counter value: 1
SCC 3953 : 1
<java.lang.invoke.HandleCache: java.lang.invoke.MethodHandle putMethodInPerClassCache(java.util.Map,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 3954 : 1
<java.nio.channels.Channels$2: void close()>
Counter value: 1
SCC 3955 : 1
<java.util.stream.ReferencePipeline: void <init>(java.util.stream.AbstractPipeline,int)>
Counter value: 1
SCC 3956 : 1
<java.lang.invoke.MethodHandleImpl$2: java.lang.invoke.LambdaForm apply(java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 3957 : 1
<java.util.stream.SliceOps$2: java.lang.Integer[] lambda$opEvaluateParallelLazy$0(int)>
Counter value: 1
SCC 3958 : 1
<java.net.InetAddress: java.net.InetAddress getLocalHost()>
Counter value: 1
SCC 3959 : 1
<java.util.Scanner: java.lang.String next()>
Counter value: 1
SCC 3960 : 1
<java.nio.file.FileTreeWalker: java.nio.file.FileTreeWalker$Event next()>
Counter value: 1
SCC 3961 : 1
<sun.nio.ch.SocketAdaptor: int getSoTimeout()>
Counter value: 1
SCC 3962 : 1
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 3963 : 1
<java.util.EnumMap$KeyIterator: java.lang.Enum next()>
Counter value: 1
SCC 3964 : 1
<java.nio.Bits: byte long0(long)>
Counter value: 1
SCC 3965 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus permitStatus()>
Counter value: 1
SCC 3966 : 1
<java.util.concurrent.ConcurrentLinkedQueue: boolean casHead(java.util.concurrent.ConcurrentLinkedQueue$Node,java.util.concurrent.ConcurrentLinkedQueue$Node)>
Counter value: 1
SCC 3967 : 1
<java.util.stream.ReferencePipeline$StatelessOp: boolean opIsStateful()>
Counter value: 1
SCC 3968 : 1
<java.net.Socket: int getSoTimeout()>
Counter value: 1
SCC 3969 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator: void <init>(java.util.function.Supplier)>
Counter value: 1
SCC 3970 : 1
<java.util.stream.ReduceOps$2ReducingSink: void combine(java.util.stream.ReduceOps$2ReducingSink)>
Counter value: 1
SCC 3971 : 1
<sun.misc.SharedSecrets: sun.misc.JavaLangRefAccess getJavaLangRefAccess()>
Counter value: 1
SCC 3972 : 1
<sun.reflect.AccessorGenerator: short sub(short,short)>
Counter value: 1
SCC 3973 : 1
<java.util.ArrayDeque: boolean contains(java.lang.Object)>
Counter value: 1
SCC 3974 : 1
<java.util.stream.ReduceOps$12ReducingSink: java.util.OptionalDouble get()>
Counter value: 1
SCC 3975 : 1
<sun.security.x509.DNSName: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3976 : 1
<java.util.Collections$1: void remove()>
Counter value: 1
SCC 3977 : 1
<java.util.stream.MatchOps$MatchOp: java.lang.Object evaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 3978 : 1
<sun.net.www.HeaderParser: void <init>(java.lang.String)>
Counter value: 1
SCC 3979 : 1
<java.util.Calendar: void set(int,int,int)>
Counter value: 1
SCC 3980 : 1
<java.io.ObjectInputStream: java.lang.String readTypeString()>
Counter value: 1
SCC 3981 : 1
<java.net.NetworkInterface$1subIFs: java.net.NetworkInterface nextElement()>
Counter value: 1
SCC 3982 : 1
<java.util.stream.LongPipeline$Head: boolean opIsStateful()>
Counter value: 1
SCC 3983 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: byte[] firstToken()>
Counter value: 1
SCC 3984 : 1
<java.io.DataInputStream: int read(byte[])>
Counter value: 1
SCC 3985 : 1
<java.util.concurrent.TimeUnit$4: long toMinutes(long)>
Counter value: 1
SCC 3986 : 1
<java.util.stream.Nodes$CollectionNode: java.lang.String toString()>
Counter value: 1
SCC 3987 : 1
<java.io.ClassByNameCache$LoaderRef: boolean equals(java.lang.Object)>
Counter value: 1
SCC 3988 : 1
<java.lang.invoke.MethodHandleCache: java.lang.invoke.MethodHandle getNullConstantObjectHandle()>
Counter value: 1
SCC 3989 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Constructor access$1300(java.io.ObjectStreamClass)>
Counter value: 1
SCC 3990 : 1
<java.security.Principal: boolean implies(javax.security.auth.Subject)>
Counter value: 1
SCC 3991 : 1
<java.util.Vector$VectorSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 3992 : 1
<java.util.stream.FindOps$FindSink$OfLong: void accept(long)>
Counter value: 1
SCC 3993 : 1
<java.net.AbstractPlainSocketImpl: void releaseFD()>
Counter value: 1
SCC 3994 : 1
<java.util.stream.ReduceOps$6ReducingSink: void begin(long)>
Counter value: 1
SCC 3995 : 1
<javax.security.auth.SubjectDomainCombiner$3: java.security.PermissionCollection run()>
Counter value: 1
SCC 3996 : 1
<java.util.ArrayList: java.lang.Object clone()>
Counter value: 1
SCC 3997 : 1
<java.lang.reflect.Field: sun.reflect.FieldAccessor getFieldAccessor(boolean)>
Counter value: 1
SCC 3998 : 1
<java.util.Spliterators$LongIteratorSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 3999 : 1
<java.util.Collections$CheckedList$1: void remove()>
Counter value: 2
SCC 4000 : 1
<java.time.LocalDate: int compareTo(java.lang.Object)>
Counter value: 1
SCC 4001 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl 'with'(java.time.temporal.Temporal,java.time.LocalTime)>
Counter value: 1
SCC 4002 : 1
<java.net.URLPermission: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 4003 : 1
<java.net.HttpCookie: void setDomain(java.lang.String)>
Counter value: 1
SCC 4004 : 1
<sun.net.www.protocol.http.HttpURLConnection: void plainConnect()>
Counter value: 1
SCC 4005 : 1
<java.util.concurrent.LinkedBlockingDeque$AbstractItr: void remove()>
Counter value: 1
SCC 4006 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 4007 : 1
<java.util.ArrayDeque$DeqIterator: boolean hasNext()>
Counter value: 1
SCC 4008 : 1
<sun.security.x509.DistributionPoint: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 4009 : 1
<sun.nio.ch.AsynchronousFileChannelImpl: void end()>
Counter value: 1
SCC 4010 : 1
<sun.security.util.MemoryCache$SoftCacheEntry: boolean isValid(long)>
Counter value: 1
SCC 4011 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object getKey()>
Counter value: 2
SCC 4012 : 1
<java.util.stream.SliceOps$4$1: void accept(double)>
Counter value: 2
SCC 4013 : 1
<java.io.ObjectInputStream$Logging: void <clinit>()>
Counter value: 1
SCC 4014 : 1
<java.lang.invoke.MethodHandles$Lookup: boolean isSamePackage(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 4015 : 1
<java.lang.Package: java.lang.String getName()>
Counter value: 1
SCC 4016 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asSpreader(java.lang.Class,int)>
Counter value: 1
SCC 4017 : 1
<java.time.chrono.HijrahChronology: int[] parseYMD(java.lang.String)>
Counter value: 1
SCC 4018 : 1
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 4019 : 1
<sun.net.www.ParseUtil: java.lang.String toString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 4020 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.function.Consumer entryConsumer(java.util.function.Consumer)>
Counter value: 1
SCC 4021 : 1
<java.util.Scanner: void <init>(java.lang.Readable,java.util.regex.Pattern)>
Counter value: 1
SCC 4022 : 1
<java.util.IdentityHashMap$EntrySpliterator: void <init>(java.util.IdentityHashMap,int,int,int,int)>
Counter value: 1
SCC 4023 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: void doSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
Counter value: 1
SCC 4024 : 1
<java.util.JumboEnumSet: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 4025 : 1
<sun.nio.ch.SocketChannelImpl: int poll(int,long)>
Counter value: 1
SCC 4026 : 1
<sun.util.PreHashedMap$1: java.util.Iterator iterator()>
Counter value: 1
SCC 4027 : 1
<java.util.concurrent.ConcurrentHashMap: java.lang.String toString()>
Counter value: 1
SCC 4028 : 1
<java.util.stream.IntPipeline$10: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 4029 : 1
<java.util.LinkedList$DescendingIterator: void remove()>
Counter value: 1
SCC 4030 : 1
<java.lang.Thread$State: java.lang.Thread$State[] values()>
Counter value: 1
SCC 4031 : 1
<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 4032 : 1
<sun.security.util.KnownOIDs$3: boolean registerNames()>
Counter value: 1
SCC 4033 : 1
<java.util.concurrent.LinkedBlockingDeque$AbstractItr: java.lang.Object next()>
Counter value: 1
SCC 4034 : 1
<java.lang.ClassValue$ClassValueMap: void removeStaleEntries()>
Counter value: 1
SCC 4035 : 1
<java.io.ObjectOutputStream$BlockDataOutputStream: void write(byte[],int,int,boolean)>
Counter value: 1
SCC 4036 : 1
<java.util.Scanner: boolean hasTokenInBuffer()>
Counter value: 1
SCC 4037 : 1
<java.util.HashMap$EntrySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 4038 : 1
<java.util.stream.IntPipeline$9$1: void <init>(java.util.stream.IntPipeline$9,java.util.stream.Sink)>
Counter value: 1
SCC 4039 : 1
<java.lang.reflect.Field: sun.reflect.FieldAccessor getFieldAccessor(java.lang.Object)>
Counter value: 1
SCC 4040 : 1
<sun.net.www.ParseUtil: java.net.URI createURI(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 4041 : 1
<java.lang.ref.PhantomReference: java.lang.Object get()>
Counter value: 1
SCC 4042 : 1
<java.nio.DirectByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>
Counter value: 1
SCC 4043 : 1
<java.io.ObjectInputStream$HandleTable: java.lang.Object lookupObject(int)>
Counter value: 1
SCC 4044 : 1
<java.io.ObjectStreamClass$EntryFuture$1: java.lang.Object run()>
Counter value: 1
SCC 4045 : 1
<java.util.LinkedHashMap$LinkedValues: void clear()>
Counter value: 1
SCC 4046 : 1
<java.lang.invoke.SpreadHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 4047 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4048 : 1
<java.util.IdentityHashMap$EntryIterator$Entry: void checkIndexForEntryUse()>
Counter value: 1
SCC 4049 : 1
<java.util.stream.SortedOps$LongSortingSink: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 4050 : 1
<sun.nio.ch.DatagramChannelImpl: void implConfigureBlocking(boolean)>
Counter value: 1
SCC 4051 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: int queueSize()>
Counter value: 1
SCC 4052 : 1
<java.text.DecimalFormatSymbols: char getPatternSeparator()>
Counter value: 1
SCC 4053 : 1
<java.security.Provider: void implPutAll(java.util.Map)>
Counter value: 1
SCC 4054 : 1
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object peek()>
Counter value: 1
SCC 4055 : 1
<java.util.stream.LongPipeline$8$1: void accept(long)>
Counter value: 2
SCC 4056 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int size()>
Counter value: 1
SCC 4057 : 1
<sun.misc.ObjectInputFilter$Config$Global: boolean lambda$checkInput$9(sun.misc.ObjectInputFilter$Status)>
Counter value: 1
SCC 4058 : 1
<java.util.stream.Nodes$DoubleFixedNodeBuilder: void end()>
Counter value: 1
SCC 4059 : 1
<java.util.concurrent.TimeUnit$6: long toNanos(long)>
Counter value: 1
SCC 4060 : 1
<java.net.HttpCookie: java.net.HttpCookie parseInternal(java.lang.String,boolean)>
Counter value: 1
SCC 4061 : 1
<java.util.stream.StreamOpFlag$MaskBuilder: java.util.stream.StreamOpFlag$MaskBuilder set(java.util.stream.StreamOpFlag$Type)>
Counter value: 1
SCC 4062 : 1
<sun.security.util.MemoryCache$SoftCacheEntry: java.lang.Object getValue()>
Counter value: 1
SCC 4063 : 1
<java.nio.DoubleBuffer: boolean equals(double,double)>
Counter value: 1
SCC 4064 : 1
<java.util.concurrent.ConcurrentHashMap$ValuesView: java.util.Spliterator spliterator()>
Counter value: 1
SCC 4065 : 1
<java.lang.invoke.MethodType: void <clinit>()>
Counter value: 1
SCC 4066 : 1
<java.lang.reflect.WeakCache$CacheKey: void expungeFrom(java.util.concurrent.ConcurrentMap,java.util.concurrent.ConcurrentMap)>
Counter value: 1
SCC 4067 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Constructor getSerializableConstructor(java.lang.Class)>
Counter value: 1
SCC 4068 : 1
<java.util.Collections: java.util.NavigableSet emptyNavigableSet()>
Counter value: 1
SCC 4069 : 1
<java.lang.UNIXProcess$ProcessPipeInputStream: void close()>
Counter value: 1
SCC 4070 : 1
<java.util.EnumMap: java.lang.Object clone()>
Counter value: 1
SCC 4071 : 1
<sun.nio.fs.UnixDirectoryStream: long access$000(sun.nio.fs.UnixDirectoryStream)>
Counter value: 1
SCC 4072 : 1
<java.util.ArrayList$ArrayListSpliterator: java.util.ArrayList$ArrayListSpliterator trySplit()>
Counter value: 1
SCC 4073 : 1
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseEra getCurrentEra()>
Counter value: 1
SCC 4074 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.util.List)>
Counter value: 1
SCC 4075 : 1
<java.util.concurrent.ConcurrentSkipListMap$CSLMSpliterator: void <init>(java.util.Comparator,java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Node,java.lang.Object,int)>
Counter value: 1
SCC 4076 : 1
<java.util.stream.Streams$RangeLongSpliterator: long estimateSize()>
Counter value: 1
SCC 4077 : 1
<java.text.DecimalFormatSymbols: java.lang.String getExponentSeparator()>
Counter value: 1
SCC 4078 : 1
<sun.nio.ch.Net: boolean isIPv6Available()>
Counter value: 1
SCC 4079 : 1
<sun.misc.InnocuousThread$2: java.lang.ThreadGroup run()>
Counter value: 1
SCC 4080 : 1
<java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator: long estimateSize()>
Counter value: 1
SCC 4081 : 1
<java.util.Date: java.lang.Object clone()>
Counter value: 1
SCC 4082 : 1
<java.util.ArrayDeque: boolean offerFirst(java.lang.Object)>
Counter value: 1
SCC 4083 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl$2: java.lang.Object run()>
Counter value: 1
SCC 4084 : 1
<java.util.Random: int internalNextInt(int,int)>
Counter value: 1
SCC 4085 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator(int)>
Counter value: 1
SCC 4086 : 1
<java.util.stream.Nodes$CollectorTask$OfLong$init__91: java.lang.Object apply(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 4087 : 1
<java.lang.invoke.InvokeExactHandle: java.lang.invoke.MethodType invokeExactMethodType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 4088 : 1
<java.io.ObjectStreamClass: long getSerialVersionUID()>
Counter value: 1
SCC 4089 : 1
<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()>
Counter value: 1
SCC 4090 : 1
<java.lang.Short: java.lang.Short valueOf(short)>
Counter value: 1
SCC 4091 : 1
<java.util.stream.DoublePipeline$4$1: void <init>(java.util.stream.DoublePipeline$4,java.util.stream.Sink)>
Counter value: 1
SCC 4092 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 4093 : 1
<java.lang.Float: int intValue()>
Counter value: 1
SCC 4094 : 1
<sun.security.provider.PolicyFile$6: java.security.CodeSource run()>
Counter value: 1
SCC 4095 : 1
<java.lang.invoke.DelegatingMethodHandle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 4096 : 1
<javax.security.auth.Policy: boolean isCustomPolicySet(sun.security.util.Debug)>
Counter value: 1
SCC 4097 : 1
<java.lang.invoke.MethodHandleImpl$2: void <init>()>
Counter value: 1
SCC 4098 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: void execLocalTasks()>
Counter value: 1
SCC 4099 : 1
<sun.nio.ch.Util: java.nio.ByteBuffer getTemporaryDirectBuffer(int)>
Counter value: 1
SCC 4100 : 1
<javax.crypto.CryptoPermission: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec()>
Counter value: 1
SCC 4101 : 1
<java.nio.DirectFloatBufferU: float get(int)>
Counter value: 1
SCC 4102 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: boolean lambda$initPartialTraversalState$0()>
Counter value: 1
SCC 4103 : 1
<java.lang.reflect.ReflectAccess: byte[] getConstructorParameterAnnotations(java.lang.reflect.Constructor)>
Counter value: 1
SCC 4104 : 1
<java.util.zip.InflaterInputStream: int available()>
Counter value: 1
SCC 4105 : 1
<java.util.concurrent.TimeUnit$1: long convert(long,java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 4106 : 1
<sun.net.www.http.KeepAliveStreamCleaner$2: java.lang.Object run()>
Counter value: 1
SCC 4107 : 1
<sun.invoke.util.Wrapper: void <clinit>()>
Counter value: 1
SCC 4108 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: void run()>
Counter value: 1
SCC 4109 : 1
<java.text.RBCollationTables: java.lang.String getRules()>
Counter value: 1
SCC 4110 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void skipBlockData()>
Counter value: 1
SCC 4111 : 1
<java.util.stream.Streams$DoubleStreamBuilderImpl: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 4112 : 1
<java.util.stream.Nodes$ConcNode: java.lang.Object[] asArray(java.util.function.IntFunction)>
Counter value: 1
SCC 4113 : 1
<java.nio.ShortBuffer: int hashCode()>
Counter value: 1
SCC 4114 : 1
<sun.nio.fs.UnixUserPrincipals$User: int hashCode()>
Counter value: 1
SCC 4115 : 1
<java.util.stream.FindOps$FindTask: java.lang.Object doLeaf()>
Counter value: 1
SCC 4116 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: void <init>(java.util.Set,java.lang.Class)>
Counter value: 1
SCC 4117 : 1
<java.util.Calendar: long getMillisOf(java.util.Calendar)>
Counter value: 1
SCC 4118 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 4119 : 1
<java.util.stream.Nodes$CollectorTask$OfRef$init__95: void <init>()>
Counter value: 1
SCC 4120 : 1
<sun.security.x509.GeneralSubtrees: int hashCode()>
Counter value: 1
SCC 4121 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$BreakIteratorProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 4122 : 1
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 4123 : 1
<java.nio.CharBufferSpliterator: java.util.Spliterator$OfInt trySplit()>
Counter value: 1
SCC 4124 : 1
<sun.reflect.UnsafeShortFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 4125 : 1
<java.nio.file.FileTreeWalker$Event: void <init>(java.nio.file.FileTreeWalker$EventType,java.nio.file.Path,java.io.IOException)>
Counter value: 1
SCC 4126 : 1
<sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 4127 : 1
<java.lang.reflect.Method: sun.reflect.MethodAccessor getMethodAccessor()>
Counter value: 1
SCC 4128 : 1
<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>
Counter value: 1
SCC 4129 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 4130 : 1
<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4131 : 1
<java.lang.reflect.Modifier: boolean isVolatile(int)>
Counter value: 1
SCC 4132 : 1
<sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator: java.lang.Object next()>
Counter value: 1
SCC 4133 : 1
<sun.net.www.http.ChunkedInputStream: void processRaw()>
Counter value: 1
SCC 4134 : 1
<java.time.LocalTime: int getNano()>
Counter value: 1
SCC 4135 : 1
<sun.net.NetHooks$Provider: void <init>()>
Counter value: 1
SCC 4136 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 4137 : 1
<sun.security.x509.URIName: java.net.URI getURI()>
Counter value: 1
SCC 4138 : 1
<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,byte[],java.nio.file.OpenOption[])>
Counter value: 1
SCC 4139 : 1
<java.time.chrono.MinguoChronology: java.lang.String getId()>
Counter value: 1
SCC 4140 : 1
<java.util.concurrent.ConcurrentLinkedQueue: int size()>
Counter value: 1
SCC 4141 : 1
<java.util.concurrent.ThreadLocalRandom$RandomDoublesSpliterator: long estimateSize()>
Counter value: 1
SCC 4142 : 1
<java.util.Arrays: void sort(long[])>
Counter value: 1
SCC 4143 : 1
<java.io.PrintStream: void println(java.lang.Object)>
Counter value: 1
SCC 4144 : 1
<java.util.TreeMap: java.util.Spliterator keySpliterator()>
Counter value: 1
SCC 4145 : 1
<java.io.ExpiringCache: void clear()>
Counter value: 1
SCC 4146 : 1
<java.time.Month: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 4147 : 1
<java.io.ObjectStreamClass: java.lang.String access$2700(java.lang.Class[],java.lang.Class)>
Counter value: 1
SCC 4148 : 1
<java.lang.invoke.MethodHandleImpl$Lazy: java.lang.invoke.MethodHandle[] access$500()>
Counter value: 1
SCC 4149 : 1
<sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4150 : 1
<java.util.concurrent.ThreadLocalRandom$RandomDoublesSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 4151 : 1
<java.io.ObjectOutputStream: void clear()>
Counter value: 1
SCC 4152 : 1
<sun.reflect.ClassFileAssembler: void opc_i2f()>
Counter value: 1
SCC 4153 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean remove(java.lang.Object)>
Counter value: 1
SCC 4154 : 1
<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: void write(byte[],int,int)>
Counter value: 2
SCC 4155 : 1
<sun.net.www.http.KeepAliveCleanerEntry: boolean getQueuedForCleanup()>
Counter value: 1
SCC 4156 : 1
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>
Counter value: 2
SCC 4157 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: void acceptConsumed(java.util.function.LongConsumer)>
Counter value: 1
SCC 4158 : 1
<sun.net.www.http.KeepAliveStream$1: java.lang.Object run()>
Counter value: 1
SCC 4159 : 1
<java.util.LinkedHashMap$LinkedEntrySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 4160 : 1
<java.util.stream.SpinedBuffer$add__30: void accept(java.lang.Object)>
Counter value: 1
SCC 4161 : 1
<sun.nio.ch.SocketAdaptor$2: java.io.OutputStream run()>
Counter value: 1
SCC 4162 : 1
<java.util.Random$RandomIntsSpliterator: int characteristics()>
Counter value: 1
SCC 4163 : 1
<java.util.SimpleTimeZone: java.lang.String toString()>
Counter value: 1
SCC 4164 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean isEmpty()>
Counter value: 1
SCC 4165 : 1
<java.util.Collections$2: long estimateSize()>
Counter value: 1
SCC 4166 : 1
<java.util.stream.Nodes$ConcNode$OfPrimitive: java.lang.String toString()>
Counter value: 1
SCC 4167 : 1
<java.time.zone.TzdbZoneRulesProvider: java.time.zone.ZoneRules provideRules(java.lang.String,boolean)>
Counter value: 1
SCC 4168 : 1
<sun.security.x509.IssuingDistributionPointExtension: java.lang.String toString()>
Counter value: 1
SCC 4169 : 1
<sun.security.x509.X509CertInfo: boolean equals(sun.security.x509.X509CertInfo)>
Counter value: 1
SCC 4170 : 1
<java.util.ArrayList: void removeRange(int,int)>
Counter value: 1
SCC 4171 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfLong: void <init>(java.util.stream.Node$OfLong)>
Counter value: 1
SCC 4172 : 1
<sun.nio.ch.FileChannelImpl: java.nio.channels.FileChannel open(java.io.FileDescriptor,java.lang.String,boolean,boolean,java.lang.Object)>
Counter value: 1
SCC 4173 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator$lambda_initPartialTraversalState_0__41: java.util.function.BooleanSupplier bootstrap$(java.util.stream.StreamSpliterators$WrappingSpliterator)>
Counter value: 1
SCC 4174 : 1
<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry prevEntry()>
Counter value: 1
SCC 4175 : 1
<java.util.TreeMap$AscendingSubMap$AscendingEntrySetView: void <init>(java.util.TreeMap$AscendingSubMap)>
Counter value: 1
SCC 4176 : 1
<java.util.stream.DistinctOps$1$2: void end()>
Counter value: 2
SCC 4177 : 1
<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>
Counter value: 1
SCC 4178 : 1
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 4179 : 1
<javax.security.auth.Subject: java.lang.String toString(boolean)>
Counter value: 1
SCC 4180 : 1
<java.util.AbstractMap$1$1: boolean hasNext()>
Counter value: 2
SCC 4181 : 1
<java.util.Random$RandomIntsSpliterator: long estimateSize()>
Counter value: 1
SCC 4182 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: void begin(long)>
Counter value: 1
SCC 4183 : 1
<java.nio.DirectCharBufferRU: java.nio.CharBuffer put(char[],int,int)>
Counter value: 1
SCC 4184 : 1
<java.nio.channels.Channels: void checkNotNull(java.lang.Object,java.lang.String)>
Counter value: 1
SCC 4185 : 1
<sun.misc.PathPermissions$1: void <init>(sun.misc.PathPermissions)>
Counter value: 1
SCC 4186 : 1
<java.util.IdentityHashMap: java.lang.Object clone()>
Counter value: 2
SCC 4187 : 1
<java.util.stream.ReduceOps$5ReducingSink: void begin(long)>
Counter value: 1
SCC 4188 : 1
<sun.net.www.http.ChunkedOutputStream: byte[] getHeader(int)>
Counter value: 1
SCC 4189 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void sort(java.util.Comparator)>
Counter value: 1
SCC 4190 : 1
<java.util.IdentityHashMap$EntrySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 4191 : 1
<java.util.Spliterators$LongIteratorSpliterator: long estimateSize()>
Counter value: 1
SCC 4192 : 1
<java.net.URI: void <init>()>
Counter value: 1
SCC 4193 : 1
<java.util.concurrent.CountedCompleter: java.lang.Object getRawResult()>
Counter value: 1
SCC 4194 : 1
<java.util.OptionalDouble: void <clinit>()>
Counter value: 1
SCC 4195 : 1
<java.util.stream.SpinedBuffer$OfLong$1Splitr: void arrayForOne(java.lang.Object,int,java.lang.Object)>
Counter value: 1
SCC 4196 : 1
<sun.nio.fs.UnixPath: void <clinit>()>
Counter value: 1
SCC 4197 : 1
<java.util.concurrent.ForkJoinPool: int awaitRunStateLock()>
Counter value: 1
SCC 4198 : 1
<sun.security.x509.DistributionPoint: int hashCode()>
Counter value: 1
SCC 4199 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()>
Counter value: 1
SCC 4200 : 1
<java.util.stream.ReduceOps$9ReducingSink: void combine(java.util.stream.ReduceOps$9ReducingSink)>
Counter value: 1
SCC 4201 : 1
<java.util.stream.SortedOps$RefSortingSink: void begin(long)>
Counter value: 1
SCC 4202 : 1
<java.nio.HeapByteBuffer: void _put(int,byte)>
Counter value: 1
SCC 4203 : 1
<java.security.spec.PSSParameterSpec: int getSaltLength()>
Counter value: 1
SCC 4204 : 1
<sun.nio.fs.UnixCopyFile$1: void implRun()>
Counter value: 1
SCC 4205 : 1
<java.lang.invoke.InterfaceHandle: void <clinit>()>
Counter value: 1
SCC 4206 : 1
<java.nio.file.Files$FileTypeDetectors$2: java.lang.Object run()>
Counter value: 1
SCC 4207 : 1
<java.security.ProtectionDomain$JavaSecurityAccessImpl: java.security.AccessControlContext getCombinedACC(java.security.AccessControlContext,java.security.AccessControlContext)>
Counter value: 1
SCC 4208 : 1
<java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle: java.lang.invoke.MethodHandleImpl$Intrinsic intrinsicName()>
Counter value: 1
SCC 4209 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate plusYears(long)>
Counter value: 1
SCC 4210 : 1
<java.lang.reflect.WeakCache$Factory: void <init>(java.lang.reflect.WeakCache,java.lang.Object,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentMap)>
Counter value: 1
SCC 4211 : 1
<java.util.stream.Nodes$DoubleFixedNodeBuilder: java.util.stream.Node$OfDouble build()>
Counter value: 1
SCC 4212 : 1
<sun.reflect.UnsafeObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 4213 : 1
<java.util.concurrent.CountedCompleter: int getPendingCount()>
Counter value: 1
SCC 4214 : 1
<java.util.concurrent.ConcurrentHashMap$SearchMappingsTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.BiFunction,java.util.concurrent.atomic.AtomicReference)>
Counter value: 1
SCC 4215 : 1
<java.lang.invoke.ConstantFloatHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 4216 : 1
<sun.net.www.http.KeepAliveCleanerEntry: sun.net.www.http.KeepAliveStream getKeepAliveStream()>
Counter value: 1
SCC 4217 : 1
<java.util.stream.ReduceOps$11ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 4218 : 1
<java.util.TreeMap$EntrySpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 4219 : 1
<java.util.concurrent.LinkedBlockingDeque$LBDSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 4220 : 1
<java.util.ArrayDeque: void push(java.lang.Object)>
Counter value: 1
SCC 4221 : 1
<java.time.chrono.HijrahChronology: void <clinit>()>
Counter value: 1
SCC 4222 : 1
<java.util.Spliterators$ArraySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 4223 : 1
<java.nio.DirectByteBuffer: byte _get(int)>
Counter value: 1
SCC 4224 : 1
<java.util.stream.SpinedBuffer$OfDouble: void arrayForEach(double[],int,int,java.util.function.DoubleConsumer)>
Counter value: 1
SCC 4225 : 1
<java.time.OffsetDateTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 4226 : 1
<java.nio.channels.UnsupportedAddressTypeException: void <init>()>
Counter value: 1
SCC 4227 : 1
<java.util.concurrent.ConcurrentLinkedQueue: java.util.Spliterator spliterator()>
Counter value: 1
SCC 4228 : 1
<java.util.Arrays$NaturalOrder: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 4229 : 1
<java.lang.invoke.InvokeGenericHandle: void <clinit>()>
Counter value: 1
SCC 4230 : 1
<sun.net.www.http.KeepAliveEntry: void <init>(sun.net.www.http.HttpClient,long)>
Counter value: 1
SCC 4231 : 1
<java.nio.DirectFloatBufferU: long ix(int)>
Counter value: 1
SCC 4232 : 1
<java.util.Base64$EncOutputStream: void write(byte[],int,int)>
Counter value: 1
SCC 4233 : 1
<java.util.AbstractList: java.lang.Object set(int,java.lang.Object)>
Counter value: 1
SCC 4234 : 1
<java.util.Collections$AsLIFOQueue: java.lang.Object[] toArray()>
Counter value: 1
SCC 4235 : 1
<java.util.concurrent.Executors$PrivilegedCallable$1: java.lang.Object run()>
Counter value: 1
SCC 4236 : 1
<java.lang.invoke.FoldHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 4237 : 1
<java.io.ObjectInputStream$FilterValues: java.lang.Class serialClass()>
Counter value: 1
SCC 4238 : 1
<java.net.InetSocketAddress: java.lang.String checkHost(java.lang.String)>
Counter value: 1
SCC 4239 : 1
<java.util.stream.SortedOps$LongSortingSink: void end()>
Counter value: 2
SCC 4240 : 1
<sun.misc.ProxyGenerator: void access$1200(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>
Counter value: 1
SCC 4241 : 1
<java.util.stream.Sink$ChainedInt: void begin(long)>
Counter value: 2
SCC 4242 : 1
<java.net.SocketInputStream: int read(byte[],int,int,int)>
Counter value: 1
SCC 4243 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 4244 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>
Counter value: 1
SCC 4245 : 1
<sun.security.util.KnownOIDs$4: boolean registerNames()>
Counter value: 1
SCC 4246 : 1
<sun.util.PreHashedMap$2$1: java.lang.Object next()>
Counter value: 1
SCC 4247 : 1
<sun.reflect.UnsafeCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 4248 : 1
<java.nio.Bits: int getIntL(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 4249 : 1
<java.util.stream.ReduceOps$12ReducingSink: java.lang.Object get()>
Counter value: 1
SCC 4250 : 1
<java.lang.invoke.MethodHandleImpl$ArrayAccessor$1: java.lang.invoke.MethodHandle[] computeValue(java.lang.Class)>
Counter value: 1
SCC 4251 : 1
<java.io.FileOutputStream: void write(byte[])>
Counter value: 1
SCC 4252 : 1
<java.time.zone.ZoneRules: void <init>(long[],java.time.ZoneOffset[],long[],java.time.ZoneOffset[],java.time.zone.ZoneOffsetTransitionRule[])>
Counter value: 1
SCC 4253 : 1
<java.lang.invoke.MethodType: java.lang.String toMethodDescriptorString()>
Counter value: 1
SCC 4254 : 1
<sun.nio.fs.AbstractPath$1: java.nio.file.Path next()>
Counter value: 1
SCC 4255 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser$lambda_setValue_0__18: void accept(java.lang.Object)>
Counter value: 1
SCC 4256 : 1
<sun.net.www.protocol.http.HttpURLConnection$12: java.lang.Object run()>
Counter value: 1
SCC 4257 : 1
<java.util.stream.ReferencePipeline$6$1: void <init>(java.util.stream.ReferencePipeline$6,java.util.stream.Sink)>
Counter value: 1
SCC 4258 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator: void <init>(java.util.Spliterator)>
Counter value: 1
SCC 4259 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 2
SCC 4260 : 1
<java.util.Collections$EmptyMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 4261 : 1
<java.util.TreeMap$AscendingSubMap: java.util.Set entrySet()>
Counter value: 1
SCC 4262 : 1
<java.util.TreeMap$TreeMapSpliterator: long estimateSize()>
Counter value: 1
SCC 4263 : 1
<sun.reflect.generics.tree.MethodTypeSignature: sun.reflect.generics.tree.TypeSignature[] getParameterTypes()>
Counter value: 1
SCC 4264 : 1
<java.util.stream.Collectors$CollectorImpl: java.util.Set characteristics()>
Counter value: 1
SCC 4265 : 1
<java.util.concurrent.ConcurrentLinkedQueue$Itr: java.lang.Object next()>
Counter value: 1
SCC 4266 : 1
<java.util.HashMap$EntrySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 4267 : 1
<java.time.Clock$FixedClock: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4268 : 1
<java.util.stream.LongPipeline$6: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 4269 : 1
<java.util.stream.Nodes$CollectorTask$OfRef: java.util.stream.AbstractTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 4270 : 1
<java.util.Collections$UnmodifiableSortedSet: void <init>(java.util.SortedSet)>
Counter value: 1
SCC 4271 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: boolean cancel(boolean)>
Counter value: 1
SCC 4272 : 1
<java.lang.invoke.MethodType: int parameterCount()>
Counter value: 1
SCC 4273 : 1
<sun.reflect.NativeConstructorAccessorImpl: java.lang.Object newInstance(java.lang.Object[])>
Counter value: 1
SCC 4274 : 1
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 4275 : 1
<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>
Counter value: 1
SCC 4276 : 1
<java.lang.invoke.ProxyClassesDumper: void dumpClass(java.lang.String,byte[])>
Counter value: 1
SCC 4277 : 1
<java.io.ClassByNameCache$Reaper: void run()>
Counter value: 1
SCC 4278 : 1
<sun.net.www.MeteredStream: void reset()>
Counter value: 1
SCC 4279 : 1
<javax.crypto.CryptoPermissions: java.util.Enumeration elements()>
Counter value: 1
SCC 4280 : 1
<java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner)>
Counter value: 1
SCC 4281 : 1
<sun.misc.ProxyGenerator: void access$1600(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>
Counter value: 1
SCC 4282 : 1
<sun.util.calendar.JulianCalendar: sun.util.calendar.JulianCalendar$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 4283 : 1
<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.net.PasswordAuthentication)>
Counter value: 1
SCC 4284 : 1
<java.util.concurrent.TimeUnit$2: long toMinutes(long)>
Counter value: 1
SCC 4285 : 1
<java.util.stream.MatchOps$MatchTask: java.util.stream.MatchOps$MatchTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 4286 : 1
<java.lang.invoke.ThunkKey: java.lang.invoke.MethodType computeThunkableType(java.lang.invoke.MethodType,int)>
Counter value: 1
SCC 4287 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: int hashCode()>
Counter value: 2
SCC 4288 : 1
<java.io.ObjectStreamClass$Caches: void <clinit>()>
Counter value: 1
SCC 4289 : 1
<sun.nio.fs.Cancellable: long addressToPollForCancel()>
Counter value: 1
SCC 4290 : 1
<java.util.HashMap$KeySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 4291 : 1
<sun.nio.ch.Invoker$2: void run()>
Counter value: 1
SCC 4292 : 1
<java.util.stream.SliceOps$3$lambda_opEvaluateParallelLazy_0__66: java.util.function.IntFunction bootstrap$()>
Counter value: 1
SCC 4293 : 1
<java.io.ObjectInputStream$PeekInputStream: long skip(long)>
Counter value: 2
SCC 4294 : 1
<java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 4295 : 1
<java.util.stream.SliceOps: java.util.Spliterator access$200(java.util.stream.StreamShape,java.util.Spliterator,long,long)>
Counter value: 1
SCC 4296 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.chrono.ChronoZonedDateTime withZoneSameLocal(java.time.ZoneId)>
Counter value: 1
SCC 4297 : 1
<sun.net.www.protocol.http.NegotiateAuthentication$1: void <init>()>
Counter value: 1
SCC 4298 : 1
<java.time.temporal.ValueRange: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4299 : 1
<java.util.Collections$CheckedMap: java.lang.String toString()>
Counter value: 2
SCC 4300 : 1
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>
Counter value: 1
SCC 4301 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachKeyTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.Consumer)>
Counter value: 1
SCC 4302 : 1
<java.util.jar.JarVerifier$2: java.util.jar.JarEntry nextElement()>
Counter value: 1
SCC 4303 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySpliterator: int characteristics()>
Counter value: 1
SCC 4304 : 1
<java.security.KeyStore$CallbackHandlerProtection: javax.security.auth.callback.CallbackHandler getCallbackHandler()>
Counter value: 1
SCC 4305 : 1
<java.util.concurrent.ThreadPoolExecutor: void ensurePrestart()>
Counter value: 1
SCC 4306 : 1
<java.io.Console: java.io.Console access$600()>
Counter value: 1
SCC 4307 : 1
<java.util.Collections$SynchronizedSet: int hashCode()>
Counter value: 2
SCC 4308 : 1
<java.util.stream.SliceOps$4: java.util.Spliterator$OfDouble unorderedSkipLimitSpliterator(java.util.Spliterator$OfDouble,long,long,long)>
Counter value: 1
SCC 4309 : 1
<sun.net.www.http.KeepAliveStream: void <init>(java.io.InputStream,sun.net.ProgressSource,long,sun.net.www.http.HttpClient)>
Counter value: 1
SCC 4310 : 1
<java.util.stream.Nodes$EmptyNode$OfInt: java.util.Spliterator$OfInt spliterator()>
Counter value: 1
SCC 4311 : 1
<java.net.DatagramSocket: void close()>
Counter value: 1
SCC 4312 : 1
<java.net.NetworkInterface: boolean isVirtual()>
Counter value: 1
SCC 4313 : 1
<java.util.stream.Nodes$CollectorTask$OfRef$lambda_new_0__94: java.util.function.LongFunction bootstrap$(java.util.function.IntFunction)>
Counter value: 1
SCC 4314 : 1
<java.util.Arrays: int hashCode(char[])>
Counter value: 1
SCC 4315 : 1
<java.lang.reflect.Constructor: int getParameterCount()>
Counter value: 1
SCC 4316 : 1
<java.net.SocksSocketImpl$1: void <init>(java.net.SocksSocketImpl,java.lang.String,int,int)>
Counter value: 1
SCC 4317 : 1
<sun.nio.ch.Net$4: void <init>()>
Counter value: 1
SCC 4318 : 1
<java.util.concurrent.atomic.AtomicLong: long decrementAndGet()>
Counter value: 1
SCC 4319 : 1
<java.util.stream.ReferencePipeline$10$1: boolean cancellationRequested()>
Counter value: 2
SCC 4320 : 1
<java.util.stream.ReduceOps$ReduceTask: java.util.stream.ReduceOps$AccumulatingSink doLeaf()>
Counter value: 1
SCC 4321 : 1
<java.util.IntSummaryStatistics: int getMax()>
Counter value: 1
SCC 4322 : 1
<java.util.concurrent.TimeUnit$4: long toDays(long)>
Counter value: 1
SCC 4323 : 1
<java.util.stream.SpinedBuffer$OfInt: int[][] newArrayArray(int)>
Counter value: 1
SCC 4324 : 1
<java.util.jar.JarFile$1: boolean hasMoreElements()>
Counter value: 1
SCC 4325 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfInt: void <init>(java.util.Spliterator,java.util.stream.PipelineHelper,int[])>
Counter value: 1
SCC 4326 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToDoubleTask: void compute()>
Counter value: 1
SCC 4327 : 1
<java.util.stream.AbstractPipeline: java.lang.Object[] lambda$opEvaluateParallelLazy$2(int)>
Counter value: 1
SCC 4328 : 1
<java.lang.reflect.Method: java.lang.String getGenericSignature()>
Counter value: 1
SCC 4329 : 1
<java.nio.DirectCharBufferS: long address()>
Counter value: 1
SCC 4330 : 1
<sun.nio.ch.IOUtil: void load()>
Counter value: 1
SCC 4331 : 1
<java.util.stream.ReferencePipeline$8$1: void accept(java.lang.Object)>
Counter value: 1
SCC 4332 : 1
<java.util.IntSummaryStatistics: double getAverage()>
Counter value: 1
SCC 4333 : 1
<java.time.chrono.HijrahDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 4334 : 1
<java.util.EnumMap$EntryIterator$Entry: int access$1500(java.util.EnumMap$EntryIterator$Entry)>
Counter value: 1
SCC 4335 : 1
<java.io.ObjectInputStream$PeekInputStream: void readFully(byte[],int,int)>
Counter value: 1
SCC 4336 : 1
<java.io.ObjectStreamClass$5: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 4337 : 1
<sun.security.x509.CRLDistributionPointsExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 4338 : 1
<java.util.stream.DoublePipeline$Head: void forEach(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 4339 : 1
<java.util.ArrayPrefixHelpers$LongCumulateTask: void <init>(java.util.ArrayPrefixHelpers$LongCumulateTask,java.util.function.LongBinaryOperator,long[],int,int,int,int,int)>
Counter value: 1
SCC 4340 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl$3: java.lang.Void run()>
Counter value: 1
SCC 4341 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToDoubleTask: java.lang.Double getRawResult()>
Counter value: 1
SCC 4342 : 1
<sun.security.x509.CertificateSerialNumber: java.lang.String getName()>
Counter value: 1
SCC 4343 : 1
<sun.nio.ch.ServerSocketChannelImpl: void implConfigureBlocking(boolean)>
Counter value: 1
SCC 4344 : 1
<java.time.chrono.ChronoPeriodImpl: void <clinit>()>
Counter value: 1
SCC 4345 : 1
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: sun.reflect.generics.tree.FieldTypeSignature[] getUpperBoundASTs()>
Counter value: 1
SCC 4346 : 1
<java.util.jar.Manifest: void <init>(java.util.jar.Manifest)>
Counter value: 1
SCC 4347 : 1
<sun.text.CompactByteArray: int hashCode()>
Counter value: 1
SCC 4348 : 1
<java.util.stream.SpinedBuffer$1Splitr: long estimateSize()>
Counter value: 1
SCC 4349 : 1
<java.io.ObjectStreamClass: long access$100(java.lang.Class)>
Counter value: 1
SCC 4350 : 1
<java.time.OffsetTime: java.time.OffsetTime readExternal(java.io.ObjectInput)>
Counter value: 1
SCC 4351 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
Counter value: 1
SCC 4352 : 1
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 4353 : 1
<javax.security.auth.Policy$3: java.lang.Void run()>
Counter value: 1
SCC 4354 : 1
<java.math.BigDecimal: double doubleValue()>
Counter value: 1
SCC 4355 : 1
<sun.reflect.ConstructorAccessorImpl: void <init>()>
Counter value: 1
SCC 4356 : 1
<java.time.ZoneId$1: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 4357 : 1
<java.nio.HeapCharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>
Counter value: 1
SCC 4358 : 1
<java.nio.DirectByteBuffer: java.nio.ByteBuffer compact()>
Counter value: 1
SCC 4359 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] access$000()>
Counter value: 1
SCC 4360 : 1
<java.util.stream.ReduceOps$7ReducingSink: void begin(long)>
Counter value: 1
SCC 4361 : 1
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean isEmpty()>
Counter value: 1
SCC 4362 : 1
<sun.util.locale.provider.RuleBasedBreakIterator: java.lang.String toString()>
Counter value: 1
SCC 4363 : 1
<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: int read(byte[])>
Counter value: 1
SCC 4364 : 1
<sun.security.util.MemoryCache$SoftCacheEntry: long getExpirationTime()>
Counter value: 1
SCC 4365 : 1
<java.util.stream.SliceOps$3$1: void accept(long)>
Counter value: 2
SCC 4366 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.invoke.MethodType varargsCollectorType(java.lang.invoke.MethodType,java.lang.Class)>
Counter value: 1
SCC 4367 : 1
<java.lang.invoke.MethodHandles$VoidCollectHelper: void <init>(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 4368 : 1
<java.util.stream.LongPipeline$6$1: void <init>(java.util.stream.LongPipeline$6,java.util.stream.Sink)>
Counter value: 1
SCC 4369 : 1
<sun.net.www.http.ChunkedInputStream: int read()>
Counter value: 1
SCC 4370 : 1
<java.net.Socket: void connect(java.net.SocketAddress,int)>
Counter value: 1
SCC 4371 : 1
<java.lang.invoke.MethodHandles: void <clinit>()>
Counter value: 1
SCC 4372 : 1
<java.io.ClassByNameCache$LoaderRef: java.lang.Object getLoaderObj(java.lang.ClassLoader)>
Counter value: 1
SCC 4373 : 1
<java.security.KeyStore$Builder$FileBuilder: java.io.File access$400(java.security.KeyStore$Builder$FileBuilder)>
Counter value: 1
SCC 4374 : 1
<sun.invoke.util.Wrapper: boolean isFloating()>
Counter value: 1
SCC 4375 : 1
<java.lang.Double: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4376 : 1
<sun.security.x509.X400Address: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 4377 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$BreakIteratorProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 4378 : 1
<java.net.SocksSocketImpl: void connectV4(java.io.InputStream,java.io.OutputStream,java.net.InetSocketAddress,long)>
Counter value: 1
SCC 4379 : 1
<java.util.WeakHashMap$EntrySpliterator: int characteristics()>
Counter value: 1
SCC 4380 : 1
<java.nio.file.FileTreeWalker: void close()>
Counter value: 1
SCC 4381 : 1
<java.io.ObjectStreamClass: java.security.ProtectionDomain noPermissionsDomain()>
Counter value: 1
SCC 4382 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfRef: java.util.Spliterator trySplit()>
Counter value: 1
SCC 4383 : 1
<java.util.DoubleSummaryStatistics: double getMax()>
Counter value: 1
SCC 4384 : 1
<sun.nio.ch.ThreadPool$lambda_defaultThreadFactory_2__34: java.util.concurrent.ThreadFactory bootstrap$()>
Counter value: 1
SCC 4385 : 1
<sun.security.x509.X509Key: java.lang.String getAlgorithm()>
Counter value: 1
SCC 4386 : 1
<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.http.HttpClient getNewHttpClient(java.net.URL,java.net.Proxy,int,boolean)>
Counter value: 1
SCC 4387 : 1
<sun.security.x509.GeneralNames: java.util.List names()>
Counter value: 1
SCC 4388 : 1
<java.util.WeakHashMap$KeySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 4389 : 1
<java.util.Properties$XmlSupport$1: void <init>()>
Counter value: 1
SCC 4390 : 1
<java.nio.channels.spi.AbstractSelectionKey: void cancel()>
Counter value: 1
SCC 4391 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: void initPartialTraversalState()>
Counter value: 1
SCC 4392 : 1
<java.lang.invoke.SpreadHandle: java.lang.Object[] infoAffectingThunks(java.lang.Class,int,int)>
Counter value: 1
SCC 4393 : 1
<java.util.stream.AbstractPipeline: java.util.stream.Node opEvaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction)>
Counter value: 1
SCC 4394 : 1
<sun.nio.fs.UnixDirectoryStream: java.util.Iterator iterator()>
Counter value: 1
SCC 4395 : 1
<java.util.stream.Nodes$DoubleFixedNodeBuilder: java.lang.String toString()>
Counter value: 1
SCC 4396 : 1
<java.util.stream.AbstractShortCircuitTask: void cancel()>
Counter value: 1
SCC 4397 : 1
<java.lang.invoke.BruteArgumentMoverHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 4398 : 1
<java.util.stream.Stream$1: java.lang.Object next()>
Counter value: 1
SCC 4399 : 1
<java.util.EnumMap: int access$1600(java.util.EnumMap,int)>
Counter value: 1
SCC 4400 : 1
<java.util.concurrent.ConcurrentLinkedQueue$Node: boolean casItem(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 4401 : 1
<java.lang.invoke.VirtualHandle: void <init>(java.lang.invoke.VirtualHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 4402 : 1
<java.time.Year: void <init>(int)>
Counter value: 1
SCC 4403 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceEntriesTask,java.util.function.Function,java.util.function.BiFunction)>
Counter value: 1
SCC 4404 : 1
<java.util.TreeMap$EntrySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 4405 : 1
<java.lang.ClassValue$ClassValueMap: void removeStaleEntries(java.lang.ClassValue$Entry[],int,int)>
Counter value: 1
SCC 4406 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int nextIndex()>
Counter value: 2
SCC 4407 : 1
<java.util.AbstractMap$2: boolean contains(java.lang.Object)>
Counter value: 1
SCC 4408 : 1
<java.nio.file.Files$AcceptAllFilter: boolean accept(java.nio.file.Path)>
Counter value: 1
SCC 4409 : 1
<java.util.Spliterators$ArraySpliterator: void <init>(java.lang.Object[],int,int,int)>
Counter value: 1
SCC 4410 : 1
<java.util.ArraysParallelSortHelpers$FJLong$Merger: void compute()>
Counter value: 1
SCC 4411 : 1
<sun.net.www.MessageHeader: boolean isRequestline(java.lang.String)>
Counter value: 1
SCC 4412 : 1
<sun.reflect.ClassFileAssembler: void opc_astore_3()>
Counter value: 1
SCC 4413 : 1
<java.io.ObjectOutputStream: void close()>
Counter value: 1
SCC 4414 : 1
<sun.net.www.http.ChunkedOutputStream: void flush(boolean)>
Counter value: 1
SCC 4415 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 4416 : 1
<java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>
Counter value: 1
SCC 4417 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath relativize(java.nio.file.Path)>
Counter value: 1
SCC 4418 : 1
<java.util.stream.LongPipeline$6$1$accept__70: java.util.function.LongConsumer bootstrap$(java.util.stream.Sink)>
Counter value: 1
SCC 4419 : 1
<java.util.stream.Nodes$LongArrayNode: java.lang.String toString()>
Counter value: 1
SCC 4420 : 1
<java.time.Year: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 4421 : 1
<java.util.stream.ReduceOps$9ReducingSink: void <init>(java.util.function.LongBinaryOperator)>
Counter value: 1
SCC 4422 : 1
<java.util.stream.SliceOps: long access$300(long,long,long)>
Counter value: 1
SCC 4423 : 1
<java.util.ArraysParallelSortHelpers$EmptyCompleter: void <init>(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 4424 : 1
<java.util.stream.Nodes$InternalNodeSpliterator: java.util.Spliterator trySplit()>
Counter value: 2
SCC 4425 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfRef: void <init>(java.util.Spliterator,java.util.stream.PipelineHelper,java.lang.Object[])>
Counter value: 1
SCC 4426 : 1
<jdk.internal.org.objectweb.asm.Handle: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4427 : 1
<sun.misc.PathPermissions: boolean implies(java.security.Permission)>
Counter value: 1
SCC 4428 : 1
<java.util.stream.IntPipeline$Head: void <init>(java.util.Spliterator,int,boolean)>
Counter value: 1
SCC 4429 : 1
<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4430 : 1
<java.nio.file.DirectoryIteratorException: java.io.IOException getCause()>
Counter value: 1
SCC 4431 : 1
<sun.net.www.http.HttpClient: void openServer(java.lang.String,int)>
Counter value: 1
SCC 4432 : 1
<java.io.ObjectInputStream: void clear()>
Counter value: 1
SCC 4433 : 1
<java.util.ServiceLoader$LazyIterator: void remove()>
Counter value: 1
SCC 4434 : 1
<java.net.HttpCookie: java.lang.String getDomain()>
Counter value: 1
SCC 4435 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setRequestMethod(java.lang.String)>
Counter value: 1
SCC 4436 : 1
<sun.nio.ch.Net: void translateException(java.lang.Exception,boolean)>
Counter value: 1
SCC 4437 : 1
<java.lang.invoke.IndirectHandle: java.lang.invoke.MethodType indirectMethodType(java.lang.invoke.MethodType,java.lang.Class)>
Counter value: 1
SCC 4438 : 1
<java.util.ArrayList$ArrayListSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 4439 : 1
<java.lang.invoke.MethodHandleStatics: java.lang.InternalError newInternalError(java.lang.Throwable)>
Counter value: 1
SCC 4440 : 1
<java.util.stream.Streams$RangeLongSpliterator: java.util.Spliterator$OfLong trySplit()>
Counter value: 1
SCC 4441 : 1
<java.util.stream.SliceOps$4$lambda_opEvaluateParallelLazy_0__67: java.util.function.IntFunction bootstrap$()>
Counter value: 1
SCC 4442 : 1
<java.time.chrono.Ser: java.lang.Object readInternal(byte,java.io.ObjectInput)>
Counter value: 1
SCC 4443 : 1
<java.io.ObjectInputStream$BlockDataInputStream: boolean setBlockDataMode(boolean)>
Counter value: 1
SCC 4444 : 1
<java.lang.reflect.Proxy$Key1: int hashCode()>
Counter value: 1
SCC 4445 : 1
<java.time.format.DateTimeFormatter: java.lang.Boolean lambda$static$1(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 4446 : 1
<java.util.regex.Matcher: int regionStart()>
Counter value: 1
SCC 4447 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int previousIndex()>
Counter value: 2
SCC 4448 : 1
<java.util.concurrent.FutureTask$WaitNode: void <init>()>
Counter value: 1
SCC 4449 : 1
<java.util.HashMap$KeySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 4450 : 1
<java.util.AbstractCollection: boolean remove(java.lang.Object)>
Counter value: 1
SCC 4451 : 1
<java.util.EnumMap: boolean containsKey(java.lang.Object)>
Counter value: 1
SCC 4452 : 1
<java.io.ObjectStreamClass: void <init>(java.lang.Class)>
Counter value: 1
SCC 4453 : 1
<java.util.concurrent.ConcurrentHashMap$KeySetView: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 4454 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator: int characteristics()>
Counter value: 2
SCC 4455 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToLongTask: void compute()>
Counter value: 1
SCC 4456 : 1
<java.time.Duration: java.time.Duration ofSeconds(long,long)>
Counter value: 1
SCC 4457 : 1
<java.lang.CharSequence$1CharIterator: boolean hasNext()>
Counter value: 1
SCC 4458 : 1
<sun.reflect.ClassFileAssembler: void opc_arraylength()>
Counter value: 1
SCC 4459 : 1
<sun.net.www.http.HttpCaptureInputStream: int read(byte[])>
Counter value: 1
SCC 4460 : 1
<java.util.Spliterators: java.util.Spliterator$OfInt emptyIntSpliterator()>
Counter value: 1
SCC 4461 : 1
<java.time.DayOfWeek: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 4462 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.lang.Object next()>
Counter value: 1
SCC 4463 : 1
<java.util.ArrayDeque$DeqSpliterator: java.util.ArrayDeque$DeqSpliterator trySplit()>
Counter value: 1
SCC 4464 : 1
<java.io.ObjectInputStream$HandleTable: java.lang.ClassNotFoundException lookupException(int)>
Counter value: 1
SCC 4465 : 1
<java.util.stream.SpinedBuffer$OfLong: java.lang.Object[] newArrayArray(int)>
Counter value: 1
SCC 4466 : 1
<java.util.concurrent.ConcurrentHashMap$ReduceEntriesTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$ReduceEntriesTask,java.util.function.BiFunction)>
Counter value: 1
SCC 4467 : 1
<java.util.TreeMap$ValueSpliterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry,java.util.TreeMap$Entry,int,int,int)>
Counter value: 1
SCC 4468 : 1
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findInterface(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>
Counter value: 1
SCC 4469 : 1
<sun.misc.ProxyGenerator: java.lang.String dotToSlash(java.lang.String)>
Counter value: 1
SCC 4470 : 1
<java.lang.invoke.ThunkTuple: void <init>(java.lang.String,long)>
Counter value: 1
SCC 4471 : 1
<sun.net.www.http.ClientVector: sun.net.www.http.HttpClient get()>
Counter value: 1
SCC 4472 : 1
<java.io.ClassByNameCache$LoaderRef: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 4473 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate of(java.time.chrono.HijrahChronology,int,int,int)>
Counter value: 1
SCC 4474 : 1
<java.util.Spliterators$IntArraySpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 4475 : 1
<java.util.AbstractMap: java.util.Collection values()>
Counter value: 1
SCC 4476 : 1
<java.time.YearMonth: java.lang.String toString()>
Counter value: 1
SCC 4477 : 1
<java.util.stream.LongPipeline: java.util.stream.Node evaluateToNode(java.util.stream.PipelineHelper,java.util.Spliterator,boolean,java.util.function.IntFunction)>
Counter value: 1
SCC 4478 : 1
<jdk.internal.org.xml.sax.SAXException: java.lang.String toString()>
Counter value: 2
SCC 4479 : 1
<java.util.OptionalInt: java.util.OptionalInt empty()>
Counter value: 1
SCC 4480 : 1
<sun.nio.fs.NativeBuffers$1: void <init>()>
Counter value: 1
SCC 4481 : 1
<sun.misc.Cleaner: void <clinit>()>
Counter value: 1
SCC 4482 : 1
<sun.security.x509.RFC822Name: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 4483 : 1
<java.nio.DirectLongBufferU: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 4484 : 1
<java.util.concurrent.LinkedBlockingQueue: void fullyLock()>
Counter value: 1
SCC 4485 : 1
<java.lang.reflect.Constructor: sun.reflect.ConstructorAccessor acquireConstructorAccessor()>
Counter value: 1
SCC 4486 : 1
<java.io.ObjectInputStream$2: java.lang.Object run()>
Counter value: 1
SCC 4487 : 1
<javax.security.auth.Subject: java.lang.String toString()>
Counter value: 1
SCC 4488 : 1
<java.net.SocksSocketImpl$7: java.lang.Object run()>
Counter value: 1
SCC 4489 : 1
<java.util.TreeMap: void <init>(java.util.Comparator)>
Counter value: 1
SCC 4490 : 1
<java.nio.DoubleBuffer: int compareTo(java.nio.DoubleBuffer)>
Counter value: 1
SCC 4491 : 1
<java.net.URI: boolean equalIgnoringCase(java.lang.String,java.lang.String)>
Counter value: 1
SCC 4492 : 1
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 4493 : 1
<sun.util.calendar.JulianCalendar: sun.util.calendar.CalendarDate newCalendarDate(java.util.TimeZone)>
Counter value: 1
SCC 4494 : 1
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle collectArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 4495 : 1
<java.nio.channels.spi.AbstractSelectableChannel: void removeKey(java.nio.channels.SelectionKey)>
Counter value: 1
SCC 4496 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 4497 : 1
<sun.security.jca.ProviderList$ServiceList: java.lang.Object get(int)>
Counter value: 1
SCC 4498 : 1
<sun.nio.fs.UnixPath: java.nio.file.Path getName(int)>
Counter value: 1
SCC 4499 : 1
<java.time.Year: java.time.Year 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 4500 : 1
<java.time.MonthDay: void <clinit>()>
Counter value: 1
SCC 4501 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Spliterator spliterator()>
Counter value: 2
SCC 4502 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: java.util.concurrent.RunnableScheduledFuture poll()>
Counter value: 1
SCC 4503 : 1
<javax.security.auth.SubjectDomainCombiner: void <clinit>()>
Counter value: 1
SCC 4504 : 1
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 4505 : 1
<java.util.concurrent.ForkJoinTask$AdaptedCallable: boolean exec()>
Counter value: 1
SCC 4506 : 1
<sun.misc.ProxyGenerator: java.lang.String getMethodDescriptor(java.lang.Class[],java.lang.Class)>
Counter value: 1
SCC 4507 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void checkForComodification()>
Counter value: 1
SCC 4508 : 1
<sun.reflect.UTF8: int utf8Length(java.lang.String)>
Counter value: 1
SCC 4509 : 1
<java.util.WeakHashMap$EntrySet: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 4510 : 1
<java.util.AbstractMap$SimpleEntry: int hashCode()>
Counter value: 2
SCC 4511 : 1
<sun.net.sdp.SdpProvider: void implBeforeTcpConnect(java.io.FileDescriptor,java.net.InetAddress,int)>
Counter value: 1
SCC 4512 : 1
<sun.nio.ch.Util: int access$100()>
Counter value: 1
SCC 4513 : 1
<java.util.TreeMap$SubMap: java.util.Set entrySet()>
Counter value: 1
SCC 4514 : 1
<java.time.temporal.TemporalQueries$lambda_static_6__14: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 4515 : 1
<java.lang.invoke.GuardWithTestHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 4516 : 1
<sun.security.x509.PolicyMappingsExtension: void encodeThis()>
Counter value: 1
SCC 4517 : 1
<java.io.ObjectInputStream$BlockDataInputStream: java.lang.String readLongUTF()>
Counter value: 1
SCC 4518 : 1
<java.util.AbstractQueue: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 4519 : 1
<sun.nio.ch.FileChannelImpl: void <clinit>()>
Counter value: 1
SCC 4520 : 1
<java.util.Collections$EmptyList: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 4521 : 1
<sun.security.x509.PolicyMappingsExtension: java.lang.String getName()>
Counter value: 1
SCC 4522 : 1
<sun.nio.ch.SelectionKeyImpl: java.nio.channels.SelectableChannel channel()>
Counter value: 1
SCC 4523 : 1
<java.util.jar.Attributes: java.util.Set keySet()>
Counter value: 2
SCC 4524 : 1
<java.time.LocalDateTime: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4525 : 1
<sun.nio.fs.UnixFileSystem$FileStoreIterator: boolean hasNext()>
Counter value: 1
SCC 4526 : 1
<sun.nio.fs.UnixFileSystem$FileStoreIterator: java.lang.Object next()>
Counter value: 1
SCC 4527 : 1
<java.nio.Bits: void reserveMemory(long,int)>
Counter value: 1
SCC 4528 : 1
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 4529 : 1
<java.nio.ByteBufferAsCharBufferRB: void <init>(java.nio.ByteBuffer,int,int,int,int,int)>
Counter value: 1
SCC 4530 : 1
<java.time.chrono.JapaneseDate: void <init>(java.time.LocalDate)>
Counter value: 1
SCC 4531 : 1
<java.nio.file.FileTreeIterator: java.nio.file.FileTreeWalker$Event next()>
Counter value: 1
SCC 4532 : 1
<sun.net.www.http.KeepAliveStreamCleaner$1: java.lang.Object run()>
Counter value: 1
SCC 4533 : 1
<java.util.stream.ReduceOps$7ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 4534 : 1
<java.util.stream.SliceOps$4: java.util.stream.Node opEvaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction)>
Counter value: 1
SCC 4535 : 1
<java.util.stream.AbstractTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 4536 : 1
<sun.security.x509.CRLNumberExtension: java.lang.String getName()>
Counter value: 1
SCC 4537 : 1
<java.util.Random$RandomLongsSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 4538 : 1
<java.util.Random$RandomLongsSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 4539 : 1
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 4540 : 1
<java.nio.DirectCharBufferS: boolean isDirect()>
Counter value: 1
SCC 4541 : 1
<java.lang.Float: java.lang.Float valueOf(float)>
Counter value: 1
SCC 4542 : 1
<sun.util.logging.PlatformLogger: void finer(java.lang.String)>
Counter value: 1
SCC 4543 : 1
<java.time.chrono.HijrahDate: int getDayOfWeek()>
Counter value: 1
SCC 4544 : 1
<java.lang.invoke.InvokeGenericHandle: java.lang.invoke.MethodType invokeGenericMethodType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 4545 : 1
<java.util.stream.ForEachOps$ForEachOp$OfInt: void <init>(java.util.function.IntConsumer,boolean)>
Counter value: 1
SCC 4546 : 1
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 4547 : 1
<sun.misc.ProxyGenerator: java.util.List computeUniqueCatchList(java.lang.Class[])>
Counter value: 1
SCC 4548 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer: void reset()>
Counter value: 1
SCC 4549 : 1
<java.net.NetworkInterface: java.lang.String getName()>
Counter value: 1
SCC 4550 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$NumberFormatProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 4551 : 1
<java.util.stream.LongPipeline$4: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 4552 : 1
<java.net.SocksSocketImpl$1: java.lang.Object run()>
Counter value: 1
SCC 4553 : 1
<java.io.Bits: float getFloat(byte[],int)>
Counter value: 1
SCC 4554 : 1
<java.util.Arrays: void sort(int[])>
Counter value: 1
SCC 4555 : 1
<java.util.TreeMap$DescendingKeySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 4556 : 1
<java.io.ObjectStreamClass: int getNumObjFields()>
Counter value: 1
SCC 4557 : 1
<java.util.Collections$SingletonMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 4558 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator: void <init>(java.util.concurrent.ConcurrentSkipListMap$SubMap)>
Counter value: 1
SCC 4559 : 1
<java.util.stream.Nodes$ConcNode$OfInt: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 4560 : 1
<java.util.EnumMap$KeySet: void <init>(java.util.EnumMap,java.util.EnumMap$1)>
Counter value: 1
SCC 4561 : 1
<java.lang.invoke.ConstantDoubleHandle: void <init>(java.lang.invoke.ConstantDoubleHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 4562 : 1
<sun.nio.ch.NativeDispatcher: void <init>()>
Counter value: 1
SCC 4563 : 1
<java.util.stream.LongStream$1: boolean hasNext()>
Counter value: 1
SCC 4564 : 1
<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: void checkError()>
Counter value: 1
SCC 4565 : 1
<java.net.Socket: java.io.InputStream getInputStream()>
Counter value: 1
SCC 4566 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble: java.util.Spliterator$OfDouble trySplit()>
Counter value: 1
SCC 4567 : 1
<sun.misc.ProxyGenerator: void access$1500(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>
Counter value: 1
SCC 4568 : 1
<sun.nio.ch.OptionKey: int level()>
Counter value: 1
SCC 4569 : 1
<sun.reflect.UnsafeByteFieldAccessorImpl: byte getByte(java.lang.Object)>
Counter value: 1
SCC 4570 : 1
<java.io.Console: char[] readline(boolean)>
Counter value: 1
SCC 4571 : 1
<java.lang.invoke.InvokeGenericHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 4572 : 1
<sun.security.x509.CertificateIssuerExtension: void encodeThis()>
Counter value: 1
SCC 4573 : 1
<java.util.concurrent.ForkJoinTask: int setCompletion(int)>
Counter value: 1
SCC 4574 : 1
<java.util.stream.IntPipeline: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>
Counter value: 1
SCC 4575 : 1
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
Counter value: 1
SCC 4576 : 1
<java.util.concurrent.ConcurrentSkipListMap: boolean containsKey(java.lang.Object)>
Counter value: 1
SCC 4577 : 1
<java.util.Properties$XmlSupport: sun.util.spi.XmlPropertiesProvider access$100(java.lang.ClassLoader)>
Counter value: 1
SCC 4578 : 1
<sun.util.PreHashedMap: int access$100(sun.util.PreHashedMap)>
Counter value: 1
SCC 4579 : 1
<java.lang.invoke.ThunkKeyWithObjectArray: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4580 : 1
<java.lang.invoke.SecurityFrameInjector$1: java.lang.Object run()>
Counter value: 1
SCC 4581 : 1
<sun.security.util.MemoryCache$HardCacheEntry: long getExpirationTime()>
Counter value: 1
SCC 4582 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfLong$lambda_emptyConsumer_0__50: void <init>()>
Counter value: 1
SCC 4583 : 1
<java.io.WriteAbortedException: java.lang.String getMessage()>
Counter value: 1
SCC 4584 : 1
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 4585 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: int size()>
Counter value: 1
SCC 4586 : 1
<java.util.concurrent.LinkedBlockingDeque: boolean offer(java.lang.Object)>
Counter value: 1
SCC 4587 : 1
<java.util.stream.Streams$DoubleStreamBuilderImpl: void accept(double)>
Counter value: 1
SCC 4588 : 1
<sun.nio.fs.UnixMountEntry: boolean isIgnored()>
Counter value: 1
SCC 4589 : 1
<java.time.zone.Ser: long readEpochSec(java.io.DataInput)>
Counter value: 1
SCC 4590 : 1
<java.util.stream.ReduceOps$10ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 4591 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahEra getEra()>
Counter value: 1
SCC 4592 : 1
<java.util.EnumMap$EntrySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 4593 : 1
<sun.net.www.URLConnection: java.lang.String getHeaderField(java.lang.String)>
Counter value: 1
SCC 4594 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: int hashCode()>
Counter value: 1
SCC 4595 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseChronology getChronology()>
Counter value: 1
SCC 4596 : 1
<java.lang.invoke.Insert1IntHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 4597 : 1
<java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.String,java.lang.String)>
Counter value: 1
SCC 4598 : 1
<java.util.stream.Nodes$IntFixedNodeBuilder: java.lang.String toString()>
Counter value: 1
SCC 4599 : 1
<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: void <init>(int,short,short)>
Counter value: 1
SCC 4600 : 1
<java.util.stream.SpinedBuffer$OfDouble: java.util.Spliterator$OfDouble spliterator()>
Counter value: 1
SCC 4601 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 4602 : 1
<java.time.chrono.MinguoDate: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 4603 : 1
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object unlinkFirst()>
Counter value: 1
SCC 4604 : 1
<java.net.CookieHandler: java.net.CookieHandler getDefault()>
Counter value: 1
SCC 4605 : 1
<java.lang.invoke.MethodHandleInfo: java.lang.String referenceKindToString(int)>
Counter value: 1
SCC 4606 : 1
<java.net.URLConnection: long getContentLengthLong()>
Counter value: 1
SCC 4607 : 1
<java.nio.DirectCharBufferU: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 4608 : 1
<java.time.DayOfWeek: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 4609 : 1
<java.util.ArrayList$SubList: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 4610 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef$lambda_forEachRemaining_1__57: void <init>()>
Counter value: 1
SCC 4611 : 1
<java.util.regex.Matcher: int regionEnd()>
Counter value: 1
SCC 4612 : 1
<java.lang.invoke.InterfaceHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 4613 : 1
<sun.nio.ch.IOUtil: int read(java.io.FileDescriptor,java.nio.ByteBuffer,long,sun.nio.ch.NativeDispatcher)>
Counter value: 1
SCC 4614 : 1
<java.util.DualPivotQuicksort: void sort(byte[],int,int)>
Counter value: 1
SCC 4615 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.invoke.MethodHandle asFixedArity()>
Counter value: 1
SCC 4616 : 1
<java.util.Spliterators$ArraySpliterator: void <init>(java.lang.Object[],int)>
Counter value: 1
SCC 4617 : 1
<sun.security.x509.NameConstraintsExtension: java.lang.Object clone()>
Counter value: 1
SCC 4618 : 1
<java.lang.invoke.FilterReturnHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 4619 : 1
<sun.security.x509.EDIPartyName: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 4620 : 1
<java.net.HttpConnectSocketImpl: java.net.Socket doTunnel(java.lang.String,int)>
Counter value: 1
SCC 4621 : 1
<java.util.concurrent.ConcurrentSkipListMap$CSLMSpliterator: long estimateSize()>
Counter value: 1
SCC 4622 : 1
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 4623 : 1
<java.util.stream.SpinedBuffer$OfDouble: void arrayForEach(java.lang.Object,int,int,java.lang.Object)>
Counter value: 1
SCC 4624 : 1
<java.util.stream.StreamOpFlag$MaskBuilder: java.util.stream.StreamOpFlag$MaskBuilder mask(java.util.stream.StreamOpFlag$Type,java.lang.Integer)>
Counter value: 1
SCC 4625 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 4626 : 1
<sun.security.util.MemoryCache: void put(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 4627 : 1
<sun.net.www.http.KeepAliveStream: sun.net.www.http.KeepAliveStreamCleaner access$100()>
Counter value: 1
SCC 4628 : 1
<java.util.EnumMap$ValueIterator: void <init>(java.util.EnumMap)>
Counter value: 1
SCC 4629 : 1
<java.time.chrono.Chronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 4630 : 1
<java.nio.DirectCharBufferRS: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 4631 : 1
<java.time.chrono.ChronoZonedDateTime: long toEpochSecond()>
Counter value: 1
SCC 4632 : 1
<java.util.stream.SpinedBuffer$OfInt: int arrayLength(java.lang.Object)>
Counter value: 1
SCC 4633 : 1
<java.util.Hashtable$ValueCollection: boolean contains(java.lang.Object)>
Counter value: 1
SCC 4634 : 1
<java.io.DeleteOnExitHook$1: void <init>()>
Counter value: 1
SCC 4635 : 1
<sun.security.x509.SubjectKeyIdentifierExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 4636 : 1
<sun.security.x509.CertificatePoliciesExtension: java.lang.String toString()>
Counter value: 1
SCC 4637 : 1
<java.io.ClassByNameCache$LoaderRef: int hashCode()>
Counter value: 1
SCC 4638 : 1
<java.util.stream.Sink: boolean cancellationRequested()>
Counter value: 1
SCC 4639 : 1
<java.io.ObjectInputStream: long readLong()>
Counter value: 1
SCC 4640 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object previous()>
Counter value: 1
SCC 4641 : 1
<java.nio.file.FileTreeIterator: void fetchNextIfNeeded()>
Counter value: 1
SCC 4642 : 1
<java.util.Collections$SetFromMap: java.util.stream.Stream stream()>
Counter value: 2
SCC 4643 : 1
<java.util.concurrent.atomic.AtomicLong: java.lang.String toString()>
Counter value: 1
SCC 4644 : 1
<sun.security.provider.X509Factory: java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream)>
Counter value: 1
SCC 4645 : 1
<java.util.stream.ReferencePipeline$8$1: void <init>(java.util.stream.ReferencePipeline$8,java.util.stream.Sink)>
Counter value: 1
SCC 4646 : 1
<java.util.WeakHashMap$EntrySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 4647 : 1
<java.lang.Float: double doubleValue()>
Counter value: 1
SCC 4648 : 1
<java.time.LocalDateTime: java.time.LocalDateTime plusNanos(long)>
Counter value: 1
SCC 4649 : 1
<java.security.Provider: java.lang.Object implPutIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 4650 : 1
<java.util.concurrent.locks.ReentrantLock: java.lang.String toString()>
Counter value: 1
SCC 4651 : 1
<sun.nio.fs.UnixFileAttributes: int mode()>
Counter value: 1
SCC 4652 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void lambda$entryConsumer$0(java.util.function.Consumer,java.util.Map$Entry)>
Counter value: 1
SCC 4653 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator$accept__54: void <init>(java.util.function.LongConsumer)>
Counter value: 1
SCC 4654 : 1
<java.net.AbstractPlainSocketImpl: boolean isClosedOrPending()>
Counter value: 1
SCC 4655 : 1
<java.util.SubList: int size()>
Counter value: 1
SCC 4656 : 1
<java.io.ObjectInputStream$BlockDataInputStream: java.lang.String readUTF()>
Counter value: 1
SCC 4657 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 2
SCC 4658 : 1
<java.util.AbstractList: void removeRange(int,int)>
Counter value: 1
SCC 4659 : 1
<java.util.HashMap: java.lang.Object clone()>
Counter value: 1
SCC 4660 : 1
<java.lang.ProcessBuilder$Redirect: int hashCode()>
Counter value: 1
SCC 4661 : 1
<java.util.concurrent.CopyOnWriteArrayList: void sort(java.util.Comparator)>
Counter value: 1
SCC 4662 : 1
<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>
Counter value: 1
SCC 4663 : 1
<sun.nio.fs.NativeBuffer$Deallocator: void run()>
Counter value: 1
SCC 4664 : 1
<javax.crypto.NullCipherSpi: void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>
Counter value: 1
SCC 4665 : 1
<java.util.stream.Nodes$IntArrayNode: void copyInto(int[],int)>
Counter value: 1
SCC 4666 : 1
<sun.nio.ch.ThreadPool$lambda_defaultThreadFactory_2__34: java.lang.Thread newThread(java.lang.Runnable)>
Counter value: 1
SCC 4667 : 1
<java.util.EnumMap: void clear()>
Counter value: 1
SCC 4668 : 1
<java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Spliterator spliterator()>
Counter value: 1
SCC 4669 : 1
<java.io.ObjectStreamClass$6: int compare(java.io.ObjectStreamClass$MemberSignature,java.io.ObjectStreamClass$MemberSignature)>
Counter value: 1
SCC 4670 : 1
<sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$ConstantPool access$300(sun.misc.ProxyGenerator)>
Counter value: 1
SCC 4671 : 1
<java.io.ObjectInputStream: void handleReset()>
Counter value: 1
SCC 4672 : 1
<sun.security.provider.certpath.X509CertificatePair: void <clinit>()>
Counter value: 1
SCC 4673 : 1
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 4674 : 1
<sun.reflect.ClassFileAssembler: void opc_astore_2()>
Counter value: 1
SCC 4675 : 1
<java.util.stream.Streams$LongStreamBuilderImpl: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 4676 : 1
<java.io.ObjectInputStream: java.lang.String readString(boolean)>
Counter value: 1
SCC 4677 : 1
<sun.net.www.MessageHeader: java.util.Map getHeaders(java.lang.String[])>
Counter value: 1
SCC 4678 : 1
<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthScheme getAuthScheme()>
Counter value: 1
SCC 4679 : 1
<java.util.IdentityHashMap$EntryIterator$Entry: int access$402(java.util.IdentityHashMap$EntryIterator$Entry,int)>
Counter value: 1
SCC 4680 : 1
<java.util.ConcurrentModificationException: void <init>(java.lang.Throwable)>
Counter value: 1
SCC 4681 : 1
<java.time.OffsetDateTime: java.time.OffsetDateTime of(java.time.LocalDateTime,java.time.ZoneOffset)>
Counter value: 1
SCC 4682 : 1
<java.util.Spliterators$LongArraySpliterator: int characteristics()>
Counter value: 1
SCC 4683 : 1
<java.time.YearMonth: java.time.YearMonth withMonth(int)>
Counter value: 1
SCC 4684 : 1
<java.io.StringReader: boolean ready()>
Counter value: 1
SCC 4685 : 1
<sun.misc.FDBigInteger: java.lang.String toString()>
Counter value: 1
SCC 4686 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToLongTask: java.lang.Long getRawResult()>
Counter value: 1
SCC 4687 : 1
<java.lang.ClassValue: boolean match(java.lang.ClassValue$Entry)>
Counter value: 1
SCC 4688 : 1
<java.net.SocksSocketImpl$2: java.lang.Object run()>
Counter value: 1
SCC 4689 : 1
<java.util.Calendar: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4690 : 1
<java.time.chrono.HijrahDate: int lengthOfYear()>
Counter value: 1
SCC 4691 : 1
<java.util.Scanner: void close()>
Counter value: 2
SCC 4692 : 1
<java.util.HashMap$KeySpliterator: java.util.HashMap$KeySpliterator trySplit()>
Counter value: 1
SCC 4693 : 1
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>
Counter value: 1
SCC 4694 : 1
<java.time.ZoneId$1: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 4695 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 4696 : 1
<java.nio.Bits: boolean isPrimitiveArray(java.lang.Class)>
Counter value: 1
SCC 4697 : 1
<java.lang.invoke.BruteArgumentMoverHandle: void <clinit>()>
Counter value: 1
SCC 4698 : 1
<java.net.HttpConnectSocketImpl: java.lang.reflect.Field access$000()>
Counter value: 1
SCC 4699 : 1
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
Counter value: 2
SCC 4700 : 1
<java.util.concurrent.TimeUnit$4: long toHours(long)>
Counter value: 1
SCC 4701 : 1
<java.lang.Integer: float floatValue()>
Counter value: 1
SCC 4702 : 1
<java.util.stream.Streams$RangeLongSpliterator: int characteristics()>
Counter value: 1
SCC 4703 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Method getInheritableMethod(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class)>
Counter value: 1
SCC 4704 : 1
<java.lang.invoke.MethodHandle: java.lang.String getMethodName()>
Counter value: 1
SCC 4705 : 1
<java.util.stream.ReferencePipeline$3: void <init>(java.util.stream.ReferencePipeline,java.util.stream.AbstractPipeline,java.util.stream.StreamShape,int,java.util.function.Function)>
Counter value: 1
SCC 4706 : 1
<sun.nio.fs.AbstractPath$1: java.lang.Object next()>
Counter value: 1
SCC 4707 : 1
<java.util.EnumMap$EntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 4708 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CollatorProviderDelegate: void addImpl(java.text.spi.CollatorProvider)>
Counter value: 1
SCC 4709 : 1
<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>
Counter value: 2
SCC 4710 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 4711 : 1
<java.util.stream.Nodes: java.util.stream.Node$Builder$OfInt intBuilder(long)>
Counter value: 1
SCC 4712 : 1
<java.util.stream.IntPipeline$Head: void forEach(java.util.function.IntConsumer)>
Counter value: 1
SCC 4713 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: void copyInto(int[],int)>
Counter value: 1
SCC 4714 : 1
<java.lang.invoke.StaticFieldSetterHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 4715 : 1
<java.lang.J9VMInternals: java.lang.Throwable copyThrowable(java.lang.Throwable,java.util.HashMap)>
Counter value: 1
SCC 4716 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 4717 : 1
<sun.security.util.ByteArrayTagOrder: int compare(byte[],byte[])>
Counter value: 1
SCC 4718 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfLong$lambda_emptyConsumer_0__50: java.util.function.LongConsumer bootstrap$()>
Counter value: 1
SCC 4719 : 1
<sun.reflect.'annotation'.AnnotationInvocationHandler: void access$100(sun.reflect.'annotation'.AnnotationInvocationHandler,java.lang.reflect.Method[])>
Counter value: 1
SCC 4720 : 1
<java.util.stream.ForEachOps$ForEachOp$OfLong: java.util.stream.StreamShape inputShape()>
Counter value: 1
SCC 4721 : 1
<sun.reflect.MethodAccessorGenerator$1: sun.reflect.MagicAccessorImpl run()>
Counter value: 1
SCC 4722 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator()>
Counter value: 1
SCC 4723 : 1
<java.util.OptionalInt: java.lang.String toString()>
Counter value: 1
SCC 4724 : 1
<sun.net.www.HeaderParser: void <init>()>
Counter value: 1
SCC 4725 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: void add(java.lang.Object)>
Counter value: 1
SCC 4726 : 1
<sun.net.www.protocol.file.FileURLConnection: long getLastModified()>
Counter value: 1
SCC 4727 : 1
<java.nio.file.FileTreeIterator: java.lang.Object next()>
Counter value: 1
SCC 4728 : 1
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>
Counter value: 2
SCC 4729 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator: long estimateSize()>
Counter value: 2
SCC 4730 : 1
<sun.reflect.ReflectionFactory$1: void <init>()>
Counter value: 1
SCC 4731 : 1
<java.util.stream.IntPipeline$5: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 4732 : 1
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: float getFloat(java.lang.Object)>
Counter value: 1
SCC 4733 : 1
<java.security.cert.CertPath: void <init>(java.lang.String)>
Counter value: 1
SCC 4734 : 1
<java.util.concurrent.FutureTask: int awaitDone(boolean,long)>
Counter value: 1
SCC 4735 : 1
<java.lang.ProcessBuilder$Redirect$2: java.lang.ProcessBuilder$Redirect$Type type()>
Counter value: 1
SCC 4736 : 1
<javax.security.auth.SubjectDomainCombiner$4: java.lang.Object run()>
Counter value: 1
SCC 4737 : 1
<sun.invoke.util.Wrapper$Format: int floating(int)>
Counter value: 1
SCC 4738 : 1
<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTargetInfo: java.lang.String toString()>
Counter value: 1
SCC 4739 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle access$300(java.lang.Class)>
Counter value: 1
SCC 4740 : 1
<java.lang.ClassValue$Entry: void <init>(java.lang.ClassValue$Version,java.lang.Object)>
Counter value: 1
SCC 4741 : 1
<java.util.stream.Streams$LongStreamBuilderImpl: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 4742 : 1
<sun.net.www.http.ChunkedInputStream: int readAheadNonBlocking()>
Counter value: 1
SCC 4743 : 1
<sun.nio.ch.SocketAdaptor$1: java.io.InputStream run()>
Counter value: 1
SCC 4744 : 1
<java.util.Spliterators$IntArraySpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 4745 : 1
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: int getInt(java.lang.Object)>
Counter value: 1
SCC 4746 : 1
<java.util.Collections$AsLIFOQueue: boolean isEmpty()>
Counter value: 1
SCC 4747 : 1
<java.lang.reflect.Proxy: java.lang.Class getProxyClass0(java.lang.ClassLoader,java.lang.Class[])>
Counter value: 1
SCC 4748 : 1
<java.util.Arrays: int hashCode(java.lang.Object[])>
Counter value: 1
SCC 4749 : 1
<java.util.stream.DoublePipeline$7$1: void <init>(java.util.stream.DoublePipeline$7,java.util.stream.Sink)>
Counter value: 1
SCC 4750 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType generic()>
Counter value: 1
SCC 4751 : 1
<java.util.stream.ForEachOps$ForEachOrderedTask: java.lang.Object[] lambda$doCompute$0(int)>
Counter value: 1
SCC 4752 : 1
<java.lang.invoke.MethodHandleInfoImpl$1: java.lang.Object run()>
Counter value: 1
SCC 4753 : 1
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 4754 : 1
<java.util.concurrent.atomic.AtomicInteger: int intValue()>
Counter value: 1
SCC 4755 : 1
<java.util.Collections$CheckedSet: boolean equals(java.lang.Object)>
Counter value: 2
SCC 4756 : 1
<javax.crypto.PermissionsEnumerator: java.util.Enumeration getNextEnumWithMore()>
Counter value: 1
SCC 4757 : 1
<sun.net.www.protocol.http.HttpURLConnection: boolean streaming()>
Counter value: 1
SCC 4758 : 1
<java.util.stream.Streams$StreamBuilderImpl: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 4759 : 1
<java.security.AccessController: void keepalive(java.security.Permission[])>
Counter value: 1
SCC 4760 : 1
<java.util.Random: double nextDouble()>
Counter value: 1
SCC 4761 : 1
<sun.net.www.protocol.http.AuthCacheValue: void <init>()>
Counter value: 1
SCC 4762 : 1
<java.net.HttpCookie$4: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 4763 : 1
<java.util.stream.SpinedBuffer: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 4764 : 1
<java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: java.nio.channels.spi.AsynchronousChannelProvider loadProviderFromProperty()>
Counter value: 1
SCC 4765 : 1
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>
Counter value: 2
SCC 4766 : 1
<java.util.stream.LongPipeline$StatelessOp: java.util.Spliterator lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 4767 : 1
<java.util.stream.Nodes$CollectorTask$OfLong: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 4768 : 1
<sun.misc.Perf: sun.misc.Perf access$000()>
Counter value: 1
SCC 4769 : 1
<java.util.concurrent.LinkedBlockingDeque$LBDSpliterator: int characteristics()>
Counter value: 1
SCC 4770 : 1
<java.lang.Short: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4771 : 1
<java.time.LocalDateTime: int compareTo(java.lang.Object)>
Counter value: 1
SCC 4772 : 1
<sun.security.util.KnownOIDs$2: boolean registerNames()>
Counter value: 1
SCC 4773 : 1
<java.lang.invoke.MethodHandleCache: java.lang.invoke.MethodHandle getClassCastHandle()>
Counter value: 1
SCC 4774 : 1
<java.math.BigDecimal: int hashCode()>
Counter value: 1
SCC 4775 : 1
<java.lang.reflect.Field: long getLong(java.lang.Object)>
Counter value: 1
SCC 4776 : 1
<java.util.RegularEnumSet: long access$002(java.util.RegularEnumSet,long)>
Counter value: 1
SCC 4777 : 1
<java.io.ObjectInputStream$BlockDataInputStream: long readLong()>
Counter value: 1
SCC 4778 : 1
<java.util.Vector: java.util.Spliterator spliterator()>
Counter value: 1
SCC 4779 : 1
<java.io.DataOutputStream: void writeDouble(double)>
Counter value: 1
SCC 4780 : 1
<java.util.TreeMap: java.util.Comparator access$300(java.util.TreeMap)>
Counter value: 1
SCC 4781 : 1
<java.util.concurrent.ThreadLocalRandom$RandomDoublesSpliterator: void <init>(long,long,double,double)>
Counter value: 1
SCC 4782 : 1
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 4783 : 1
<java.util.EnumMap$EntryIterator$Entry: void checkIndexForEntryUse()>
Counter value: 1
SCC 4784 : 1
<java.util.ArrayDeque$DeqSpliterator: int characteristics()>
Counter value: 1
SCC 4785 : 1
<sun.security.util.DerInputBuffer: byte[] getBitString()>
Counter value: 1
SCC 4786 : 1
<java.lang.ref.Reference$ClearBeforeEnqueue$1: java.lang.Object run()>
Counter value: 1
SCC 4787 : 1
<java.lang.reflect.Proxy$KeyFactory: java.lang.Object apply(java.lang.ClassLoader,java.lang.Class[])>
Counter value: 1
SCC 4788 : 1
<java.lang.invoke.ProxyClassesDumper: void access$000(java.nio.file.Path)>
Counter value: 1
SCC 4789 : 1
<java.util.stream.Nodes$ToArrayTask$OfRef: void <init>(java.util.stream.Node,java.lang.Object[],int,java.util.stream.Nodes$1)>
Counter value: 1
SCC 4790 : 1
<java.util.ArrayList$SubList$1: java.lang.Object previous()>
Counter value: 1
SCC 4791 : 1
<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: long skip(long)>
Counter value: 1
SCC 4792 : 1
<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 4793 : 1
<java.util.stream.SliceOps: long calcSize(long,long,long)>
Counter value: 1
SCC 4794 : 1
<java.nio.Bits: boolean tryReserveMemory(long,int)>
Counter value: 1
SCC 4795 : 1
<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.BlockingQueue access$000(java.util.concurrent.ExecutorCompletionService)>
Counter value: 1
SCC 4796 : 1
<java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4797 : 1
<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>
Counter value: 1
SCC 4798 : 1
<java.util.Collections$AsLIFOQueue: boolean add(java.lang.Object)>
Counter value: 1
SCC 4799 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean add(java.lang.Runnable)>
Counter value: 1
SCC 4800 : 1
<java.lang.reflect.Field: int hashCode()>
Counter value: 1
SCC 4801 : 1
<java.lang.invoke.CollectHandle: void <init>(java.lang.invoke.CollectHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 4802 : 1
<java.lang.invoke.MethodCacheKey: int calculateHashcode(java.lang.String,java.lang.invoke.MethodType,java.lang.Class)>
Counter value: 1
SCC 4803 : 1
<java.lang.invoke.MethodHandleCache: java.lang.invoke.MethodHandleCache getCache(java.lang.Class)>
Counter value: 1
SCC 4804 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: void setNextRunTime()>
Counter value: 1
SCC 4805 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: void remove()>
Counter value: 1
SCC 4806 : 1
<java.util.Spliterators$DoubleArraySpliterator: java.util.Spliterator$OfDouble trySplit()>
Counter value: 1
SCC 4807 : 1
<java.lang.invoke.MethodHandleInfoImpl: boolean isConstructor()>
Counter value: 1
SCC 4808 : 1
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 4809 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: java.util.concurrent.CountedCompleter popCC(java.util.concurrent.CountedCompleter,int)>
Counter value: 1
SCC 4810 : 1
<java.util.stream.LongPipeline$9$1: void <init>(java.util.stream.LongPipeline$9,java.util.stream.Sink)>
Counter value: 1
SCC 4811 : 1
<java.util.WeakHashMap$EntrySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 4812 : 1
<java.util.IdentityHashMap$Values: void <init>(java.util.IdentityHashMap,java.util.IdentityHashMap$1)>
Counter value: 1
SCC 4813 : 1
<java.util.jar.JarVerifier$VerifierCodeSource: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4814 : 1
<sun.nio.fs.UnixPath: java.nio.file.Path relativize(java.nio.file.Path)>
Counter value: 1
SCC 4815 : 1
<sun.misc.ProxyGenerator$FieldInfo: void write(java.io.DataOutputStream)>
Counter value: 1
SCC 4816 : 1
<java.util.stream.AbstractPipeline: void close()>
Counter value: 1
SCC 4817 : 1
<java.net.AbstractPlainSocketImpl: void doConnect(java.net.InetAddress,int,int)>
Counter value: 1
SCC 4818 : 1
<java.util.AbstractList: java.lang.Object remove(int)>
Counter value: 1
SCC 4819 : 1
<java.util.stream.Streams$DoubleStreamBuilderImpl: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 4820 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream getInputStream0()>
Counter value: 1
SCC 4821 : 1
<java.util.stream.Nodes: java.util.stream.Node node(java.lang.Object[])>
Counter value: 1
SCC 4822 : 1
<java.util.Collections$CheckedSortedSet: java.util.Comparator comparator()>
Counter value: 2
SCC 4823 : 1
<java.util.ArraysParallelSortHelpers$FJShort$Sorter: void <init>(java.util.concurrent.CountedCompleter,short[],short[],int,int,int,int)>
Counter value: 1
SCC 4824 : 1
<sun.util.calendar.ImmutableGregorianDate: int getSeconds()>
Counter value: 2
SCC 4825 : 1
<java.util.EnumMap$EntryIterator: java.lang.Object next()>
Counter value: 1
SCC 4826 : 1
<java.util.HashMap$EntrySpliterator: java.util.HashMap$EntrySpliterator trySplit()>
Counter value: 1
SCC 4827 : 1
<java.util.Random$RandomLongsSpliterator: java.util.Random$RandomLongsSpliterator trySplit()>
Counter value: 1
SCC 4828 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef: void forEachRemaining(java.util.function.Consumer)>
Counter value: 2
SCC 4829 : 1
<java.time.YearMonth: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 4830 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
Counter value: 1
SCC 4831 : 1
<java.util.stream.StreamOpFlag: boolean isPreserved(int)>
Counter value: 1
SCC 4832 : 1
<java.util.concurrent.atomic.AtomicLong: float floatValue()>
Counter value: 1
SCC 4833 : 1
<java.net.SocksSocketImpl$6: java.lang.Void run()>
Counter value: 1
SCC 4834 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: java.lang.String getDisplayName(java.lang.String,int,int,int,java.util.Locale)>
Counter value: 1
SCC 4835 : 1
<java.util.TreeMap$ValueSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 4836 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfLong: void <init>(int)>
Counter value: 1
SCC 4837 : 1
<java.io.Console: char[] grow()>
Counter value: 1
SCC 4838 : 1
<java.lang.NoSuchMethodError: void <init>(java.lang.String)>
Counter value: 1
SCC 4839 : 1
<java.util.stream.SpinedBuffer$OfDouble: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 4840 : 1
<java.nio.ByteBufferAsLongBufferL: int ix(int)>
Counter value: 1
SCC 4841 : 1
<java.lang.invoke.ReceiverBoundHandle: void <clinit>()>
Counter value: 1
SCC 4842 : 1
<java.util.Spliterators$DoubleArraySpliterator: int characteristics()>
Counter value: 1
SCC 4843 : 1
<java.util.concurrent.ThreadLocalRandom$RandomLongsSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 4844 : 1
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object peekFirst()>
Counter value: 1
SCC 4845 : 1
<java.time.YearMonth: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 4846 : 1
<sun.security.x509.SubjectAlternativeNameExtension: void encodeThis()>
Counter value: 1
SCC 4847 : 1
<java.util.stream.Streams$RangeIntSpliterator: void <init>(int,int,boolean)>
Counter value: 1
SCC 4848 : 1
<sun.security.x509.CertificateVersion: java.lang.String getName()>
Counter value: 1
SCC 4849 : 1
<jdk.internal.misc.TerminatingThreadLocal: void <init>()>
Counter value: 1
SCC 4850 : 1
<java.util.stream.Nodes$ToArrayTask$OfRef: void copyNodeToArray()>
Counter value: 1
SCC 4851 : 1
<java.net.SocksSocketImpl: void privilegedConnect(java.lang.String,int,int)>
Counter value: 1
SCC 4852 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: java.lang.Object poll()>
Counter value: 1
SCC 4853 : 1
<sun.net.www.protocol.http.DigestAuthentication$1: java.lang.Object run()>
Counter value: 1
SCC 4854 : 1
<java.net.URLPermission: void init(java.lang.String)>
Counter value: 1
SCC 4855 : 1
<sun.security.x509.CertificateAlgorithmId: java.lang.String getName()>
Counter value: 1
SCC 4856 : 1
<java.net.SocketInputStream: void close()>
Counter value: 1
SCC 4857 : 1
<java.util.concurrent.ConcurrentSkipListSet: java.util.concurrent.ConcurrentSkipListSet clone()>
Counter value: 1
SCC 4858 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asSpreaderCommon(int,java.lang.Class,int)>
Counter value: 1
SCC 4859 : 1
<java.util.Spliterators$DoubleArraySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 4860 : 1
<java.lang.invoke.ArgumentMoverHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 4861 : 1
<sun.net.www.protocol.http.AuthenticationInfo: void <clinit>()>
Counter value: 1
SCC 4862 : 1
<java.nio.DirectShortBufferS: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 4863 : 1
<java.util.concurrent.ForkJoinPool: void helpStealer(java.util.concurrent.ForkJoinPool$WorkQueue,java.util.concurrent.ForkJoinTask)>
Counter value: 1
SCC 4864 : 1
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: int read(byte[])>
Counter value: 1
SCC 4865 : 1
<java.util.AbstractList: java.util.List subList(int,int)>
Counter value: 1
SCC 4866 : 1
<java.lang.Short: int compare(short,short)>
Counter value: 1
SCC 4867 : 1
<sun.net.www.protocol.http.HttpURLConnection$11: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.lang.String)>
Counter value: 1
SCC 4868 : 1
<sun.nio.ch.Util$3: boolean isEmpty()>
Counter value: 2
SCC 4869 : 1
<java.util.OptionalInt: void <init>()>
Counter value: 1
SCC 4870 : 1
<java.util.EnumMap$KeyIterator: void <init>(java.util.EnumMap)>
Counter value: 1
SCC 4871 : 1
<java.util.WeakHashMap$Values: void clear()>
Counter value: 1
SCC 4872 : 1
<sun.reflect.MethodAccessorGenerator: sun.reflect.MethodAccessor generateMethod(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class,java.lang.Class[],int)>
Counter value: 1
SCC 4873 : 1
<java.util.jar.JarFile$3: java.lang.Object nextElement()>
Counter value: 1
SCC 4874 : 1
<java.lang.invoke.ThunkKey: boolean equalsThunkKey(java.lang.invoke.ThunkKey)>
Counter value: 1
SCC 4875 : 1
<java.io.ObjectInputStream$ValidationList: void clear()>
Counter value: 1
SCC 4876 : 1
<java.time.MonthDay: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 4877 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive: void <init>(java.util.Spliterator$OfPrimitive,long,long)>
Counter value: 1
SCC 4878 : 1
<sun.misc.InnocuousThread$2: void <init>(java.lang.ThreadGroup)>
Counter value: 1
SCC 4879 : 1
<java.util.concurrent.LinkedBlockingDeque: boolean linkLast(java.util.concurrent.LinkedBlockingDeque$Node)>
Counter value: 1
SCC 4880 : 1
<java.util.stream.SpinedBuffer$OfLong$1Splitr: java.util.stream.SpinedBuffer$OfLong$1Splitr newSpliterator(int,int,int,int)>
Counter value: 1
SCC 4881 : 1
<java.util.EnumMap: int access$200(java.util.EnumMap)>
Counter value: 1
SCC 4882 : 1
<sun.security.x509.PolicyConstraintsExtension: java.lang.String toString()>
Counter value: 1
SCC 4883 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 4884 : 1
<java.time.OffsetDateTime: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 4885 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle findCollector(java.lang.String,int,java.lang.Class,java.lang.Class[])>
Counter value: 1
SCC 4886 : 1
<java.lang.invoke.Insert2Handle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 4887 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTime readExternal(java.io.ObjectInput)>
Counter value: 1
SCC 4888 : 1
<java.util.concurrent.ForkJoinTask: void cancelIgnoringExceptions(java.util.concurrent.ForkJoinTask)>
Counter value: 1
SCC 4889 : 1
<java.util.Vector$ListItr: void set(java.lang.Object)>
Counter value: 1
SCC 4890 : 1
<sun.net.NetworkClient$3: java.net.InetAddress run()>
Counter value: 1
SCC 4891 : 1
<java.time.chrono.MinguoDate: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 4892 : 1
<java.util.Collections$SetFromMap: void clear()>
Counter value: 1
SCC 4893 : 1
<java.net.Socket: void close()>
Counter value: 1
SCC 4894 : 1
<sun.security.rsa.RSAUtil$KeyType: java.lang.String keyAlgo()>
Counter value: 1
SCC 4895 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.lang.String filterHeaderField(java.lang.String,java.lang.String)>
Counter value: 1
SCC 4896 : 1
<javax.crypto.CryptoPermission: boolean getCheckParam()>
Counter value: 1
SCC 4897 : 1
<sun.nio.ch.Net$4: java.lang.String run()>
Counter value: 1
SCC 4898 : 1
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 4899 : 1
<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>
Counter value: 1
SCC 4900 : 1
<java.util.concurrent.TimeUnit: long toNanos(long)>
Counter value: 1
SCC 4901 : 1
<sun.nio.ch.SocketDispatcher: void preClose(java.io.FileDescriptor)>
Counter value: 1
SCC 4902 : 1
<java.net.HttpCookie: void setSecure(boolean)>
Counter value: 1
SCC 4903 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: java.util.Map getDisplayNamesImpl(java.lang.String,int,int,java.util.Locale,boolean)>
Counter value: 1
SCC 4904 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle bindTo(java.lang.Object)>
Counter value: 1
SCC 4905 : 1
<sun.reflect.ByteVectorImpl: void add(byte)>
Counter value: 1
SCC 4906 : 1
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinTask scan(java.util.concurrent.ForkJoinPool$WorkQueue,int)>
Counter value: 1
SCC 4907 : 1
<sun.security.x509.AuthorityInfoAccessExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 4908 : 1
<java.io.ObjectStreamField: boolean isUnshared()>
Counter value: 1
SCC 4909 : 1
<java.net.SocketInputStream: void <init>(java.net.AbstractPlainSocketImpl)>
Counter value: 1
SCC 4910 : 1
<java.util.concurrent.ForkJoinTask$AdaptedRunnable: boolean exec()>
Counter value: 1
SCC 4911 : 1
<java.time.temporal.WeekFields: java.time.temporal.TemporalField access$000(java.time.temporal.WeekFields)>
Counter value: 1
SCC 4912 : 1
<sun.reflect.ReflectionFactory: sun.reflect.ConstructorAccessor newConstructorAccessor(java.lang.reflect.Constructor)>
Counter value: 1
SCC 4913 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 4914 : 1
<java.net.AbstractPlainSocketImpl$1: java.lang.Void run()>
Counter value: 1
SCC 4915 : 1
<java.util.JapaneseImperialCalendar: int hashCode()>
Counter value: 1
SCC 4916 : 1
<java.nio.CharBuffer: int hashCode()>
Counter value: 1
SCC 4917 : 1
<sun.misc.ProxyGenerator: byte[] generateClassFile()>
Counter value: 1
SCC 4918 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: void setAlgorithm(java.lang.String)>
Counter value: 1
SCC 4919 : 1
<sun.net.NetworkClient: boolean isASCIISuperset(java.lang.String)>
Counter value: 1
SCC 4920 : 1
<java.util.stream.AbstractPipeline: java.util.Spliterator opEvaluateParallelLazy(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 4921 : 1
<java.util.Spliterators$4Adapter: double nextDouble()>
Counter value: 1
SCC 4922 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 4923 : 1
<sun.security.util.SignatureFileVerifier: boolean isSigningRelated(java.lang.String)>
Counter value: 1
SCC 4924 : 1
<java.nio.HeapByteBufferR: java.nio.ByteBuffer put(byte[],int,int)>
Counter value: 1
SCC 4925 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator: void <init>(long)>
Counter value: 1
SCC 4926 : 1
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle convertToVarargsIfRequired(java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 4927 : 1
<java.text.RuleBasedCollationKey: int compareTo(java.text.CollationKey)>
Counter value: 1
SCC 4928 : 1
<sun.misc.PathPermissions: java.util.Enumeration elements()>
Counter value: 1
SCC 4929 : 1
<java.util.stream.ReduceOps$5ReducingSink: java.lang.Integer get()>
Counter value: 1
SCC 4930 : 1
<java.util.Collections$AsLIFOQueue: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 4931 : 1
<java.lang.LinkageError: void <init>()>
Counter value: 1
SCC 4932 : 1
<java.lang.invoke.HandleCache: java.util.Map getVirtualCache(java.lang.Class)>
Counter value: 1
SCC 4933 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: void <init>()>
Counter value: 1
SCC 4934 : 1
<java.util.stream.AbstractPipeline$lambda_wrapSpliterator_1__82: void <init>(java.util.Spliterator)>
Counter value: 1
SCC 4935 : 1
<java.util.Collections$ReverseComparator2: int hashCode()>
Counter value: 2
SCC 4936 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: java.lang.Object[] toArray()>
Counter value: 1
SCC 4937 : 1
<sun.nio.ch.ChannelInputStream: void <init>(java.nio.channels.ReadableByteChannel)>
Counter value: 1
SCC 4938 : 1
<sun.nio.ch.Invoker$1: void <init>()>
Counter value: 1
SCC 4939 : 1
<java.util.jar.JarFile$2: boolean hasMoreElements()>
Counter value: 2
SCC 4940 : 1
<java.nio.file.StandardWatchEventKinds$StdWatchEventKind: java.lang.String toString()>
Counter value: 1
SCC 4941 : 1
<java.lang.invoke.MethodType$1: java.lang.Object run()>
Counter value: 1
SCC 4942 : 1
<java.util.Calendar: int compareTo(java.lang.Object)>
Counter value: 1
SCC 4943 : 1
<java.util.Collection: java.util.Spliterator spliterator()>
Counter value: 1
SCC 4944 : 1
<java.util.stream.Streams$StreamBuilderImpl: void accept(java.lang.Object)>
Counter value: 1
SCC 4945 : 1
<java.net.Socket: void checkOldImpl()>
Counter value: 1
SCC 4946 : 1
<sun.nio.ch.IOUtil: int writeFromNativeBuffer(java.io.FileDescriptor,java.nio.ByteBuffer,long,sun.nio.ch.NativeDispatcher)>
Counter value: 1
SCC 4947 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 4948 : 1
<java.util.WeakHashMap$EntrySet: java.lang.Object[] toArray()>
Counter value: 1
SCC 4949 : 1
<sun.net.NetProperties: java.lang.Integer getInteger(java.lang.String,int)>
Counter value: 1
SCC 4950 : 1
<java.util.concurrent.TimeUnit$3: long toMinutes(long)>
Counter value: 1
SCC 4951 : 1
<sun.reflect.ClassFileAssembler: void opc_aload_2()>
Counter value: 1
SCC 4952 : 1
<java.lang.ClassValue$Entry: void <init>(java.lang.ClassValue$Version)>
Counter value: 1
SCC 4953 : 1
<java.nio.DirectCharBufferRS: boolean isReadOnly()>
Counter value: 1
SCC 4954 : 1
<java.util.SubList: int access$200(java.util.SubList)>
Counter value: 1
SCC 4955 : 1
<sun.text.IntHashtable: int get(int)>
Counter value: 1
SCC 4956 : 1
<java.lang.ClassValue$Entry: boolean isLive()>
Counter value: 1
SCC 4957 : 1
<java.io.ObjectStreamClass: boolean isExternalizable()>
Counter value: 1
SCC 4958 : 1
<sun.nio.fs.AbstractPath: java.io.File toFile()>
Counter value: 1
SCC 4959 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySpliterator: long estimateSize()>
Counter value: 1
SCC 4960 : 1
<javax.security.auth.Policy$3: void <init>(javax.security.auth.Policy,java.lang.String)>
Counter value: 1
SCC 4961 : 1
<sun.util.spi.XmlPropertiesProvider: void <init>()>
Counter value: 1
SCC 4962 : 1
<java.time.zone.ZoneRules: java.lang.String toString()>
Counter value: 1
SCC 4963 : 1
<java.util.JumboEnumSet: void clear()>
Counter value: 1
SCC 4964 : 1
<java.util.stream.Streams$1: void run()>
Counter value: 2
SCC 4965 : 1
<java.util.stream.LongPipeline$8$1: void begin(long)>
Counter value: 2
SCC 4966 : 1
<sun.reflect.UnsafeByteFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 4967 : 1
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 4968 : 1
<javax.security.auth.callback.PasswordCallback: char[] getPassword()>
Counter value: 1
SCC 4969 : 1
<java.nio.CharBufferSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 4970 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.LocalTime toLocalTime()>
Counter value: 1
SCC 4971 : 1
<java.lang.ProcessEnvironment$StringValues: boolean isEmpty()>
Counter value: 2
SCC 4972 : 1
<java.lang.invoke.ConstantHandle: void <clinit>()>
Counter value: 1
SCC 4973 : 1
<sun.nio.fs.UnixCopyFile$2: java.lang.Object run()>
Counter value: 1
SCC 4974 : 1
<sun.net.www.http.HttpCapture$1: java.lang.String run()>
Counter value: 1
SCC 4975 : 1
<java.util.stream.Nodes$CollectorTask: java.util.stream.AbstractTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 4976 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: void incrementNC()>
Counter value: 1
SCC 4977 : 1
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object dequeue()>
Counter value: 1
SCC 4978 : 1
<java.time.Year: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 4979 : 1
<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.String,boolean)>
Counter value: 1
SCC 4980 : 1
<java.util.Comparators$NullComparator: int compare(java.lang.Object,java.lang.Object)>
Counter value: 2
SCC 4981 : 1
<java.lang.invoke.MethodHandleImpl$3: void <init>()>
Counter value: 1
SCC 4982 : 1
<java.util.ArrayDeque$DeqIterator: void remove()>
Counter value: 1
SCC 4983 : 1
<java.util.stream.ReduceOps$9ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 4984 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 4985 : 1
<java.io.ObjectStreamClass: java.lang.String getClassSignature(java.lang.Class)>
Counter value: 1
SCC 4986 : 1
<sun.net.www.protocol.http.HttpURLConnection: int getReadTimeout()>
Counter value: 1
SCC 4987 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.chrono.ChronoZonedDateTimeImpl create(java.time.Instant,java.time.ZoneId)>
Counter value: 1
SCC 4988 : 1
<java.util.Hashtable$KeySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 4989 : 1
<java.lang.invoke.MethodHandleImpl$Lazy: void <clinit>()>
Counter value: 1
SCC 4990 : 1
<sun.nio.ch.SocketChannelImpl: java.util.Set supportedOptions()>
Counter value: 1
SCC 4991 : 1
<java.util.Properties$XmlSupport: void <clinit>()>
Counter value: 1
SCC 4992 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef: java.util.Spliterator makeSpliterator(java.util.Spliterator)>
Counter value: 1
SCC 4993 : 1
<java.util.HashMap$Values: void clear()>
Counter value: 1
SCC 4994 : 1
<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 4995 : 1
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 4996 : 1
<java.util.stream.IntPipeline$7$1: void accept(int)>
Counter value: 1
SCC 4997 : 1
<java.util.WeakHashMap$KeySpliterator: java.util.WeakHashMap$KeySpliterator trySplit()>
Counter value: 1
SCC 4998 : 1
<java.util.stream.DistinctOps$1$init__83: void <init>()>
Counter value: 1
SCC 4999 : 1
<java.util.stream.LongPipeline$6$1: void begin(long)>
Counter value: 2
SCC 5000 : 1
<java.util.concurrent.ConcurrentHashMap$KeySpliterator: void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,long)>
Counter value: 1
SCC 5001 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.chrono.ChronoZonedDateTime plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 5002 : 1
<java.nio.DirectDoubleBufferS: long ix(int)>
Counter value: 1
SCC 5003 : 1
<java.util.concurrent.TimeUnit$7: long toNanos(long)>
Counter value: 1
SCC 5004 : 1
<java.util.IdentityHashMap: java.util.Collection values()>
Counter value: 1
SCC 5005 : 1
<java.net.UnknownServiceException: void <init>(java.lang.String)>
Counter value: 1
SCC 5006 : 1
<java.util.concurrent.ConcurrentSkipListMap$ValueSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 5007 : 1
<java.util.Collections$SynchronizedCollection: java.lang.String toString()>
Counter value: 2
SCC 5008 : 1
<java.util.stream.ReduceOps$10ReducingSink: void begin(long)>
Counter value: 1
SCC 5009 : 1
<sun.nio.ch.SocketAdaptor$SocketInputStream: void <init>(sun.nio.ch.SocketAdaptor,sun.nio.ch.SocketAdaptor$1)>
Counter value: 1
SCC 5010 : 1
<sun.nio.fs.UnixException: java.lang.String errorString()>
Counter value: 1
SCC 5011 : 1
<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader: java.lang.ClassLoader access$100(java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader)>
Counter value: 1
SCC 5012 : 1
<sun.misc.ProxyGenerator: void code_astore(int,java.io.DataOutputStream)>
Counter value: 1
SCC 5013 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: java.util.concurrent.ForkJoinTask poll()>
Counter value: 1
SCC 5014 : 1
<java.util.concurrent.ForkJoinTask: void uncheckedThrow(java.lang.Throwable)>
Counter value: 1
SCC 5015 : 1
<java.nio.ByteBufferAsCharBufferB: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 5016 : 1
<sun.net.www.MessageHeader: void reset()>
Counter value: 1
SCC 5017 : 1
<java.net.ServerSocket: void setCreated()>
Counter value: 1
SCC 5018 : 1
<sun.reflect.UnsafeIntegerFieldAccessorImpl: int getInt(java.lang.Object)>
Counter value: 1
SCC 5019 : 1
<sun.misc.ProxyGenerator$MethodInfo: void write(java.io.DataOutputStream)>
Counter value: 1
SCC 5020 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.LambdaForm internalForm()>
Counter value: 1
SCC 5021 : 1
<sun.net.www.protocol.http.AuthenticationHeader: void parse(java.util.Set)>
Counter value: 1
SCC 5022 : 1
<java.lang.ProcessEnvironment$StringKeySet: boolean remove(java.lang.Object)>
Counter value: 2
SCC 5023 : 1
<java.nio.ByteBufferAsCharBufferL: char get(int)>
Counter value: 1
SCC 5024 : 1
<java.time.YearMonth: java.time.YearMonth plusYears(long)>
Counter value: 1
SCC 5025 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
Counter value: 1
SCC 5026 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object getValue()>
Counter value: 2
SCC 5027 : 1
<java.nio.ByteBufferAsCharBufferB: void <init>(java.nio.ByteBuffer,int,int,int,int,int)>
Counter value: 1
SCC 5028 : 1
<java.nio.channels.FileLock: long size()>
Counter value: 1
SCC 5029 : 1
<java.lang.invoke.ReceiverBoundHandle: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 2
SCC 5030 : 1
<java.nio.channels.Channels: void access$000(java.nio.channels.WritableByteChannel,java.nio.ByteBuffer)>
Counter value: 1
SCC 5031 : 1
<java.util.IdentityHashMap$KeySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 5032 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfInt: void <init>(java.util.Spliterator$OfInt,long,long,long,long)>
Counter value: 1
SCC 5033 : 1
<sun.nio.ch.IOUtil: int readIntoNativeBuffer(java.io.FileDescriptor,java.nio.ByteBuffer,long,sun.nio.ch.NativeDispatcher)>
Counter value: 1
SCC 5034 : 1
<java.util.TreeMap$NavigableSubMap: java.lang.Object remove(java.lang.Object)>
Counter value: 1
SCC 5035 : 1
<java.time.chrono.ThaiBuddhistDate: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5036 : 1
<sun.net.www.protocol.http.HttpURLConnection$8: java.io.OutputStream run()>
Counter value: 1
SCC 5037 : 1
<java.util.stream.Nodes$CollectorTask$OfInt$intBuilder__88: java.lang.Object apply(long)>
Counter value: 1
SCC 5038 : 1
<java.nio.CharBufferSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 5039 : 1
<java.util.Spliterators$EmptySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 5040 : 1
<java.nio.HeapCharBufferR: boolean isReadOnly()>
Counter value: 1
SCC 5041 : 1
<sun.security.x509.CertificatePolicyId: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 5042 : 1
<java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
Counter value: 2
SCC 5043 : 1
<java.lang.invoke.PassThroughHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.Object)>
Counter value: 1
SCC 5044 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator$lambda_initPartialTraversalState_0__39: void <init>(java.util.stream.StreamSpliterators$IntWrappingSpliterator)>
Counter value: 1
SCC 5045 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: java.lang.String toString()>
Counter value: 1
SCC 5046 : 1
<sun.net.www.protocol.http.Negotiator: sun.net.www.protocol.http.Negotiator getNegotiator(sun.net.www.protocol.http.HttpCallerInfo)>
Counter value: 1
SCC 5047 : 1
<java.util.stream.ReferencePipeline: java.util.Spliterator lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 5048 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachTransformedMappingTask: void compute()>
Counter value: 1
SCC 5049 : 1
<java.nio.file.NoSuchFileException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 5050 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 5051 : 1
<java.util.concurrent.LinkedBlockingQueue$Itr: boolean hasNext()>
Counter value: 1
SCC 5052 : 1
<java.util.LinkedList$LLSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 5053 : 1
<java.util.stream.Nodes$DoubleArrayNode: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 5054 : 1
<sun.nio.ch.KQueueSelectorImpl: void implClose()>
Counter value: 1
SCC 5055 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamClass getLocalDesc()>
Counter value: 1
SCC 5056 : 1
<sun.util.PreHashedMap$1$1: java.lang.String next()>
Counter value: 1
SCC 5057 : 1
<java.lang.invoke.ThunkKeyWithObjectArray: boolean equalsThunkKeyWithObjectArray(java.lang.invoke.ThunkKeyWithObjectArray)>
Counter value: 1
SCC 5058 : 1
<sun.nio.ch.IOUtil$1: void <init>()>
Counter value: 1
SCC 5059 : 1
<sun.nio.ch.FileChannelImpl$SimpleFileLockTable: java.util.List removeAll()>
Counter value: 1
SCC 5060 : 1
<java.time.chrono.HijrahChronology: int getMaximumYear()>
Counter value: 1
SCC 5061 : 1
<java.nio.file.attribute.FileTime: java.lang.String toString()>
Counter value: 1
SCC 5062 : 1
<java.util.ArrayDeque$DescendingIterator: void remove()>
Counter value: 1
SCC 5063 : 1
<java.time.chrono.ChronoLocalDate: long toEpochDay()>
Counter value: 1
SCC 5064 : 1
<sun.net.www.http.HttpCaptureInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 5065 : 1
<sun.reflect.AccessorGenerator: boolean isPrimitive(java.lang.Class)>
Counter value: 1
SCC 5066 : 1
<java.time.chrono.JapaneseDate: void <clinit>()>
Counter value: 1
SCC 5067 : 1
<sun.reflect.MethodAccessorGenerator: boolean usesPrimitiveTypes()>
Counter value: 1
SCC 5068 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$LocaleNameProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 5069 : 1
<java.util.stream.DoublePipeline: java.util.stream.Node$Builder makeNodeBuilder(long,java.util.function.IntFunction)>
Counter value: 1
SCC 5070 : 1
<java.util.concurrent.CountedCompleter: void internalPropagateException(java.lang.Throwable)>
Counter value: 1
SCC 5071 : 1
<java.util.stream.Nodes$ArrayNode: long count()>
Counter value: 1
SCC 5072 : 1
<sun.nio.ch.NativeDispatcher: void preClose(java.io.FileDescriptor)>
Counter value: 1
SCC 5073 : 1
<java.util.Spliterators$ArraySpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 5074 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object remove(java.lang.Object)>
Counter value: 1
SCC 5075 : 1
<sun.reflect.UnsafeByteFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 5076 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef: void <init>(java.util.Spliterator,java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef)>
Counter value: 1
SCC 5077 : 1
<java.lang.ClassValue$Entry: java.lang.ClassValue classValueOrNull()>
Counter value: 1
SCC 5078 : 1
<java.time.OffsetDateTime: long toEpochSecond()>
Counter value: 1
SCC 5079 : 1
<sun.security.util.MemoryCache: void <init>(boolean,int)>
Counter value: 1
SCC 5080 : 1
<java.net.Socket$3: java.io.OutputStream run()>
Counter value: 1
SCC 5081 : 1
<java.io.ObjectOutputStream$DebugTraceInfoStack: java.lang.String toString()>
Counter value: 1
SCC 5082 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5083 : 1
<java.util.concurrent.ConcurrentSkipListMap$Values: java.util.Spliterator spliterator()>
Counter value: 1
SCC 5084 : 1
<java.net.NetworkInterface: int getIndex()>
Counter value: 1
SCC 5085 : 1
<java.io.ObjectStreamClass: void <init>()>
Counter value: 1
SCC 5086 : 1
<java.net.AbstractPlainSocketImpl: java.io.FileDescriptor acquireFD()>
Counter value: 1
SCC 5087 : 1
<java.security.cert.X509CRL: int hashCode()>
Counter value: 1
SCC 5088 : 1
<javax.security.auth.Subject$SecureSet$2: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>
Counter value: 1
SCC 5089 : 1
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 5090 : 1
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 5091 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: java.util.Map getDisplayNames(java.lang.String,int,int,java.util.Locale)>
Counter value: 1
SCC 5092 : 1
<java.util.stream.Nodes$IntArrayNode: void forEach(java.util.function.IntConsumer)>
Counter value: 1
SCC 5093 : 1
<java.lang.invoke.ConstantLongHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 5094 : 1
<java.util.Spliterator$OfDouble: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 5095 : 1
<java.util.WeakHashMap: boolean removeMapping(java.lang.Object)>
Counter value: 1
SCC 5096 : 1
<java.util.LinkedHashMap: void <init>(int,float,boolean)>
Counter value: 1
SCC 5097 : 1
<java.lang.invoke.DirectHandle: boolean directHandleOriginatedInFindVirtual()>
Counter value: 1
SCC 5098 : 1
<sun.misc.FloatingDecimal: float parseFloat(java.lang.String)>
Counter value: 1
SCC 5099 : 1
<sun.net.ResourceManager: void <clinit>()>
Counter value: 1
SCC 5100 : 1
<java.util.stream.DoublePipeline$StatefulOp: boolean opIsStateful()>
Counter value: 1
SCC 5101 : 1
<java.net.AbstractPlainSocketImpl$1: java.lang.Object run()>
Counter value: 1
SCC 5102 : 1
<java.net.HostPortrange: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 5103 : 1
<java.security.MessageDigest: java.security.Provider access$102(java.security.MessageDigest,java.security.Provider)>
Counter value: 1
SCC 5104 : 1
<java.nio.DirectCharBufferRU: boolean isDirect()>
Counter value: 1
SCC 5105 : 1
<java.lang.reflect.ReflectAccess: java.lang.reflect.Constructor newConstructor(java.lang.Class,java.lang.Class[],java.lang.Class[],int,int,java.lang.String,byte[],byte[])>
Counter value: 1
SCC 5106 : 1
<jdk.internal.org.objectweb.asm.Handle: int hashCode()>
Counter value: 1
SCC 5107 : 1
<sun.net.www.http.KeepAliveKey: int hashCode()>
Counter value: 2
SCC 5108 : 1
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combineJavaxPolicy(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
Counter value: 1
SCC 5109 : 1
<java.util.stream.SortedOps$OfLong: java.util.stream.Node opEvaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction)>
Counter value: 1
SCC 5110 : 1
<java.util.Collections$CheckedMap: java.util.Set keySet()>
Counter value: 2
SCC 5111 : 1
<sun.net.NetHooks: void <clinit>()>
Counter value: 1
SCC 5112 : 1
<javax.crypto.spec.RC5ParameterSpec: int hashCode()>
Counter value: 1
SCC 5113 : 1
<sun.nio.ch.Net$3: java.lang.Object run()>
Counter value: 1
SCC 5114 : 1
<sun.invoke.util.Wrapper: int hashPrim(java.lang.Class)>
Counter value: 1
SCC 5115 : 1
<java.util.stream.AbstractPipeline$lambda_spliterator_0__46: void <init>(java.util.stream.AbstractPipeline)>
Counter value: 1
SCC 5116 : 1
<java.util.stream.Streams$LongStreamBuilderImpl: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 5117 : 1
<java.util.stream.Streams$ConcatSpliterator$OfPrimitive: void forEachRemaining(java.lang.Object)>
Counter value: 2
SCC 5118 : 1
<java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 5119 : 1
<sun.util.PreHashedMap: java.util.Set entrySet()>
Counter value: 1
SCC 5120 : 1
<java.nio.ByteBufferAsShortBufferL: int ix(int)>
Counter value: 1
SCC 5121 : 1
<javax.security.auth.SubjectDomainCombiner: java.lang.String printDomain(java.security.ProtectionDomain)>
Counter value: 1
SCC 5122 : 1
<java.util.ArrayDeque$DeqSpliterator: long estimateSize()>
Counter value: 1
SCC 5123 : 1
<java.util.concurrent.Executors$PrivilegedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>
Counter value: 1
SCC 5124 : 1
<java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
Counter value: 1
SCC 5125 : 1
<java.util.IdentityHashMap$KeyIterator: void <init>(java.util.IdentityHashMap,java.util.IdentityHashMap$1)>
Counter value: 1
SCC 5126 : 1
<java.util.IdentityHashMap$KeyIterator: void <init>(java.util.IdentityHashMap)>
Counter value: 1
SCC 5127 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseEra getEra()>
Counter value: 1
SCC 5128 : 1
<java.util.stream.Nodes$InternalNodeSpliterator: int characteristics()>
Counter value: 1
SCC 5129 : 1
<sun.net.sdp.SdpProvider$PortRangeRule: boolean match(sun.net.sdp.SdpProvider$Action,java.net.InetAddress,int)>
Counter value: 1
SCC 5130 : 1
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 5131 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: int hashCode()>
Counter value: 1
SCC 5132 : 1
<java.util.stream.Nodes$LongFixedNodeBuilder: java.util.stream.Node build()>
Counter value: 1
SCC 5133 : 1
<sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.AuthenticationInfo create(boolean,java.net.URL,java.net.PasswordAuthentication)>
Counter value: 1
SCC 5134 : 1
<java.util.concurrent.TimeUnit: long toMinutes(long)>
Counter value: 1
SCC 5135 : 1
<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: int characteristics()>
Counter value: 1
SCC 5136 : 1
<java.util.Collections$CheckedSet: void <init>(java.util.Set,java.lang.Class)>
Counter value: 1
SCC 5137 : 1
<java.time.chrono.MinguoChronology: java.time.chrono.MinguoDate date(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 5138 : 1
<java.util.stream.AbstractPipeline$lambda_wrapSpliterator_1__82: java.util.function.Supplier bootstrap$(java.util.Spliterator)>
Counter value: 1
SCC 5139 : 1
<java.util.TreeMap$KeySpliterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry,java.util.TreeMap$Entry,int,int,int)>
Counter value: 1
SCC 5140 : 1
<java.nio.DirectShortBufferU: short get(int)>
Counter value: 1
SCC 5141 : 1
<java.io.PushbackInputStream: void mark(int)>
Counter value: 1
SCC 5142 : 1
<java.time.MonthDay: java.lang.String toString()>
Counter value: 1
SCC 5143 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>
Counter value: 1
SCC 5144 : 1
<java.util.concurrent.TimeUnit: long toHours(long)>
Counter value: 1
SCC 5145 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream getInputStream()>
Counter value: 1
SCC 5146 : 1
<java.util.Collections$2: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 5147 : 1
<java.security.MessageDigest: java.lang.String access$000(java.security.MessageDigest)>
Counter value: 1
SCC 5148 : 1
<java.lang.invoke.StaticFieldSetterHandle: void <init>(java.lang.invoke.StaticFieldSetterHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 5149 : 1
<sun.net.www.protocol.http.BasicAuthentication: java.lang.String getHeaderValue(java.net.URL,java.lang.String)>
Counter value: 1
SCC 5150 : 1
<java.net.HttpCookie: void setVersion(int)>
Counter value: 1
SCC 5151 : 1
<java.time.temporal.TemporalAccessor: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 5152 : 1
<java.net.InetAddress: java.lang.String getHostAddress()>
Counter value: 1
SCC 5153 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()>
Counter value: 1
SCC 5154 : 1
<java.util.Spliterators$DoubleIteratorSpliterator: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 5155 : 1
<sun.nio.ch.ChannelInputStream: int read(java.nio.ByteBuffer)>
Counter value: 1
SCC 5156 : 1
<sun.reflect.ReflectionFactory: java.lang.reflect.Constructor newConstructorForSerialization(java.lang.Class,java.lang.reflect.Constructor)>
Counter value: 1
SCC 5157 : 1
<java.util.stream.Collectors$Partition$1: void <init>(java.util.stream.Collectors$Partition)>
Counter value: 1
SCC 5158 : 1
<sun.net.www.protocol.http.AuthCacheImpl: sun.net.www.protocol.http.AuthCacheValue get(java.lang.String,java.lang.String)>
Counter value: 1
SCC 5159 : 1
<java.lang.invoke.PrimitiveHandle: void <init>(java.lang.invoke.MethodType,java.lang.Class,java.lang.String,byte,int,java.lang.Object)>
Counter value: 1
SCC 5160 : 1
<java.nio.DirectCharBufferS: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 5161 : 1
<java.util.concurrent.CountedCompleter: void quietlyCompleteRoot()>
Counter value: 1
SCC 5162 : 1
<java.util.jar.JarFile$2: java.lang.Object nextElement()>
Counter value: 1
SCC 5163 : 1
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 5164 : 1
<java.util.stream.Collectors$1OptionalBox: void accept(java.lang.Object)>
Counter value: 1
SCC 5165 : 1
<java.nio.DirectCharBufferRS: boolean isDirect()>
Counter value: 1
SCC 5166 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType type()>
Counter value: 1
SCC 5167 : 1
<java.util.stream.IntPipeline: void forEachWithCancel(java.util.Spliterator,java.util.stream.Sink)>
Counter value: 1
SCC 5168 : 1
<java.security.MessageDigest$Delegate: java.lang.Object clone()>
Counter value: 2
SCC 5169 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator: java.util.Comparator getComparator()>
Counter value: 2
SCC 5170 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void siftUp(int,java.util.concurrent.RunnableScheduledFuture)>
Counter value: 1
SCC 5171 : 1
<java.util.stream.DoublePipeline: void forEachWithCancel(java.util.Spliterator,java.util.stream.Sink)>
Counter value: 1
SCC 5172 : 1
<java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory: void <init>()>
Counter value: 1
SCC 5173 : 1
<java.util.stream.FindOps$isPresent__101: boolean test(java.lang.Object)>
Counter value: 1
SCC 5174 : 1
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 5175 : 1
<java.nio.channels.NonReadableChannelException: void <init>()>
Counter value: 1
SCC 5176 : 1
<java.lang.invoke.IndirectHandle: void <init>(java.lang.invoke.MethodType,java.lang.Class,java.lang.String,byte)>
Counter value: 1
SCC 5177 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: int characteristics()>
Counter value: 2
SCC 5178 : 1
<java.time.format.DateTimeFormatter$lambda_static_1__2: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 5179 : 1
<java.util.WeakHashMap$EntrySpliterator: java.util.WeakHashMap$EntrySpliterator trySplit()>
Counter value: 1
SCC 5180 : 1
<java.util.Vector$ListItr: void add(java.lang.Object)>
Counter value: 1
SCC 5181 : 1
<java.util.concurrent.ConcurrentSkipListMap$Index: boolean indexesDeletedNode()>
Counter value: 1
SCC 5182 : 1
<java.util.stream.Nodes$LongArrayNode: java.util.Spliterator$OfLong spliterator()>
Counter value: 1
SCC 5183 : 1
<java.util.concurrent.ThreadPoolExecutor: boolean isRunningOrShutdown(boolean)>
Counter value: 1
SCC 5184 : 1
<java.nio.charset.Charset$1: void remove()>
Counter value: 1
SCC 5185 : 1
<java.net.ServerSocket$1: java.lang.Void run()>
Counter value: 1
SCC 5186 : 1
<sun.nio.ch.FileDispatcherImpl: int pread(java.io.FileDescriptor,long,int,long)>
Counter value: 1
SCC 5187 : 1
<java.time.LocalTime: java.time.LocalTime withMinute(int)>
Counter value: 1
SCC 5188 : 1
<sun.util.calendar.JulianCalendar: void <clinit>()>
Counter value: 1
SCC 5189 : 1
<java.net.AbstractPlainSocketImpl$1: void <init>()>
Counter value: 1
SCC 5190 : 1
<java.nio.DirectLongBufferRS: java.nio.LongBuffer put(int,long)>
Counter value: 1
SCC 5191 : 1
<java.util.stream.Streams$ConcatSpliterator: java.util.Comparator getComparator()>
Counter value: 2
SCC 5192 : 1
<java.util.stream.ReduceOps$7ReducingSink: void accept(int)>
Counter value: 1
SCC 5193 : 1
<java.util.HashMap$KeySet: void clear()>
Counter value: 1
SCC 5194 : 1
<java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator: void <init>(java.util.stream.SpinedBuffer$OfPrimitive,int,int,int,int)>
Counter value: 1
SCC 5195 : 1
<java.time.LocalTime: java.time.LocalTime withHour(int)>
Counter value: 1
SCC 5196 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 5197 : 1
<java.net.HttpCookie$7: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 5198 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: java.util.stream.Node build()>
Counter value: 1
SCC 5199 : 1
<java.net.Socket: java.net.SocketImpl getImpl()>
Counter value: 1
SCC 5200 : 1
<java.util.concurrent.ForkJoinTask: void reportException(int)>
Counter value: 1
SCC 5201 : 1
<java.time.chrono.HijrahChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
Counter value: 1
SCC 5202 : 1
<java.net.SocksSocketImpl: java.net.InetAddress getInetAddress()>
Counter value: 1
SCC 5203 : 1
<sun.nio.fs.UnixException: java.io.IOException asIOException(sun.nio.fs.UnixPath)>
Counter value: 1
SCC 5204 : 1
<java.lang.invoke.ThunkKeyWithIntArray: void <init>(java.lang.invoke.MethodType,int[])>
Counter value: 1
SCC 5205 : 1
<sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(boolean)>
Counter value: 1
SCC 5206 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToLongTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceKeysToLongTask,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator)>
Counter value: 1
SCC 5207 : 1
<java.nio.HeapByteBufferR: java.nio.ByteBuffer duplicate()>
Counter value: 1
SCC 5208 : 1
<sun.reflect.UnsafeIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 5209 : 1
<java.util.stream.Nodes$ToArrayTask$OfRef: java.util.stream.Nodes$ToArrayTask makeChild(int,int)>
Counter value: 1
SCC 5210 : 1
<java.net.StandardSocketOptions$StdSocketOption: java.lang.Class type()>
Counter value: 1
SCC 5211 : 1
<sun.nio.ch.FileDispatcherImpl: long seek(java.io.FileDescriptor,long)>
Counter value: 1
SCC 5212 : 1
<java.util.stream.LongPipeline: void forEachWithCancel(java.util.Spliterator,java.util.stream.Sink)>
Counter value: 1
SCC 5213 : 1
<sun.util.locale.provider.CurrencyNameProviderImpl: java.lang.String getDisplayName(java.lang.String,java.util.Locale)>
Counter value: 1
SCC 5214 : 1
<java.net.HttpCookie: void setMaxAge(long)>
Counter value: 1
SCC 5215 : 1
<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider access$100()>
Counter value: 1
SCC 5216 : 1
<sun.net.www.protocol.http.HttpURLConnection: void proxiedConnect(java.net.URL,java.lang.String,int,boolean)>
Counter value: 1
SCC 5217 : 1
<java.security.ProtectionDomain$2: boolean getStaticPermissionsField(java.security.ProtectionDomain)>
Counter value: 1
SCC 5218 : 1
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle bind(java.lang.Object,java.lang.String,java.lang.invoke.MethodType)>
Counter value: 1
SCC 5219 : 1
<java.util.stream.SliceOps$4$lambda_opEvaluateParallelLazy_0__67: void <init>()>
Counter value: 1
SCC 5220 : 1
<sun.reflect.ClassFileAssembler: void opc_goto(sun.reflect.Label)>
Counter value: 1
SCC 5221 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl plusWithOverflow(java.time.chrono.ChronoLocalDate,long,long,long,long)>
Counter value: 1
SCC 5222 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfPrimitive: void <init>(java.util.Spliterator$OfPrimitive,long,long,long,long,java.util.stream.StreamSpliterators$1)>
Counter value: 1
SCC 5223 : 1
<java.util.concurrent.Executors$PrivilegedThreadFactory: java.lang.ClassLoader access$300(java.util.concurrent.Executors$PrivilegedThreadFactory)>
Counter value: 1
SCC 5224 : 1
<sun.util.locale.LanguageTag: java.lang.String toString()>
Counter value: 1
SCC 5225 : 1
<java.io.ObjectStreamField: int getOffset()>
Counter value: 1
SCC 5226 : 1
<java.time.chrono.HijrahDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 5227 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate addYear(int)>
Counter value: 1
SCC 5228 : 1
<java.nio.MappedByteBuffer: void <init>(int,int,int,int)>
Counter value: 1
SCC 5229 : 1
<sun.reflect.AccessorGenerator: int typeSizeInStackSlots(java.lang.Class)>
Counter value: 1
SCC 5230 : 1
<java.util.concurrent.ForkJoinPool: void unlockRunState(int,int)>
Counter value: 1
SCC 5231 : 1
<java.net.HttpCookie: int getVersion()>
Counter value: 1
SCC 5232 : 1
<sun.net.www.http.HttpClient: void <init>(java.net.URL,java.net.Proxy,int)>
Counter value: 1
SCC 5233 : 1
<java.net.HttpCookie: java.util.List parse(java.lang.String,boolean)>
Counter value: 1
SCC 5234 : 1
<java.util.jar.JarFile: java.util.jar.JarEntry newEntry(java.util.zip.ZipEntry)>
Counter value: 1
SCC 5235 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfInt: void forEach(java.util.function.IntConsumer,long)>
Counter value: 1
SCC 5236 : 1
<java.lang.invoke.CollectHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 5237 : 1
<java.time.LocalDateTime: java.time.chrono.ChronoLocalDate toLocalDate()>
Counter value: 1
SCC 5238 : 1
<java.lang.ProcessBuilder$Redirect$4: java.io.File file()>
Counter value: 1
SCC 5239 : 1
<sun.security.x509.X509CertInfo: java.lang.String getName()>
Counter value: 1
SCC 5240 : 1
<java.lang.ProcessEnvironment$StringKeySet: boolean contains(java.lang.Object)>
Counter value: 2
SCC 5241 : 1
<java.nio.HeapByteBuffer: byte _get(int)>
Counter value: 1
SCC 5242 : 1
<sun.nio.ch.Util: long getMaxCachedBufferSize()>
Counter value: 1
SCC 5243 : 1
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>
Counter value: 1
SCC 5244 : 1
<sun.net.ResourceManager: void beforeUdpCreate()>
Counter value: 1
SCC 5245 : 1
<java.time.chrono.AbstractChronology$lambda_static_b5a61975_1__6: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 5246 : 1
<java.nio.ByteBufferAsCharBufferL: java.nio.CharBuffer compact()>
Counter value: 1
SCC 5247 : 1
<java.util.concurrent.TimeUnit$2: long toMicros(long)>
Counter value: 1
SCC 5248 : 1
<java.util.concurrent.ConcurrentSkipListMap$Node: boolean casValue(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 5249 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.ZoneId getZone()>
Counter value: 1
SCC 5250 : 1
<java.net.NetworkInterface: java.lang.String toString()>
Counter value: 1
SCC 5251 : 1
<java.io.ClassByNameCache: java.lang.Object createEntry(java.io.ClassByNameCache$CacheKey)>
Counter value: 1
SCC 5252 : 1
<sun.reflect.ClassFileAssembler: void opc_l2d()>
Counter value: 1
SCC 5253 : 1
<java.time.OffsetTime: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 5254 : 1
<java.time.OffsetDateTime: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 5255 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 5256 : 1
<sun.net.www.protocol.http.AuthenticationHeader: void <init>(java.lang.String,sun.net.www.MessageHeader,sun.net.www.protocol.http.HttpCallerInfo,boolean)>
Counter value: 1
SCC 5257 : 1
<java.util.Collections$CheckedCollection: void forEach(java.util.function.Consumer)>
Counter value: 2
SCC 5258 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: int getMinimalDaysInFirstWeek(java.util.Locale)>
Counter value: 2
SCC 5259 : 1
<java.net.HostPortrange: int[] parsePort(java.lang.String)>
Counter value: 1
SCC 5260 : 1
<java.util.Collections$SingletonList: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 5261 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 5262 : 1
<java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDesc(boolean)>
Counter value: 1
SCC 5263 : 1
<java.util.stream.FindOps: java.util.stream.TerminalOp makeRef(boolean)>
Counter value: 1
SCC 5264 : 1
<sun.misc.Unsafe: void setMemory(long,long,byte)>
Counter value: 1
SCC 5265 : 1
<java.net.Socket: java.io.OutputStream getOutputStream()>
Counter value: 1
SCC 5266 : 1
<sun.net.NetworkClient: void <clinit>()>
Counter value: 1
SCC 5267 : 1
<java.util.TreeMap$NavigableSubMap$SubMapIterator: void <init>(java.util.TreeMap$NavigableSubMap,java.util.TreeMap$Entry,java.util.TreeMap$Entry)>
Counter value: 1
SCC 5268 : 1
<sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5269 : 1
<java.lang.invoke.ConvertHandle$FilterHelpers: boolean checkIfWideningPrimitiveConversion(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 5270 : 1
<sun.net.www.http.HttpCaptureInputStream: void <init>(java.io.InputStream,sun.net.www.http.HttpCapture)>
Counter value: 1
SCC 5271 : 1
<sun.nio.ch.ThreadPool: java.util.concurrent.ExecutorService executor()>
Counter value: 1
SCC 5272 : 1
<java.util.stream.MatchOps$MatchTask: void <init>(java.util.stream.MatchOps$MatchOp,java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 5273 : 1
<java.time.chrono.HijrahChronology$lambda_readConfigProperties_0__79: java.security.PrivilegedExceptionAction bootstrap$(java.lang.String)>
Counter value: 1
SCC 5274 : 1
<java.util.ArrayList$ArrayListSpliterator: long estimateSize()>
Counter value: 1
SCC 5275 : 1
<java.io.ObjectInputStream$PeekInputStream: int available()>
Counter value: 2
SCC 5276 : 1
<java.lang.Class: int getModifiers()>
Counter value: 1
SCC 5277 : 1
<java.util.SubList: void rangeCheck(int)>
Counter value: 1
SCC 5278 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate plusMonths(long)>
Counter value: 1
SCC 5279 : 1
<sun.security.x509.PolicyMappingsExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 5280 : 1
<java.lang.reflect.Method: sun.reflect.generics.repository.ConstructorRepository getGenericInfo()>
Counter value: 1
SCC 5281 : 1
<java.lang.invoke.InvokeExactHandle: void <clinit>()>
Counter value: 1
SCC 5282 : 1
<java.nio.DirectByteBufferR: void <init>(sun.nio.ch.DirectBuffer,int,int,int,int,int)>
Counter value: 1
SCC 5283 : 1
<java.util.Random$RandomDoublesSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 5284 : 1
<java.util.Spliterator$OfDouble$accept__78: void <init>(java.util.function.Consumer)>
Counter value: 1
SCC 5285 : 1
<java.lang.invoke.Insert3Handle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 5286 : 1
<java.nio.DirectFloatBufferS: float get(int)>
Counter value: 1
SCC 5287 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 5288 : 1
<java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
Counter value: 2
SCC 5289 : 1
<java.util.stream.SpinedBuffer$OfDouble$1Splitr: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 5290 : 1
<java.lang.invoke.MethodHandleCache: void <init>(java.lang.Class)>
Counter value: 1
SCC 5291 : 1
<java.util.stream.Nodes$DoubleArrayNode: void forEach(java.lang.Object)>
Counter value: 1
SCC 5292 : 1
<java.util.OptionalDouble: java.util.OptionalDouble of(double)>
Counter value: 1
SCC 5293 : 1
<java.io.ObjectOutputStream$BlockDataOutputStream: void write(byte[])>
Counter value: 1
SCC 5294 : 1
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5295 : 1
<sun.nio.fs.UnixDirectoryStream: java.util.concurrent.locks.Lock readLock()>
Counter value: 1
SCC 5296 : 1
<java.util.stream.Node: java.util.stream.Node getChild(int)>
Counter value: 1
SCC 5297 : 1
<java.util.concurrent.CountedCompleter: void propagateCompletion()>
Counter value: 1
SCC 5298 : 1
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: int getInt(java.lang.Object)>
Counter value: 1
SCC 5299 : 1
<java.util.Spliterators$LongIteratorSpliterator: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 5300 : 1
<java.util.WeakHashMap$EntrySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 5301 : 1
<java.time.OffsetTime: int get(java.time.temporal.TemporalField)>
Counter value: 1
SCC 5302 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl ensureValid(java.time.chrono.Chronology,java.time.temporal.Temporal)>
Counter value: 1
SCC 5303 : 1
<java.net.Socket$2: void <init>(java.net.Socket)>
Counter value: 1
SCC 5304 : 1
<java.time.temporal.IsoFields$Field$3: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal,long)>
Counter value: 1
SCC 5305 : 1
<java.util.stream.ReduceOps$8ReducingSink: void accept(long)>
Counter value: 1
SCC 5306 : 1
<java.nio.HeapByteBufferR: void <init>(byte[],int,int,int,int,int)>
Counter value: 1
SCC 5307 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Constructor access$1400(java.lang.Class)>
Counter value: 1
SCC 5308 : 1
<java.util.concurrent.LinkedBlockingDeque$LBDSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 5309 : 1
<java.util.stream.ReferencePipeline$10$1: void begin(long)>
Counter value: 2
SCC 5310 : 1
<java.lang.reflect.Constructor: byte[] getRawAnnotations()>
Counter value: 1
SCC 5311 : 1
<java.util.concurrent.TimeUnit$7: long convert(long,java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 5312 : 1
<java.util.Optional: java.lang.String toString()>
Counter value: 1
SCC 5313 : 1
<java.util.stream.Sink$ChainedDouble: boolean cancellationRequested()>
Counter value: 2
SCC 5314 : 1
<java.lang.invoke.BruteArgumentMoverHandle: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 5315 : 1
<java.util.concurrent.ConcurrentHashMap$BaseIterator: void remove()>
Counter value: 1
SCC 5316 : 1
<sun.security.util.MemoryCache: void expungeExpiredEntries()>
Counter value: 1
SCC 5317 : 1
<java.lang.invoke.Insert2Handle: void <init>(java.lang.invoke.Insert2Handle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 5318 : 1
<sun.security.x509.CRLNumberExtension: void encodeThis()>
Counter value: 1
SCC 5319 : 1
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: char getChar(java.lang.Object)>
Counter value: 1
SCC 5320 : 1
<java.time.DayOfWeek: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 5321 : 1
<java.security.KeyStore$Builder$2: boolean access$702(java.security.KeyStore$Builder$2,boolean)>
Counter value: 1
SCC 5322 : 1
<sun.nio.ch.SocketAdaptor: boolean isClosed()>
Counter value: 1
SCC 5323 : 1
<java.io.ObjectInputStream$ValidationList: void doCallbacks()>
Counter value: 1
SCC 5324 : 1
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 5325 : 1
<java.util.concurrent.ConcurrentSkipListSet: void setMap(java.util.concurrent.ConcurrentNavigableMap)>
Counter value: 1
SCC 5326 : 1
<java.time.zone.ZoneOffsetTransition: long toEpochSecond()>
Counter value: 1
SCC 5327 : 1
<java.util.concurrent.ConcurrentLinkedQueue$Itr: java.lang.Object advance()>
Counter value: 1
SCC 5328 : 1
<sun.util.PreHashedMap$1$1: void <init>(sun.util.PreHashedMap$1)>
Counter value: 1
SCC 5329 : 1
<java.io.ObjectInputStream$HandleTable: void clear()>
Counter value: 1
SCC 5330 : 1
<java.time.ZonedDateTime: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 5331 : 1
<javax.crypto.CipherSpi: int engineGetKeySize(java.security.Key)>
Counter value: 1
SCC 5332 : 1
<java.util.stream.IntPipeline$2$1: void <init>(java.util.stream.IntPipeline$2,java.util.stream.Sink)>
Counter value: 1
SCC 5333 : 1
<java.lang.invoke.ConstantObjectHandle: void <init>(java.lang.invoke.MethodType,java.lang.Object)>
Counter value: 1
SCC 5334 : 1
<java.lang.invoke.MethodHandle: java.lang.Class getDefc()>
Counter value: 1
SCC 5335 : 1
<java.util.ArrayDeque: java.lang.Object[] toArray()>
Counter value: 1
SCC 5336 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfInt: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 5337 : 1
<java.nio.file.FileTreeWalker$DirectoryNode: java.util.Iterator iterator()>
Counter value: 1
SCC 5338 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: void remove()>
Counter value: 1
SCC 5339 : 1
<java.nio.HeapByteBufferR: void _put(int,byte)>
Counter value: 1
SCC 5340 : 1
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle handleForMHInvokeMethods(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>
Counter value: 1
SCC 5341 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.Iterator entryIterator()>
Counter value: 1
SCC 5342 : 1
<java.util.stream.DistinctOps$1$addAll__85: void <init>()>
Counter value: 1
SCC 5343 : 1
<java.lang.reflect.WeakCache$CacheValue: void <init>(java.lang.Object)>
Counter value: 1
SCC 5344 : 1
<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>
Counter value: 1
SCC 5345 : 1
<java.util.IdentityHashMap$EntrySet: void <init>(java.util.IdentityHashMap,java.util.IdentityHashMap$1)>
Counter value: 1
SCC 5346 : 1
<sun.net.www.protocol.jar.JarURLConnection: java.lang.String getHeaderField(java.lang.String)>
Counter value: 2
SCC 5347 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildVarargsArray(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int)>
Counter value: 1
SCC 5348 : 1
<java.util.Spliterators$IntArraySpliterator: long estimateSize()>
Counter value: 1
SCC 5349 : 1
<sun.nio.ch.AsynchronousFileChannelImpl: boolean isOpen()>
Counter value: 1
SCC 5350 : 1
<java.util.Collections$CheckedNavigableMap: java.util.Comparator comparator()>
Counter value: 2
SCC 5351 : 1
<java.io.ObjectStreamClass: void checkInitialized()>
Counter value: 1
SCC 5352 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble$lambda_emptyConsumer_0__52: java.util.function.DoubleConsumer bootstrap$()>
Counter value: 1
SCC 5353 : 1
<java.util.Vector: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 5354 : 1
<sun.nio.ch.KQueueArrayWrapper: void close()>
Counter value: 1
SCC 5355 : 1
<java.util.concurrent.ThreadLocalRandom$RandomIntsSpliterator: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 5356 : 1
<java.util.stream.Streams$ConcatSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 2
SCC 5357 : 1
<sun.nio.ch.PendingFuture: void setResult(java.lang.Object,java.lang.Throwable)>
Counter value: 1
SCC 5358 : 1
<sun.util.locale.provider.CalendarDataProviderImpl: int getFirstDayOfWeek(java.util.Locale)>
Counter value: 1
SCC 5359 : 1
<javax.security.auth.Policy$2: javax.security.auth.Policy run()>
Counter value: 1
SCC 5360 : 1
<sun.nio.ch.SimpleAsynchronousFileChannelImpl$1: void run()>
Counter value: 1
SCC 5361 : 1
<java.io.ObjectStreamClass: void setPrimFieldValues(java.lang.Object,byte[])>
Counter value: 1
SCC 5362 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 5363 : 1
<sun.security.x509.SubjectKeyIdentifierExtension: java.lang.String toString()>
Counter value: 1
SCC 5364 : 1
<java.util.Collections$SingletonMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 5365 : 1
<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.FileTime toFileTime(long,long)>
Counter value: 1
SCC 5366 : 1
<java.lang.invoke.InsertHandle: void <clinit>()>
Counter value: 1
SCC 5367 : 1
<sun.security.provider.NativePRNG$1: void <init>(sun.security.provider.NativePRNG$Variant)>
Counter value: 1
SCC 5368 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildFiller(int)>
Counter value: 1
SCC 5369 : 1
<java.util.Collections$SynchronizedCollection: java.util.Spliterator spliterator()>
Counter value: 2
SCC 5370 : 1
<java.util.concurrent.ConcurrentSkipListMap: int size()>
Counter value: 1
SCC 5371 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 5372 : 1
<java.util.stream.DoublePipeline: java.util.Spliterator$OfDouble spliterator()>
Counter value: 1
SCC 5373 : 1
<java.lang.invoke.ThunkKeyWithIntArray: int hashCode()>
Counter value: 1
SCC 5374 : 1
<java.util.stream.DoublePipeline$1$1: void <init>(java.util.stream.DoublePipeline$1,java.util.stream.Sink)>
Counter value: 1
SCC 5375 : 1
<java.util.HashMap$ValueSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 5376 : 1
<java.time.LocalTime: int getMinute()>
Counter value: 1
SCC 5377 : 1
<java.io.ObjectInputStream: byte readByte()>
Counter value: 1
SCC 5378 : 1
<java.util.stream.SpinedBuffer$OfInt$1Splitr: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 5379 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: void addImpl(java.util.spi.CalendarNameProvider)>
Counter value: 1
SCC 5380 : 1
<java.util.EnumMap$EntryIterator$Entry: int access$1502(java.util.EnumMap$EntryIterator$Entry,int)>
Counter value: 1
SCC 5381 : 1
<jdk.internal.org.objectweb.asm.Handle: java.lang.String toString()>
Counter value: 1
SCC 5382 : 1
<java.net.AbstractPlainSocketImpl: void setOption(int,java.lang.Object)>
Counter value: 1
SCC 5383 : 1
<java.lang.reflect.Constructor: boolean isVarArgs()>
Counter value: 1
SCC 5384 : 1
<java.util.stream.Nodes$LongArrayNode: long[] asPrimitiveArray()>
Counter value: 1
SCC 5385 : 1
<java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5386 : 1
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>
Counter value: 1
SCC 5387 : 1
<java.util.ArrayList$SubList$1: int previousIndex()>
Counter value: 1
SCC 5388 : 1
<java.util.AbstractList$Itr: void remove()>
Counter value: 1
SCC 5389 : 1
<java.util.WeakHashMap$Values: java.util.Spliterator spliterator()>
Counter value: 1
SCC 5390 : 1
<java.nio.Bits: sun.misc.Unsafe unsafe()>
Counter value: 1
SCC 5391 : 1
<java.lang.invoke.SpreadHandle: void <init>(java.lang.invoke.SpreadHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 5392 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: void descend()>
Counter value: 1
SCC 5393 : 1
<java.util.WeakHashMap$KeyIterator: void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1)>
Counter value: 1
SCC 5394 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: boolean fillBuffer()>
Counter value: 1
SCC 5395 : 1
<java.util.concurrent.Executors$2: java.lang.Object call()>
Counter value: 1
SCC 5396 : 1
<sun.net.www.protocol.http.DigestAuthentication$1: java.lang.Boolean run()>
Counter value: 1
SCC 5397 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfDouble: void forEach(java.util.function.DoubleConsumer,long)>
Counter value: 1
SCC 5398 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.lang.Runnable next()>
Counter value: 1
SCC 5399 : 1
<java.util.concurrent.LinkedBlockingQueue$Itr: void remove()>
Counter value: 1
SCC 5400 : 1
<java.lang.J9VMInternals: java.lang.Throwable access$000(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 5401 : 1
<java.util.concurrent.locks.ReentrantLock: boolean tryLock()>
Counter value: 1
SCC 5402 : 1
<java.time.MonthDay: void <init>(int,int)>
Counter value: 1
SCC 5403 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: java.lang.String toString()>
Counter value: 1
SCC 5404 : 1
<sun.misc.IOUtils: byte[] readFully(java.io.InputStream,int,boolean)>
Counter value: 1
SCC 5405 : 1
<sun.reflect.ClassDefiner$1: java.lang.Object run()>
Counter value: 1
SCC 5406 : 1
<java.lang.invoke.ArgumentConversionHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,byte)>
Counter value: 1
SCC 5407 : 1
<java.lang.reflect.WeakCache: java.util.function.BiFunction access$000(java.lang.reflect.WeakCache)>
Counter value: 1
SCC 5408 : 1
<java.time.LocalTime: java.time.LocalTime withSecond(int)>
Counter value: 1
SCC 5409 : 1
<java.util.stream.IntPipeline: java.util.Spliterator$OfInt lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 5410 : 1
<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.MessageHeader mapToMessageHeader(java.util.Map)>
Counter value: 1
SCC 5411 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfLong: void <init>(java.util.stream.Nodes$SizedCollectorTask$OfLong,java.util.Spliterator,long,long)>
Counter value: 1
SCC 5412 : 1
<java.util.stream.DistinctOps$1: java.util.stream.Node reduce(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 5413 : 1
<java.lang.invoke.InsertHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 5414 : 1
<java.nio.ByteBufferAsCharBufferRL: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 5415 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 5416 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.Class getDefc()>
Counter value: 2
SCC 5417 : 1
<java.lang.VMAccess: java.lang.ClassLoader getClassloader(java.lang.Class)>
Counter value: 1
SCC 5418 : 1
<java.util.concurrent.LinkedBlockingDeque$AbstractItr: void advance()>
Counter value: 1
SCC 5419 : 1
<java.util.stream.Nodes$IntFixedNodeBuilder: void begin(long)>
Counter value: 1
SCC 5420 : 1
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 5421 : 1
<java.nio.LongBuffer: java.lang.String toString()>
Counter value: 1
SCC 5422 : 1
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 5423 : 1
<java.util.stream.ForEachOps$ForEachOp$OfLong: java.lang.Object evaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 5424 : 1
<java.util.stream.AbstractPipeline: java.util.Spliterator sourceStageSpliterator()>
Counter value: 1
SCC 5425 : 1
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: byte getByte(java.lang.Object)>
Counter value: 1
SCC 5426 : 1
<sun.net.www.protocol.http.EmptyInputStream: void <init>()>
Counter value: 1
SCC 5427 : 1
<sun.reflect.UnsafeShortFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 5428 : 1
<sun.net.www.protocol.http.HttpURLConnection$9: java.io.InputStream run()>
Counter value: 1
SCC 5429 : 1
<java.lang.invoke.InvokeExactHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 5430 : 1
<java.time.OffsetTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 5431 : 1
<java.math.BigInteger: float floatValue()>
Counter value: 1
SCC 5432 : 1
<java.io.ObjectStreamClass$6: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 5433 : 1
<java.util.Spliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 5434 : 1
<sun.nio.fs.UnixNativeDispatcher: sun.nio.fs.NativeBuffer copyToNativeBuffer(sun.nio.fs.UnixPath)>
Counter value: 1
SCC 5435 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.ValueRange rangeWeekOfWeekBasedYear(java.time.temporal.TemporalAccessor)>
Counter value: 2
SCC 5436 : 1
<sun.reflect.AccessorGenerator: void <clinit>()>
Counter value: 1
SCC 5437 : 1
<java.util.JumboEnumSet: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 5438 : 1
<java.util.concurrent.ConcurrentHashMap$SearchKeysTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 5439 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getDeclaredSerialFields(java.lang.Class)>
Counter value: 1
SCC 5440 : 1
<java.time.Month: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 5441 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 5442 : 1
<sun.nio.ch.KQueueArrayWrapper: void <clinit>()>
Counter value: 1
SCC 5443 : 1
<java.util.stream.Streams$RangeIntSpliterator: void <init>(int,int,int)>
Counter value: 1
SCC 5444 : 1
<java.util.stream.DoublePipeline$StatefulOp: java.util.Spliterator lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 5445 : 1
<sun.net.www.ParseUtil: java.lang.String quote(java.lang.String,long,long)>
Counter value: 1
SCC 5446 : 1
<java.util.stream.LongPipeline$9$1: void accept(long)>
Counter value: 2
SCC 5447 : 1
<sun.security.util.MemoryCache: void clear()>
Counter value: 1
SCC 5448 : 1
<java.util.Spliterators: java.util.Spliterator spliterator(java.util.Collection,int)>
Counter value: 1
SCC 5449 : 1
<java.nio.file.Files$2: java.nio.file.Path next()>
Counter value: 1
SCC 5450 : 1
<java.nio.DirectByteBuffer: void _put(int,byte)>
Counter value: 1
SCC 5451 : 1
<java.util.AbstractMap$2$1: boolean hasNext()>
Counter value: 2
SCC 5452 : 1
<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo getServerAuthentication(sun.net.www.protocol.http.AuthenticationHeader)>
Counter value: 1
SCC 5453 : 1
<java.lang.StringBuilder: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 5454 : 1
<java.util.TreeMap$DescendingKeySpliterator: java.util.TreeMap$DescendingKeySpliterator trySplit()>
Counter value: 1
SCC 5455 : 1
<java.io.ObjectStreamClass: java.lang.String getPackageName(java.lang.Class)>
Counter value: 1
SCC 5456 : 1
<java.time.chrono.JapaneseChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
Counter value: 1
SCC 5457 : 1
<java.util.stream.Streams$RangeLongSpliterator: void <init>(long,long,int)>
Counter value: 1
SCC 5458 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.io.IOException getChainedException(java.io.IOException)>
Counter value: 1
SCC 5459 : 1
<java.util.concurrent.TimeUnit$7: long toMicros(long)>
Counter value: 1
SCC 5460 : 1
<sun.reflect.'annotation'.AnnotationInvocationHandler$1: java.lang.reflect.Method[] run()>
Counter value: 1
SCC 5461 : 1
<java.util.IdentityHashMap$EntryIterator: void <init>(java.util.IdentityHashMap)>
Counter value: 1
SCC 5462 : 1
<sun.net.NetProperties: java.lang.String get(java.lang.String)>
Counter value: 1
SCC 5463 : 1
<java.lang.ref.PhantomReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 5464 : 1
<java.lang.invoke.ThunkKeyWithInt: void <init>(java.lang.invoke.MethodType,int)>
Counter value: 1
SCC 5465 : 1
<java.util.stream.ReduceOps$13ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 5466 : 1
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.IllegalArgumentException newGetIllegalArgumentException(java.lang.String)>
Counter value: 1
SCC 5467 : 1
<java.util.Collections$SetFromMap: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 2
SCC 5468 : 1
<java.io.ObjectStreamClass$4: int compare(java.io.ObjectStreamClass$MemberSignature,java.io.ObjectStreamClass$MemberSignature)>
Counter value: 1
SCC 5469 : 1
<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: int hashCode()>
Counter value: 1
SCC 5470 : 1
<sun.net.www.http.HttpCapture: void <clinit>()>
Counter value: 1
SCC 5471 : 1
<java.util.stream.SliceOps$2$lambda_opEvaluateParallelLazy_0__65: java.lang.Object apply(int)>
Counter value: 1
SCC 5472 : 1
<javax.security.auth.SubjectDomainCombiner$1: java.lang.Object run()>
Counter value: 1
SCC 5473 : 1
<java.util.stream.SortedOps$OfDouble: java.util.stream.Node opEvaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction)>
Counter value: 1
SCC 5474 : 1
<java.util.concurrent.ForkJoinPool: boolean tryTerminate(boolean,boolean)>
Counter value: 1
SCC 5475 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>
Counter value: 1
SCC 5476 : 1
<java.util.stream.SortedOps$DoubleSortingSink: void accept(double)>
Counter value: 1
SCC 5477 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator: long estimateSize()>
Counter value: 2
SCC 5478 : 1
<sun.nio.ch.SimpleAsynchronousFileChannelImpl: void implRelease(sun.nio.ch.FileLockImpl)>
Counter value: 1
SCC 5479 : 1
<java.io.ClassByNameCache$CacheKey: void <init>(java.lang.String,int,java.io.ClassByNameCache$LoaderRef)>
Counter value: 1
SCC 5480 : 1
<java.util.TreeMap$KeySpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 5481 : 1
<java.nio.channels.FileLock: long position()>
Counter value: 1
SCC 5482 : 1
<java.nio.file.attribute.FileTime: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5483 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToDoubleTask: void compute()>
Counter value: 1
SCC 5484 : 1
<java.util.zip.InflaterInputStream: void mark(int)>
Counter value: 1
SCC 5485 : 1
<sun.nio.ch.AllocatedNativeObject: void free()>
Counter value: 1
SCC 5486 : 1
<sun.misc.ObjectInputFilter$Config$Global: java.lang.String toString()>
Counter value: 1
SCC 5487 : 1
<java.net.URLConnection: long getHeaderFieldLong(java.lang.String,long)>
Counter value: 1
SCC 5488 : 1
<java.io.DataOutputStream: void write(int)>
Counter value: 2
SCC 5489 : 1
<java.io.ObjectStreamClass$EntryFuture: boolean set(java.lang.Object)>
Counter value: 1
SCC 5490 : 1
<java.io.ObjectStreamClass$FieldReflector: void setObjFieldValues(java.lang.Object,java.lang.Object[])>
Counter value: 1
SCC 5491 : 1
<java.net.StandardSocketOptions$StdSocketOption: java.lang.String toString()>
Counter value: 1
SCC 5492 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 5493 : 1
<java.io.InputStream: boolean markSupported()>
Counter value: 1
SCC 5494 : 1
<java.util.stream.Streams$DoubleStreamBuilderImpl: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 5495 : 1
<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getCause()>
Counter value: 1
SCC 5496 : 1
<sun.security.x509.CRLReasonCodeExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 5497 : 1
<java.util.stream.SliceOps$SliceTask: void onCompletion(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 5498 : 1
<java.util.stream.SortedOps$IntSortingSink: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 5499 : 1
<sun.security.x509.AuthorityKeyIdentifierExtension: void encodeThis()>
Counter value: 1
SCC 5500 : 1
<java.util.stream.ForEachOps$ForEachTask: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.stream.Sink)>
Counter value: 1
SCC 5501 : 1
<java.net.ResponseCache: java.net.ResponseCache getDefault()>
Counter value: 1
SCC 5502 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToIntTask: void compute()>
Counter value: 1
SCC 5503 : 1
<java.nio.DirectCharBufferS: java.nio.CharBuffer put(char[],int,int)>
Counter value: 1
SCC 5504 : 1
<java.util.stream.Nodes$LongArrayNode: void copyInto(long[],int)>
Counter value: 1
SCC 5505 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: long getExactSizeIfKnown()>
Counter value: 2
SCC 5506 : 1
<java.time.OffsetDateTime: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 5507 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: java.util.Spliterator spliterator()>
Counter value: 1
SCC 5508 : 1
<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
Counter value: 1
SCC 5509 : 1
<sun.util.resources.ParallelListResourceBundle$KeySet: java.util.Iterator iterator()>
Counter value: 2
SCC 5510 : 1
<java.time.LocalDateTime: java.time.LocalDateTime minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 5511 : 1
<sun.misc.ProxyGenerator: void code_ipush(int,java.io.DataOutputStream)>
Counter value: 1
SCC 5512 : 1
<java.util.stream.AbstractTask: java.lang.Object getLocalResult()>
Counter value: 1
SCC 5513 : 1
<java.util.SubList: java.lang.String outOfBoundsMsg(int)>
Counter value: 1
SCC 5514 : 1
<java.util.stream.ReferencePipeline$4: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 5515 : 1
<java.time.OffsetDateTime: java.time.LocalTime toLocalTime()>
Counter value: 1
SCC 5516 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>
Counter value: 1
SCC 5517 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: java.util.Spliterator$OfInt spliterator()>
Counter value: 1
SCC 5518 : 1
<sun.nio.ch.CompletedFuture: boolean cancel(boolean)>
Counter value: 1
SCC 5519 : 1
<sun.nio.ch.Net$4: java.lang.Object run()>
Counter value: 1
SCC 5520 : 1
<sun.nio.ch.Util$BufferCache: java.nio.ByteBuffer removeFirst()>
Counter value: 1
SCC 5521 : 1
<java.time.OffsetTime: int hashCode()>
Counter value: 1
SCC 5522 : 1
<sun.net.sdp.SdpProvider: void fail(java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 5523 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 5524 : 1
<java.util.stream.SpinedBuffer$OfDouble$1Splitr: java.util.stream.SpinedBuffer$OfDouble$1Splitr newSpliterator(int,int,int,int)>
Counter value: 1
SCC 5525 : 1
<java.net.SocketOutputStream: void write(int)>
Counter value: 1
SCC 5526 : 1
<java.util.stream.SliceOps$1: java.util.Spliterator opEvaluateParallelLazy(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 5527 : 1
<sun.nio.ch.Util$3: boolean contains(java.lang.Object)>
Counter value: 2
SCC 5528 : 1
<java.time.chrono.JapaneseDate: int hashCode()>
Counter value: 1
SCC 5529 : 1
<sun.net.www.http.ChunkedOutputStream: void flush()>
Counter value: 1
SCC 5530 : 1
<java.util.DualPivotQuicksort: void sort(float[],int,int,boolean)>
Counter value: 2
SCC 5531 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: java.lang.String getHostName()>
Counter value: 1
SCC 5532 : 1
<java.util.stream.ReduceOps$9ReducingSink: java.util.OptionalLong get()>
Counter value: 1
SCC 5533 : 1
<java.util.concurrent.ConcurrentHashMap$KeySpliterator: int characteristics()>
Counter value: 1
SCC 5534 : 1
<java.lang.invoke.VirtualHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 5535 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator: long estimateSize()>
Counter value: 1
SCC 5536 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 5537 : 1
<sun.nio.ch.SocketOptionRegistry$RegistryKey: void <init>(java.net.SocketOption,java.net.ProtocolFamily)>
Counter value: 1
SCC 5538 : 1
<sun.nio.ch.SourceChannelImpl: void implCloseSelectableChannel()>
Counter value: 1
SCC 5539 : 1
<java.lang.invoke.ThunkTable: void <init>()>
Counter value: 1
SCC 5540 : 1
<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>
Counter value: 1
SCC 5541 : 1
<java.util.stream.ForEachOps$ForEachOrderedTask: void <init>(java.util.stream.ForEachOps$ForEachOrderedTask,java.util.Spliterator,java.util.stream.ForEachOps$ForEachOrderedTask)>
Counter value: 1
SCC 5542 : 1
<java.util.Scanner: void <init>(java.nio.channels.ReadableByteChannel)>
Counter value: 1
SCC 5543 : 1
<java.util.AbstractMap$2: void <init>(java.util.AbstractMap)>
Counter value: 1
SCC 5544 : 1
<java.io.DataOutputStream: void writeFloat(float)>
Counter value: 1
SCC 5545 : 1
<java.lang.invoke.ArgumentConversionHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 5546 : 1
<java.util.AbstractMap$SimpleEntry: java.lang.String toString()>
Counter value: 1
SCC 5547 : 1
<java.util.Collection: java.util.stream.Stream stream()>
Counter value: 1
SCC 5548 : 1
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll()>
Counter value: 1
SCC 5549 : 1
<java.util.stream.Nodes$CollectorTask$OfDouble$doubleBuilder__92: java.lang.Object apply(long)>
Counter value: 1
SCC 5550 : 1
<sun.nio.ch.FileChannelImpl$Unmapper: void run()>
Counter value: 1
SCC 5551 : 1
<java.util.ArrayPrefixHelpers$DoubleCumulateTask: void compute()>
Counter value: 1
SCC 5552 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfInt: void <init>(java.util.Spliterator$OfInt,long,long)>
Counter value: 1
SCC 5553 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setNewClient(java.net.URL)>
Counter value: 1
SCC 5554 : 1
<sun.net.www.protocol.http.AuthenticationInfo: sun.net.www.protocol.http.AuthenticationInfo getProxyAuth(java.lang.String,int)>
Counter value: 1
SCC 5555 : 1
<sun.util.calendar.Gregorian$Date: void <init>()>
Counter value: 1
SCC 5556 : 1
<java.util.stream.DistinctOps$1$add__84: void accept(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 5557 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator entrySpliterator()>
Counter value: 1
SCC 5558 : 1
<java.time.Duration: int compareTo(java.lang.Object)>
Counter value: 1
SCC 5559 : 1
<java.util.Collections$CheckedSortedMap: java.util.Comparator comparator()>
Counter value: 2
SCC 5560 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean add(java.lang.Object)>
Counter value: 1
SCC 5561 : 1
<java.util.stream.AbstractTask: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 5562 : 1
<java.net.Socket: boolean isBound()>
Counter value: 1
SCC 5563 : 1
<java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>
Counter value: 1
SCC 5564 : 1
<java.time.chrono.MinguoDate: long toEpochDay()>
Counter value: 1
SCC 5565 : 1
<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()>
Counter value: 1
SCC 5566 : 1
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 5567 : 1
<java.util.WeakHashMap$EntrySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 5568 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: void checkKeyBounds(java.lang.Object,java.util.Comparator)>
Counter value: 1
SCC 5569 : 1
<java.lang.invoke.ConstantFloatHandle: void <init>(java.lang.invoke.MethodType,float)>
Counter value: 1
SCC 5570 : 1
<java.net.SocksSocketImpl: void close()>
Counter value: 1
SCC 5571 : 1
<java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread: void afterTopLevelExec()>
Counter value: 1
SCC 5572 : 1
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 5573 : 1
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 5574 : 1
<java.time.Duration: int hashCode()>
Counter value: 1
SCC 5575 : 1
<java.util.jar.JarVerifier$2: boolean hasMoreElements()>
Counter value: 2
SCC 5576 : 1
<java.util.concurrent.ConcurrentSkipListMap$Values: boolean isEmpty()>
Counter value: 1
SCC 5577 : 1
<java.lang.invoke.MethodHandleInfo: java.lang.String toString(int,java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>
Counter value: 1
SCC 5578 : 1
<java.util.EnumMap$EntrySet: void clear()>
Counter value: 1
SCC 5579 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>
Counter value: 1
SCC 5580 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Method access$1902(java.io.ObjectStreamClass,java.lang.reflect.Method)>
Counter value: 1
SCC 5581 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator: void <init>(java.util.stream.PipelineHelper,java.util.function.Supplier,boolean)>
Counter value: 1
SCC 5582 : 1
<java.net.URI: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5583 : 1
<sun.nio.ch.Util$3: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 2
SCC 5584 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator: java.lang.String toString()>
Counter value: 1
SCC 5585 : 1
<sun.nio.ch.FileChannelImpl: long position()>
Counter value: 1
SCC 5586 : 1
<sun.nio.ch.Util$2: java.lang.Object run()>
Counter value: 1
SCC 5587 : 1
<java.util.stream.ReduceOps$5ReducingSink: void accept(int)>
Counter value: 1
SCC 5588 : 1
<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: void run()>
Counter value: 1
SCC 5589 : 1
<java.nio.ByteBufferAsShortBufferB: int ix(int)>
Counter value: 1
SCC 5590 : 1
<java.util.LinkedHashMap$LinkedEntrySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 5591 : 1
<sun.nio.fs.UnixFileAttributes: boolean isDirectory()>
Counter value: 1
SCC 5592 : 1
<java.util.EnumMap$KeySet: int size()>
Counter value: 1
SCC 5593 : 1
<java.util.concurrent.ConcurrentLinkedQueue$Itr: void remove()>
Counter value: 1
SCC 5594 : 1
<java.util.Collections$2: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 5595 : 1
<java.nio.DirectCharBufferRU: boolean isReadOnly()>
Counter value: 1
SCC 5596 : 1
<java.net.HttpCookie: java.util.List access$100(java.lang.String,boolean)>
Counter value: 1
SCC 5597 : 1
<java.util.concurrent.CountDownLatch: void countDown()>
Counter value: 1
SCC 5598 : 1
<java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5599 : 1
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>
Counter value: 1
SCC 5600 : 1
<java.nio.charset.Charset: int compareTo(java.lang.Object)>
Counter value: 1
SCC 5601 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: java.util.stream.Node$OfDouble build()>
Counter value: 1
SCC 5602 : 1
<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.protocol.http.HttpCallerInfo getHttpCallerInfo()>
Counter value: 1
SCC 5603 : 1
<sun.misc.FDBigInteger: java.math.BigInteger toBigInteger()>
Counter value: 1
SCC 5604 : 1
<java.net.Socket: boolean isConnected()>
Counter value: 1
SCC 5605 : 1
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate date(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 5606 : 1
<java.util.ArrayDeque$DeqSpliterator: void <init>(java.util.ArrayDeque,int,int)>
Counter value: 1
SCC 5607 : 1
<java.nio.HeapByteBufferR: java.nio.ByteBuffer put(java.nio.ByteBuffer)>
Counter value: 1
SCC 5608 : 1
<java.util.stream.MatchOps$4MatchSink: void accept(double)>
Counter value: 1
SCC 5609 : 1
<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 5610 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType intern()>
Counter value: 1
SCC 5611 : 1
<java.util.Vector: void removeRange(int,int)>
Counter value: 1
SCC 5612 : 1
<java.net.AbstractPlainSocketImpl: void <init>()>
Counter value: 1
SCC 5613 : 1
<java.util.stream.SpinedBuffer$1Splitr: java.util.Spliterator trySplit()>
Counter value: 1
SCC 5614 : 1
<sun.security.util.KnownOIDs$8: boolean registerNames()>
Counter value: 1
SCC 5615 : 1
<java.util.concurrent.LinkedBlockingDeque$Itr: void <init>(java.util.concurrent.LinkedBlockingDeque,java.util.concurrent.LinkedBlockingDeque$1)>
Counter value: 1
SCC 5616 : 1
<java.lang.invoke.MethodHandleImpl$1: java.lang.Object run()>
Counter value: 1
SCC 5617 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel: void blockedOn(sun.nio.ch.Interruptible)>
Counter value: 1
SCC 5618 : 1
<sun.nio.ch.Invoker: void invokeUnchecked(java.nio.channels.CompletionHandler,java.lang.Object,java.lang.Object,java.lang.Throwable)>
Counter value: 1
SCC 5619 : 1
<java.lang.Math: double min(double,double)>
Counter value: 1
SCC 5620 : 1
<java.util.concurrent.SynchronousQueue: java.lang.Object[] toArray()>
Counter value: 1
SCC 5621 : 1
<sun.nio.ch.AsynchronousFileChannelImpl: void removeFromFileLockTable(sun.nio.ch.FileLockImpl)>
Counter value: 1
SCC 5622 : 1
<java.net.SocketInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 5623 : 1
<java.util.stream.ReduceOps$6: java.util.stream.ReduceOps$6ReducingSink makeSink()>
Counter value: 1
SCC 5624 : 1
<java.time.Year: int compareTo(java.lang.Object)>
Counter value: 1
SCC 5625 : 1
<sun.nio.ch.Invoker$3: void run()>
Counter value: 1
SCC 5626 : 1
<sun.nio.ch.IOUtil$1: java.lang.Object run()>
Counter value: 1
SCC 5627 : 1
<sun.misc.ObjectInputFilter$Config$Global$lambda_checkInput_9__100: java.util.function.Predicate bootstrap$()>
Counter value: 1
SCC 5628 : 1
<sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$MethodInfo generateStaticInitializer()>
Counter value: 1
SCC 5629 : 1
<java.net.AbstractPlainSocketImpl: void socketPreClose()>
Counter value: 1
SCC 5630 : 1
<java.util.concurrent.LinkedBlockingQueue: void signalNotFull()>
Counter value: 1
SCC 5631 : 1
<java.text.DateFormatSymbols: int hashCode()>
Counter value: 1
SCC 5632 : 1
<java.util.stream.IntPipeline$4: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 5633 : 1
<java.util.Spliterators$LongArraySpliterator: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 5634 : 1
<java.util.stream.SliceOps$2: java.util.Spliterator$OfInt unorderedSkipLimitSpliterator(java.util.Spliterator$OfInt,long,long,long)>
Counter value: 1
SCC 5635 : 1
<java.util.stream.ForEachOps$ForEachOrderedTask: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.stream.Sink)>
Counter value: 1
SCC 5636 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>
Counter value: 1
SCC 5637 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfLong: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 5638 : 1
<java.util.TreeMap$EntrySpliterator: java.util.TreeMap$EntrySpliterator trySplit()>
Counter value: 1
SCC 5639 : 1
<sun.net.www.http.HttpClient: void privilegedOpenServer(java.net.InetSocketAddress)>
Counter value: 1
SCC 5640 : 1
<java.util.regex.Pattern: java.lang.String quote(java.lang.String)>
Counter value: 1
SCC 5641 : 1
<java.util.Spliterator$OfLong: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 5642 : 1
<java.util.stream.SliceOps: long calcSliceFence(long,long)>
Counter value: 1
SCC 5643 : 1
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
Counter value: 1
SCC 5644 : 1
<java.lang.Byte: java.lang.Byte valueOf(byte)>
Counter value: 1
SCC 5645 : 1
<java.util.stream.LongPipeline$9: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 5646 : 1
<java.lang.invoke.LambdaForm$NamedFunction: java.lang.invoke.MethodHandle resolve()>
Counter value: 1
SCC 5647 : 1
<java.util.stream.LongPipeline$5: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 5648 : 1
<sun.nio.ch.FileDispatcherImpl: void <init>(boolean)>
Counter value: 1
SCC 5649 : 1
<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object,java.lang.Object[],int)>
Counter value: 1
SCC 5650 : 1
<java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5651 : 1
<java.util.concurrent.ForkJoinTask: int recordExceptionalCompletion(java.lang.Throwable)>
Counter value: 1
SCC 5652 : 1
<java.util.Spliterator$OfInt: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 5653 : 1
<sun.net.www.protocol.http.BasicAuthentication: java.lang.String getRootPath(java.lang.String,java.lang.String)>
Counter value: 1
SCC 5654 : 1
<java.net.HttpURLConnection: java.lang.String getHeaderField(int)>
Counter value: 1
SCC 5655 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime ofLenient(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)>
Counter value: 1
SCC 5656 : 1
<java.util.IdentityHashMap: int access$000(int,int)>
Counter value: 1
SCC 5657 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator$lambda_initPartialTraversalState_0__45: void <init>(java.util.stream.StreamSpliterators$DoubleWrappingSpliterator)>
Counter value: 1
SCC 5658 : 1
<java.util.PrimitiveIterator$OfInt: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 5659 : 1
<java.util.concurrent.LinkedBlockingQueue: java.util.Spliterator spliterator()>
Counter value: 1
SCC 5660 : 1
<sun.net.www.ParseUtil: void appendSchemeSpecificPart(java.lang.StringBuffer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
Counter value: 1
SCC 5661 : 1
<sun.net.www.http.KeepAliveStreamCleaner: boolean offer(sun.net.www.http.KeepAliveCleanerEntry)>
Counter value: 1
SCC 5662 : 1
<java.io.Console$LineReader: int read(char[],int,int)>
Counter value: 2
SCC 5663 : 1
<java.util.stream.IntPipeline$3$1: void <init>(java.util.stream.IntPipeline$3,java.util.stream.Sink)>
Counter value: 1
SCC 5664 : 1
<java.util.stream.Nodes$ToArrayTask$OfInt: void <init>(java.util.stream.Node$OfInt,int[],int)>
Counter value: 1
SCC 5665 : 1
<sun.nio.ch.SelectorImpl: void implCloseSelector()>
Counter value: 1
SCC 5666 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: void init()>
Counter value: 1
SCC 5667 : 1
<java.util.Spliterators$EmptySpliterator$OfInt: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 5668 : 1
<java.util.stream.Nodes$CollectorTask$OfLong: java.lang.Object doLeaf()>
Counter value: 1
SCC 5669 : 1
<sun.net.www.MessageHeader: java.util.Map filterAndAddHeaders(java.lang.String[],java.util.Map)>
Counter value: 1
SCC 5670 : 1
<sun.nio.ch.Util$4: java.lang.Void run()>
Counter value: 1
SCC 5671 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive: boolean tryAdvance(java.lang.Object)>
Counter value: 2
SCC 5672 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: java.util.Spliterator$OfLong spliterator()>
Counter value: 1
SCC 5673 : 1
<java.util.jar.JarVerifier$1: java.lang.Object nextElement()>
Counter value: 1
SCC 5674 : 1
<java.util.WeakHashMap$KeySet: void clear()>
Counter value: 1
SCC 5675 : 1
<sun.nio.ch.Util$1: void <init>()>
Counter value: 1
SCC 5676 : 1
<sun.security.x509.BasicConstraintsExtension: java.lang.String getName()>
Counter value: 1
SCC 5677 : 1
<sun.util.calendar.JulianCalendar: sun.util.calendar.JulianCalendar$Date newCalendarDate(java.util.TimeZone)>
Counter value: 1
SCC 5678 : 1
<java.lang.invoke.MethodHandles$Lookup: com.ibm.oti.vm.VMLangAccess getVMLangAccess()>
Counter value: 1
SCC 5679 : 1
<java.util.Spliterators$IntIteratorSpliterator: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 5680 : 1
<java.lang.invoke.Insert2Handle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 5681 : 1
<sun.nio.cs.FastCharsetProvider$1: java.nio.charset.Charset next()>
Counter value: 1
SCC 5682 : 1
<java.util.Locale: java.lang.Object clone()>
Counter value: 1
SCC 5683 : 1
<java.lang.invoke.MethodHandles$Lookup: boolean lookupJLIPackageCheckDefault()>
Counter value: 1
SCC 5684 : 1
<java.time.LocalTime: java.time.LocalTime plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 5685 : 1
<sun.net.www.protocol.http.DigestAuthentication: void checkResponse(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 5686 : 1
<java.io.ObjectInputStream: java.lang.Object readObject(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 5687 : 1
<sun.misc.InnocuousThread$1: java.lang.Object run()>
Counter value: 1
SCC 5688 : 1
<java.util.concurrent.ForkJoinTask: void internalWait(long)>
Counter value: 1
SCC 5689 : 1
<javax.security.auth.SubjectDomainCombiner$5: void <init>(java.security.ProtectionDomain)>
Counter value: 1
SCC 5690 : 1
<java.time.MonthDay: int get(java.time.temporal.TemporalField)>
Counter value: 1
SCC 5691 : 1
<sun.security.util.ResourcesMgr$2: java.lang.Object run()>
Counter value: 1
SCC 5692 : 1
<java.io.ObjectStreamField: java.lang.Class getType()>
Counter value: 1
SCC 5693 : 1
<sun.nio.ch.FileKey: int hashCode()>
Counter value: 1
SCC 5694 : 1
<java.util.stream.AbstractPipeline: java.util.Spliterator spliterator()>
Counter value: 1
SCC 5695 : 1
<sun.misc.PathPermissions: java.io.File[] access$000(sun.misc.PathPermissions)>
Counter value: 1
SCC 5696 : 1
<sun.security.util.KnownOIDs$6: boolean registerNames()>
Counter value: 1
SCC 5697 : 1
<java.net.HttpCookie: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>
Counter value: 1
SCC 5698 : 1
<java.util.stream.AbstractSpinedBuffer: void <init>()>
Counter value: 1
SCC 5699 : 1
<java.nio.channels.spi.AbstractSelector$1: void interrupt(java.lang.Thread)>
Counter value: 1
SCC 5700 : 1
<java.util.TreeMap$DescendingSubMap: java.util.Comparator comparator()>
Counter value: 1
SCC 5701 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter: java.util.spi.LocaleServiceProvider access$000(java.util.Map,java.util.Locale)>
Counter value: 1
SCC 5702 : 1
<java.util.stream.ReduceOps$1ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 5703 : 1
<java.lang.invoke.ReceiverBoundHandle: java.lang.invoke.MethodType receiverBoundMethodType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 5704 : 1
<java.util.stream.SortedOps$SizedRefSortingSink: void end()>
Counter value: 2
SCC 5705 : 1
<java.util.ArraysParallelSortHelpers$FJChar$Sorter: void compute()>
Counter value: 1
SCC 5706 : 1
<java.net.HttpCookie: java.lang.String toRFC2965HeaderString()>
Counter value: 1
SCC 5707 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 5708 : 1
<java.net.HttpConnectSocketImpl: void connect(java.net.SocketAddress,int)>
Counter value: 1
SCC 5709 : 1
<java.util.ArrayPrefixHelpers$DoubleCumulateTask: void <init>(java.util.ArrayPrefixHelpers$DoubleCumulateTask,java.util.function.DoubleBinaryOperator,double[],int,int,int,int,int)>
Counter value: 1
SCC 5710 : 1
<java.nio.file.Files$FileTypeDetectors$1: java.nio.file.spi.FileTypeDetector run()>
Counter value: 1
SCC 5711 : 1
<java.util.Scanner: void remove()>
Counter value: 1
SCC 5712 : 1
<java.nio.file.FileTreeWalker: java.nio.file.attribute.BasicFileAttributes getAttributes(java.nio.file.Path,boolean)>
Counter value: 1
SCC 5713 : 1
<java.security.SecureRandom$1: java.lang.String run()>
Counter value: 1
SCC 5714 : 1
<java.nio.ByteBufferAsCharBufferRB: java.nio.CharBuffer compact()>
Counter value: 1
SCC 5715 : 1
<java.net.InetAddress$CachedLocalHost: void <init>(java.lang.String,java.net.InetAddress)>
Counter value: 1
SCC 5716 : 1
<java.util.stream.Nodes$EmptyNode$OfRef: void copyInto(java.lang.Object[],int)>
Counter value: 1
SCC 5717 : 1
<java.util.concurrent.LinkedBlockingDeque$Itr: void <init>(java.util.concurrent.LinkedBlockingDeque)>
Counter value: 1
SCC 5718 : 1
<java.util.concurrent.LinkedBlockingDeque: void clear()>
Counter value: 1
SCC 5719 : 1
<java.util.stream.ReferencePipeline$Head: void <init>(java.util.Spliterator,int,boolean)>
Counter value: 1
SCC 5720 : 1
<java.security.Signature: java.lang.String toString()>
Counter value: 1
SCC 5721 : 1
<java.security.AccessControlContext: java.security.ProtectionDomain[] getContext()>
Counter value: 1
SCC 5722 : 1
<java.nio.file.attribute.FileTime: int compareTo(java.nio.file.attribute.FileTime)>
Counter value: 1
SCC 5723 : 1
<jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>
Counter value: 2
SCC 5724 : 1
<java.security.KeyStore$PasswordProtection: void <init>(char[])>
Counter value: 1
SCC 5725 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive: void forEachRemaining(java.lang.Object)>
Counter value: 2
SCC 5726 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: java.lang.String getGenericDisplayName(java.lang.String,int,java.util.Locale)>
Counter value: 2
SCC 5727 : 1
<java.util.stream.ReduceOps$10ReducingSink: void combine(java.util.stream.ReduceOps$10ReducingSink)>
Counter value: 1
SCC 5728 : 1
<java.util.Calendar: int hashCode()>
Counter value: 1
SCC 5729 : 1
<sun.security.x509.SubjectKeyIdentifierExtension: void encodeThis()>
Counter value: 1
SCC 5730 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setTunnelState(sun.net.www.protocol.http.HttpURLConnection$TunnelState)>
Counter value: 1
SCC 5731 : 1
<sun.nio.ch.FileLockImpl: void invalidate()>
Counter value: 1
SCC 5732 : 1
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object poll()>
Counter value: 1
SCC 5733 : 1
<java.util.Scanner: void clearCaches()>
Counter value: 1
SCC 5734 : 1
<java.util.stream.SortedOps$DoubleSortingSink: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 5735 : 1
<java.util.stream.SpinedBuffer$OfLong$1Splitr: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 5736 : 1
<java.util.SubList: java.util.AbstractList access$100(java.util.SubList)>
Counter value: 1
SCC 5737 : 1
<java.util.stream.IntPipeline$2: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 5738 : 1
<java.util.TreeMap$DescendingSubMap$DescendingEntrySetView: void <init>(java.util.TreeMap$DescendingSubMap)>
Counter value: 1
SCC 5739 : 1
<javax.crypto.PermissionsEnumerator: java.security.Permission nextElement()>
Counter value: 1
SCC 5740 : 1
<java.time.Instant: java.time.Instant plusSeconds(long)>
Counter value: 1
SCC 5741 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 5742 : 1
<java.io.PrintStream: void flush()>
Counter value: 1
SCC 5743 : 1
<java.util.WeakHashMap$WeakHashMapSpliterator: int getFence()>
Counter value: 1
SCC 5744 : 1
<java.util.IdentityHashMap$IdentityHashMapSpliterator: void <init>(java.util.IdentityHashMap,int,int,int,int)>
Counter value: 1
SCC 5745 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator: java.util.stream.StreamSpliterators$WrappingSpliterator wrap(java.util.Spliterator)>
Counter value: 1
SCC 5746 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
Counter value: 1
SCC 5747 : 1
<java.util.stream.Nodes$DoubleFixedNodeBuilder: void <init>(long)>
Counter value: 1
SCC 5748 : 1
<java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5749 : 1
<sun.net.www.http.HttpClient: void writeRequests(sun.net.www.MessageHeader,sun.net.www.http.PosterOutputStream)>
Counter value: 1
SCC 5750 : 1
<java.util.Random$RandomDoublesSpliterator: java.util.Random$RandomDoublesSpliterator trySplit()>
Counter value: 1
SCC 5751 : 1
<java.io.UTFDataFormatException: void <init>()>
Counter value: 1
SCC 5752 : 1
<java.lang.ref.Reference: java.lang.Object clone()>
Counter value: 1
SCC 5753 : 1
<java.io.ObjectInputStream$BlockDataInputStream: int readUnsignedShort()>
Counter value: 1
SCC 5754 : 1
<sun.net.www.protocol.http.HttpURLConnection$11: java.lang.Object run()>
Counter value: 1
SCC 5755 : 1
<java.lang.reflect.Parameter: boolean isVarArgs()>
Counter value: 1
SCC 5756 : 1
<java.util.Hashtable$ValueCollection: void clear()>
Counter value: 1
SCC 5757 : 1
<java.io.ObjectStreamClass: java.security.ProtectionDomain[] access$2102(java.io.ObjectStreamClass,java.security.ProtectionDomain[])>
Counter value: 1
SCC 5758 : 1
<java.time.YearMonth: java.time.YearMonth readExternal(java.io.DataInput)>
Counter value: 1
SCC 5759 : 1
<java.security.KeyStore$Builder$2$1: java.security.KeyStore run()>
Counter value: 1
SCC 5760 : 1
<sun.util.PreHashedMap: java.util.Set keySet()>
Counter value: 1
SCC 5761 : 1
<java.nio.HeapCharBufferR: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 5762 : 1
<sun.misc.SharedSecrets: void setJavaObjectInputStreamAccess(sun.misc.JavaObjectInputStreamAccess)>
Counter value: 1
SCC 5763 : 1
<java.util.Collections$CheckedCollection: boolean contains(java.lang.Object)>
Counter value: 2
SCC 5764 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: void <init>(java.time.chrono.ChronoLocalDateTimeImpl,java.time.ZoneOffset,java.time.ZoneId)>
Counter value: 1
SCC 5765 : 1
<java.util.Spliterators$DoubleIteratorSpliterator: int characteristics()>
Counter value: 1
SCC 5766 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator$lambda_initPartialTraversalState_0__45: boolean getAsBoolean()>
Counter value: 1
SCC 5767 : 1
<sun.net.www.http.ChunkedInputStream: int readAheadBlocking()>
Counter value: 1
SCC 5768 : 1
<java.nio.ByteBufferAsDoubleBufferL: double get(int)>
Counter value: 1
SCC 5769 : 1
<java.util.ArrayList$SubList: void removeRange(int,int)>
Counter value: 2
SCC 5770 : 1
<java.util.Collections$CheckedQueue: int hashCode()>
Counter value: 2
SCC 5771 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl plusMinutes(long)>
Counter value: 1
SCC 5772 : 1
<sun.nio.ch.IOUtil: void <clinit>()>
Counter value: 1
SCC 5773 : 1
<java.io.ObjectInputStream: void defaultReadFields(java.lang.Object,java.io.ObjectStreamClass)>
Counter value: 1
SCC 5774 : 1
<java.nio.DirectShortBufferS: short get(int)>
Counter value: 1
SCC 5775 : 1
<sun.reflect.ClassFileAssembler: void decStack()>
Counter value: 1
SCC 5776 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath resolve(java.nio.file.Path)>
Counter value: 1
SCC 5777 : 1
<sun.security.x509.X509CertImpl: javax.security.auth.x500.X500Principal getSubjectX500Principal(java.security.cert.X509Certificate)>
Counter value: 1
SCC 5778 : 1
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 5779 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfLong: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 5780 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CollatorProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 5781 : 1
<sun.nio.ch.ServerSocketAdaptor: boolean isBound()>
Counter value: 1
SCC 5782 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean remove(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 5783 : 1
<java.util.TreeMap$DescendingSubMap: java.util.Set entrySet()>
Counter value: 1
SCC 5784 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean tooHigh(java.lang.Object,java.util.Comparator)>
Counter value: 1
SCC 5785 : 1
<java.lang.invoke.Insert1IntHandle: void <init>(java.lang.invoke.Insert1IntHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 5786 : 1
<java.util.IdentityHashMap: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5787 : 1
<java.util.LinkedHashMap$LinkedEntrySet: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 5788 : 1
<java.util.concurrent.ConcurrentLinkedQueue: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 5789 : 1
<java.util.concurrent.ConcurrentHashMap$BulkTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[])>
Counter value: 1
SCC 5790 : 1
<java.util.concurrent.ForkJoinTask: int setExceptionalCompletion(java.lang.Throwable)>
Counter value: 1
SCC 5791 : 1
<java.lang.invoke.FilterReturnHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 5792 : 1
<java.util.stream.Nodes$CollectorTask$OfLong$longBuilder__90: void <init>()>
Counter value: 1
SCC 5793 : 1
<sun.misc.SharedSecrets: sun.misc.JavaSecurityAccess getJavaSecurityAccess()>
Counter value: 1
SCC 5794 : 1
<java.util.concurrent.ConcurrentHashMap$ValuesView: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 5795 : 1
<java.nio.DirectByteBufferR: boolean isReadOnly()>
Counter value: 1
SCC 5796 : 1
<java.util.concurrent.ConcurrentHashMap$ReduceKeysTask: void compute()>
Counter value: 1
SCC 5797 : 1
<sun.nio.cs.StreamEncoder: void close()>
Counter value: 1
SCC 5798 : 1
<java.time.chrono.MinguoChronology: java.lang.String getCalendarType()>
Counter value: 1
SCC 5799 : 1
<java.io.ObjectStreamClass: void checkDeserialize()>
Counter value: 1
SCC 5800 : 1
<java.nio.DirectLongBufferS: long get(int)>
Counter value: 1
SCC 5801 : 1
<sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 5802 : 1
<sun.misc.ProxyGenerator$ConstantPool: void <init>(sun.misc.ProxyGenerator$1)>
Counter value: 1
SCC 5803 : 1
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>
Counter value: 1
SCC 5804 : 1
<sun.misc.Launcher$BootClassPathHolder$1: java.lang.Object run()>
Counter value: 1
SCC 5805 : 1
<java.util.Spliterators$LongIteratorSpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 5806 : 1
<java.lang.reflect.Method: java.lang.String getName()>
Counter value: 1
SCC 5807 : 1
<java.util.stream.MatchOps$MatchTask: java.lang.Object getEmptyResult()>
Counter value: 1
SCC 5808 : 1
<sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()>
Counter value: 1
SCC 5809 : 1
<java.time.format.TextStyle: boolean isStandalone()>
Counter value: 1
SCC 5810 : 1
<java.time.chrono.HijrahChronology: int yearToEpochMonth(int)>
Counter value: 1
SCC 5811 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfDouble: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 5812 : 1
<java.time.Month: int firstDayOfYear(boolean)>
Counter value: 1
SCC 5813 : 1
<java.time.LocalDateTime: java.time.LocalDateTime plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 5814 : 1
<sun.nio.ch.SocketAdaptor: void setTcpNoDelay(boolean)>
Counter value: 1
SCC 5815 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: java.util.Spliterator$OfInt makeSpliterator(java.util.Spliterator$OfInt)>
Counter value: 1
SCC 5816 : 1
<java.util.Spliterators$IntIteratorSpliterator: int characteristics()>
Counter value: 1
SCC 5817 : 1
<sun.reflect.UnsafeDoubleFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 5818 : 1
<sun.security.x509.ExtendedKeyUsageExtension: java.lang.String getName()>
Counter value: 1
SCC 5819 : 1
<java.net.HttpCookie: java.lang.String stripOffSurroundingQuote(java.lang.String)>
Counter value: 1
SCC 5820 : 1
<sun.reflect.MethodAccessorGenerator: boolean isInterface()>
Counter value: 1
SCC 5821 : 1
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 5822 : 1
<java.util.Arrays$ArrayList: java.util.Spliterator spliterator()>
Counter value: 1
SCC 5823 : 1
<java.util.stream.ReferencePipeline$8: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 5824 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object set(int,java.lang.Object)>
Counter value: 1
SCC 5825 : 1
<sun.misc.Cleaner$1: java.lang.Object run()>
Counter value: 1
SCC 5826 : 1
<java.lang.invoke.ConstantLongHandle: void <init>(java.lang.invoke.ConstantLongHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 5827 : 1
<sun.nio.ch.DatagramDispatcher: int write(java.io.FileDescriptor,long,int)>
Counter value: 1
SCC 5828 : 1
<sun.security.x509.GeneralSubtrees: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 5829 : 1
<java.util.stream.SliceOps$4$1: void <init>(java.util.stream.SliceOps$4,java.util.stream.Sink)>
Counter value: 1
SCC 5830 : 1
<sun.nio.fs.NativeBuffers: void releaseNativeBuffer(sun.nio.fs.NativeBuffer)>
Counter value: 1
SCC 5831 : 1
<java.util.concurrent.ThreadLocalRandom$RandomLongsSpliterator: java.util.concurrent.ThreadLocalRandom$RandomLongsSpliterator trySplit()>
Counter value: 1
SCC 5832 : 1
<java.util.concurrent.locks.ReentrantLock$Sync: java.lang.Thread getOwner()>
Counter value: 1
SCC 5833 : 1
<java.util.stream.Collectors$Partition$1: java.util.Iterator iterator()>
Counter value: 1
SCC 5834 : 1
<java.lang.invoke.MethodHandleImpl$Lazy: java.lang.invoke.MethodHandle[] access$600()>
Counter value: 1
SCC 5835 : 1
<java.util.Collections$CheckedCollection: java.lang.Object[] toArray()>
Counter value: 2
SCC 5836 : 1
<java.time.chrono.HijrahChronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 5837 : 1
<java.util.Collections$SetFromMap: void forEach(java.util.function.Consumer)>
Counter value: 2
SCC 5838 : 1
<java.util.stream.Nodes$AbstractConcNode: long count()>
Counter value: 1
SCC 5839 : 1
<java.lang.reflect.WeakCache: java.util.concurrent.ConcurrentMap access$100(java.lang.reflect.WeakCache)>
Counter value: 1
SCC 5840 : 1
<java.time.chrono.JapaneseEra: java.time.chrono.JapaneseEra readExternal(java.io.DataInput)>
Counter value: 1
SCC 5841 : 1
<java.util.Collections$1: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 5842 : 1
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>
Counter value: 1
SCC 5843 : 1
<java.io.InputStream: int available()>
Counter value: 1
SCC 5844 : 1
<java.time.temporal.IsoFields$Field$1: java.time.temporal.ValueRange range()>
Counter value: 1
SCC 5845 : 1
<java.nio.ByteBufferAsDoubleBufferL: int ix(int)>
Counter value: 1
SCC 5846 : 1
<java.util.Collections$CopiesList: java.lang.Object get(int)>
Counter value: 1
SCC 5847 : 1
<java.util.Spliterators$IteratorSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 5848 : 1
<java.nio.DirectCharBufferRU: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 5849 : 1
<sun.net.www.http.HttpClient: void afterConnect()>
Counter value: 1
SCC 5850 : 1
<java.util.Collections$CheckedList: boolean equals(java.lang.Object)>
Counter value: 2
SCC 5851 : 1
<java.util.stream.Nodes$InternalNodeSpliterator: long estimateSize()>
Counter value: 2
SCC 5852 : 1
<java.util.DoubleSummaryStatistics: java.lang.String toString()>
Counter value: 1
SCC 5853 : 1
<java.util.Vector: void clear()>
Counter value: 1
SCC 5854 : 1
<java.util.concurrent.TimeUnit: long toDays(long)>
Counter value: 1
SCC 5855 : 1
<java.nio.channels.FileLock: java.nio.channels.Channel acquiredBy()>
Counter value: 1
SCC 5856 : 1
<java.io.DeleteOnExitHook: void add(java.lang.String)>
Counter value: 1
SCC 5857 : 1
<java.nio.DoubleBuffer: java.lang.String toString()>
Counter value: 1
SCC 5858 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfRef: java.util.stream.Nodes$SizedCollectorTask$OfRef makeChild(java.util.Spliterator,long,long)>
Counter value: 1
SCC 5859 : 1
<java.lang.System: void gc()>
Counter value: 1
SCC 5860 : 1
<java.util.stream.ReduceOps$13ReducingSink: void begin(long)>
Counter value: 1
SCC 5861 : 1
<java.net.ServerSocket: void <clinit>()>
Counter value: 1
SCC 5862 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfRef: java.util.stream.Nodes$SizedCollectorTask makeChild(java.util.Spliterator,long,long)>
Counter value: 1
SCC 5863 : 1
<java.util.stream.ForEachOps$ForEachOrderedTask: void onCompletion(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 5864 : 1
<java.lang.invoke.MethodHandle: void throwIllegalArgumentExceptionForMTArgCount(int)>
Counter value: 1
SCC 5865 : 1
<java.lang.reflect.ReflectPermission: void <init>(java.lang.String)>
Counter value: 1
SCC 5866 : 1
<java.text.StringCharacterIterator: int hashCode()>
Counter value: 1
SCC 5867 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: void <init>()>
Counter value: 1
SCC 5868 : 1
<java.io.ClassByNameCache: void removeStaleRef(java.io.ClassByNameCache$LoaderRef)>
Counter value: 1
SCC 5869 : 1
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
Counter value: 1
SCC 5870 : 1
<sun.net.www.http.HttpClient: int getDefaultPort(java.lang.String)>
Counter value: 1
SCC 5871 : 1
<java.util.stream.SliceOps$SliceTask: void cancel()>
Counter value: 1
SCC 5872 : 1
<sun.util.calendar.ImmutableGregorianDate: java.lang.Object clone()>
Counter value: 1
SCC 5873 : 1
<java.util.concurrent.LinkedBlockingDeque: void addFirst(java.lang.Object)>
Counter value: 1
SCC 5874 : 1
<java.nio.FloatBuffer: int hashCode()>
Counter value: 1
SCC 5875 : 1
<java.util.stream.IntPipeline: java.util.stream.StreamShape getOutputShape()>
Counter value: 1
SCC 5876 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator: void <init>(java.util.TreeMap$NavigableSubMap,java.util.TreeMap$Entry,java.util.TreeMap$Entry)>
Counter value: 1
SCC 5877 : 1
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 5878 : 1
<sun.reflect.AccessorGenerator: java.lang.String internalize(java.lang.String)>
Counter value: 1
SCC 5879 : 1
<java.util.concurrent.ThreadLocalRandom$RandomDoublesSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 5880 : 1
<java.util.stream.ReduceOps$8ReducingSink: void <init>(long,java.util.function.LongBinaryOperator)>
Counter value: 1
SCC 5881 : 1
<java.nio.DirectByteBuffer: void <init>(int)>
Counter value: 1
SCC 5882 : 1
<java.lang.Class: java.lang.Object getMethodHandleCache()>
Counter value: 1
SCC 5883 : 1
<java.nio.HeapIntBuffer: int get(int)>
Counter value: 1
SCC 5884 : 1
<java.util.stream.ReduceOps$8ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 5885 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator: long acquirePermits(long)>
Counter value: 1
SCC 5886 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Method access$2400(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class)>
Counter value: 1
SCC 5887 : 1
<java.util.TreeMap$NavigableSubMap$SubMapIterator: void removeDescending()>
Counter value: 1
SCC 5888 : 1
<java.lang.AbstractMethodError: void <init>()>
Counter value: 1
SCC 5889 : 1
<java.nio.file.ProviderMismatchException: void <init>()>
Counter value: 1
SCC 5890 : 1
<java.io.PushbackInputStream: boolean markSupported()>
Counter value: 1
SCC 5891 : 1
<java.util.stream.SortedOps$SizedIntSortingSink: void begin(long)>
Counter value: 1
SCC 5892 : 1
<java.util.concurrent.ThreadLocalRandom: int mix32(long)>
Counter value: 1
SCC 5893 : 1
<sun.nio.fs.NativeBuffer: long address()>
Counter value: 1
SCC 5894 : 1
<sun.text.IntHashtable: java.lang.Object clone()>
Counter value: 2
SCC 5895 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>
Counter value: 1
SCC 5896 : 1
<java.util.stream.SliceOps$SliceTask: void <init>(java.util.stream.SliceOps$SliceTask,java.util.Spliterator)>
Counter value: 1
SCC 5897 : 1
<sun.net.www.http.KeepAliveStream: boolean markSupported()>
Counter value: 1
SCC 5898 : 1
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 5899 : 1
<sun.net.sdp.SdpProvider$AddressPortRangeRule: boolean match(sun.net.sdp.SdpProvider$Action,java.net.InetAddress,int)>
Counter value: 1
SCC 5900 : 1
<java.util.EnumMap: java.lang.Object maskNull(java.lang.Object)>
Counter value: 1
SCC 5901 : 1
<java.time.chrono.ChronoPeriodImpl: java.time.chrono.Chronology getChronology()>
Counter value: 1
SCC 5902 : 1
<sun.nio.ch.SocketChannelImpl: java.net.SocketAddress remoteAddress()>
Counter value: 1
SCC 5903 : 1
<java.util.stream.AbstractPipeline$lambda_spliterator_0__46: java.util.function.Supplier bootstrap$(java.util.stream.AbstractPipeline)>
Counter value: 1
SCC 5904 : 1
<java.util.TreeMap$NavigableSubMap$SubMapIterator: void removeAscending()>
Counter value: 1
SCC 5905 : 1
<sun.net.www.protocol.http.HttpURLConnection$4: java.lang.Void run()>
Counter value: 1
SCC 5906 : 1
<java.util.LinkedList$LLSpliterator: int getEst()>
Counter value: 1
SCC 5907 : 1
<sun.util.locale.provider.BreakDictionary$1: java.lang.Object run()>
Counter value: 1
SCC 5908 : 1
<sun.security.util.MemoryCache$SoftCacheEntry: void <init>(java.lang.Object,java.lang.Object,long,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 5909 : 1
<java.util.EnumMap$EnumMapIterator: void <init>(java.util.EnumMap)>
Counter value: 1
SCC 5910 : 1
<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>
Counter value: 1
SCC 5911 : 1
<sun.net.ProgressEvent: java.lang.String toString()>
Counter value: 1
SCC 5912 : 1
<java.net.HttpConnectSocketImpl$1: java.lang.Void run()>
Counter value: 1
SCC 5913 : 1
<sun.nio.ch.DatagramDispatcher: void <clinit>()>
Counter value: 1
SCC 5914 : 1
<java.lang.Math: float max(float,float)>
Counter value: 1
SCC 5915 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 5916 : 1
<java.nio.DirectCharBufferS: long ix(int)>
Counter value: 1
SCC 5917 : 1
<sun.nio.ch.SinkChannelImpl: void implConfigureBlocking(boolean)>
Counter value: 1
SCC 5918 : 1
<java.util.stream.LongPipeline: java.util.stream.Node$Builder makeNodeBuilder(long,java.util.function.IntFunction)>
Counter value: 1
SCC 5919 : 1
<java.util.stream.SpinedBuffer$OfInt: java.lang.Object[] newArrayArray(int)>
Counter value: 1
SCC 5920 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 5921 : 1
<java.util.concurrent.ConcurrentHashMap$ReduceValuesTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$ReduceValuesTask,java.util.function.BiFunction)>
Counter value: 1
SCC 5922 : 1
<java.util.stream.Nodes$EmptyNode$OfDouble: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 5923 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle fillToRight(int)>
Counter value: 1
SCC 5924 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime resolveOffset(java.time.ZoneOffset)>
Counter value: 1
SCC 5925 : 1
<java.lang.ProcessEnvironment$StringEntrySet: void clear()>
Counter value: 2
SCC 5926 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getHeaderField(int)>
Counter value: 1
SCC 5927 : 1
<java.lang.Class: java.lang.reflect.Constructor[] lookupCachedConstructors(java.lang.Class$CacheKey)>
Counter value: 1
SCC 5928 : 1
<java.time.Month: int minLength()>
Counter value: 1
SCC 5929 : 1
<java.util.TreeMap: java.util.Spliterator keySpliteratorFor(java.util.NavigableMap)>
Counter value: 1
SCC 5930 : 1
<sun.net.ExtendedOptionsImpl: void checkSetOptionPermission(java.net.SocketOption)>
Counter value: 1
SCC 5931 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: void lambda$setValue$0(java.time.format.DateTimeParseContext,long,int,int,java.time.chrono.Chronology)>
Counter value: 1
SCC 5932 : 1
<java.util.Base64$EncOutputStream: void write(int)>
Counter value: 1
SCC 5933 : 1
<java.util.stream.Sink: void end()>
Counter value: 1
SCC 5934 : 1
<java.util.Spliterators$4Adapter: boolean hasNext()>
Counter value: 1
SCC 5935 : 1
<java.util.Collections$CheckedCollection$1: java.lang.Object next()>
Counter value: 2
SCC 5936 : 1
<java.time.LocalDateTime: java.time.LocalDateTime plusMinutes(long)>
Counter value: 1
SCC 5937 : 1
<java.util.stream.Nodes$LongFixedNodeBuilder: void begin(long)>
Counter value: 1
SCC 5938 : 1
<java.text.DecimalFormatSymbols: char getMonetaryDecimalSeparator()>
Counter value: 1
SCC 5939 : 1
<java.util.stream.SliceOps$SliceTask: java.util.stream.Node getEmptyResult()>
Counter value: 1
SCC 5940 : 1
<java.nio.HeapCharBuffer: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 5941 : 1
<java.util.stream.SpinedBuffer$OfInt: void arrayForEach(int[],int,int,java.util.function.IntConsumer)>
Counter value: 1
SCC 5942 : 1
<java.nio.Bits: float getFloatB(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 5943 : 1
<java.util.concurrent.ConcurrentHashMap$KeySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 5944 : 1
<java.lang.invoke.FilterReturnHandle: void <init>(java.lang.invoke.FilterReturnHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 5945 : 1
<java.util.Spliterators$DoubleArraySpliterator: void <init>(double[],int,int,int)>
Counter value: 1
SCC 5946 : 1
<sun.nio.fs.NativeBuffers: sun.nio.fs.NativeBuffer getNativeBufferFromCache(int)>
Counter value: 1
SCC 5947 : 1
<java.util.stream.ReferencePipeline: java.util.stream.Node$Builder makeNodeBuilder(long,java.util.function.IntFunction)>
Counter value: 1
SCC 5948 : 1
<java.util.stream.IntPipeline$7$1$accept__71: java.util.function.IntConsumer bootstrap$(java.util.stream.Sink)>
Counter value: 1
SCC 5949 : 1
<java.util.Iterator: void remove()>
Counter value: 1
SCC 5950 : 1
<java.nio.channels.spi.SelectorProvider: boolean access$000()>
Counter value: 1
SCC 5951 : 1
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>
Counter value: 1
SCC 5952 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: boolean hasNext()>
Counter value: 1
SCC 5953 : 1
<sun.reflect.AccessorGenerator: void emitMethod(short,int,sun.reflect.ClassFileAssembler,sun.reflect.ClassFileAssembler,short[])>
Counter value: 1
SCC 5954 : 1
<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>
Counter value: 1
SCC 5955 : 1
<java.time.chrono.AbstractChronology: int lambda$static$7f2d2d5b$1(java.time.chrono.ChronoLocalDate,java.time.chrono.ChronoLocalDate)>
Counter value: 1
SCC 5956 : 1
<java.util.stream.ReferencePipeline: void forEachWithCancel(java.util.Spliterator,java.util.stream.Sink)>
Counter value: 1
SCC 5957 : 1
<java.lang.invoke.DirectHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 5958 : 1
<java.util.WeakHashMap$ValueSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 5959 : 1
<java.lang.invoke.CatchHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 5960 : 1
<java.util.Collections$SynchronizedList: java.util.ListIterator listIterator(int)>
Counter value: 2
SCC 5961 : 1
<java.util.stream.Sink$ChainedInt: void end()>
Counter value: 2
SCC 5962 : 1
<java.util.Formatter: void <init>(java.lang.Appendable)>
Counter value: 1
SCC 5963 : 1
<java.io.Console$2: java.io.Console console()>
Counter value: 1
SCC 5964 : 1
<java.util.IdentityHashMap$Values: boolean contains(java.lang.Object)>
Counter value: 1
SCC 5965 : 1
<sun.net.NetProperties: void <clinit>()>
Counter value: 1
SCC 5966 : 1
<java.util.stream.Nodes$CollectorTask$OfLong$init__91: void <init>()>
Counter value: 1
SCC 5967 : 1
<java.util.stream.Nodes$IntArrayNode: int[] asPrimitiveArray()>
Counter value: 1
SCC 5968 : 1
<java.time.chrono.AbstractChronology: java.time.chrono.Chronology readExternal(java.io.DataInput)>
Counter value: 1
SCC 5969 : 1
<java.util.concurrent.ThreadLocalRandom$RandomIntsSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 5970 : 1
<java.lang.invoke.DirectHandle: java.lang.invoke.MethodType directMethodType(java.lang.invoke.MethodType,byte,java.lang.Class)>
Counter value: 1
SCC 5971 : 1
<java.net.SocksSocketImpl: int remainingMillis(long)>
Counter value: 1
SCC 5972 : 1
<java.util.stream.SpinedBuffer$OfInt: void arrayForEach(java.lang.Object,int,int,java.lang.Object)>
Counter value: 1
SCC 5973 : 1
<sun.misc.ProxyGenerator: java.lang.String getFriendlyMethodSignature(java.lang.String,java.lang.Class[])>
Counter value: 1
SCC 5974 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator: void <init>(java.util.Spliterator,long,long,long,long)>
Counter value: 1
SCC 5975 : 1
<java.nio.ShortBuffer: boolean equals(java.lang.Object)>
Counter value: 1
SCC 5976 : 1
<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>
Counter value: 1
SCC 5977 : 1
<java.util.stream.Nodes$CollectorTask: java.util.stream.Nodes$CollectorTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 5978 : 1
<java.util.stream.ReduceOps$6ReducingSink: java.util.OptionalInt get()>
Counter value: 1
SCC 5979 : 1
<java.util.concurrent.ForkJoinPool$EmptyTask: void <init>()>
Counter value: 1
SCC 5980 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 5981 : 1
<java.util.stream.Nodes$SpinedNodeBuilder: void end()>
Counter value: 1
SCC 5982 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.invoke.MethodHandle asType(java.lang.invoke.MethodType)>
Counter value: 2
SCC 5983 : 1
<java.time.chrono.JapaneseEra: java.time.chrono.JapaneseEra toJapaneseEra(sun.util.calendar.Era)>
Counter value: 1
SCC 5984 : 1
<sun.reflect.ClassFileAssembler: void append(sun.reflect.ByteVector)>
Counter value: 1
SCC 5985 : 1
<java.math.SignedMutableBigInteger: java.lang.String toString()>
Counter value: 1
SCC 5986 : 1
<java.util.stream.DoublePipeline$5$1: void accept(double)>
Counter value: 1
SCC 5987 : 1
<java.util.stream.Nodes$ToArrayTask$OfPrimitive: void <init>(java.util.stream.Nodes$ToArrayTask$OfPrimitive,java.util.stream.Node$OfPrimitive,int)>
Counter value: 1
SCC 5988 : 1
<java.util.stream.SpinedBuffer$1Splitr: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 5989 : 1
<sun.misc.ProxyGenerator: sun.misc.ProxyGenerator$MethodInfo generateConstructor()>
Counter value: 1
SCC 5990 : 1
<sun.security.x509.CRLNumberExtension: java.lang.String toString()>
Counter value: 1
SCC 5991 : 1
<java.lang.invoke.CatchHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 5992 : 1
<java.net.HttpConnectSocketImpl: java.net.Socket access$200(java.net.HttpConnectSocketImpl,java.lang.String,int)>
Counter value: 1
SCC 5993 : 1
<sun.nio.ch.SharedFileLockTable: void removeKeyIfEmpty(sun.nio.ch.FileKey,java.util.List)>
Counter value: 1
SCC 5994 : 1
<java.time.chrono.HijrahDate: int lengthOfMonth()>
Counter value: 1
SCC 5995 : 1
<java.lang.invoke.MethodCacheKey: void <init>(java.lang.String,java.lang.invoke.MethodType,java.lang.Class)>
Counter value: 1
SCC 5996 : 1
<javax.security.auth.Subject$ClassSet: boolean add(java.lang.Object)>
Counter value: 2
SCC 5997 : 1
<sun.net.sdp.SdpSupport: void <clinit>()>
Counter value: 1
SCC 5998 : 1
<java.util.Collections$CheckedCollection$1: void <init>(java.util.Collections$CheckedCollection,java.util.Iterator)>
Counter value: 1
SCC 5999 : 1
<java.time.LocalTime: java.time.LocalTime ofSecondOfDay(long)>
Counter value: 1
SCC 6000 : 1
<sun.net.www.HeaderParser$ParserIterator: boolean hasNext()>
Counter value: 1
SCC 6001 : 1
<sun.invoke.util.Wrapper: boolean checkConvertibleFrom()>
Counter value: 1
SCC 6002 : 1
<java.util.Collections$CheckedSet: int hashCode()>
Counter value: 2
SCC 6003 : 1
<sun.net.www.http.KeepAliveStream: void close()>
Counter value: 1
SCC 6004 : 1
<java.util.stream.ReduceOps$2ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 6005 : 1
<java.util.stream.DistinctOps$1$lambda_opEvaluateParallel_0__81: void <init>(java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.ConcurrentHashMap)>
Counter value: 1
SCC 6006 : 1
<java.util.EnumMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 6007 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator: void remove()>
Counter value: 1
SCC 6008 : 1
<java.util.concurrent.SynchronousQueue: java.util.Spliterator spliterator()>
Counter value: 1
SCC 6009 : 1
<java.util.stream.SpinedBuffer: java.lang.Object[] asArray(java.util.function.IntFunction)>
Counter value: 1
SCC 6010 : 1
<java.io.ObjectInputStream$BlockDataInputStream: int readInt()>
Counter value: 1
SCC 6011 : 1
<java.nio.DirectCharBufferU: java.nio.ByteOrder order()>
Counter value: 1
SCC 6012 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doGet(java.lang.Object)>
Counter value: 1
SCC 6013 : 1
<java.util.stream.SliceOps$2$1: boolean cancellationRequested()>
Counter value: 2
SCC 6014 : 1
<java.util.concurrent.ConcurrentSkipListMap$Values: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 6015 : 1
<java.util.WeakHashMap$KeySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 6016 : 1
<sun.reflect.DelegatingClassLoader: void <init>(java.lang.ClassLoader)>
Counter value: 1
SCC 6017 : 1
<java.util.IdentityHashMap$KeySet: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 6018 : 1
<sun.net.www.http.ChunkedOutputStream: void close()>
Counter value: 1
SCC 6019 : 1
<java.util.stream.ForEachOps$ForEachOp$OfDouble: java.lang.Object evaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 6020 : 1
<java.util.ArrayDeque: java.lang.Object peek()>
Counter value: 1
SCC 6021 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap$Node loNode(java.util.Comparator)>
Counter value: 1
SCC 6022 : 1
<java.util.stream.LongPipeline: java.util.function.LongConsumer adapt(java.util.stream.Sink)>
Counter value: 1
SCC 6023 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfDouble: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 6024 : 1
<java.util.concurrent.ConcurrentSkipListMap: boolean isEmpty()>
Counter value: 1
SCC 6025 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$1: void <init>(java.util.Collections$CheckedMap$CheckedEntrySet,java.util.Iterator,java.lang.Class)>
Counter value: 1
SCC 6026 : 1
<java.util.stream.IntPipeline$6$1: void <init>(java.util.stream.IntPipeline$6,java.util.stream.Sink)>
Counter value: 1
SCC 6027 : 1
<java.util.LinkedHashMap$LinkedValues: java.util.Spliterator spliterator()>
Counter value: 1
SCC 6028 : 1
<java.util.Spliterators$DoubleArraySpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 6029 : 1
<sun.misc.ObjectInputFilter$Config$Global$lambda_checkInput_8__99: java.util.function.Function bootstrap$(java.lang.Class)>
Counter value: 1
SCC 6030 : 1
<java.util.IdentityHashMap$KeySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 6031 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6032 : 1
<javax.security.auth.x500.X500Principal: int hashCode()>
Counter value: 1
SCC 6033 : 1
<java.util.concurrent.ConcurrentHashMap$BulkTask: void recoverState(int)>
Counter value: 1
SCC 6034 : 1
<sun.net.www.http.ChunkedInputStream: void <init>(java.io.InputStream,sun.net.www.http.HttpClient,sun.net.www.MessageHeader)>
Counter value: 1
SCC 6035 : 1
<sun.nio.fs.UnixFileKey: void <init>(long,long)>
Counter value: 1
SCC 6036 : 1
<java.net.HttpCookie: boolean isHttpOnly()>
Counter value: 1
SCC 6037 : 1
<sun.misc.ProxyGenerator$ProxyMethod: sun.misc.ProxyGenerator$MethodInfo generateMethod()>
Counter value: 1
SCC 6038 : 1
<sun.net.www.protocol.http.HttpCallerInfo: void <init>(java.net.URL,java.lang.String,int)>
Counter value: 1
SCC 6039 : 1
<java.util.stream.SortedOps$LongSortingSink: void accept(long)>
Counter value: 1
SCC 6040 : 1
<java.nio.DirectCharBufferS: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 6041 : 1
<java.util.Collections$UnmodifiableList$1: int nextIndex()>
Counter value: 2
SCC 6042 : 1
<java.util.concurrent.ForkJoinTask$AdaptedCallable: void run()>
Counter value: 1
SCC 6043 : 1
<java.time.chrono.HijrahDate: int hashCode()>
Counter value: 1
SCC 6044 : 1
<java.lang.ProcessEnvironment$StringKeySet$1: void remove()>
Counter value: 2
SCC 6045 : 1
<java.lang.Long: long reverseBytes(long)>
Counter value: 1
SCC 6046 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive: void <init>(java.util.stream.Node$OfPrimitive)>
Counter value: 1
SCC 6047 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate plusDays(long)>
Counter value: 1
SCC 6048 : 1
<sun.util.locale.provider.TimeZoneNameProviderImpl: java.lang.String getGenericDisplayName(java.lang.String,int,java.util.Locale)>
Counter value: 1
SCC 6049 : 1
<sun.nio.ch.Net: void <clinit>()>
Counter value: 1
SCC 6050 : 1
<sun.nio.ch.PendingFuture: java.lang.Object get()>
Counter value: 1
SCC 6051 : 1
<sun.security.x509.X509Key: int hashCode()>
Counter value: 1
SCC 6052 : 1
<sun.reflect.ClassFileAssembler: void opc_aload_1()>
Counter value: 1
SCC 6053 : 1
<java.io.ObjectOutputStream: void write(int)>
Counter value: 1
SCC 6054 : 1
<java.nio.Bits: double getDoubleB(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 6055 : 1
<sun.net.www.http.ChunkedInputStream: boolean hurry()>
Counter value: 1
SCC 6056 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: int size()>
Counter value: 2
SCC 6057 : 1
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
Counter value: 1
SCC 6058 : 1
<java.io.ObjectStreamClass$EntryFuture: void <init>(java.io.ObjectStreamClass$1)>
Counter value: 1
SCC 6059 : 1
<sun.security.x509.CRLExtensions: int hashCode()>
Counter value: 1
SCC 6060 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime readExternal(java.io.ObjectInput)>
Counter value: 1
SCC 6061 : 1
<sun.reflect.ClassFileAssembler: void opc_ifnull(sun.reflect.Label)>
Counter value: 1
SCC 6062 : 1
<java.net.HttpCookie$2: void <init>()>
Counter value: 1
SCC 6063 : 1
<java.util.Collections$CopiesList$lambda_stream_0__47: java.lang.Object apply(int)>
Counter value: 1
SCC 6064 : 1
<sun.security.x509.CRLReasonCodeExtension: void encodeThis()>
Counter value: 1
SCC 6065 : 1
<sun.net.sdp.SdpSupport$1: java.lang.Void run()>
Counter value: 1
SCC 6066 : 1
<java.util.Arrays: java.lang.String toString(int[])>
Counter value: 1
SCC 6067 : 1
<sun.reflect.ClassFileAssembler: void opc_l2f()>
Counter value: 1
SCC 6068 : 1
<java.util.stream.Streams$RangeLongSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 6069 : 1
<sun.reflect.UnsafeShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6070 : 1
<sun.net.ProgressSource: java.lang.String toString()>
Counter value: 1
SCC 6071 : 1
<java.util.stream.AbstractShortCircuitTask: java.lang.Object getLocalResult()>
Counter value: 1
SCC 6072 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 6073 : 1
<java.util.stream.Nodes$EmptyNode$OfInt: int[] asPrimitiveArray()>
Counter value: 1
SCC 6074 : 1
<java.lang.invoke.MethodHandleImpl$2: java.lang.Object apply(java.lang.Object)>
Counter value: 1
SCC 6075 : 1
<sun.misc.ProxyGenerator: java.lang.String access$500(java.lang.Class[],java.lang.Class)>
Counter value: 1
SCC 6076 : 1
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6077 : 1
<java.lang.ClassValue$ClassValueMap: java.lang.ClassValue$Entry placeInCache(java.lang.ClassValue$Entry[],int,java.lang.ClassValue$Entry,boolean)>
Counter value: 1
SCC 6078 : 1
<java.net.NetworkInterface$1checkedAddresses: java.net.InetAddress nextElement()>
Counter value: 1
SCC 6079 : 1
<java.util.ArrayList$ListItr: int nextIndex()>
Counter value: 1
SCC 6080 : 1
<java.net.SocksSocketImpl: java.net.Socket access$500(java.net.SocksSocketImpl)>
Counter value: 1
SCC 6081 : 1
<java.nio.DirectCharBufferS: java.nio.CharBuffer compact()>
Counter value: 1
SCC 6082 : 1
<java.util.DualPivotQuicksort: void doSort(float[],int,int,float[],int,int)>
Counter value: 1
SCC 6083 : 1
<sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator: void remove()>
Counter value: 1
SCC 6084 : 1
<java.util.concurrent.ConcurrentHashMap$SearchValuesTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 6085 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef: void <init>(java.util.Spliterator,long,long)>
Counter value: 1
SCC 6086 : 1
<sun.security.provider.X509Factory: byte[] readOneBlock(java.io.InputStream)>
Counter value: 1
SCC 6087 : 1
<java.lang.ProcessBuilder$Redirect$2: java.lang.String toString()>
Counter value: 1
SCC 6088 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixFileSystem getFileSystem()>
Counter value: 1
SCC 6089 : 1
<java.util.EnumMap$ValueIterator: void <init>(java.util.EnumMap,java.util.EnumMap$1)>
Counter value: 1
SCC 6090 : 1
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6091 : 1
<java.lang.invoke.FieldSetterHandle: void <init>(java.lang.invoke.FieldSetterHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 6092 : 1
<java.io.ObjectStreamClass: void processQueue(java.lang.ref.ReferenceQueue,java.util.concurrent.ConcurrentMap)>
Counter value: 1
SCC 6093 : 1
<java.util.stream.ReferencePipeline$5: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 6094 : 1
<java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()>
Counter value: 1
SCC 6095 : 1
<sun.security.x509.CRLDistributionPointsExtension: void encodeThis()>
Counter value: 1
SCC 6096 : 1
<java.util.stream.Node$OfPrimitive: java.util.stream.Node$OfPrimitive getChild(int)>
Counter value: 1
SCC 6097 : 1
<java.io.ObjectStreamClass: void readNonProxy(java.io.ObjectInputStream)>
Counter value: 1
SCC 6098 : 1
<java.util.SubList: void <init>(java.util.AbstractList,int,int)>
Counter value: 1
SCC 6099 : 1
<sun.reflect.UnsafeBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>
Counter value: 1
SCC 6100 : 1
<java.time.chrono.MinguoChronology: java.time.chrono.ChronoLocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 6101 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachValueTask: void compute()>
Counter value: 1
SCC 6102 : 1
<java.util.stream.IntStream$1: boolean hasNext()>
Counter value: 1
SCC 6103 : 1
<java.util.stream.Streams$IntStreamBuilderImpl: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 6104 : 1
<jdk.internal.org.objectweb.asm.Label: java.lang.String toString()>
Counter value: 1
SCC 6105 : 1
<java.time.temporal.TemporalAdjusters: java.time.temporal.Temporal lambda$previousOrSame$12(int,java.time.temporal.Temporal)>
Counter value: 1
SCC 6106 : 1
<sun.nio.fs.UnixException: java.lang.String getMessage()>
Counter value: 1
SCC 6107 : 1
<sun.nio.ch.SocketAdaptor: java.lang.String toString()>
Counter value: 1
SCC 6108 : 1
<java.util.ArraysParallelSortHelpers$FJObject$Sorter: void compute()>
Counter value: 1
SCC 6109 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeReturnType(java.lang.Class)>
Counter value: 1
SCC 6110 : 1
<java.util.stream.Nodes$FixedNodeBuilder: java.lang.String toString()>
Counter value: 1
SCC 6111 : 1
<java.util.stream.ReduceOps$11: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 6112 : 1
<sun.security.x509.BasicConstraintsExtension: java.lang.String toString()>
Counter value: 1
SCC 6113 : 1
<java.time.YearMonth: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 6114 : 1
<sun.net.www.http.KeepAliveCache$1: void <init>(sun.net.www.http.KeepAliveCache,sun.net.www.http.KeepAliveCache)>
Counter value: 1
SCC 6115 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator: java.util.Spliterator trySplit()>
Counter value: 2
SCC 6116 : 1
<java.util.EnumMap$Values: void <init>(java.util.EnumMap)>
Counter value: 1
SCC 6117 : 1
<sun.util.locale.LocaleExtensions: java.lang.String toString()>
Counter value: 1
SCC 6118 : 1
<java.util.stream.Nodes$LongArrayNode: void forEach(java.util.function.LongConsumer)>
Counter value: 1
SCC 6119 : 1
<java.text.DigitList: int hashCode()>
Counter value: 1
SCC 6120 : 1
<java.lang.Float: java.lang.String toString()>
Counter value: 1
SCC 6121 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfRef: void <init>(java.util.stream.Node)>
Counter value: 1
SCC 6122 : 1
<sun.net.www.http.KeepAliveStream: void setClosed()>
Counter value: 1
SCC 6123 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfInt$lambda_emptyConsumer_0__51: void <init>()>
Counter value: 1
SCC 6124 : 1
<sun.reflect.MethodAccessorGenerator: java.lang.String buildInternalSignature()>
Counter value: 1
SCC 6125 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class[])>
Counter value: 1
SCC 6126 : 1
<java.net.AbstractPlainDatagramSocketImpl$1: java.lang.Void run()>
Counter value: 1
SCC 6127 : 1
<java.time.LocalDateTime: java.time.LocalDateTime plusHours(long)>
Counter value: 1
SCC 6128 : 1
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 6129 : 1
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 6130 : 1
<java.util.Base64$Encoder: byte[] encode(byte[])>
Counter value: 1
SCC 6131 : 1
<java.util.Map$Entry: java.util.Comparator comparingByKey(java.util.Comparator)>
Counter value: 1
SCC 6132 : 1
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 6133 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.Set keySet()>
Counter value: 1
SCC 6134 : 1
<sun.util.locale.BaseLocale: java.lang.String toString()>
Counter value: 1
SCC 6135 : 1
<java.nio.DoubleBuffer: int compareTo(java.lang.Object)>
Counter value: 1
SCC 6136 : 1
<java.util.Scanner: void saveState()>
Counter value: 1
SCC 6137 : 1
<java.net.URLPermission: java.util.List normalizeMethods(java.lang.String)>
Counter value: 1
SCC 6138 : 1
<java.time.Year: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 6139 : 1
<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>
Counter value: 1
SCC 6140 : 1
<java.net.HttpConnectSocketImpl$1: java.lang.Object run()>
Counter value: 1
SCC 6141 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath subpath(int,int)>
Counter value: 1
SCC 6142 : 1
<java.util.AbstractList$ListItr: int nextIndex()>
Counter value: 1
SCC 6143 : 1
<java.util.stream.Nodes$ArrayNode: void <init>(java.lang.Object[])>
Counter value: 1
SCC 6144 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator: void <init>(java.util.Spliterator,long,long)>
Counter value: 1
SCC 6145 : 1
<sun.net.www.http.KeepAliveStreamCleaner$2: java.lang.Integer run()>
Counter value: 1
SCC 6146 : 1
<java.lang.invoke.HandleCache: java.lang.invoke.MethodHandle getMethodWithSpecialCallerFromPerClassCache(java.util.Map,java.lang.String,java.lang.invoke.MethodType,java.lang.Class)>
Counter value: 1
SCC 6147 : 1
<sun.reflect.'annotation'.AnnotationType$1: java.lang.reflect.Method[] run()>
Counter value: 1
SCC 6148 : 1
<sun.util.PreHashedMap$2$1: boolean hasNext()>
Counter value: 2
SCC 6149 : 1
<sun.misc.Signal: int hashCode()>
Counter value: 1
SCC 6150 : 1
<java.util.stream.ReferencePipeline: void <init>(java.util.Spliterator,int,boolean)>
Counter value: 1
SCC 6151 : 1
<sun.misc.ProxyGenerator: void code_aload(int,java.io.DataOutputStream)>
Counter value: 1
SCC 6152 : 1
<java.nio.ShortBuffer: int compare(short,short)>
Counter value: 1
SCC 6153 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor: long now()>
Counter value: 1
SCC 6154 : 1
<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>
Counter value: 1
SCC 6155 : 1
<java.util.ArrayList$SubList: void add(int,java.lang.Object)>
Counter value: 2
SCC 6156 : 1
<java.lang.invoke.SpreadHandle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 6157 : 1
<java.lang.invoke.IndirectHandle: java.lang.invoke.MethodHandle bindTo(java.lang.Object)>
Counter value: 1
SCC 6158 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Method getPrivateMethod(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class)>
Counter value: 1
SCC 6159 : 1
<java.util.stream.Nodes: java.util.stream.Node$Builder builder(long,java.util.function.IntFunction)>
Counter value: 1
SCC 6160 : 1
<sun.security.util.MemoryCache$HardCacheEntry: void <init>(java.lang.Object,java.lang.Object,long)>
Counter value: 1
SCC 6161 : 1
<sun.security.x509.CRLDistributionPointsExtension: java.lang.String getName()>
Counter value: 1
SCC 6162 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)>
Counter value: 1
SCC 6163 : 1
<java.util.Spliterators$LongIteratorSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 6164 : 1
<java.io.Bits: long getLong(byte[],int)>
Counter value: 1
SCC 6165 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: boolean supportsPreemptiveAuthorization()>
Counter value: 1
SCC 6166 : 1
<java.util.Hashtable$Entry: java.lang.Object clone()>
Counter value: 2
SCC 6167 : 1
<java.util.stream.SliceOps$3: java.util.Spliterator opEvaluateParallelLazy(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 6168 : 1
<java.util.Collections$ReverseComparator2: void <init>(java.util.Comparator)>
Counter value: 1
SCC 6169 : 1
<java.util.concurrent.ConcurrentSkipListMap: void buildFromSorted(java.util.SortedMap)>
Counter value: 1
SCC 6170 : 1
<java.util.stream.ReduceOps$8: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 6171 : 1
<java.nio.DirectFloatBufferS: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 6172 : 1
<java.util.stream.ReduceOps$2: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 6173 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object previous()>
Counter value: 2
SCC 6174 : 1
<javax.security.auth.SubjectDomainCombiner: javax.security.auth.Subject getSubject()>
Counter value: 1
SCC 6175 : 1
<sun.util.logging.PlatformLogger: void warning(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 6176 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asCollectorCommon(int,java.lang.Class,int)>
Counter value: 1
SCC 6177 : 1
<javax.security.auth.Subject$SecureSet: void clear()>
Counter value: 1
SCC 6178 : 1
<java.util.EnumSet: java.lang.Object clone()>
Counter value: 1
SCC 6179 : 1
<java.util.stream.DoublePipeline$6: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 6180 : 1
<java.net.Socket$3: java.lang.Object run()>
Counter value: 1
SCC 6181 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean isEmpty()>
Counter value: 1
SCC 6182 : 1
<java.security.Provider: java.lang.Object implRemove(java.lang.Object)>
Counter value: 1
SCC 6183 : 1
<sun.security.x509.NameConstraintsExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 6184 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setConnectTimeout(int)>
Counter value: 1
SCC 6185 : 1
<java.io.ObjectStreamClass: java.lang.Long getDeclaredSUID(java.lang.Class)>
Counter value: 1
SCC 6186 : 1
<sun.net.www.http.HttpClient: boolean parseHTTPHeader(sun.net.www.MessageHeader,sun.net.ProgressSource,sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 2
SCC 6187 : 1
<java.util.stream.Streams$LongStreamBuilderImpl: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 6188 : 1
<java.io.ClassByNameCache$LookupKey: java.lang.Object getLoaderObj()>
Counter value: 1
SCC 6189 : 1
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date newCalendarDate()>
Counter value: 1
SCC 6190 : 1
<javax.crypto.NullCipherSpi: void engineInit(int,java.security.Key,java.security.SecureRandom)>
Counter value: 1
SCC 6191 : 1
<java.time.LocalDateTime: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 6192 : 1
<java.io.ObjectInputStream: void readExternalData(java.io.Externalizable,java.io.ObjectStreamClass)>
Counter value: 1
SCC 6193 : 1
<java.lang.invoke.InsertHandle: void <init>(java.lang.invoke.InsertHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 6194 : 1
<sun.net.www.protocol.http.HttpURLConnection$6: java.lang.Void run()>
Counter value: 1
SCC 6195 : 1
<java.util.stream.DistinctOps$1$2: void accept(java.lang.Object)>
Counter value: 2
SCC 6196 : 1
<java.util.IdentityHashMap$IdentityHashMapSpliterator: int getFence()>
Counter value: 1
SCC 6197 : 1
<java.util.regex.Matcher: boolean lookingAt()>
Counter value: 1
SCC 6198 : 1
<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>
Counter value: 1
SCC 6199 : 1
<sun.security.x509.CRLReasonCodeExtension: java.lang.String toString()>
Counter value: 1
SCC 6200 : 1
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 6201 : 1
<java.time.OffsetTime: int compareTo(java.time.OffsetTime)>
Counter value: 1
SCC 6202 : 1
<java.time.zone.ZoneOffsetTransition: java.time.LocalDateTime getDateTimeBefore()>
Counter value: 1
SCC 6203 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl plusHours(long)>
Counter value: 1
SCC 6204 : 1
<java.util.stream.DoublePipeline$1$1: void accept(double)>
Counter value: 2
SCC 6205 : 1
<java.lang.reflect.Constructor: void specificToStringHeader(java.lang.StringBuilder)>
Counter value: 1
SCC 6206 : 1
<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.HttpURLConnection$TunnelState tunnelState()>
Counter value: 1
SCC 6207 : 1
<java.net.SocksSocketImpl: java.net.Socket access$502(java.net.SocksSocketImpl,java.net.Socket)>
Counter value: 1
SCC 6208 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor: void shutdown()>
Counter value: 1
SCC 6209 : 1
<java.util.stream.ForEachOps$ForEachOp$OfInt: java.util.stream.StreamShape inputShape()>
Counter value: 1
SCC 6210 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: java.net.InetAddress access$500(java.net.InetSocketAddress$InetSocketAddressHolder)>
Counter value: 1
SCC 6211 : 1
<java.util.stream.StreamOpFlag: int getMask(int)>
Counter value: 1
SCC 6212 : 1
<sun.security.jca.ProviderList$ServiceList: boolean isEmpty()>
Counter value: 1
SCC 6213 : 1
<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6214 : 1
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6215 : 1
<java.io.ObjectOutputStream$1: java.lang.Object run()>
Counter value: 1
SCC 6216 : 1
<java.util.stream.Streams$RangeIntSpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 6217 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate readExternal(java.io.DataInput)>
Counter value: 1
SCC 6218 : 1
<javax.security.auth.SubjectDomainCombiner$3: void <init>(javax.security.auth.SubjectDomainCombiner,javax.security.auth.Subject,java.security.CodeSource)>
Counter value: 1
SCC 6219 : 1
<java.security.Policy$UnsupportedEmptyCollection: java.util.Enumeration elements()>
Counter value: 1
SCC 6220 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 6221 : 1
<java.nio.DirectCharBufferU: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 6222 : 1
<java.util.Collections$SynchronizedList: int hashCode()>
Counter value: 2
SCC 6223 : 1
<java.util.stream.AbstractPipeline: int getStreamAndOpFlags()>
Counter value: 1
SCC 6224 : 1
<java.util.Random$RandomLongsSpliterator: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 6225 : 1
<java.io.ClassByNameCache$FutureValue: java.lang.Class get()>
Counter value: 1
SCC 6226 : 1
<java.lang.invoke.CacheKey: int hashCode()>
Counter value: 1
SCC 6227 : 1
<java.time.chrono.MinguoDate: long getProlepticMonth()>
Counter value: 1
SCC 6228 : 1
<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type getRawType()>
Counter value: 1
SCC 6229 : 1
<sun.net.www.http.PosterOutputStream: void close()>
Counter value: 1
SCC 6230 : 1
<java.io.ObjectInputStream$GetClassCachingSettingAction: void <init>()>
Counter value: 1
SCC 6231 : 1
<java.util.IdentityHashMap$EntrySpliterator: int characteristics()>
Counter value: 1
SCC 6232 : 1
<java.util.concurrent.ThreadLocalRandom: int nextInt()>
Counter value: 1
SCC 6233 : 1
<java.lang.invoke.MethodHandleImpl$4: java.lang.invoke.MethodHandle[] computeValue(java.lang.Class)>
Counter value: 1
SCC 6234 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>
Counter value: 2
SCC 6235 : 1
<java.nio.Buffer: java.nio.Buffer rewind()>
Counter value: 1
SCC 6236 : 1
<sun.nio.ch.DatagramSocketAdaptor: boolean isClosed()>
Counter value: 1
SCC 6237 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator: java.util.Spliterator get()>
Counter value: 1
SCC 6238 : 1
<java.util.Collections$EmptyListIterator: void add(java.lang.Object)>
Counter value: 1
SCC 6239 : 1
<java.util.Collections$ReverseComparator2: int compare(java.lang.Object,java.lang.Object)>
Counter value: 2
SCC 6240 : 1
<java.util.SubList$1: int nextIndex()>
Counter value: 2
SCC 6241 : 1
<java.util.stream.Node: int getChildCount()>
Counter value: 1
SCC 6242 : 1
<java.util.stream.Nodes$CollectorTask$OfInt$init__89: java.lang.Object apply(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6243 : 1
<java.util.Formatter: void close()>
Counter value: 2
SCC 6244 : 1
<java.nio.DirectCharBufferS: char get(int)>
Counter value: 1
SCC 6245 : 1
<java.text.MessageFormat: java.lang.Object clone()>
Counter value: 2
SCC 6246 : 1
<sun.nio.ch.KQueueArrayWrapper: void interrupt()>
Counter value: 1
SCC 6247 : 1
<java.util.Collections: java.util.Spliterator singletonSpliterator(java.lang.Object)>
Counter value: 1
SCC 6248 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 6249 : 1
<java.util.stream.Tripwire: void trip(java.lang.Class,java.lang.String)>
Counter value: 1
SCC 6250 : 1
<java.util.stream.ReferencePipeline$2$1: void <init>(java.util.stream.ReferencePipeline$2,java.util.stream.Sink)>
Counter value: 1
SCC 6251 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: java.lang.String getDisplayName(java.lang.String,boolean,int,java.util.Locale)>
Counter value: 2
SCC 6252 : 1
<sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator: java.nio.file.Path readNextEntry()>
Counter value: 1
SCC 6253 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToLongTask: java.lang.Long getRawResult()>
Counter value: 1
SCC 6254 : 1
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object pollFirst()>
Counter value: 1
SCC 6255 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 6256 : 1
<java.nio.DirectByteBuffer: java.nio.ByteBuffer slice()>
Counter value: 1
SCC 6257 : 1
<java.util.HashMap$KeySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 6258 : 1
<java.util.stream.Nodes: java.util.stream.Node$OfInt collectInt(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>
Counter value: 1
SCC 6259 : 1
<sun.security.x509.X400Address: int getType()>
Counter value: 1
SCC 6260 : 1
<java.util.Spliterators$EmptySpliterator$OfLong: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 6261 : 1
<java.util.stream.SortedOps$SizedIntSortingSink: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 6262 : 1
<java.util.Collections$SynchronizedList: void <init>(java.util.List,java.lang.Object)>
Counter value: 1
SCC 6263 : 1
<sun.nio.ch.Util$3: boolean containsAll(java.util.Collection)>
Counter value: 2
SCC 6264 : 1
<sun.nio.ch.Net: void setSocketOption(java.io.FileDescriptor,java.net.ProtocolFamily,java.net.SocketOption,java.lang.Object)>
Counter value: 1
SCC 6265 : 1
<java.util.concurrent.ThreadLocalRandom: int nextInt(int)>
Counter value: 1
SCC 6266 : 1
<java.util.stream.Nodes$ArrayNode: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 6267 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl of(java.time.chrono.ChronoLocalDate,java.time.LocalTime)>
Counter value: 1
SCC 6268 : 1
<java.io.DataOutputStream: void write(byte[],int,int)>
Counter value: 2
SCC 6269 : 1
<java.time.format.DateTimePrintContext$1: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 2
SCC 6270 : 1
<sun.misc.ProxyGenerator$PrimitiveTypeInfo: void <init>(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 6271 : 1
<java.lang.invoke.MethodHandle: java.lang.Class getSpecialCaller()>
Counter value: 1
SCC 6272 : 1
<sun.util.locale.provider.TimeZoneNameProviderImpl: java.lang.String[] getDisplayNameArray(java.lang.String,java.util.Locale)>
Counter value: 1
SCC 6273 : 1
<java.io.ObjectStreamClass: boolean isEnum()>
Counter value: 1
SCC 6274 : 1
<java.net.HttpConnectSocketImpl$2: java.lang.Object run()>
Counter value: 1
SCC 6275 : 1
<java.util.Spliterators$IntArraySpliterator: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 6276 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.io.OutputStream getOutputStream()>
Counter value: 1
SCC 6277 : 1
<java.lang.reflect.Parameter: int getModifiers()>
Counter value: 1
SCC 6278 : 1
<sun.misc.ProxyGenerator: void access$1800(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>
Counter value: 1
SCC 6279 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToLongTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 6280 : 1
<javax.security.auth.Policy$1: java.lang.Object run()>
Counter value: 1
SCC 6281 : 1
<sun.security.x509.ReasonFlags: java.lang.String toString()>
Counter value: 1
SCC 6282 : 1
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 6283 : 1
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getQualifiedFieldName()>
Counter value: 1
SCC 6284 : 1
<java.util.ArraysParallelSortHelpers$FJFloat$Merger: void compute()>
Counter value: 1
SCC 6285 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfInt: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 6286 : 1
<java.util.Spliterators: java.util.Spliterator$OfInt spliterator(int[],int,int,int)>
Counter value: 1
SCC 6287 : 1
<java.util.Calendar: void clear(int)>
Counter value: 1
SCC 6288 : 1
<sun.nio.ch.SocketAdaptor: boolean isConnected()>
Counter value: 1
SCC 6289 : 1
<javax.security.auth.Subject$SecureSet$4: java.lang.Object run()>
Counter value: 1
SCC 6290 : 1
<sun.net.www.http.ChunkedOutputStream: void <clinit>()>
Counter value: 1
SCC 6291 : 1
<java.lang.invoke.ConvertHandle$FilterHelpers: java.lang.invoke.MethodHandle getReturnFilter(java.lang.Class,java.lang.Class,boolean)>
Counter value: 1
SCC 6292 : 1
<java.util.Collections$UnmodifiableSortedMap: java.util.Comparator comparator()>
Counter value: 2
SCC 6293 : 1
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDate plusMonths(long)>
Counter value: 1
SCC 6294 : 1
<java.lang.ClassValue: java.lang.ClassValue$Entry makeEntry(java.lang.ClassValue$Version,java.lang.Object)>
Counter value: 1
SCC 6295 : 1
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>
Counter value: 1
SCC 6296 : 1
<java.util.Arrays: void parallelSort(java.lang.Object[],java.util.Comparator)>
Counter value: 1
SCC 6297 : 1
<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore$ProtectionParameter access$100(java.security.KeyStore$Builder$FileBuilder)>
Counter value: 1
SCC 6298 : 1
<java.time.chrono.JapaneseDate: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6299 : 1
<java.util.concurrent.TimeUnit$5: long toHours(long)>
Counter value: 1
SCC 6300 : 1
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 6301 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 6302 : 1
<java.util.stream.AbstractPipeline: java.util.stream.Node evaluate(java.util.Spliterator,boolean,java.util.function.IntFunction)>
Counter value: 1
SCC 6303 : 1
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
Counter value: 1
SCC 6304 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 6305 : 1
<java.io.Console$2: void <init>()>
Counter value: 1
SCC 6306 : 1
<java.util.concurrent.ConcurrentHashMap$EntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 6307 : 1
<java.time.MonthDay: int compareTo(java.lang.Object)>
Counter value: 1
SCC 6308 : 1
<sun.net.www.http.HttpCaptureInputStream: int read()>
Counter value: 1
SCC 6309 : 1
<java.util.stream.LongPipeline: java.util.Spliterator wrap(java.util.stream.PipelineHelper,java.util.function.Supplier,boolean)>
Counter value: 1
SCC 6310 : 1
<java.time.chrono.AbstractChronology: boolean initCache()>
Counter value: 1
SCC 6311 : 1
<java.time.ZoneOffset: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 6312 : 1
<java.io.ClassByNameCache: java.lang.Class get(java.lang.String,java.lang.ClassLoader)>
Counter value: 1
SCC 6313 : 1
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 6314 : 1
<java.util.EnumMap$1: java.lang.String toString()>
Counter value: 1
SCC 6315 : 1
<sun.net.www.MessageHeader: java.lang.String[] access$100(sun.net.www.MessageHeader)>
Counter value: 1
SCC 6316 : 1
<java.time.YearMonth: int compareTo(java.lang.Object)>
Counter value: 1
SCC 6317 : 1
<sun.net.www.protocol.http.HttpURLConnection: void <clinit>()>
Counter value: 1
SCC 6318 : 1
<java.time.MonthDay: java.time.MonthDay of(java.time.Month,int)>
Counter value: 1
SCC 6319 : 1
<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: void write(java.io.DataOutputStream)>
Counter value: 1
SCC 6320 : 1
<java.util.jar.JarVerifier$3: boolean hasMoreElements()>
Counter value: 1
SCC 6321 : 1
<java.io.ObjectInputStream: java.lang.Object readObjectOverride()>
Counter value: 1
SCC 6322 : 1
<java.time.Year: java.lang.String toString()>
Counter value: 1
SCC 6323 : 1
<java.text.PatternEntry: void appendQuotedChars(java.lang.StringBuffer)>
Counter value: 1
SCC 6324 : 1
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 6325 : 1
<java.util.ArraysParallelSortHelpers$FJByte$Merger: void compute()>
Counter value: 1
SCC 6326 : 1
<java.nio.DirectCharBufferU: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 6327 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap access$100(java.util.concurrent.ConcurrentSkipListMap$SubMap)>
Counter value: 1
SCC 6328 : 1
<javax.crypto.NullCipherSpi: int engineGetKeySize(java.security.Key)>
Counter value: 1
SCC 6329 : 1
<java.lang.invoke.BruteArgumentMoverHandle: java.lang.Object[] infoAffectingThunks(java.lang.invoke.MethodHandle,int[],java.lang.Object[])>
Counter value: 1
SCC 6330 : 1
<java.util.concurrent.CountDownLatch: java.lang.String toString()>
Counter value: 1
SCC 6331 : 1
<java.util.stream.Nodes$SpinedNodeBuilder: java.util.stream.Node build()>
Counter value: 1
SCC 6332 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel: java.lang.Object access$000(java.nio.channels.spi.AbstractInterruptibleChannel)>
Counter value: 1
SCC 6333 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 6334 : 1
<sun.net.www.http.KeepAliveKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6335 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceMappingsTask,java.util.function.BiFunction,java.util.function.BiFunction)>
Counter value: 1
SCC 6336 : 1
<sun.misc.Cleaner: void clean()>
Counter value: 1
SCC 6337 : 1
<java.util.SimpleTimeZone: java.lang.Object clone()>
Counter value: 1
SCC 6338 : 1
<sun.net.www.http.HttpClient: boolean isKeepingAlive()>
Counter value: 1
SCC 6339 : 1
<java.time.Instant: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 6340 : 1
<sun.security.util.KnownOIDs: java.lang.String stdName()>
Counter value: 1
SCC 6341 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl plusDays(long)>
Counter value: 1
SCC 6342 : 1
<java.util.LinkedHashMap$LinkedValues: boolean contains(java.lang.Object)>
Counter value: 1
SCC 6343 : 1
<java.util.stream.LongPipeline$2: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 6344 : 1
<java.time.Period: java.time.Period of(int,int,int)>
Counter value: 1
SCC 6345 : 1
<java.util.Spliterators$DoubleArraySpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 6346 : 1
<java.util.IntSummaryStatistics: java.lang.String toString()>
Counter value: 1
SCC 6347 : 1
<java.time.Period: java.time.Period readExternal(java.io.DataInput)>
Counter value: 1
SCC 6348 : 1
<java.lang.invoke.CollectHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 6349 : 1
<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void close()>
Counter value: 1
SCC 6350 : 1
<java.io.ClassByNameCache$CacheKey: java.lang.Object getLoaderObj()>
Counter value: 1
SCC 6351 : 1
<java.util.stream.Nodes$DoubleArrayNode: void copyInto(java.lang.Object,int)>
Counter value: 1
SCC 6352 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.String getMethodName()>
Counter value: 2
SCC 6353 : 1
<java.util.concurrent.ForkJoinPool: void signalWork(java.util.concurrent.ForkJoinPool$WorkQueue[],java.util.concurrent.ForkJoinPool$WorkQueue)>
Counter value: 1
SCC 6354 : 1
<sun.net.www.URLConnection: void setContentType(java.lang.String)>
Counter value: 1
SCC 6355 : 1
<java.io.ClassByNameCache: void setCanonicalSystemLoaderRef(java.lang.ClassLoader)>
Counter value: 1
SCC 6356 : 1
<java.time.chrono.JapaneseDate: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 6357 : 1
<java.util.stream.ReferencePipeline$2$1: void accept(java.lang.Object)>
Counter value: 2
SCC 6358 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$1: java.util.Map$Entry next()>
Counter value: 1
SCC 6359 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator: int characteristics()>
Counter value: 2
SCC 6360 : 1
<java.util.SubList$1: boolean hasNext()>
Counter value: 1
SCC 6361 : 1
<sun.net.www.protocol.http.HttpURLConnection$8: void <init>(sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 6362 : 1
<sun.net.www.MessageHeader: void set(int,java.lang.String,java.lang.String)>
Counter value: 1
SCC 6363 : 1
<java.util.DoubleSummaryStatistics: void accept(double)>
Counter value: 1
SCC 6364 : 1
<java.util.concurrent.ConcurrentSkipListMap$Node: void helpDelete(java.util.concurrent.ConcurrentSkipListMap$Node,java.util.concurrent.ConcurrentSkipListMap$Node)>
Counter value: 1
SCC 6365 : 1
<java.net.SocksSocketImpl: void superConnectServer(java.lang.String,int,int)>
Counter value: 1
SCC 6366 : 1
<java.util.stream.IntPipeline$5$1: void accept(int)>
Counter value: 1
SCC 6367 : 1
<java.util.concurrent.ForkJoinTask$RunnableExecuteAction: java.lang.Object getRawResult()>
Counter value: 1
SCC 6368 : 1
<sun.net.www.http.HttpCaptureOutputStream: void <init>(java.io.OutputStream,sun.net.www.http.HttpCapture)>
Counter value: 1
SCC 6369 : 1
<sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
Counter value: 1
SCC 6370 : 1
<sun.net.www.http.KeepAliveStream: void <clinit>()>
Counter value: 1
SCC 6371 : 1
<java.nio.DoubleBuffer: int hashCode()>
Counter value: 1
SCC 6372 : 1
<java.util.stream.AbstractTask: void setLocalResult(java.lang.Object)>
Counter value: 1
SCC 6373 : 1
<java.util.stream.Nodes$CollectorTask$OfDouble: java.lang.Object doLeaf()>
Counter value: 1
SCC 6374 : 1
<java.nio.channels.FileChannel: void <clinit>()>
Counter value: 1
SCC 6375 : 1
<java.net.Socket$3: void <init>(java.net.Socket)>
Counter value: 1
SCC 6376 : 1
<java.util.stream.ReferencePipeline$Head: boolean opIsStateful()>
Counter value: 1
SCC 6377 : 1
<sun.nio.ch.SocketAdaptor: java.io.OutputStream getOutputStream()>
Counter value: 1
SCC 6378 : 1
<java.util.stream.FindOps$FindSink: void accept(java.lang.Object)>
Counter value: 1
SCC 6379 : 1
<java.util.stream.IntPipeline$StatelessOp: java.util.Spliterator lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 6380 : 1
<sun.reflect.ClassFileAssembler: void opc_f2d()>
Counter value: 1
SCC 6381 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.ValueRange rangeByWeek(java.time.temporal.TemporalAccessor,java.time.temporal.TemporalField)>
Counter value: 1
SCC 6382 : 1
<java.net.HttpCookie: void setDiscard(boolean)>
Counter value: 1
SCC 6383 : 1
<java.net.SocksSocketImpl$5: java.net.ProxySelector run()>
Counter value: 1
SCC 6384 : 1
<java.nio.Buffer: int checkIndex(int,int)>
Counter value: 1
SCC 6385 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator$lambda_initPartialTraversalState_0__41: void <init>(java.util.stream.StreamSpliterators$WrappingSpliterator)>
Counter value: 1
SCC 6386 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfInt: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 6387 : 1
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 6388 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.ChronoLocalDate plusYears(long)>
Counter value: 1
SCC 6389 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachValueTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.Consumer)>
Counter value: 1
SCC 6390 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToIntTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToIntTask,java.util.function.ToIntBiFunction,int,java.util.function.IntBinaryOperator)>
Counter value: 1
SCC 6391 : 1
<sun.nio.fs.UnixFileSystem$FileStoreIterator: void remove()>
Counter value: 1
SCC 6392 : 1
<java.util.stream.SliceOps: void <clinit>()>
Counter value: 1
SCC 6393 : 1
<sun.nio.fs.UnixPath: void <init>(sun.nio.fs.UnixFileSystem,byte[])>
Counter value: 1
SCC 6394 : 1
<sun.text.CompactByteArray: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6395 : 1
<java.io.DataOutputStream: void writeByte(int)>
Counter value: 1
SCC 6396 : 1
<java.util.ArrayList: java.util.Spliterator spliterator()>
Counter value: 1
SCC 6397 : 1
<java.util.stream.Nodes$IntArrayNode: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 6398 : 1
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>
Counter value: 2
SCC 6399 : 1
<java.util.Scanner: java.lang.Readable makeReadable(java.nio.channels.ReadableByteChannel,java.nio.charset.CharsetDecoder)>
Counter value: 1
SCC 6400 : 1
<sun.reflect.AccessorGenerator: boolean canWidenTo(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 6401 : 1
<java.util.regex.Pattern$1MatcherIterator: boolean hasNext()>
Counter value: 1
SCC 6402 : 1
<java.util.stream.AbstractPipeline: boolean isParallel()>
Counter value: 1
SCC 6403 : 1
<sun.net.www.http.HttpClient: java.io.InputStream getInputStream()>
Counter value: 1
SCC 6404 : 1
<java.util.stream.LongPipeline$Head: java.util.Spliterator lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 6405 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: int size()>
Counter value: 1
SCC 6406 : 1
<java.util.Collections$CopiesList: java.util.Spliterator spliterator()>
Counter value: 1
SCC 6407 : 1
<java.net.SocketOutputStream: void write(byte[],int,int)>
Counter value: 1
SCC 6408 : 1
<java.time.Year: int get(java.time.temporal.TemporalField)>
Counter value: 1
SCC 6409 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachEntryTask: void compute()>
Counter value: 1
SCC 6410 : 1
<java.util.Collections$UnmodifiableList$1: void set(java.lang.Object)>
Counter value: 1
SCC 6411 : 1
<sun.security.util.ByteArrayTagOrder: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6412 : 1
<java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>
Counter value: 1
SCC 6413 : 1
<java.util.stream.Nodes$CollectorTask$OfDouble: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 6414 : 1
<java.lang.ProcessBuilder$Redirect$5: boolean append()>
Counter value: 1
SCC 6415 : 1
<sun.nio.fs.UnixPath: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6416 : 1
<java.time.OffsetDateTime: java.time.OffsetDateTime readExternal(java.io.ObjectInput)>
Counter value: 1
SCC 6417 : 1
<java.lang.invoke.ConvertHandle$FilterHelpers: java.lang.invoke.MethodHandle getUnboxingReturnFilter(java.lang.invoke.MethodType,boolean)>
Counter value: 1
SCC 6418 : 1
<java.util.stream.Nodes$InternalNodeSpliterator: boolean initTryAdvance()>
Counter value: 1
SCC 6419 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: java.lang.String getCachedHA1()>
Counter value: 1
SCC 6420 : 1
<sun.net.www.protocol.http.AuthenticationInfo: boolean useAuthCache()>
Counter value: 1
SCC 6421 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator$lambda_initPartialTraversalState_0__43: void <init>(java.util.stream.StreamSpliterators$LongWrappingSpliterator)>
Counter value: 1
SCC 6422 : 1
<java.io.ObjectStreamClass: java.lang.Class forClass()>
Counter value: 1
SCC 6423 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator: void <init>(java.util.Spliterator,java.util.concurrent.ConcurrentHashMap)>
Counter value: 1
SCC 6424 : 1
<java.util.Vector: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 6425 : 1
<java.util.Vector$VectorSpliterator: long estimateSize()>
Counter value: 1
SCC 6426 : 1
<sun.util.locale.provider.CalendarDataProviderImpl: int getMinimalDaysInFirstWeek(java.util.Locale)>
Counter value: 1
SCC 6427 : 1
<java.util.stream.Streams$RangeIntSpliterator: int characteristics()>
Counter value: 1
SCC 6428 : 1
<java.util.stream.TerminalOp: int getOpFlags()>
Counter value: 1
SCC 6429 : 1
<java.util.stream.Nodes$ConcNode$OfPrimitive: void <init>(java.util.stream.Node$OfPrimitive,java.util.stream.Node$OfPrimitive)>
Counter value: 1
SCC 6430 : 1
<java.util.stream.Nodes$LongFixedNodeBuilder: void accept(long)>
Counter value: 1
SCC 6431 : 1
<sun.util.logging.PlatformLogger$JavaLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 6432 : 1
<sun.util.logging.PlatformLogger: void info(java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 6433 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getRequestURI()>
Counter value: 1
SCC 6434 : 1
<java.nio.ByteBufferAsCharBufferRL: boolean isReadOnly()>
Counter value: 1
SCC 6435 : 1
<java.nio.DirectCharBufferU: java.nio.CharBuffer put(java.nio.CharBuffer)>
Counter value: 1
SCC 6436 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 6437 : 1
<java.util.concurrent.atomic.AtomicInteger: long longValue()>
Counter value: 1
SCC 6438 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: java.lang.String toString()>
Counter value: 1
SCC 6439 : 1
<java.util.concurrent.Executors$PrivilegedThreadFactory$1$1: void <init>(java.util.concurrent.Executors$PrivilegedThreadFactory$1)>
Counter value: 1
SCC 6440 : 1
<java.util.stream.ForEachOps$ForEachTask: void compute()>
Counter value: 1
SCC 6441 : 1
<java.util.stream.DoublePipeline$5$1$accept__69: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 6442 : 1
<sun.net.www.http.HttpCapture: void <init>(java.io.File,java.net.URL)>
Counter value: 1
SCC 6443 : 1
<java.net.URLConnection: boolean checkfpx(java.io.InputStream)>
Counter value: 1
SCC 6444 : 1
<java.time.chrono.HijrahDate: java.time.chrono.Chronology getChronology()>
Counter value: 1
SCC 6445 : 1
<java.util.stream.ForEachOps$ForEachOp$OfDouble: java.lang.Object evaluateSequential(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 6446 : 1
<java.util.stream.IntPipeline$7$1$accept__71: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 6447 : 1
<java.math.BigDecimal: java.lang.String layoutChars(boolean)>
Counter value: 1
SCC 6448 : 1
<java.util.concurrent.ForkJoinPool: boolean createWorker()>
Counter value: 1
SCC 6449 : 1
<java.util.TreeMap$Values: java.util.Spliterator spliterator()>
Counter value: 1
SCC 6450 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: java.util.concurrent.RunnableScheduledFuture peek()>
Counter value: 1
SCC 6451 : 1
<java.io.ObjectStreamClass$ClassDataSlot: void <init>(java.io.ObjectStreamClass,boolean)>
Counter value: 1
SCC 6452 : 1
<java.time.LocalDate: java.time.chrono.ChronoLocalDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 6453 : 1
<java.util.SubList: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 6454 : 1
<java.util.Random$RandomDoublesSpliterator: long estimateSize()>
Counter value: 1
SCC 6455 : 1
<sun.net.www.http.ChunkedInputStream: void ensureRawAvailable(int)>
Counter value: 1
SCC 6456 : 1
<java.util.jar.Manifest$FastInputStream: int read()>
Counter value: 1
SCC 6457 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.NavigableSet navigableKeySet()>
Counter value: 1
SCC 6458 : 1
<java.util.stream.AbstractSpinedBuffer: int chunkSize(int)>
Counter value: 1
SCC 6459 : 1
<java.util.ArrayDeque: boolean access$200(java.util.ArrayDeque,int)>
Counter value: 1
SCC 6460 : 1
<java.util.stream.SliceOps$2$1: void begin(long)>
Counter value: 2
SCC 6461 : 1
<java.nio.channels.Channels$1: void write(int)>
Counter value: 1
SCC 6462 : 1
<java.time.chrono.ThaiBuddhistChronology: java.time.chrono.ThaiBuddhistDate date(int,int,int)>
Counter value: 1
SCC 6463 : 1
<java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
Counter value: 1
SCC 6464 : 1
<java.util.Collections$SynchronizedMap: void clear()>
Counter value: 2
SCC 6465 : 1
<sun.nio.ch.DefaultSelectorProvider: java.nio.channels.spi.SelectorProvider create()>
Counter value: 1
SCC 6466 : 1
<sun.invoke.util.Wrapper: boolean isConvertibleFrom(sun.invoke.util.Wrapper)>
Counter value: 1
SCC 6467 : 1
<java.util.HashMap$Values: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 6468 : 1
<sun.security.x509.CertificatePolicyMap: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 6469 : 1
<java.util.concurrent.ForkJoinWorkerThread: void afterTopLevelExec()>
Counter value: 1
SCC 6470 : 1
<java.util.Arrays: int hashCode(short[])>
Counter value: 1
SCC 6471 : 1
<java.util.Collections$CheckedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Counter value: 2
SCC 6472 : 1
<javax.security.auth.Subject$SecureSet$6: java.lang.Object run()>
Counter value: 1
SCC 6473 : 1
<java.util.ResourceBundle$BundleReference: java.util.ResourceBundle$CacheKey getCacheKey()>
Counter value: 1
SCC 6474 : 1
<sun.reflect.BootstrapConstructorAccessorImpl: void <init>(java.lang.reflect.Constructor)>
Counter value: 1
SCC 6475 : 1
<java.util.TreeMap$KeySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 6476 : 1
<java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
Counter value: 1
SCC 6477 : 1
<sun.net.NetworkClient$1: java.lang.Object run()>
Counter value: 1
SCC 6478 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator: int characteristics()>
Counter value: 1
SCC 6479 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.Class getSpecialCaller()>
Counter value: 2
SCC 6480 : 1
<java.lang.reflect.Constructor: byte[] getRawParameterAnnotations()>
Counter value: 1
SCC 6481 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: void end()>
Counter value: 1
SCC 6482 : 1
<java.time.LocalDateTime: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 6483 : 1
<java.io.ObjectInputStream$readString__63: void <init>()>
Counter value: 1
SCC 6484 : 1
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 6485 : 1
<sun.security.x509.URIName: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 6486 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: void <init>(java.util.Spliterator$OfInt,long,long)>
Counter value: 1
SCC 6487 : 1
<java.lang.ProcessEnvironment$StringValues: java.util.Collection access$700(java.lang.ProcessEnvironment$StringValues)>
Counter value: 1
SCC 6488 : 1
<java.util.Scanner: java.lang.Object next()>
Counter value: 1
SCC 6489 : 1
<java.net.NetworkInterface: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6490 : 1
<java.util.Vector$ListItr: int previousIndex()>
Counter value: 1
SCC 6491 : 1
<java.time.Month: int getValue()>
Counter value: 1
SCC 6492 : 1
<java.util.Collections$SynchronizedSortedSet: java.util.Comparator comparator()>
Counter value: 2
SCC 6493 : 1
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 6494 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath toAbsolutePath()>
Counter value: 1
SCC 6495 : 1
<java.nio.DirectLongBufferS: long address()>
Counter value: 1
SCC 6496 : 1
<sun.invoke.util.Wrapper$Format: int signed(int)>
Counter value: 1
SCC 6497 : 1
<java.net.InetAddressContainer: void <init>()>
Counter value: 1
SCC 6498 : 1
<java.lang.reflect.Method: sun.reflect.generics.factory.GenericsFactory getFactory()>
Counter value: 1
SCC 6499 : 1
<java.util.Spliterators$AbstractIntSpliterator$HoldingIntConsumer: void accept(int)>
Counter value: 1
SCC 6500 : 1
<sun.util.resources.ParallelListResourceBundle$KeySet: int size()>
Counter value: 2
SCC 6501 : 1
<java.util.OptionalInt: void <init>(int)>
Counter value: 1
SCC 6502 : 1
<java.util.Collections$UnmodifiableMap: java.util.Collection values()>
Counter value: 2
SCC 6503 : 1
<java.nio.file.DirectoryIteratorException: void <init>(java.io.IOException)>
Counter value: 1
SCC 6504 : 1
<java.util.ArraysParallelSortHelpers$FJShort$Sorter: void compute()>
Counter value: 1
SCC 6505 : 1
<java.util.jar.JarVerifier: boolean isSigningRelated(java.lang.String)>
Counter value: 1
SCC 6506 : 1
<java.time.Year: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 6507 : 1
<sun.nio.fs.UnixFileKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6508 : 1
<java.lang.invoke.ProxyClassesDumper$1: java.lang.Void run()>
Counter value: 1
SCC 6509 : 1
<java.util.Collections$CheckedCollection: java.util.stream.Stream stream()>
Counter value: 2
SCC 6510 : 1
<java.util.stream.SpinedBuffer$OfLong$1Splitr: void <init>(java.util.stream.SpinedBuffer$OfLong,int,int,int,int)>
Counter value: 1
SCC 6511 : 1
<sun.reflect.UnsafeCharacterFieldAccessorImpl: char getChar(java.lang.Object)>
Counter value: 1
SCC 6512 : 1
<java.time.chrono.ThaiBuddhistDate: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 6513 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfDouble: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 6514 : 1
<java.net.URLPermission$Authority: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 6515 : 1
<java.util.concurrent.ThreadLocalRandom$RandomIntsSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 6516 : 1
<java.time.chrono.JapaneseChronology: java.time.chrono.JapaneseDate date(int,int,int)>
Counter value: 1
SCC 6517 : 1
<sun.util.PreHashedMap$2$1: void remove()>
Counter value: 1
SCC 6518 : 1
<java.lang.invoke.DirectHandle: void <init>(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,byte,java.lang.Class,boolean)>
Counter value: 1
SCC 6519 : 1
<java.util.IdentityHashMap$EntryIterator$Entry: void <init>(java.util.IdentityHashMap$EntryIterator,int,java.util.IdentityHashMap$1)>
Counter value: 1
SCC 6520 : 1
<sun.reflect.UnsafeCharacterFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 6521 : 1
<java.nio.ByteBuffer: int hashCode()>
Counter value: 1
SCC 6522 : 1
<java.util.EnumMap$EntrySet: int size()>
Counter value: 1
SCC 6523 : 1
<sun.net.www.MimeEntry: java.lang.Object clone()>
Counter value: 1
SCC 6524 : 1
<java.lang.invoke.MethodHandleImpl$4: java.lang.Object computeValue(java.lang.Class)>
Counter value: 1
SCC 6525 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: void <init>()>
Counter value: 1
SCC 6526 : 1
<java.util.TreeMap$KeySet: void clear()>
Counter value: 1
SCC 6527 : 1
<java.util.Spliterators$IteratorSpliterator: int characteristics()>
Counter value: 1
SCC 6528 : 1
<sun.security.x509.IssuingDistributionPointExtension: java.lang.String getName()>
Counter value: 1
SCC 6529 : 1
<javax.security.auth.Subject$SecureSet$6: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>
Counter value: 1
SCC 6530 : 1
<java.util.stream.ForEachOps$ForEachOrderedTask$lambda_doCompute_0__86: java.util.function.IntFunction bootstrap$()>
Counter value: 1
SCC 6531 : 1
<java.util.LinkedList: void clear()>
Counter value: 1
SCC 6532 : 1
<java.util.stream.FindOps$FindSink$OfRef: java.lang.Object get()>
Counter value: 1
SCC 6533 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6534 : 1
<sun.nio.ch.SocketAdaptor: void connect(java.net.SocketAddress)>
Counter value: 1
SCC 6535 : 1
<java.util.concurrent.ThreadLocalRandom$RandomLongsSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 6536 : 1
<java.util.IdentityHashMap$EntrySet: void clear()>
Counter value: 1
SCC 6537 : 1
<java.util.stream.Nodes$CollectionNode: java.lang.Object[] asArray(java.util.function.IntFunction)>
Counter value: 1
SCC 6538 : 1
<java.io.ClassByNameCache$Reaper: void processStaleRef(java.io.ClassByNameCache$LoaderRef)>
Counter value: 1
SCC 6539 : 1
<java.lang.invoke.ConstantIntHandle: void <init>(java.lang.invoke.ConstantIntHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 6540 : 1
<java.nio.ByteBufferAsLongBufferRL: java.nio.LongBuffer put(int,long)>
Counter value: 1
SCC 6541 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: java.lang.String getOpaque()>
Counter value: 1
SCC 6542 : 1
<java.util.stream.SpinedBuffer$OfDouble: void <init>(int)>
Counter value: 1
SCC 6543 : 1
<java.lang.ProcessBuilder$Redirect$3: java.lang.String toString()>
Counter value: 1
SCC 6544 : 1
<java.util.WeakHashMap: void putAll(java.util.Map)>
Counter value: 1
SCC 6545 : 1
<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>
Counter value: 1
SCC 6546 : 1
<java.util.TreeMap: java.util.TreeMap$Entry getHigherEntry(java.lang.Object)>
Counter value: 1
SCC 6547 : 1
<java.util.IdentityHashMap$EntryIterator$Entry: int access$400(java.util.IdentityHashMap$EntryIterator$Entry)>
Counter value: 1
SCC 6548 : 1
<java.time.chrono.JapaneseDate: sun.util.calendar.LocalGregorianCalendar$Date toPrivateJapaneseDate(java.time.LocalDate)>
Counter value: 1
SCC 6549 : 1
<java.util.ArrayPrefixHelpers$LongCumulateTask: void compute()>
Counter value: 1
SCC 6550 : 1
<java.util.stream.Nodes$IntArrayNode: java.util.Spliterator$OfInt spliterator()>
Counter value: 1
SCC 6551 : 1
<sun.nio.ch.Util: boolean access$300(java.nio.ByteBuffer)>
Counter value: 1
SCC 6552 : 1
<sun.net.www.protocol.http.HttpURLConnection: int access$600()>
Counter value: 1
SCC 6553 : 1
<java.util.Collections$2: void <init>(java.lang.Object)>
Counter value: 1
SCC 6554 : 1
<java.time.format.DateTimeFormatter: java.lang.String toString()>
Counter value: 1
SCC 6555 : 1
<java.util.concurrent.CountedCompleter: void addToPendingCount(int)>
Counter value: 1
SCC 6556 : 1
<java.time.format.DecimalStyle: int hashCode()>
Counter value: 1
SCC 6557 : 1
<java.util.concurrent.ForkJoinTask$RunnableExecuteAction: void internalPropagateException(java.lang.Throwable)>
Counter value: 1
SCC 6558 : 1
<java.io.PrintStream: void setError()>
Counter value: 1
SCC 6559 : 1
<sun.net.NetProperties$1: void <init>()>
Counter value: 1
SCC 6560 : 1
<java.util.stream.Nodes: java.util.stream.Node$Builder$OfInt intBuilder()>
Counter value: 1
SCC 6561 : 1
<java.lang.Short: int hashCode(short)>
Counter value: 1
SCC 6562 : 1
<java.util.EnumMap: java.lang.Object access$1200(java.util.EnumMap,java.lang.Object)>
Counter value: 1
SCC 6563 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator: int characteristics()>
Counter value: 1
SCC 6564 : 1
<java.util.concurrent.ConcurrentHashMap$KeySetView: boolean add(java.lang.Object)>
Counter value: 1
SCC 6565 : 1
<java.util.jar.Attributes: void clear()>
Counter value: 2
SCC 6566 : 1
<java.util.stream.IntPipeline$Head: boolean opIsStateful()>
Counter value: 1
SCC 6567 : 1
<java.net.AbstractPlainSocketImpl: void connect(java.lang.String,int)>
Counter value: 1
SCC 6568 : 1
<sun.nio.ch.NativeThreadSet: void remove(int)>
Counter value: 1
SCC 6569 : 1
<sun.nio.ch.SocketAdaptor: int getPort()>
Counter value: 1
SCC 6570 : 1
<java.net.HttpCookie$1: void <init>()>
Counter value: 1
SCC 6571 : 1
<sun.misc.PathPermissions: java.lang.String toString()>
Counter value: 1
SCC 6572 : 1
<java.lang.invoke.MethodHandles$Lookup: void <init>(java.lang.Class,int)>
Counter value: 1
SCC 6573 : 1
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 6574 : 1
<java.util.stream.DoublePipeline: java.util.stream.Node evaluateToNode(java.util.stream.PipelineHelper,java.util.Spliterator,boolean,java.util.function.IntFunction)>
Counter value: 1
SCC 6575 : 1
<java.util.stream.LongPipeline$3: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 6576 : 1
<java.net.FactoryURLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.security.AccessControlContext)>
Counter value: 1
SCC 6577 : 1
<sun.net.www.ParseUtil: boolean isEscaped(java.lang.String,int)>
Counter value: 1
SCC 6578 : 1
<java.nio.ByteBufferAsCharBufferL: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 6579 : 1
<sun.util.resources.LocaleData: sun.util.resources.OpenListResourceBundle getCurrencyNames(java.util.Locale)>
Counter value: 1
SCC 6580 : 1
<java.nio.channels.AsynchronousFileChannel: void <clinit>()>
Counter value: 1
SCC 6581 : 1
<java.net.SocksSocketImpl$3: java.lang.Object run()>
Counter value: 1
SCC 6582 : 1
<java.lang.invoke.MethodType: java.lang.String createMethodDescriptorString()>
Counter value: 1
SCC 6583 : 1
<java.nio.DirectByteBufferR: java.nio.ByteBuffer compact()>
Counter value: 1
SCC 6584 : 1
<java.util.ArraysParallelSortHelpers$FJObject$Sorter: void <init>(java.util.concurrent.CountedCompleter,java.lang.Object[],java.lang.Object[],int,int,int,int,java.util.Comparator)>
Counter value: 1
SCC 6585 : 1
<java.util.IdentityHashMap$EntrySet: java.lang.Object[] toArray()>
Counter value: 1
SCC 6586 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble: void <init>(long,java.util.function.DoubleSupplier)>
Counter value: 1
SCC 6587 : 1
<java.util.Properties$XmlSupport$1: sun.util.spi.XmlPropertiesProvider run()>
Counter value: 1
SCC 6588 : 1
<java.text.RuleBasedCollationKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6589 : 1
<sun.security.x509.GeneralNames: boolean isEmpty()>
Counter value: 1
SCC 6590 : 1
<java.security.Provider$ServiceKey: boolean matches(java.lang.String,java.lang.String)>
Counter value: 1
SCC 6591 : 1
<sun.security.util.MemoryCache$SoftCacheEntry: java.lang.Object getKey()>
Counter value: 1
SCC 6592 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$NumberFormatProviderDelegate: void addImpl(java.text.spi.NumberFormatProvider)>
Counter value: 1
SCC 6593 : 1
<sun.misc.ObjectInputFilter$Config$Global$lambda_checkInput_9__100: void <init>()>
Counter value: 1
SCC 6594 : 1
<java.util.stream.ReduceOps$ReduceTask: void onCompletion(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 6595 : 1
<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: void <init>(java.nio.ByteBuffer,java.io.InputStream)>
Counter value: 1
SCC 6596 : 1
<java.util.concurrent.LinkedBlockingDeque: int size()>
Counter value: 1
SCC 6597 : 1
<sun.reflect.UnsafeShortFieldAccessorImpl: short getShort(java.lang.Object)>
Counter value: 1
SCC 6598 : 1
<java.util.Collections$UnmodifiableCollection: void clear()>
Counter value: 1
SCC 6599 : 1
<java.nio.Buffer: int checkIndex(int)>
Counter value: 1
SCC 6600 : 1
<java.util.EnumMap$KeySet: void clear()>
Counter value: 1
SCC 6601 : 1
<java.util.concurrent.ConcurrentSkipListMap$Node: void <init>(java.util.concurrent.ConcurrentSkipListMap$Node)>
Counter value: 1
SCC 6602 : 1
<javax.security.auth.Policy$4: java.lang.String run()>
Counter value: 1
SCC 6603 : 1
<sun.net.www.http.KeepAliveCache: java.lang.Thread access$000(sun.net.www.http.KeepAliveCache)>
Counter value: 1
SCC 6604 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfInt: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 6605 : 1
<java.util.stream.LongPipeline$1$1: void <init>(java.util.stream.LongPipeline$1,java.util.stream.Sink)>
Counter value: 1
SCC 6606 : 1
<java.lang.invoke.InsertHandle: int[] infoAffectingThunks(int,int)>
Counter value: 1
SCC 6607 : 1
<sun.net.www.http.HttpCaptureOutputStream: void write(byte[],int,int)>
Counter value: 2
SCC 6608 : 1
<java.nio.DirectCharBufferRS: java.nio.CharBuffer compact()>
Counter value: 1
SCC 6609 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfLong: java.util.function.LongConsumer emptyConsumer()>
Counter value: 1
SCC 6610 : 1
<java.util.stream.Nodes$ToArrayTask: void <init>(java.util.stream.Nodes$ToArrayTask,java.util.stream.Node,int)>
Counter value: 1
SCC 6611 : 1
<java.util.ArrayList: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 6612 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 6613 : 1
<java.util.stream.MatchOps$3MatchSink: void accept(long)>
Counter value: 1
SCC 6614 : 1
<java.io.Bits: void putInt(byte[],int,int)>
Counter value: 1
SCC 6615 : 1
<sun.nio.fs.Util: java.lang.String[] split(java.lang.String,char)>
Counter value: 1
SCC 6616 : 1
<sun.reflect.'annotation'.TypeAnnotation: java.lang.String toString()>
Counter value: 1
SCC 6617 : 1
<sun.reflect.ReflectionFactory: int inflationThreshold()>
Counter value: 1
SCC 6618 : 1
<java.util.Spliterators$IteratorSpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 6619 : 1
<java.util.concurrent.ConcurrentHashMap$MapEntry: void <init>(java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap)>
Counter value: 1
SCC 6620 : 1
<java.util.concurrent.Executors$DefaultThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>
Counter value: 1
SCC 6621 : 1
<java.lang.invoke.MethodHandleImpl$3: java.lang.Object apply(java.lang.Object)>
Counter value: 1
SCC 6622 : 1
<sun.security.x509.IssuingDistributionPointExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 6623 : 1
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 6624 : 1
<sun.security.x509.PolicyInformation: int hashCode()>
Counter value: 1
SCC 6625 : 1
<sun.nio.ch.FileDispatcherImpl: long size(java.io.FileDescriptor)>
Counter value: 1
SCC 6626 : 1
<java.lang.reflect.Proxy: java.lang.Object access$200()>
Counter value: 1
SCC 6627 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToLongTask: java.lang.Long getRawResult()>
Counter value: 1
SCC 6628 : 1
<java.util.concurrent.ConcurrentHashMap$KeySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 6629 : 1
<java.util.Collections$CheckedCollection: boolean remove(java.lang.Object)>
Counter value: 2
SCC 6630 : 1
<java.util.stream.Nodes$ToArrayTask$OfRef: void <init>(java.util.stream.Nodes$ToArrayTask$OfRef,java.util.stream.Node,int)>
Counter value: 1
SCC 6631 : 1
<java.lang.Short: java.lang.String toString()>
Counter value: 1
SCC 6632 : 1
<java.lang.invoke.DirectHandle: void addHandleToClassCache()>
Counter value: 1
SCC 6633 : 1
<java.util.EnumMap$EntrySet: java.lang.Object[] fillEntryArray(java.lang.Object[])>
Counter value: 1
SCC 6634 : 1
<java.time.Month: int maxLength()>
Counter value: 1
SCC 6635 : 1
<java.nio.DirectCharBufferS: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 6636 : 1
<java.io.Bits: boolean getBoolean(byte[],int)>
Counter value: 1
SCC 6637 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: double[] asPrimitiveArray()>
Counter value: 1
SCC 6638 : 1
<sun.invoke.util.Wrapper: java.lang.RuntimeException newIllegalArgumentException(java.lang.String)>
Counter value: 1
SCC 6639 : 1
<java.util.stream.ReduceOps$6ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 6640 : 1
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 6641 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfDouble: void forEach(java.lang.Object,long)>
Counter value: 1
SCC 6642 : 1
<java.time.MonthDay: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 6643 : 1
<java.util.LongSummaryStatistics: long getCount()>
Counter value: 1
SCC 6644 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.io.OutputStream access$100(sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 6645 : 1
<java.util.Scanner: java.util.regex.MatchResult match()>
Counter value: 1
SCC 6646 : 1
<java.util.concurrent.ConcurrentHashMap$SearchValuesTask: void compute()>
Counter value: 1
SCC 6647 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToDoubleTask: void compute()>
Counter value: 1
SCC 6648 : 1
<java.util.stream.DistinctOps$1$2: void begin(long)>
Counter value: 2
SCC 6649 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: void initPartialTraversalState()>
Counter value: 1
SCC 6650 : 1
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 6651 : 1
<sun.util.calendar.JulianCalendar: sun.util.calendar.JulianCalendar$Date newCalendarDate()>
Counter value: 1
SCC 6652 : 1
<sun.net.sdp.SdpProvider: int[] parsePortRange(java.lang.String)>
Counter value: 1
SCC 6653 : 1
<sun.net.www.http.KeepAliveCleanerEntry: void setQueuedForCleanup()>
Counter value: 1
SCC 6654 : 1
<java.nio.DirectCharBufferRU: java.nio.CharBuffer compact()>
Counter value: 1
SCC 6655 : 1
<java.lang.ClassLoader: boolean getPackageAssertionStatusHelper(java.lang.String)>
Counter value: 1
SCC 6656 : 1
<java.lang.invoke.MethodHandleImpl$4: void <init>()>
Counter value: 1
SCC 6657 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToDoubleTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToDoubleTask,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator)>
Counter value: 1
SCC 6658 : 1
<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String raw()>
Counter value: 1
SCC 6659 : 1
<java.util.Scanner: java.util.Scanner useLocale(java.util.Locale)>
Counter value: 1
SCC 6660 : 1
<java.util.Comparators$NaturalOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)>
Counter value: 1
SCC 6661 : 1
<java.lang.invoke.PrimitiveHandle: java.lang.Class getSpecialCaller()>
Counter value: 1
SCC 6662 : 1
<java.lang.invoke.FieldGetterHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 6663 : 1
<java.nio.DirectByteBuffer: long ix(int)>
Counter value: 1
SCC 6664 : 1
<java.util.Random: double internalNextDouble(double,double)>
Counter value: 1
SCC 6665 : 1
<java.nio.HeapCharBuffer: boolean isDirect()>
Counter value: 1
SCC 6666 : 1
<java.util.Collections$UnmodifiableMap: java.lang.String toString()>
Counter value: 2
SCC 6667 : 1
<java.util.stream.ReferencePipeline$3$1: void <init>(java.util.stream.ReferencePipeline$3,java.util.stream.Sink)>
Counter value: 1
SCC 6668 : 1
<java.util.TreeMap$NavigableSubMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6669 : 1
<java.io.ObjectOutputStream$HandleTable: void clear()>
Counter value: 1
SCC 6670 : 1
<java.lang.ClassValue$ClassValueMap: void <init>(java.lang.Class)>
Counter value: 1
SCC 6671 : 1
<java.util.DoubleSummaryStatistics: double getSum()>
Counter value: 1
SCC 6672 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void refill()>
Counter value: 1
SCC 6673 : 1
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
Counter value: 1
SCC 6674 : 1
<java.util.LinkedList: java.lang.Object clone()>
Counter value: 1
SCC 6675 : 1
<java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>
Counter value: 2
SCC 6676 : 1
<java.lang.invoke.ConvertHandle$FilterHelpers: int primitiveIndex1(java.lang.Class)>
Counter value: 1
SCC 6677 : 1
<java.io.ObjectInputStream: java.lang.Object readArray(boolean)>
Counter value: 1
SCC 6678 : 1
<java.lang.Class: void checkNonSunProxyMemberAccess(java.lang.SecurityManager,java.lang.ClassLoader,int)>
Counter value: 1
SCC 6679 : 1
<sun.security.x509.ExtendedKeyUsageExtension: void encodeThis()>
Counter value: 1
SCC 6680 : 1
<java.lang.Terminator$1: void handle(sun.misc.Signal)>
Counter value: 1
SCC 6681 : 1
<java.util.ArrayList$ArrayListSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 6682 : 1
<java.util.stream.Nodes: java.util.stream.Node$OfLong node(long[])>
Counter value: 1
SCC 6683 : 1
<java.time.Instant: int compareTo(java.time.Instant)>
Counter value: 1
SCC 6684 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfLong: void forEach(java.lang.Object,long)>
Counter value: 1
SCC 6685 : 1
<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: void <init>(java.nio.ByteBuffer)>
Counter value: 1
SCC 6686 : 1
<java.util.ArraysParallelSortHelpers$FJInt$Sorter: void compute()>
Counter value: 1
SCC 6687 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: void runTask(java.util.concurrent.ForkJoinTask)>
Counter value: 1
SCC 6688 : 1
<java.lang.invoke.MethodHandleStatics: java.lang.Error uncaughtException(java.lang.Throwable)>
Counter value: 1
SCC 6689 : 1
<java.nio.ByteBufferAsLongBufferB: long get(int)>
Counter value: 1
SCC 6690 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: java.lang.Object peek()>
Counter value: 1
SCC 6691 : 1
<java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.ref.WeakReference[],java.lang.ref.WeakReference[])>
Counter value: 1
SCC 6692 : 1
<sun.nio.ch.SinkChannelImpl: void implCloseSelectableChannel()>
Counter value: 1
SCC 6693 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void doAcquireSharedInterruptibly(int)>
Counter value: 1
SCC 6694 : 1
<java.net.InetAddress: boolean isAnyLocalAddress()>
Counter value: 1
SCC 6695 : 1
<java.time.chrono.JapaneseDate: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 6696 : 1
<java.util.concurrent.ForkJoinPool: int awaitJoin(java.util.concurrent.ForkJoinPool$WorkQueue,java.util.concurrent.ForkJoinTask,long)>
Counter value: 1
SCC 6697 : 1
<sun.net.www.http.KeepAliveStream: long remainingToRead()>
Counter value: 1
SCC 6698 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int tryAcquireShared(int)>
Counter value: 1
SCC 6699 : 1
<java.util.Calendar$1: java.lang.Object run()>
Counter value: 1
SCC 6700 : 1
<sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator: void <clinit>()>
Counter value: 1
SCC 6701 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.Comparator comparator()>
Counter value: 1
SCC 6702 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToDoubleTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 6703 : 1
<java.util.Hashtable$EntrySet: boolean add(java.lang.Object)>
Counter value: 1
SCC 6704 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: void access$201(java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask)>
Counter value: 1
SCC 6705 : 1
<java.io.ObjectInputStream$BlockDataInputStream: byte readByte()>
Counter value: 1
SCC 6706 : 1
<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 6707 : 1
<java.util.LinkedList$LLSpliterator: void <init>(java.util.LinkedList,int,int)>
Counter value: 1
SCC 6708 : 1
<java.util.TreeMap$NavigableSubMap: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 6709 : 1
<java.security.Policy$3: java.lang.Object run()>
Counter value: 1
SCC 6710 : 1
<java.util.IdentityHashMap: boolean access$1200(java.util.IdentityHashMap,java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6711 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 6712 : 1
<java.net.Socket$2: java.lang.Object run()>
Counter value: 1
SCC 6713 : 1
<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>
Counter value: 1
SCC 6714 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble: void <init>(java.util.Spliterator$OfDouble,long,long)>
Counter value: 1
SCC 6715 : 1
<java.util.concurrent.ConcurrentHashMap$BulkTask: void pushState(java.util.concurrent.ConcurrentHashMap$Node[],int,int)>
Counter value: 1
SCC 6716 : 1
<java.nio.DirectByteBufferR: void _put(int,byte)>
Counter value: 1
SCC 6717 : 1
<java.util.stream.ReduceOps$2ReducingSink: void accept(java.lang.Object)>
Counter value: 1
SCC 6718 : 1
<sun.reflect.generics.repository.ConstructorRepository: sun.reflect.generics.repository.ConstructorRepository make(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
Counter value: 1
SCC 6719 : 1
<java.lang.ProcessEnvironment$StringEnvironment: boolean isEmpty()>
Counter value: 2
SCC 6720 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfDouble: void accept(double)>
Counter value: 1
SCC 6721 : 1
<java.util.concurrent.CountedCompleter: boolean exec()>
Counter value: 1
SCC 6722 : 1
<java.lang.String$CaseInsensitiveComparator: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6723 : 1
<java.util.TreeMap: java.util.TreeMap$Entry predecessor(java.util.TreeMap$Entry)>
Counter value: 1
SCC 6724 : 1
<javax.crypto.spec.RC2ParameterSpec: int hashCode()>
Counter value: 1
SCC 6725 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: void remove()>
Counter value: 1
SCC 6726 : 1
<java.time.OffsetDateTime: java.time.OffsetDateTime 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 6727 : 1
<sun.security.x509.X509CertInfo: int hashCode()>
Counter value: 1
SCC 6728 : 1
<java.time.chrono.IsoChronology: java.time.LocalDateTime localDateTime(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 6729 : 1
<sun.nio.ch.Net: int connect(java.net.ProtocolFamily,java.io.FileDescriptor,java.net.InetAddress,int)>
Counter value: 1
SCC 6730 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller$2: java.lang.Void run()>
Counter value: 1
SCC 6731 : 1
<java.util.HashMap$EntrySpliterator: void <init>(java.util.HashMap,int,int,int,int)>
Counter value: 1
SCC 6732 : 1
<java.lang.invoke.HandleCache: java.lang.invoke.MethodHandle putMethodWithSpecialCallerInPerClassCache(java.util.Map,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.Class)>
Counter value: 1
SCC 6733 : 1
<java.io.ObjectInputStream: boolean isCustomSubclass()>
Counter value: 1
SCC 6734 : 1
<java.util.concurrent.ThreadLocalRandom$RandomDoublesSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 6735 : 1
<sun.misc.ProxyGenerator: void access$1400(sun.misc.ProxyGenerator,int,java.io.DataOutputStream)>
Counter value: 1
SCC 6736 : 1
<java.io.ObjectStreamClass: boolean hasReadObjectMethod()>
Counter value: 1
SCC 6737 : 1
<java.util.WeakHashMap$ValueSpliterator: void <init>(java.util.WeakHashMap,int,int,int,int)>
Counter value: 1
SCC 6738 : 1
<java.util.stream.Nodes$ConcNode$OfDouble: java.util.Spliterator$OfDouble spliterator()>
Counter value: 1
SCC 6739 : 1
<java.lang.Short: short reverseBytes(short)>
Counter value: 1
SCC 6740 : 1
<java.util.WeakHashMap$EntrySpliterator: void <init>(java.util.WeakHashMap,int,int,int,int)>
Counter value: 1
SCC 6741 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void readLongs(long[],int,int)>
Counter value: 1
SCC 6742 : 1
<sun.misc.ProxyGenerator$ProxyMethod: void access$1900(sun.misc.ProxyGenerator$ProxyMethod,java.io.DataOutputStream)>
Counter value: 1
SCC 6743 : 1
<sun.nio.fs.UnixMountEntry: byte[] dir()>
Counter value: 1
SCC 6744 : 1
<java.util.concurrent.TimeUnit$2: long convert(long,java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 6745 : 1
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 6746 : 1
<java.util.Hashtable$EntrySet: void clear()>
Counter value: 1
SCC 6747 : 1
<java.util.stream.DoublePipeline$7: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 6748 : 1
<java.lang.invoke.MethodHandle: void <clinit>()>
Counter value: 1
SCC 6749 : 1
<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader: java.lang.Object call()>
Counter value: 1
SCC 6750 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: boolean isEmpty()>
Counter value: 1
SCC 6751 : 1
<java.util.jar.JarFile$1: java.lang.Object nextElement()>
Counter value: 1
SCC 6752 : 1
<java.time.ZoneRegion: java.time.ZoneId readExternal(java.io.DataInput)>
Counter value: 1
SCC 6753 : 1
<java.nio.Bits: short makeShort(byte,byte)>
Counter value: 1
SCC 6754 : 1
<java.util.concurrent.ThreadLocalRandom$RandomLongsSpliterator: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 6755 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate plusYears(long)>
Counter value: 1
SCC 6756 : 1
<java.util.Scanner: java.lang.String findWithinHorizon(java.util.regex.Pattern,int)>
Counter value: 1
SCC 6757 : 1
<java.lang.ProcessBuilder$Redirect$3: java.lang.ProcessBuilder$Redirect$Type type()>
Counter value: 1
SCC 6758 : 1
<sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
Counter value: 1
SCC 6759 : 1
<java.util.Spliterators$IntArraySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 6760 : 1
<java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator: int characteristics()>
Counter value: 1
SCC 6761 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Method access$1602(java.io.ObjectStreamClass,java.lang.reflect.Method)>
Counter value: 1
SCC 6762 : 1
<java.lang.invoke.ConstantFloatHandle: void <init>(java.lang.invoke.ConstantFloatHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 6763 : 1
<java.time.LocalDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 6764 : 1
<java.net.SocksSocketImpl: int access$400(java.net.SocksSocketImpl)>
Counter value: 1
SCC 6765 : 1
<java.util.stream.ForEachOps$ForEachOp$OfDouble: void accept(double)>
Counter value: 2
SCC 6766 : 1
<java.time.Year: int hashCode()>
Counter value: 1
SCC 6767 : 1
<java.lang.invoke.MethodHandles$Lookup: void nullCheck(java.lang.Object,java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6768 : 1
<java.util.stream.AbstractTask: void compute()>
Counter value: 1
SCC 6769 : 1
<java.io.BufferedInputStream: boolean markSupported()>
Counter value: 1
SCC 6770 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: java.util.Spliterator trySplit()>
Counter value: 1
SCC 6771 : 1
<sun.nio.ch.SocketDispatcher: int write(java.io.FileDescriptor,long,int)>
Counter value: 1
SCC 6772 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel: boolean access$100(java.nio.channels.spi.AbstractInterruptibleChannel)>
Counter value: 1
SCC 6773 : 1
<javax.security.auth.SubjectDomainCombiner: sun.security.util.Debug access$100()>
Counter value: 1
SCC 6774 : 1
<java.net.HttpCookie$12: void <init>()>
Counter value: 1
SCC 6775 : 1
<java.util.stream.ReduceOps$7: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 6776 : 1
<sun.net.www.protocol.http.DigestAuthentication: boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection,sun.net.www.HeaderParser,java.lang.String)>
Counter value: 1
SCC 6777 : 1
<sun.misc.SharedSecrets: void setJavaObjectInputStreamReadString(sun.misc.JavaObjectInputStreamReadString)>
Counter value: 1
SCC 6778 : 1
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 6779 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.net.CookieHandler getCookieHandler()>
Counter value: 1
SCC 6780 : 1
<java.util.EnumMap$EnumMapIterator: void <init>(java.util.EnumMap,java.util.EnumMap$1)>
Counter value: 1
SCC 6781 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.Iterator keyIterator()>
Counter value: 1
SCC 6782 : 1
<java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6783 : 1
<java.util.stream.ReduceOps$10ReducingSink: void <init>(java.util.function.Supplier,java.util.function.ObjLongConsumer,java.util.function.BinaryOperator)>
Counter value: 1
SCC 6784 : 1
<java.util.stream.FindOps$isPresent__101: java.util.function.Predicate bootstrap$()>
Counter value: 1
SCC 6785 : 1
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 6786 : 1
<java.util.TreeMap$EntrySpliterator: int characteristics()>
Counter value: 1
SCC 6787 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl: void <clinit>()>
Counter value: 1
SCC 6788 : 1
<java.util.Collections$SetFromMap: boolean remove(java.lang.Object)>
Counter value: 1
SCC 6789 : 1
<java.util.stream.IntPipeline: void forEach(java.util.function.IntConsumer)>
Counter value: 1
SCC 6790 : 1
<java.lang.invoke.GuardWithTestHandle: void <init>(java.lang.invoke.GuardWithTestHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 6791 : 1
<java.util.stream.Nodes$EmptyNode$OfInt: java.util.Spliterator spliterator()>
Counter value: 1
SCC 6792 : 1
<java.lang.Class: void setReflectCache(java.lang.Class$ReflectCache)>
Counter value: 1
SCC 6793 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.lang.String connectRequestURI(java.net.URL)>
Counter value: 1
SCC 6794 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator: long getExactSizeIfKnown()>
Counter value: 2
SCC 6795 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: void acceptConsumed(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 6796 : 1
<java.util.concurrent.Executors$PrivilegedThreadFactory$1: void <init>(java.util.concurrent.Executors$PrivilegedThreadFactory,java.lang.Runnable)>
Counter value: 1
SCC 6797 : 1
<javax.security.auth.Subject: int hashCode()>
Counter value: 1
SCC 6798 : 1
<sun.security.x509.KeyIdentifier: int hashCode()>
Counter value: 1
SCC 6799 : 1
<java.net.NetworkInterface: java.net.NetworkInterface[] access$100(java.net.NetworkInterface)>
Counter value: 1
SCC 6800 : 1
<java.lang.reflect.AccessibleObject: void slowCheckMemberAccess(java.lang.Class,java.lang.Class,java.lang.Object,int,java.lang.Class)>
Counter value: 1
SCC 6801 : 1
<java.time.LocalTime: java.time.LocalTime of(int,int)>
Counter value: 1
SCC 6802 : 1
<java.io.ObjectInputStream: void filterCheck(java.lang.Class,int)>
Counter value: 1
SCC 6803 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean offer(java.lang.Runnable)>
Counter value: 1
SCC 6804 : 1
<sun.nio.ch.SocketChannelImpl: java.net.InetSocketAddress localAddress()>
Counter value: 1
SCC 6805 : 1
<java.util.stream.Nodes$SizedCollectorTask: void <init>(java.util.Spliterator,java.util.stream.PipelineHelper,int)>
Counter value: 1
SCC 6806 : 1
<java.util.stream.Streams$ConcatSpliterator$OfDouble: void forEachRemaining(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 6807 : 1
<java.util.stream.IntStream: java.util.stream.IntStream empty()>
Counter value: 1
SCC 6808 : 1
<sun.security.util.KnownOIDs$7: boolean registerNames()>
Counter value: 1
SCC 6809 : 1
<java.util.Collections$SetFromMap: java.lang.String toString()>
Counter value: 2
SCC 6810 : 1
<java.util.WeakHashMap: java.util.Set keySet()>
Counter value: 1
SCC 6811 : 1
<java.util.concurrent.TimeUnit$5: long toMinutes(long)>
Counter value: 1
SCC 6812 : 1
<java.util.concurrent.ConcurrentHashMap$ValueSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 6813 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl plusNanos(long)>
Counter value: 1
SCC 6814 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: void <init>(java.util.List,int,int,int)>
Counter value: 1
SCC 6815 : 1
<java.util.stream.Nodes$ToArrayTask: void <init>(java.util.stream.Node,int)>
Counter value: 1
SCC 6816 : 1
<sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator: boolean hasNext()>
Counter value: 1
SCC 6817 : 1
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 6818 : 1
<java.net.SocksSocketImpl$3: void <init>(java.net.SocksSocketImpl)>
Counter value: 1
SCC 6819 : 1
<sun.net.www.protocol.http.NTLMAuthenticationProxy: sun.net.www.protocol.http.NTLMAuthenticationProxy tryLoadNTLMAuthentication()>
Counter value: 1
SCC 6820 : 1
<sun.security.provider.NativePRNG$RandomIO: void <init>(java.io.File,java.io.File,sun.security.provider.NativePRNG$1)>
Counter value: 1
SCC 6821 : 1
<java.io.FileDescriptor: boolean valid()>
Counter value: 1
SCC 6822 : 1
<java.util.stream.ForEachOps: java.util.stream.TerminalOp makeRef(java.util.function.Consumer,boolean)>
Counter value: 1
SCC 6823 : 1
<java.nio.channels.spi.AbstractSelectableChannel: boolean isRegistered()>
Counter value: 1
SCC 6824 : 1
<java.util.stream.ReduceOps$11ReducingSink: java.lang.Double get()>
Counter value: 1
SCC 6825 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: java.util.HashMap getCache()>
Counter value: 1
SCC 6826 : 1
<java.util.concurrent.ForkJoinWorkerThread: java.security.AccessControlContext access$000()>
Counter value: 1
SCC 6827 : 1
<java.util.HashMap$HashMapSpliterator: int getFence()>
Counter value: 1
SCC 6828 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: long[] asPrimitiveArray()>
Counter value: 1
SCC 6829 : 1
<java.net.ServerSocket: boolean isBound()>
Counter value: 1
SCC 6830 : 1
<java.io.Console: char[] readPassword()>
Counter value: 1
SCC 6831 : 1
<java.util.stream.ReduceOps$ReduceOp: java.util.stream.StreamShape inputShape()>
Counter value: 1
SCC 6832 : 1
<sun.net.www.MeteredStream: void mark(int)>
Counter value: 1
SCC 6833 : 1
<java.lang.reflect.ReflectAccess: void setConstructorAccessor(java.lang.reflect.Constructor,sun.reflect.ConstructorAccessor)>
Counter value: 1
SCC 6834 : 1
<java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
Counter value: 1
SCC 6835 : 1
<java.time.Month: long getLong(java.time.temporal.TemporalField)>
Counter value: 1
SCC 6836 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 6837 : 1
<sun.misc.SharedSecrets: void setJavaIOAccess(sun.misc.JavaIOAccess)>
Counter value: 1
SCC 6838 : 1
<sun.misc.ProxyGenerator$FieldInfo: void <init>(sun.misc.ProxyGenerator,java.lang.String,java.lang.String,int)>
Counter value: 1
SCC 6839 : 1
<java.net.SocketTimeoutException: void <init>()>
Counter value: 1
SCC 6840 : 1
<java.util.stream.ReduceOps$4ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 6841 : 1
<java.net.URI: void removeDots(char[],int[])>
Counter value: 1
SCC 6842 : 1
<java.util.stream.ReferencePipeline$7$1: void begin(long)>
Counter value: 2
SCC 6843 : 1
<java.io.ObjectStreamClass: void throwMiscException(java.lang.Throwable)>
Counter value: 1
SCC 6844 : 1
<java.util.stream.Nodes: void <clinit>()>
Counter value: 1
SCC 6845 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator$accept__40: java.util.stream.Sink bootstrap$(java.util.stream.SpinedBuffer)>
Counter value: 1
SCC 6846 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: java.lang.Thread getOwner()>
Counter value: 1
SCC 6847 : 1
<java.lang.invoke.ConvertHandle$FilterHelpers: void <clinit>()>
Counter value: 1
SCC 6848 : 1
<java.nio.DirectCharBufferU: java.nio.CharBuffer get(char[],int,int)>
Counter value: 1
SCC 6849 : 1
<java.nio.file.FileTreeWalker$Event: java.io.IOException ioeException()>
Counter value: 1
SCC 6850 : 1
<java.util.stream.Streams$IntStreamBuilderImpl: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 6851 : 1
<java.util.stream.Tripwire: void <clinit>()>
Counter value: 1
SCC 6852 : 1
<java.lang.Thread: java.lang.Thread$State getState()>
Counter value: 1
SCC 6853 : 1
<java.util.concurrent.LinkedBlockingQueue: int size()>
Counter value: 1
SCC 6854 : 1
<java.time.chrono.MinguoDate: void <init>(java.time.LocalDate)>
Counter value: 1
SCC 6855 : 1
<java.util.Arrays: void fill(long[],long)>
Counter value: 1
SCC 6856 : 1
<java.io.ObjectStreamClass$Caches: java.lang.ref.ReferenceQueue access$2800()>
Counter value: 1
SCC 6857 : 1
<java.util.concurrent.ConcurrentHashMap$SearchKeysTask: void compute()>
Counter value: 1
SCC 6858 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 6859 : 1
<Main: void main(java.lang.String[])>
Counter value: 1
SCC 6860 : 1
<Main: void func(Node,Node,Node)>
Counter value: 1
SCC 6861 : 1
<java.time.chrono.HijrahDate: void <init>(java.time.chrono.HijrahChronology,int,int,int)>
Counter value: 1
SCC 6862 : 1
<java.nio.ByteBufferAsLongBufferL: java.nio.LongBuffer put(int,long)>
Counter value: 1
SCC 6863 : 1
<java.util.stream.AbstractPipeline: java.util.Spliterator wrapSpliterator(java.util.Spliterator)>
Counter value: 1
SCC 6864 : 1
<java.lang.invoke.InsertHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 6865 : 1
<java.util.EnumMap: java.lang.Enum[] getKeyUniverse(java.lang.Class)>
Counter value: 1
SCC 6866 : 1
<java.util.IdentityHashMap$KeySet: int size()>
Counter value: 1
SCC 6867 : 1
<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>
Counter value: 1
SCC 6868 : 1
<java.util.Scanner: void readInput()>
Counter value: 1
SCC 6869 : 1
<java.lang.Enum: java.lang.Object clone()>
Counter value: 1
SCC 6870 : 1
<sun.nio.fs.UnixException: int errno()>
Counter value: 1
SCC 6871 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 6872 : 1
<java.util.stream.SpinedBuffer$add__30: java.util.function.Consumer bootstrap$(java.util.List)>
Counter value: 1
SCC 6873 : 1
<sun.security.provider.NativePRNG: sun.security.provider.NativePRNG$RandomIO initIO(sun.security.provider.NativePRNG$Variant)>
Counter value: 1
SCC 6874 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator: java.lang.Object mapNull(java.lang.Object)>
Counter value: 1
SCC 6875 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.Era getEra()>
Counter value: 1
SCC 6876 : 1
<java.net.HttpCookie$3: void <init>()>
Counter value: 1
SCC 6877 : 1
<java.nio.HeapByteBuffer: void <init>(byte[],int,int,int,int,int)>
Counter value: 1
SCC 6878 : 1
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 6879 : 1
<java.lang.invoke.ConstantDoubleHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 6880 : 1
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>
Counter value: 1
SCC 6881 : 1
<java.util.Collections$CheckedNavigableSet: void <init>(java.util.NavigableSet,java.lang.Class)>
Counter value: 1
SCC 6882 : 1
<sun.net.www.ParseUtil: boolean match(char,long,long)>
Counter value: 1
SCC 6883 : 1
<sun.net.sdp.SdpSupport$1: java.lang.Object run()>
Counter value: 1
SCC 6884 : 1
<java.time.Month: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 6885 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: boolean isUnresolved()>
Counter value: 1
SCC 6886 : 1
<java.util.stream.AbstractShortCircuitTask: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 6887 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachMappingTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.BiConsumer)>
Counter value: 1
SCC 6888 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate plusMonths(long)>
Counter value: 1
SCC 6889 : 1
<java.util.stream.AbstractPipeline: java.util.stream.Sink wrapAndCopyInto(java.util.stream.Sink,java.util.Spliterator)>
Counter value: 1
SCC 6890 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asVarargsCollector(java.lang.Class)>
Counter value: 1
SCC 6891 : 1
<java.security.SignatureSpi: java.lang.Object clone()>
Counter value: 1
SCC 6892 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.Set keySet()>
Counter value: 1
SCC 6893 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToLongTask: java.lang.Long getRawResult()>
Counter value: 1
SCC 6894 : 1
<java.nio.channels.Channels$2: int read()>
Counter value: 1
SCC 6895 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfInt: java.util.Spliterator$OfInt makeSpliterator(java.util.Spliterator$OfInt,long,long,long,long)>
Counter value: 1
SCC 6896 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: int compareTo(java.util.concurrent.Delayed)>
Counter value: 1
SCC 6897 : 1
<sun.reflect.BootstrapConstructorAccessorImpl: java.lang.Object newInstance(java.lang.Object[])>
Counter value: 1
SCC 6898 : 1
<java.nio.HeapDoubleBuffer: int ix(int)>
Counter value: 1
SCC 6899 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: boolean add(java.lang.Object)>
Counter value: 1
SCC 6900 : 1
<java.util.Collections$SynchronizedCollection: boolean containsAll(java.util.Collection)>
Counter value: 2
SCC 6901 : 1
<java.nio.file.FileTreeWalker: boolean isOpen()>
Counter value: 1
SCC 6902 : 1
<sun.reflect.ReflectionFactory: boolean access$002(boolean)>
Counter value: 1
SCC 6903 : 1
<java.util.stream.LongPipeline$8$1: void <init>(java.util.stream.LongPipeline$8,java.util.stream.Sink)>
Counter value: 1
SCC 6904 : 1
<java.util.concurrent.ForkJoinPool: int getCommonPoolParallelism()>
Counter value: 1
SCC 6905 : 1
<java.util.stream.Nodes$ConcNode: void <init>(java.util.stream.Node,java.util.stream.Node)>
Counter value: 1
SCC 6906 : 1
<java.time.chrono.HijrahChronology: void checkValidMonth(int)>
Counter value: 1
SCC 6907 : 1
<sun.nio.ch.DatagramChannelImpl: int write(java.nio.ByteBuffer)>
Counter value: 1
SCC 6908 : 1
<java.util.EnumMap$EntrySet: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 6909 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object clone()>
Counter value: 1
SCC 6910 : 1
<java.util.stream.Collectors$Partition$1: int size()>
Counter value: 1
SCC 6911 : 1
<java.nio.ByteBufferAsCharBufferRL: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 6912 : 1
<java.lang.invoke.InnerClassLambdaMetafactory$2: java.lang.Void run()>
Counter value: 1
SCC 6913 : 1
<java.lang.Thread$State: void <clinit>()>
Counter value: 1
SCC 6914 : 1
<java.util.Spliterators$DoubleIteratorSpliterator: java.util.Comparator getComparator()>
Counter value: 1
SCC 6915 : 1
<java.io.InvalidClassException: void <init>(java.lang.String)>
Counter value: 1
SCC 6916 : 1
<java.util.concurrent.RejectedExecutionException: void <init>()>
Counter value: 1
SCC 6917 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: boolean isSupported(sun.net.www.protocol.http.HttpCallerInfo)>
Counter value: 1
SCC 6918 : 1
<sun.nio.ch.FileDispatcherImpl: void <init>()>
Counter value: 1
SCC 6919 : 1
<java.util.concurrent.SynchronousQueue$TransferStack$SNode: boolean tryMatch(java.util.concurrent.SynchronousQueue$TransferStack$SNode)>
Counter value: 1
SCC 6920 : 1
<sun.reflect.DelegatingMethodAccessorImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
Counter value: 2
SCC 6921 : 1
<sun.security.rsa.PSSParameters: java.lang.String engineToString()>
Counter value: 1
SCC 6922 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: void <init>(java.lang.Object[],int)>
Counter value: 1
SCC 6923 : 1
<java.io.ObjectStreamClass: boolean classNamesEqual(java.lang.String,java.lang.String)>
Counter value: 1
SCC 6924 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 6925 : 1
<java.time.zone.Ser: void readExternal(java.io.ObjectInput)>
Counter value: 1
SCC 6926 : 1
<java.util.ArrayPrefixHelpers$CumulateTask: void <init>(java.util.ArrayPrefixHelpers$CumulateTask,java.util.function.BinaryOperator,java.lang.Object[],int,int,int,int,int)>
Counter value: 1
SCC 6927 : 1
<sun.net.www.protocol.http.AuthenticationHeader: java.lang.String toString()>
Counter value: 1
SCC 6928 : 1
<java.util.TreeMap$NavigableSubMap: java.util.TreeMap$Entry absLowest()>
Counter value: 1
SCC 6929 : 1
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 6930 : 1
<java.util.concurrent.ConcurrentSkipListMap$Node: boolean appendMarker(java.util.concurrent.ConcurrentSkipListMap$Node)>
Counter value: 1
SCC 6931 : 1
<java.util.BitSet: int hashCode()>
Counter value: 1
SCC 6932 : 1
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()>
Counter value: 1
SCC 6933 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: java.util.Spliterator trySplit()>
Counter value: 2
SCC 6934 : 1
<java.util.stream.Streams$RangeIntSpliterator: java.util.Spliterator$OfInt trySplit()>
Counter value: 1
SCC 6935 : 1
<sun.util.calendar.ImmutableGregorianDate: int getMillis()>
Counter value: 2
SCC 6936 : 1
<sun.nio.fs.NativeBuffers: void <clinit>()>
Counter value: 1
SCC 6937 : 1
<java.util.Spliterators$2Adapter: int nextInt()>
Counter value: 1
SCC 6938 : 1
<java.nio.Bits: boolean unaligned()>
Counter value: 1
SCC 6939 : 1
<java.util.Arrays: void fill(byte[],int,int,byte)>
Counter value: 1
SCC 6940 : 1
<java.net.SocketImpl: java.net.InetAddress getInetAddress()>
Counter value: 1
SCC 6941 : 1
<java.lang.invoke.VarargsCollectorHandle: void <clinit>()>
Counter value: 1
SCC 6942 : 1
<sun.nio.ch.SocketChannelImpl: void ensureOpenAndUnconnected()>
Counter value: 1
SCC 6943 : 1
<java.io.ObjectStreamField: java.lang.String toString()>
Counter value: 1
SCC 6944 : 1
<sun.net.NetworkClient: void <init>()>
Counter value: 1
SCC 6945 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 6946 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: void addImpl(java.util.spi.CurrencyNameProvider)>
Counter value: 1
SCC 6947 : 1
<java.lang.ClassValue$ClassValueMap: void checkCacheLoad()>
Counter value: 1
SCC 6948 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfInt: java.util.Spliterator$OfInt trySplit()>
Counter value: 1
SCC 6949 : 1
<java.util.concurrent.ConcurrentHashMap$KeySetView: boolean remove(java.lang.Object)>
Counter value: 1
SCC 6950 : 1
<java.util.stream.Nodes$CollectorTask$OfDouble$doubleBuilder__92: java.util.function.LongFunction bootstrap$()>
Counter value: 1
SCC 6951 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToLongTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 6952 : 1
<java.security.spec.EllipticCurve: int hashCode()>
Counter value: 1
SCC 6953 : 1
<java.time.zone.ZoneOffsetTransition: java.lang.String toString()>
Counter value: 1
SCC 6954 : 1
<java.util.concurrent.ConcurrentHashMap$ReduceKeysTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$ReduceKeysTask,java.util.function.BiFunction)>
Counter value: 1
SCC 6955 : 1
<java.util.Collections$CheckedMap: void clear()>
Counter value: 2
SCC 6956 : 1
<java.util.concurrent.CopyOnWriteArrayList: int size()>
Counter value: 1
SCC 6957 : 1
<java.lang.invoke.MethodHandle: java.lang.String toString()>
Counter value: 1
SCC 6958 : 1
<java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6959 : 1
<java.util.concurrent.ForkJoinPool$1: void <init>()>
Counter value: 1
SCC 6960 : 1
<java.util.Collections$CheckedCollection: boolean addAll(java.util.Collection)>
Counter value: 2
SCC 6961 : 1
<sun.net.www.URLConnection: java.lang.String getContentType()>
Counter value: 1
SCC 6962 : 1
<sun.nio.ch.SocketAdaptor: void connect(java.net.SocketAddress,int)>
Counter value: 1
SCC 6963 : 1
<java.io.DataOutputStream: void writeUTF(java.lang.String)>
Counter value: 1
SCC 6964 : 1
<java.util.stream.IntPipeline$Head: java.util.stream.IntStream sequential()>
Counter value: 1
SCC 6965 : 1
<java.util.stream.ForEachOps$ForEachOp: void <init>(boolean)>
Counter value: 1
SCC 6966 : 1
<java.util.WeakHashMap$KeySet: int size()>
Counter value: 1
SCC 6967 : 1
<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 6968 : 1
<java.io.ObjectStreamClass$FieldReflectorKey: int hashCode()>
Counter value: 1
SCC 6969 : 1
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 6970 : 1
<java.util.stream.LongPipeline$StatefulOp: boolean opIsStateful()>
Counter value: 1
SCC 6971 : 1
<java.util.stream.Nodes$LongFixedNodeBuilder: void end()>
Counter value: 1
SCC 6972 : 1
<java.net.Socket: void <init>()>
Counter value: 1
SCC 6973 : 1
<java.util.stream.ReduceOps$2ReducingSink: java.util.Optional get()>
Counter value: 1
SCC 6974 : 1
<java.lang.Class: java.lang.reflect.Field[] copyFields(java.lang.reflect.Field[])>
Counter value: 1
SCC 6975 : 1
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDate plusYears(long)>
Counter value: 1
SCC 6976 : 1
<java.lang.invoke.SecurityFrameInjector$2: java.lang.Object run()>
Counter value: 1
SCC 6977 : 1
<java.util.Collections$UnmodifiableNavigableSet: java.util.NavigableSet access$000()>
Counter value: 1
SCC 6978 : 1
<java.io.ObjectOutputStream$ReplaceTable: void clear()>
Counter value: 1
SCC 6979 : 1
<sun.reflect.ClassFileAssembler: void opc_areturn()>
Counter value: 1
SCC 6980 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToDoubleTask: java.lang.Double getRawResult()>
Counter value: 1
SCC 6981 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfInt: void <init>(java.util.function.Supplier)>
Counter value: 1
SCC 6982 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 6983 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
Counter value: 1
SCC 6984 : 1
<java.lang.Thread: boolean isDead()>
Counter value: 1
SCC 6985 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 6986 : 1
<java.time.OffsetTime: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
Counter value: 1
SCC 6987 : 1
<java.util.jar.Manifest$FastInputStream: long skip(long)>
Counter value: 2
SCC 6988 : 1
<java.text.DecimalFormat: java.lang.String getNegativeSuffix()>
Counter value: 1
SCC 6989 : 1
<java.net.DatagramSocket$1: java.lang.Object run()>
Counter value: 1
SCC 6990 : 1
<sun.net.sdp.SdpProvider$AddressPortRangeRule: void <init>(sun.net.sdp.SdpProvider$Action,java.net.InetAddress,int,int,int)>
Counter value: 1
SCC 6991 : 1
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 6992 : 1
<java.util.stream.AbstractTask: boolean isRoot()>
Counter value: 1
SCC 6993 : 1
<java.lang.ClassLoader: java.lang.String findLibrary(java.lang.String)>
Counter value: 1
SCC 6994 : 1
<sun.misc.ProxyGenerator$PrimitiveTypeInfo: sun.misc.ProxyGenerator$PrimitiveTypeInfo get(java.lang.Class)>
Counter value: 1
SCC 6995 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 6996 : 1
<java.lang.reflect.Method: boolean hasGenericInformation()>
Counter value: 1
SCC 6997 : 1
<sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
Counter value: 1
SCC 6998 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate plusDays(long)>
Counter value: 1
SCC 6999 : 1
<java.util.zip.InflaterInputStream: boolean markSupported()>
Counter value: 1
SCC 7000 : 1
<java.lang.reflect.Executable: java.lang.reflect.Parameter[] synthesizeAllParams()>
Counter value: 1
SCC 7001 : 1
<java.util.EnumMap: void <init>(java.lang.Class)>
Counter value: 1
SCC 7002 : 1
<java.util.stream.SpinedBuffer$OfLong: java.util.Spliterator$OfLong spliterator()>
Counter value: 1
SCC 7003 : 1
<java.nio.channels.spi.SelectorProvider$1: java.nio.channels.spi.SelectorProvider run()>
Counter value: 1
SCC 7004 : 1
<java.lang.ProcessEnvironment$StringEnvironment: java.lang.String remove(java.lang.Object)>
Counter value: 1
SCC 7005 : 1
<java.util.JumboEnumSet: boolean recalculateSize()>
Counter value: 1
SCC 7006 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
Counter value: 1
SCC 7007 : 1
<sun.reflect.'annotation'.AnnotationInvocationHandler: void <clinit>()>
Counter value: 1
SCC 7008 : 1
<sun.nio.ch.SocketChannelImpl: void implConfigureBlocking(boolean)>
Counter value: 1
SCC 7009 : 1
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service get(int)>
Counter value: 1
SCC 7010 : 1
<java.nio.ByteBufferAsFloatBufferB: int ix(int)>
Counter value: 1
SCC 7011 : 1
<java.net.HttpCookie: void assignAttribute(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 7012 : 1
<java.util.Spliterators$DoubleIteratorSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 7013 : 1
<sun.nio.cs.FastCharsetProvider$1: boolean hasNext()>
Counter value: 2
SCC 7014 : 1
<java.util.Spliterators$ArraySpliterator: long estimateSize()>
Counter value: 1
SCC 7015 : 1
<java.util.ArrayList$SubList: java.lang.Object remove(int)>
Counter value: 2
SCC 7016 : 1
<java.util.ArrayList$ArrayListSpliterator: int characteristics()>
Counter value: 1
SCC 7017 : 1
<java.time.format.DateTimeFormatter$lambda_static_0__1: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 7018 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToLongTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 7019 : 1
<java.net.FactoryURLClassLoader: void <init>(java.net.URL[],java.security.AccessControlContext)>
Counter value: 1
SCC 7020 : 1
<java.time.chrono.JapaneseEra: java.time.chrono.JapaneseEra[] values()>
Counter value: 1
SCC 7021 : 1
<java.util.OptionalInt: void <clinit>()>
Counter value: 1
SCC 7022 : 1
<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.io.InputStream,java.net.CacheRequest)>
Counter value: 1
SCC 7023 : 1
<java.util.TreeMap$DescendingKeyIterator: void remove()>
Counter value: 1
SCC 7024 : 1
<java.util.IdentityHashMap$ValueSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 7025 : 1
<java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 7026 : 1
<java.util.concurrent.TimeUnit$5: long toDays(long)>
Counter value: 1
SCC 7027 : 1
<java.net.URI: java.net.URI normalize()>
Counter value: 1
SCC 7028 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$LocaleNameProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 7029 : 1
<java.util.concurrent.CountedCompleter: void setPendingCount(int)>
Counter value: 1
SCC 7030 : 1
<java.lang.invoke.ConstantHandle: void <init>(java.lang.invoke.MethodType,byte)>
Counter value: 1
SCC 7031 : 1
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 7032 : 1
<java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>
Counter value: 1
SCC 7033 : 1
<java.time.MonthDay: java.time.MonthDay readExternal(java.io.DataInput)>
Counter value: 1
SCC 7034 : 1
<java.util.stream.SpinedBuffer$OfLong: java.lang.String toString()>
Counter value: 1
SCC 7035 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel$1: void interrupt(java.lang.Thread)>
Counter value: 1
SCC 7036 : 1
<java.lang.reflect.Executable: void printModifiersIfNonzero(java.lang.StringBuilder,int,boolean)>
Counter value: 1
SCC 7037 : 1
<sun.net.www.protocol.http.NTLMAuthenticationProxy: void <clinit>()>
Counter value: 1
SCC 7038 : 1
<java.io.BufferedReader$1: java.lang.String next()>
Counter value: 1
SCC 7039 : 1
<sun.nio.ch.ServerSocketAdaptor: void close()>
Counter value: 1
SCC 7040 : 1
<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: int hashCode()>
Counter value: 1
SCC 7041 : 1
<java.util.stream.SpinedBuffer$OfDouble: void <init>()>
Counter value: 1
SCC 7042 : 1
<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)>
Counter value: 1
SCC 7043 : 1
<java.util.EnumMap$1: int hashCode()>
Counter value: 1
SCC 7044 : 1
<java.lang.reflect.WeakCache: java.lang.Object get(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7045 : 1
<java.util.stream.ReduceOps$3ReducingSink: void accept(java.lang.Object)>
Counter value: 1
SCC 7046 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef: void forEachRemaining(java.util.function.Consumer)>
Counter value: 2
SCC 7047 : 1
<sun.security.x509.AuthorityInfoAccessExtension: java.lang.String toString()>
Counter value: 1
SCC 7048 : 1
<java.io.StreamTokenizer: java.lang.String toString()>
Counter value: 1
SCC 7049 : 1
<sun.util.locale.provider.LocaleResources: java.lang.String[] getJavaTimeNames(java.lang.String)>
Counter value: 1
SCC 7050 : 1
<sun.nio.fs.UnixException: java.io.IOException translateToIOException(java.lang.String,java.lang.String)>
Counter value: 1
SCC 7051 : 1
<java.util.stream.ReduceOps$ReduceTask: java.lang.Object doLeaf()>
Counter value: 1
SCC 7052 : 1
<java.net.URLPermission: int hashCode()>
Counter value: 1
SCC 7053 : 1
<sun.util.locale.provider.LocaleResources: int getCalendarData(java.lang.String)>
Counter value: 1
SCC 7054 : 1
<java.time.chrono.JapaneseEra: sun.util.calendar.Era privateEraFrom(java.time.LocalDate)>
Counter value: 1
SCC 7055 : 1
<java.util.concurrent.Executors$PrivilegedThreadFactory$1$1: java.lang.Object run()>
Counter value: 1
SCC 7056 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef: void accept(java.lang.Object)>
Counter value: 1
SCC 7057 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator$lambda_initPartialTraversalState_0__41: boolean getAsBoolean()>
Counter value: 1
SCC 7058 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 7059 : 1
<sun.net.www.http.HttpCaptureInputStream: void close()>
Counter value: 1
SCC 7060 : 1
<java.util.jar.Attributes: java.lang.Object remove(java.lang.Object)>
Counter value: 2
SCC 7061 : 1
<java.util.concurrent.atomic.AtomicInteger: float floatValue()>
Counter value: 1
SCC 7062 : 1
<java.lang.Short: float floatValue()>
Counter value: 1
SCC 7063 : 1
<sun.security.x509.IPAddressName: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 7064 : 1
<java.util.Collections$CheckedMap: java.lang.String badValueMsg(java.lang.Object)>
Counter value: 1
SCC 7065 : 1
<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7066 : 1
<sun.security.x509.GeneralSubtrees: int size()>
Counter value: 1
SCC 7067 : 1
<java.util.Tripwire: void <clinit>()>
Counter value: 1
SCC 7068 : 1
<java.util.ArrayList$SubList$1: void set(java.lang.Object)>
Counter value: 1
SCC 7069 : 1
<java.util.concurrent.ConcurrentLinkedQueue: void checkNotNull(java.lang.Object)>
Counter value: 1
SCC 7070 : 1
<java.util.WeakHashMap$EntrySet: void clear()>
Counter value: 1
SCC 7071 : 1
<java.net.SocketInputStream: int read(byte[])>
Counter value: 1
SCC 7072 : 1
<java.util.AbstractCollection: boolean contains(java.lang.Object)>
Counter value: 1
SCC 7073 : 1
<java.nio.DirectFloatBufferU: long address()>
Counter value: 1
SCC 7074 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int getReadLockCount()>
Counter value: 1
SCC 7075 : 1
<java.util.Spliterator$OfLong$accept__77: java.util.function.LongConsumer bootstrap$(java.util.function.Consumer)>
Counter value: 1
SCC 7076 : 1
<sun.nio.fs.UnixNativeDispatcher: void utimes(sun.nio.fs.UnixPath,long,long)>
Counter value: 1
SCC 7077 : 1
<java.util.ArraysParallelSortHelpers$FJDouble$Sorter: void <init>(java.util.concurrent.CountedCompleter,double[],double[],int,int,int,int)>
Counter value: 1
SCC 7078 : 1
<java.util.IdentityHashMap$ValueIterator: void <init>(java.util.IdentityHashMap)>
Counter value: 1
SCC 7079 : 1
<java.util.concurrent.TimeUnit$5: int excessNanos(long,long)>
Counter value: 1
SCC 7080 : 1
<java.nio.DoubleBuffer: int compare(double,double)>
Counter value: 1
SCC 7081 : 1
<sun.reflect.InstantiationExceptionConstructorAccessorImpl: java.lang.Object newInstance(java.lang.Object[])>
Counter value: 1
SCC 7082 : 1
<java.util.RandomAccessSubList: void <init>(java.util.AbstractList,int,int)>
Counter value: 1
SCC 7083 : 1
<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>
Counter value: 1
SCC 7084 : 1
<java.util.concurrent.ForkJoinPool$DefaultCommonPoolForkJoinWorkerThreadFactory: java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool)>
Counter value: 1
SCC 7085 : 1
<java.util.stream.Nodes$ArrayNode: java.lang.Object[] asArray(java.util.function.IntFunction)>
Counter value: 1
SCC 7086 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfDouble: void <init>(java.util.function.Supplier)>
Counter value: 1
SCC 7087 : 1
<sun.net.ProgressSource: void <init>(java.net.URL,java.lang.String)>
Counter value: 1
SCC 7088 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator$OfPrimitive: void forEachRemaining(java.lang.Object)>
Counter value: 2
SCC 7089 : 1
<java.util.stream.SpinedBuffer$OfInt: int[] newArray(int)>
Counter value: 1
SCC 7090 : 1
<java.util.stream.AbstractShortCircuitTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 7091 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType genericMethodType(int,boolean)>
Counter value: 1
SCC 7092 : 1
<java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable)>
Counter value: 1
SCC 7093 : 1
<java.net.DatagramPacket$1: java.lang.Object run()>
Counter value: 1
SCC 7094 : 1
<java.lang.ProcessEnvironment$StringEnvironment: java.util.Collection values()>
Counter value: 2
SCC 7095 : 1
<javax.security.auth.Subject$SecureSet$3: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>
Counter value: 1
SCC 7096 : 1
<java.util.concurrent.atomic.AtomicBoolean: java.lang.String toString()>
Counter value: 1
SCC 7097 : 1
<java.util.Spliterators$ArraySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 7098 : 1
<java.util.Collections$EmptyListIterator: int previousIndex()>
Counter value: 1
SCC 7099 : 1
<java.lang.ProcessEnvironment$StringEntry: java.util.Map$Entry access$600(java.lang.ProcessEnvironment$StringEntry)>
Counter value: 1
SCC 7100 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate 'with'(java.time.LocalDate)>
Counter value: 1
SCC 7101 : 1
<java.util.stream.Sink$ChainedReference: void end()>
Counter value: 2
SCC 7102 : 1
<java.util.stream.FindOps$FindSink$OfDouble: java.util.OptionalDouble get()>
Counter value: 1
SCC 7103 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamClass$ClassDataSlot[] getClassDataLayout0()>
Counter value: 1
SCC 7104 : 1
<java.net.AbstractPlainSocketImpl: java.io.InputStream getInputStream()>
Counter value: 1
SCC 7105 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfInt: void <init>(java.util.stream.Nodes$SizedCollectorTask$OfInt,java.util.Spliterator,long,long)>
Counter value: 1
SCC 7106 : 1
<java.util.stream.Nodes: java.util.stream.Node$OfDouble node(double[])>
Counter value: 1
SCC 7107 : 1
<java.util.Arrays: java.util.Spliterator spliterator(java.lang.Object[],int,int)>
Counter value: 1
SCC 7108 : 1
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 7109 : 1
<java.util.stream.IntPipeline: void <init>(java.util.Spliterator,int,boolean)>
Counter value: 1
SCC 7110 : 1
<sun.security.x509.KeyUsageExtension: boolean[] getBits()>
Counter value: 1
SCC 7111 : 1
<java.io.ObjectStreamClass$lambda_newInstance_0__87: java.security.PrivilegedAction bootstrap$(java.io.ObjectStreamClass)>
Counter value: 1
SCC 7112 : 1
<java.lang.J9VMInternals: java.lang.Throwable cloneThrowable(java.lang.Throwable,java.util.HashMap)>
Counter value: 1
SCC 7113 : 1
<sun.util.calendar.JulianCalendar: sun.util.calendar.CalendarDate newCalendarDate()>
Counter value: 1
SCC 7114 : 1
<openj9.internal.security.RestrictedSecurity: void <init>()>
Counter value: 1
SCC 7115 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: void <init>(java.util.Spliterator$OfDouble,java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble)>
Counter value: 1
SCC 7116 : 1
<java.time.OffsetTime: java.time.OffsetTime of(java.time.LocalTime,java.time.ZoneOffset)>
Counter value: 1
SCC 7117 : 1
<java.io.ObjectInputStream$Logging: sun.util.logging.PlatformLogger access$500()>
Counter value: 1
SCC 7118 : 1
<java.util.concurrent.ForkJoinWorkerThread: void <init>(java.util.concurrent.ForkJoinPool)>
Counter value: 1
SCC 7119 : 1
<java.lang.reflect.Constructor: boolean hasGenericInformation()>
Counter value: 1
SCC 7120 : 1
<java.nio.file.FileSystemLoopException: void <init>(java.lang.String)>
Counter value: 1
SCC 7121 : 1
<java.util.RegularEnumSet: void clear()>
Counter value: 1
SCC 7122 : 1
<java.util.WeakHashMap$KeySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 7123 : 1
<java.nio.ByteOrder: java.lang.String toString()>
Counter value: 1
SCC 7124 : 1
<sun.util.calendar.JulianCalendar$Date: void <init>()>
Counter value: 1
SCC 7125 : 1
<java.net.Socket: void <init>(java.net.SocketImpl)>
Counter value: 1
SCC 7126 : 1
<java.util.stream.Nodes$EmptyNode: void forEach(java.lang.Object)>
Counter value: 1
SCC 7127 : 1
<java.util.ArrayDeque: boolean isEmpty()>
Counter value: 1
SCC 7128 : 1
<java.time.zone.ZoneRules: int hashCode()>
Counter value: 1
SCC 7129 : 1
<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>
Counter value: 1
SCC 7130 : 1
<java.util.Base64$Encoder: int outLength(int)>
Counter value: 1
SCC 7131 : 1
<java.util.concurrent.CountDownLatch$Sync: int getCount()>
Counter value: 1
SCC 7132 : 1
<sun.misc.FloatingDecimal$ASCIIToBinaryBuffer: float floatValue()>
Counter value: 1
SCC 7133 : 1
<sun.security.x509.GeneralSubtrees: void <init>(sun.security.x509.GeneralSubtrees)>
Counter value: 1
SCC 7134 : 1
<java.util.concurrent.TimeUnit$1: long toMicros(long)>
Counter value: 1
SCC 7135 : 1
<java.util.jar.Attributes: boolean isEmpty()>
Counter value: 2
SCC 7136 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfDouble: void accept(double)>
Counter value: 1
SCC 7137 : 1
<java.lang.invoke.ILGenMacros: void load()>
Counter value: 1
SCC 7138 : 1
<java.math.MathContext: int hashCode()>
Counter value: 1
SCC 7139 : 1
<java.nio.DirectByteBuffer: void <clinit>()>
Counter value: 1
SCC 7140 : 1
<java.util.jar.JarVerifier$4: boolean hasMoreElements()>
Counter value: 2
SCC 7141 : 1
<sun.util.locale.provider.CurrencyNameProviderImpl: java.lang.String getSymbol(java.lang.String,java.util.Locale)>
Counter value: 1
SCC 7142 : 1
<java.util.stream.ReferencePipeline$2: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 7143 : 1
<java.util.concurrent.LinkedBlockingQueue$Itr: void <init>(java.util.concurrent.LinkedBlockingQueue)>
Counter value: 1
SCC 7144 : 1
<jdk.internal.org.objectweb.asm.Type: java.lang.String toString()>
Counter value: 1
SCC 7145 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void readChars(char[],int,int)>
Counter value: 1
SCC 7146 : 1
<sun.misc.Unsafe: int getAndSetInt(java.lang.Object,long,int)>
Counter value: 1
SCC 7147 : 1
<java.util.concurrent.ForkJoinWorkerThread: java.util.concurrent.ForkJoinPool getPool()>
Counter value: 1
SCC 7148 : 1
<java.io.ObjectOutputStream$BlockDataOutputStream: void flush()>
Counter value: 2
SCC 7149 : 1
<java.util.stream.SliceOps$4: java.lang.Double[] lambda$opEvaluateParallelLazy$0(int)>
Counter value: 1
SCC 7150 : 1
<java.nio.channels.Channels$3: void write(int)>
Counter value: 1
SCC 7151 : 1
<jdk.internal.util.xml.BasicXmlPropertiesProvider: void <init>()>
Counter value: 1
SCC 7152 : 1
<javax.security.auth.SubjectDomainCombiner$1: void <init>(javax.security.auth.SubjectDomainCombiner,javax.security.auth.Subject)>
Counter value: 1
SCC 7153 : 1
<sun.reflect.ReflectionFactory$1: java.lang.Void run()>
Counter value: 1
SCC 7154 : 1
<java.nio.DirectCharBufferS: boolean isReadOnly()>
Counter value: 1
SCC 7155 : 1
<java.util.Collections$CopiesList: java.lang.Object lambda$stream$0(int)>
Counter value: 1
SCC 7156 : 1
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7157 : 1
<sun.nio.ch.PendingFuture: void setResult(java.lang.Object)>
Counter value: 1
SCC 7158 : 1
<java.util.IdentityHashMap$KeySet: java.lang.Object[] toArray()>
Counter value: 1
SCC 7159 : 1
<java.util.stream.SliceOps$4: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 7160 : 1
<java.nio.channels.spi.AbstractSelectableChannel: boolean isBlocking()>
Counter value: 1
SCC 7161 : 1
<java.util.stream.ReferencePipeline$4$1: void accept(java.lang.Object)>
Counter value: 1
SCC 7162 : 1
<sun.nio.ch.SocketDispatcher: int read(java.io.FileDescriptor,long,int)>
Counter value: 1
SCC 7163 : 1
<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()>
Counter value: 1
SCC 7164 : 1
<java.time.OffsetDateTime: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 7165 : 1
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: short getShort(java.lang.Object)>
Counter value: 1
SCC 7166 : 1
<java.util.jar.JarVerifier$1: boolean hasMoreElements()>
Counter value: 2
SCC 7167 : 1
<java.lang.ThreadLocal: java.lang.Object childValue(java.lang.Object)>
Counter value: 1
SCC 7168 : 1
<jdk.internal.org.xml.sax.SAXParseException: java.lang.String toString()>
Counter value: 1
SCC 7169 : 1
<java.util.EnumMap: boolean equals(java.lang.Object)>
Counter value: 2
SCC 7170 : 1
<sun.reflect.UnsafeFloatFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 7171 : 1
<java.lang.ClassValue$ClassValueMap: java.lang.ClassValue$Entry findReplacement(java.lang.ClassValue$Entry[],int)>
Counter value: 1
SCC 7172 : 1
<java.util.stream.AbstractPipeline$lambda_opEvaluateParallelLazy_2__64: java.util.function.IntFunction bootstrap$()>
Counter value: 1
SCC 7173 : 1
<java.io.ObjectStreamClass$3: void <init>(java.io.ObjectStreamClass,java.lang.Class)>
Counter value: 1
SCC 7174 : 1
<java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
Counter value: 1
SCC 7175 : 1
<sun.nio.ch.FileLockImpl: boolean isValid()>
Counter value: 1
SCC 7176 : 1
<java.util.ArraysParallelSortHelpers$FJDouble$Sorter: void compute()>
Counter value: 1
SCC 7177 : 1
<sun.net.www.MessageHeader$HeaderIterator: void remove()>
Counter value: 1
SCC 7178 : 1
<java.util.TreeMap$DescendingKeySpliterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry,java.util.TreeMap$Entry,int,int,int)>
Counter value: 1
SCC 7179 : 1
<java.util.stream.IntPipeline$StatefulOp: boolean opIsStateful()>
Counter value: 1
SCC 7180 : 1
<java.util.RegularEnumSet: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7181 : 1
<sun.nio.ch.FileChannelImpl: void <init>(java.io.FileDescriptor,java.lang.String,boolean,boolean,boolean,java.lang.Object)>
Counter value: 1
SCC 7182 : 1
<java.lang.invoke.ThunkKey: void load()>
Counter value: 1
SCC 7183 : 1
<java.util.jar.JarVerifier$2: java.lang.Object nextElement()>
Counter value: 1
SCC 7184 : 1
<java.util.Arrays: void parallelSort(long[])>
Counter value: 1
SCC 7185 : 1
<java.io.InputStream: void reset()>
Counter value: 1
SCC 7186 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: void <init>(java.lang.String,java.net.InetAddress,int,java.net.InetSocketAddress$1)>
Counter value: 1
SCC 7187 : 1
<java.lang.invoke.PermuteHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 7188 : 1
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>
Counter value: 1
SCC 7189 : 1
<java.time.temporal.IsoFields$Field: java.time.temporal.ValueRange rangeRefinedBy(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 7190 : 1
<sun.net.www.http.HttpClient: void logFinest(java.lang.String)>
Counter value: 1
SCC 7191 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.net.SocketPermission URLtoSocketPermission(java.net.URL)>
Counter value: 1
SCC 7192 : 1
<sun.nio.fs.NativeBuffers: sun.nio.fs.NativeBuffer allocNativeBuffer(int)>
Counter value: 1
SCC 7193 : 1
<java.util.Collections$SetFromMap: java.lang.Object[] toArray()>
Counter value: 2
SCC 7194 : 1
<sun.security.x509.IssuerAlternativeNameExtension: java.lang.String getName()>
Counter value: 1
SCC 7195 : 1
<java.nio.DirectCharBufferRU: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 7196 : 1
<sun.reflect.UnsafeDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 7197 : 1
<java.text.DecimalFormatSymbols: java.lang.String getCurrencySymbol()>
Counter value: 1
SCC 7198 : 1
<java.time.chrono.JapaneseEra: java.time.chrono.JapaneseEra of(int)>
Counter value: 1
SCC 7199 : 1
<java.util.stream.DoubleStream$1: double nextDouble()>
Counter value: 1
SCC 7200 : 1
<java.lang.invoke.ConvertHandle: void checkConversion(java.lang.invoke.MethodType,java.lang.invoke.MethodType)>
Counter value: 1
SCC 7201 : 1
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 7202 : 1
<java.net.SocksSocketImpl: void access$000(java.net.SocksSocketImpl,java.lang.String,int,int)>
Counter value: 1
SCC 7203 : 1
<java.net.HttpCookie: void <clinit>()>
Counter value: 1
SCC 7204 : 1
<java.lang.StringBuilder: boolean isCompressed()>
Counter value: 1
SCC 7205 : 1
<java.util.OptionalDouble: void <init>()>
Counter value: 1
SCC 7206 : 1
<java.io.ObjectStreamClass: java.lang.ClassNotFoundException getResolveException()>
Counter value: 1
SCC 7207 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: java.util.Map getDisplayNames(java.lang.String,int,int,java.util.Locale)>
Counter value: 2
SCC 7208 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: boolean hasNext()>
Counter value: 1
SCC 7209 : 1
<java.io.Console$2: java.nio.charset.Charset charset()>
Counter value: 1
SCC 7210 : 1
<java.util.Base64$Encoder: int encode0(byte[],int,int,byte[])>
Counter value: 1
SCC 7211 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: java.lang.Object[] toArray()>
Counter value: 1
SCC 7212 : 1
<sun.net.www.http.KeepAliveCache: void removeVector(sun.net.www.http.KeepAliveKey)>
Counter value: 1
SCC 7213 : 1
<java.time.chrono.HijrahChronology: int[] createEpochMonths(int,int,int,java.util.Map)>
Counter value: 1
SCC 7214 : 1
<java.io.FilterInputStream: void reset()>
Counter value: 2
SCC 7215 : 1
<java.nio.DirectCharBufferRU: void <init>(sun.nio.ch.DirectBuffer,int,int,int,int,int)>
Counter value: 1
SCC 7216 : 1
<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.lang.String,int,java.lang.String,java.lang.String)>
Counter value: 1
SCC 7217 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath resolve(byte[])>
Counter value: 1
SCC 7218 : 1
<java.util.OptionalInt: int hashCode()>
Counter value: 1
SCC 7219 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 7220 : 1
<java.time.chrono.HijrahChronology: int epochMonthToYear(int)>
Counter value: 1
SCC 7221 : 1
<java.net.HttpRetryException: void <init>(java.lang.String,int,java.lang.String)>
Counter value: 1
SCC 7222 : 1
<java.util.Scanner: boolean revertState(boolean)>
Counter value: 1
SCC 7223 : 1
<java.util.ArrayDeque$DescendingIterator: boolean hasNext()>
Counter value: 1
SCC 7224 : 1
<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: java.lang.Void getRawResult()>
Counter value: 1
SCC 7225 : 1
<java.util.Vector: boolean addAll(int,java.util.Collection)>
Counter value: 1
SCC 7226 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$1: java.lang.Object next()>
Counter value: 1
SCC 7227 : 1
<java.util.stream.Nodes$ConcNode$OfDouble: void <init>(java.util.stream.Node$OfDouble,java.util.stream.Node$OfDouble)>
Counter value: 1
SCC 7228 : 1
<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>
Counter value: 1
SCC 7229 : 1
<java.nio.CharBufferSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 7230 : 1
<sun.net.www.MessageHeader$HeaderIterator: void <init>(sun.net.www.MessageHeader,java.lang.String,java.lang.Object)>
Counter value: 1
SCC 7231 : 1
<java.lang.invoke.ConstantHandle: java.lang.invoke.ConstantHandle get(java.lang.Class,java.lang.Object)>
Counter value: 1
SCC 7232 : 1
<java.util.HashMap$KeySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 7233 : 1
<java.security.KeyStore$Builder$FileBuilder$1: java.lang.Object run()>
Counter value: 1
SCC 7234 : 1
<sun.net.www.protocol.http.AuthenticationInfo: java.lang.Object clone()>
Counter value: 1
SCC 7235 : 1
<java.util.WeakHashMap$EntrySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 7236 : 1
<java.time.chrono.HijrahChronology: long getEpochDay(int,int,int)>
Counter value: 1
SCC 7237 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl: sun.nio.ch.ThreadPool access$000(sun.nio.ch.AsynchronousChannelGroupImpl)>
Counter value: 1
SCC 7238 : 1
<java.nio.HeapByteBufferR: byte _get(int)>
Counter value: 1
SCC 7239 : 1
<java.nio.DirectLongBufferS: long ix(int)>
Counter value: 1
SCC 7240 : 1
<java.util.Spliterators: java.util.Spliterator emptySpliterator()>
Counter value: 1
SCC 7241 : 1
<java.util.Map$Entry$lambda_comparingByKey_6d558cbf_1__60: java.util.Comparator bootstrap$(java.util.Comparator)>
Counter value: 1
SCC 7242 : 1
<java.util.stream.SpinedBuffer$OfInt$1Splitr: void arrayForOne(java.lang.Object,int,java.lang.Object)>
Counter value: 1
SCC 7243 : 1
<java.util.OptionalInt: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7244 : 1
<java.lang.StackTraceElement: int hashCode()>
Counter value: 1
SCC 7245 : 1
<sun.net.www.ParseUtil: java.net.URI toURI(java.net.URL)>
Counter value: 1
SCC 7246 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator$lambda_initPartialTraversalState_0__43: boolean getAsBoolean()>
Counter value: 1
SCC 7247 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 7248 : 1
<java.io.PrintStream: void <init>(java.lang.String)>
Counter value: 1
SCC 7249 : 1
<sun.security.util.KnownOIDs$5: boolean registerNames()>
Counter value: 1
SCC 7250 : 1
<java.lang.invoke.Insert1Handle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 7251 : 1
<sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7252 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Spliterator spliterator()>
Counter value: 1
SCC 7253 : 1
<java.nio.ShortBuffer: boolean equals(short,short)>
Counter value: 1
SCC 7254 : 1
<java.util.concurrent.CountedCompleter: boolean compareAndSetPendingCount(int,int)>
Counter value: 1
SCC 7255 : 1
<java.security.KeyStore$TrustedCertificateEntry: java.lang.String toString()>
Counter value: 1
SCC 7256 : 1
<java.io.ObjectInputStream$FilterValues: void <init>(java.lang.Class,long,long,long,long)>
Counter value: 1
SCC 7257 : 1
<sun.misc.PerfCounter: java.lang.String toString()>
Counter value: 1
SCC 7258 : 1
<java.util.stream.SliceOps$1: java.util.Spliterator unorderedSkipLimitSpliterator(java.util.Spliterator,long,long,long)>
Counter value: 1
SCC 7259 : 1
<java.util.concurrent.TimeUnit$1: long toMillis(long)>
Counter value: 1
SCC 7260 : 1
<sun.security.x509.ReasonFlags: boolean isSet(int)>
Counter value: 1
SCC 7261 : 1
<sun.nio.ch.SharedFileLockTable: void remove(java.nio.channels.FileLock)>
Counter value: 1
SCC 7262 : 1
<java.util.stream.Sink$ChainedInt: boolean cancellationRequested()>
Counter value: 2
SCC 7263 : 1
<java.util.Vector: void sort(java.util.Comparator)>
Counter value: 1
SCC 7264 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.Lock writeLock()>
Counter value: 1
SCC 7265 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToDoubleTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToDoubleTask,java.util.function.ToDoubleBiFunction,double,java.util.function.DoubleBinaryOperator)>
Counter value: 1
SCC 7266 : 1
<java.util.Collections$CheckedList: java.lang.Object get(int)>
Counter value: 2
SCC 7267 : 1
<java.util.stream.Nodes$ToArrayTask$OfRef: void <init>(java.util.stream.Node,java.lang.Object[],int)>
Counter value: 1
SCC 7268 : 1
<java.util.concurrent.CountedCompleter: void tryComplete()>
Counter value: 1
SCC 7269 : 1
<java.util.JapaneseImperialCalendar: int getGreatestMinimum(int)>
Counter value: 1
SCC 7270 : 1
<sun.nio.ch.Util$BufferCache: int next(int)>
Counter value: 1
SCC 7271 : 1
<java.nio.Bits: void putCharL(java.nio.ByteBuffer,int,char)>
Counter value: 1
SCC 7272 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate plusDays(long)>
Counter value: 1
SCC 7273 : 1
<java.util.stream.ReduceOps$4: java.util.stream.ReduceOps$4ReducingSink makeSink()>
Counter value: 1
SCC 7274 : 1
<java.nio.ByteBufferAsCharBufferRL: java.nio.CharBuffer compact()>
Counter value: 1
SCC 7275 : 1
<sun.nio.ch.Util: boolean isBufferTooLarge(java.nio.ByteBuffer)>
Counter value: 1
SCC 7276 : 1
<java.util.stream.Nodes: long[] access$600()>
Counter value: 1
SCC 7277 : 1
<java.lang.ProcessEnvironment$StringEnvironment: int size()>
Counter value: 2
SCC 7278 : 1
<java.util.AbstractMap$2: void clear()>
Counter value: 1
SCC 7279 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 7280 : 1
<java.nio.ByteBufferAsDoubleBufferB: double get(int)>
Counter value: 1
SCC 7281 : 1
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>
Counter value: 1
SCC 7282 : 1
<java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader$1: void <init>(java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader)>
Counter value: 1
SCC 7283 : 1
<java.net.HttpCookie$5: void <init>()>
Counter value: 1
SCC 7284 : 1
<java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory: java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool)>
Counter value: 1
SCC 7285 : 1
<sun.net.www.protocol.http.BasicAuthentication: void <clinit>()>
Counter value: 1
SCC 7286 : 1
<sun.nio.ch.SocketChannelImpl: boolean isOutputOpen()>
Counter value: 1
SCC 7287 : 1
<java.util.concurrent.TimeUnit$1: long toDays(long)>
Counter value: 1
SCC 7288 : 1
<java.nio.file.attribute.FileTime: long toExcessNanos(long)>
Counter value: 1
SCC 7289 : 1
<java.util.stream.Nodes$ConcNode: java.util.stream.Node truncate(long,long,java.util.function.IntFunction)>
Counter value: 2
SCC 7290 : 1
<java.net.URLConnection: java.lang.String getContentType()>
Counter value: 1
SCC 7291 : 1
<java.util.stream.ReduceOps$12ReducingSink: void combine(java.util.stream.ReduceOps$AccumulatingSink)>
Counter value: 1
SCC 7292 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfPrimitive: boolean tryAdvance(java.lang.Object)>
Counter value: 2
SCC 7293 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToLongTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 7294 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: void <init>(java.util.concurrent.ConcurrentHashMap)>
Counter value: 1
SCC 7295 : 1
<sun.misc.ProxyGenerator: int access$600(java.lang.Class)>
Counter value: 1
SCC 7296 : 1
<sun.nio.ch.Net: java.lang.String getRevealedLocalAddressAsString(java.net.InetSocketAddress)>
Counter value: 1
SCC 7297 : 1
<java.util.HashMap$ValueSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 7298 : 1
<sun.reflect.ClassFileAssembler: void emitConstantPoolMethodref(short,short)>
Counter value: 1
SCC 7299 : 1
<sun.nio.fs.UnixFileAttributes: java.nio.file.attribute.FileTime lastModifiedTime()>
Counter value: 1
SCC 7300 : 1
<javax.crypto.NullCipherSpi: byte[] engineDoFinal(byte[],int,int)>
Counter value: 1
SCC 7301 : 1
<java.io.PrintStream: void println(java.lang.String)>
Counter value: 1
SCC 7302 : 1
<java.lang.Class: java.lang.Object newInstance()>
Counter value: 1
SCC 7303 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller$1: java.lang.invoke.MethodHandle computeValue(java.lang.Class)>
Counter value: 1
SCC 7304 : 1
<java.lang.invoke.MethodHandle: void enforceArityLimit(byte,java.lang.invoke.MethodType)>
Counter value: 1
SCC 7305 : 1
<java.lang.VMAccess: java.lang.String getPackageName(java.lang.Class)>
Counter value: 1
SCC 7306 : 1
<sun.nio.ch.NativeThreadSet: void <init>(int)>
Counter value: 1
SCC 7307 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToIntTask: void compute()>
Counter value: 1
SCC 7308 : 1
<java.util.stream.ReduceOps$9ReducingSink: void begin(long)>
Counter value: 1
SCC 7309 : 1
<sun.reflect.UnsafeFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 7310 : 1
<sun.reflect.ByteVectorImpl: void put(int,byte)>
Counter value: 1
SCC 7311 : 1
<java.io.ObjectInputStream: java.lang.Object readOrdinaryObject(boolean)>
Counter value: 1
SCC 7312 : 1
<java.util.LinkedList$LLSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 7313 : 1
<java.util.Base64$EncOutputStream: void close()>
Counter value: 2
SCC 7314 : 1
<java.util.regex.Matcher: boolean hitEnd()>
Counter value: 1
SCC 7315 : 1
<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: int read(byte[],int,int)>
Counter value: 2
SCC 7316 : 1
<java.net.InterfaceAddress: java.lang.String toString()>
Counter value: 1
SCC 7317 : 1
<java.lang.ClassLoader: boolean getDefaultAssertionStatus()>
Counter value: 1
SCC 7318 : 1
<java.text.ParsePosition: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7319 : 1
<java.util.concurrent.TimeUnit$4: long toMicros(long)>
Counter value: 1
SCC 7320 : 1
<java.net.Socket: java.lang.String toString()>
Counter value: 1
SCC 7321 : 1
<java.util.stream.DoublePipeline$StatelessOp: java.util.stream.DoubleStream sequential()>
Counter value: 1
SCC 7322 : 1
<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>
Counter value: 1
SCC 7323 : 1
<java.time.chrono.ChronoLocalDateImpl: java.time.chrono.ChronoLocalDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 7324 : 1
<java.security.KeyStore$Builder$FileBuilder$1: java.security.KeyStore run0()>
Counter value: 1
SCC 7325 : 1
<java.util.DualPivotQuicksort: void sort(double[],int,int,double[],int,int)>
Counter value: 1
SCC 7326 : 1
<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: void close()>
Counter value: 2
SCC 7327 : 1
<java.util.WeakHashMap$KeySet: void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1)>
Counter value: 1
SCC 7328 : 1
<java.lang.invoke.ProxyClassesDumper: void <init>(java.nio.file.Path)>
Counter value: 1
SCC 7329 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl$4$1: void <init>(sun.nio.ch.AsynchronousChannelGroupImpl$4)>
Counter value: 1
SCC 7330 : 1
<java.net.HostPortrange: java.lang.String toLowerCase(java.lang.String)>
Counter value: 1
SCC 7331 : 1
<sun.net.ExtendedOptionsImpl: void checkValueType(java.lang.Object,java.lang.Class)>
Counter value: 1
SCC 7332 : 1
<sun.nio.ch.IOUtil: int write(java.io.FileDescriptor,java.nio.ByteBuffer,long,sun.nio.ch.NativeDispatcher)>
Counter value: 1
SCC 7333 : 1
<java.util.Vector: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 7334 : 1
<java.util.concurrent.ThreadLocalRandom$RandomLongsSpliterator: void <init>(long,long,long,long)>
Counter value: 1
SCC 7335 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.io.OutputStream getOutputStream0()>
Counter value: 1
SCC 7336 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: void transferStealCount(java.util.concurrent.ForkJoinPool)>
Counter value: 1
SCC 7337 : 1
<sun.nio.fs.UnixPath: java.lang.String toString()>
Counter value: 1
SCC 7338 : 1
<java.lang.Float: int hashCode()>
Counter value: 1
SCC 7339 : 1
<java.nio.file.spi.FileSystemProvider: java.util.List access$000()>
Counter value: 1
SCC 7340 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfRef: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 2
SCC 7341 : 1
<java.nio.Bits: byte char1(char)>
Counter value: 1
SCC 7342 : 1
<sun.security.x509.CertificateValidity: java.lang.String getName()>
Counter value: 1
SCC 7343 : 1
<java.util.concurrent.ConcurrentHashMap$SearchEntriesTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.Function,java.util.concurrent.atomic.AtomicReference)>
Counter value: 1
SCC 7344 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 7345 : 1
<java.time.format.DecimalStyle: java.lang.String toString()>
Counter value: 1
SCC 7346 : 1
<java.nio.file.FileTreeWalker$Event: java.nio.file.FileTreeWalker$EventType type()>
Counter value: 1
SCC 7347 : 1
<java.util.stream.SliceOps$SliceTask: java.util.stream.Node doLeaf()>
Counter value: 1
SCC 7348 : 1
<java.util.IdentityHashMap$ValueSpliterator: java.util.IdentityHashMap$ValueSpliterator trySplit()>
Counter value: 1
SCC 7349 : 1
<java.util.TreeMap$EntrySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 7350 : 1
<java.nio.ByteBuffer: int compareTo(java.nio.ByteBuffer)>
Counter value: 1
SCC 7351 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 7352 : 1
<sun.reflect.ClassDefiner$1: java.lang.ClassLoader run()>
Counter value: 1
SCC 7353 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfDouble: void <init>(java.util.Spliterator,java.util.stream.PipelineHelper,double[])>
Counter value: 1
SCC 7354 : 1
<sun.text.IntHashtable: int hashCode()>
Counter value: 1
SCC 7355 : 1
<java.util.Spliterators$LongArraySpliterator: java.util.Spliterator$OfLong trySplit()>
Counter value: 1
SCC 7356 : 1
<java.util.concurrent.ForkJoinWorkerThread: void eraseThreadLocals()>
Counter value: 1
SCC 7357 : 1
<sun.net.www.http.ClientVector: void <init>(int)>
Counter value: 1
SCC 7358 : 1
<java.util.stream.DistinctOps$1$1: void begin(long)>
Counter value: 2
SCC 7359 : 1
<sun.nio.ch.SocketChannelImpl: void <clinit>()>
Counter value: 1
SCC 7360 : 1
<java.util.stream.Nodes: java.util.stream.Node emptyNode(java.util.stream.StreamShape)>
Counter value: 1
SCC 7361 : 1
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 7362 : 1
<java.net.HttpCookie$11: void <init>()>
Counter value: 1
SCC 7363 : 1
<java.nio.ByteBuffer: int compare(byte,byte)>
Counter value: 1
SCC 7364 : 1
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>
Counter value: 2
SCC 7365 : 1
<java.lang.invoke.ConvertHandle: void <clinit>()>
Counter value: 1
SCC 7366 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfInt$lambda_emptyConsumer_0__51: java.util.function.IntConsumer bootstrap$()>
Counter value: 1
SCC 7367 : 1
<java.util.stream.Nodes: java.util.stream.Node conc(java.util.stream.StreamShape,java.util.stream.Node,java.util.stream.Node)>
Counter value: 1
SCC 7368 : 1
<java.lang.invoke.FilterReturnHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 7369 : 1
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>
Counter value: 1
SCC 7370 : 1
<sun.security.provider.X509Factory: java.lang.Object getFromCache(sun.security.util.Cache,byte[])>
Counter value: 1
SCC 7371 : 1
<java.util.TreeSet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 7372 : 1
<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>
Counter value: 1
SCC 7373 : 1
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>
Counter value: 1
SCC 7374 : 1
<java.nio.Bits: void putLongL(java.nio.ByteBuffer,int,long)>
Counter value: 1
SCC 7375 : 1
<java.time.OffsetTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 7376 : 1
<sun.net.www.protocol.http.HttpURLConnection$11: java.net.InetAddress run()>
Counter value: 1
SCC 7377 : 1
<sun.reflect.ClassFileAssembler: void emitByte(byte)>
Counter value: 1
SCC 7378 : 1
<java.io.DataOutputStream: void writeLong(long)>
Counter value: 1
SCC 7379 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToIntTask: void compute()>
Counter value: 1
SCC 7380 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl$2: java.lang.Void run()>
Counter value: 1
SCC 7381 : 1
<sun.misc.Cleaner$1: java.lang.Void run()>
Counter value: 1
SCC 7382 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean isBeforeEnd(java.util.concurrent.ConcurrentSkipListMap$Node,java.util.Comparator)>
Counter value: 1
SCC 7383 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: void <init>(java.util.stream.PipelineHelper,java.util.function.Supplier,boolean)>
Counter value: 1
SCC 7384 : 1
<java.nio.file.Files$2: boolean hasNext()>
Counter value: 2
SCC 7385 : 1
<java.net.Socket$1: java.lang.Boolean run()>
Counter value: 1
SCC 7386 : 1
<java.net.HttpURLConnection: void <init>(java.net.URL)>
Counter value: 1
SCC 7387 : 1
<java.util.stream.DoublePipeline$Head: java.util.stream.DoubleStream sequential()>
Counter value: 1
SCC 7388 : 1
<java.util.concurrent.TimeUnit$7: long toMinutes(long)>
Counter value: 1
SCC 7389 : 1
<java.nio.file.FileSystemException: java.lang.String getMessage()>
Counter value: 1
SCC 7390 : 1
<java.util.Hashtable$EntrySet: boolean add(java.util.Map$Entry)>
Counter value: 1
SCC 7391 : 1
<java.lang.reflect.AccessibleObject: void <init>()>
Counter value: 1
SCC 7392 : 1
<sun.reflect.ClassDefiner: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.lang.ClassLoader)>
Counter value: 1
SCC 7393 : 1
<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate()>
Counter value: 1
SCC 7394 : 1
<java.util.stream.Nodes$LongArrayNode: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 7395 : 1
<java.net.HttpCookie$9: void <init>()>
Counter value: 1
SCC 7396 : 1
<sun.nio.ch.SimpleAsynchronousFileChannelImpl$2: void run()>
Counter value: 1
SCC 7397 : 1
<java.util.stream.SliceOps$2: java.util.Spliterator opEvaluateParallelLazy(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 7398 : 1
<sun.reflect.AccessorGenerator: short add(short,short)>
Counter value: 1
SCC 7399 : 1
<sun.security.x509.X509CRLImpl: byte[] getEncodedInternal()>
Counter value: 1
SCC 7400 : 1
<java.nio.ByteBufferAsCharBufferB: char getUnchecked(int)>
Counter value: 1
SCC 7401 : 1
<java.util.HashMap$KeySpliterator: void <init>(java.util.HashMap,int,int,int,int)>
Counter value: 1
SCC 7402 : 1
<java.io.Console$LineReader: void <init>(java.io.Console,java.io.Reader)>
Counter value: 1
SCC 7403 : 1
<sun.nio.ch.FileDispatcherImpl: int lock(java.io.FileDescriptor,boolean,long,long,boolean)>
Counter value: 1
SCC 7404 : 1
<sun.security.x509.CertificatePolicyId: java.lang.String toString()>
Counter value: 1
SCC 7405 : 1
<sun.nio.ch.ThreadPool$lambda_null_1__36: void <init>(java.lang.Runnable)>
Counter value: 1
SCC 7406 : 1
<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>
Counter value: 2
SCC 7407 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 7408 : 1
<sun.security.x509.AccessDescription: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7409 : 1
<sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7410 : 1
<java.net.Socket: void setConnected()>
Counter value: 1
SCC 7411 : 1
<java.util.concurrent.LinkedBlockingQueue: void unlink(java.util.concurrent.LinkedBlockingQueue$Node,java.util.concurrent.LinkedBlockingQueue$Node)>
Counter value: 1
SCC 7412 : 1
<sun.nio.ch.Util$3: boolean remove(java.lang.Object)>
Counter value: 2
SCC 7413 : 1
<java.util.TreeMap$NavigableSubMap: boolean containsKey(java.lang.Object)>
Counter value: 1
SCC 7414 : 1
<java.io.UncheckedIOException: java.io.IOException getCause()>
Counter value: 1
SCC 7415 : 1
<java.net.Inet6Address: int getScopeId()>
Counter value: 1
SCC 7416 : 1
<java.io.ObjectInputStream$HandleTable: void markException(int,java.lang.ClassNotFoundException)>
Counter value: 2
SCC 7417 : 1
<java.time.chrono.AbstractChronology$lambda_static_2241c452_1__7: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7418 : 1
<java.util.stream.IntPipeline$9$1: void accept(int)>
Counter value: 2
SCC 7419 : 1
<java.util.Collections$UnmodifiableMap: int size()>
Counter value: 2
SCC 7420 : 1
<java.util.concurrent.FutureTask: void setException(java.lang.Throwable)>
Counter value: 1
SCC 7421 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfRef: void forEach(java.util.function.Consumer,long)>
Counter value: 1
SCC 7422 : 1
<java.io.ObjectStreamClass: boolean superHasAccessibleConstructor(java.lang.Class)>
Counter value: 1
SCC 7423 : 1
<java.util.Scanner: void revertState()>
Counter value: 1
SCC 7424 : 1
<sun.util.resources.ParallelListResourceBundle$KeySet$1: boolean hasNext()>
Counter value: 2
SCC 7425 : 1
<java.util.ArrayDeque: boolean delete(int)>
Counter value: 1
SCC 7426 : 1
<java.util.stream.Nodes$ConcNode: void copyInto(java.lang.Object[],int)>
Counter value: 2
SCC 7427 : 1
<sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 7428 : 1
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7429 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoDate 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 7430 : 1
<sun.nio.ch.SocketAdaptor: java.net.InetAddress getInetAddress()>
Counter value: 1
SCC 7431 : 1
<sun.misc.InnocuousThread: void eraseThreadLocals()>
Counter value: 1
SCC 7432 : 1
<java.util.concurrent.TimeUnit$6: long toDays(long)>
Counter value: 1
SCC 7433 : 1
<java.io.InvalidObjectException: void <init>(java.lang.String)>
Counter value: 1
SCC 7434 : 1
<java.lang.invoke.SecurityFrameInjector$3: java.lang.invoke.MethodHandle run()>
Counter value: 1
SCC 7435 : 1
<java.util.stream.Nodes$ToArrayTask$OfPrimitive: void copyNodeToArray()>
Counter value: 1
SCC 7436 : 1
<java.time.OffsetDateTime: void <init>(java.time.LocalDateTime,java.time.ZoneOffset)>
Counter value: 1
SCC 7437 : 1
<java.time.chrono.MinguoDate: int hashCode()>
Counter value: 1
SCC 7438 : 1
<java.time.Year: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7439 : 1
<java.time.OffsetDateTime: java.time.OffsetDateTime minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 7440 : 1
<java.nio.Bits: long makeLong(byte,byte,byte,byte,byte,byte,byte,byte)>
Counter value: 1
SCC 7441 : 1
<java.util.jar.Attributes: java.util.Collection values()>
Counter value: 2
SCC 7442 : 1
<java.nio.file.attribute.FileTime: long scale(long,long,long)>
Counter value: 1
SCC 7443 : 1
<java.util.stream.Node$lambda_truncate_0__103: java.util.function.Consumer bootstrap$()>
Counter value: 1
SCC 7444 : 1
<java.lang.StringBuffer: char[] shareValue()>
Counter value: 1
SCC 7445 : 1
<java.util.stream.Nodes$SpinedNodeBuilder: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 7446 : 1
<java.time.chrono.MinguoChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
Counter value: 1
SCC 7447 : 1
<java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
Counter value: 2
SCC 7448 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator: java.util.Spliterator trySplit()>
Counter value: 2
SCC 7449 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: void add(java.lang.Object)>
Counter value: 1
SCC 7450 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 7451 : 1
<java.util.stream.IntPipeline$4$1: void accept(int)>
Counter value: 1
SCC 7452 : 1
<java.util.EnumMap: java.lang.Object remove(java.lang.Object)>
Counter value: 1
SCC 7453 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: boolean tryRemoveAndExec(java.util.concurrent.ForkJoinTask)>
Counter value: 1
SCC 7454 : 1
<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: void <init>(java.lang.String,int)>
Counter value: 1
SCC 7455 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: void <init>(java.util.concurrent.ConcurrentSkipListMap$SubMap)>
Counter value: 1
SCC 7456 : 1
<sun.net.NetworkClient: void openServer(java.lang.String,int)>
Counter value: 1
SCC 7457 : 1
<java.util.Collections$UnmodifiableMap: int hashCode()>
Counter value: 2
SCC 7458 : 1
<java.lang.reflect.Executable: int getParameterCount()>
Counter value: 1
SCC 7459 : 1
<sun.net.www.http.ChunkedInputStream: void closeUnderlying()>
Counter value: 1
SCC 7460 : 1
<java.net.Proxy: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7461 : 1
<sun.net.www.HeaderParser$ParserIterator: void remove()>
Counter value: 1
SCC 7462 : 1
<sun.net.www.MessageHeader: int access$000(sun.net.www.MessageHeader)>
Counter value: 1
SCC 7463 : 1
<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: java.io.InputStream getErrorStream(java.io.InputStream,long,sun.net.www.http.HttpClient)>
Counter value: 1
SCC 7464 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: int hashCode()>
Counter value: 1
SCC 7465 : 1
<java.util.ArrayList$ArrayListSpliterator: int getFence()>
Counter value: 1
SCC 7466 : 1
<java.util.Collections$SynchronizedMap: boolean isEmpty()>
Counter value: 2
SCC 7467 : 1
<java.util.stream.Sink: void begin(long)>
Counter value: 1
SCC 7468 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToDoubleTask: void compute()>
Counter value: 1
SCC 7469 : 1
<java.util.stream.ForEachOps$ForEachOp$OfRef: java.lang.Object evaluateSequential(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 7470 : 1
<sun.net.NetHooks: void beforeTcpConnect(java.io.FileDescriptor,java.net.InetAddress,int)>
Counter value: 1
SCC 7471 : 1
<java.util.TreeMap: java.util.TreeMap$Entry getLastEntry()>
Counter value: 1
SCC 7472 : 1
<java.util.concurrent.TimeUnit$4: long toMillis(long)>
Counter value: 1
SCC 7473 : 1
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 7474 : 1
<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.Object getKey()>
Counter value: 1
SCC 7475 : 1
<java.util.stream.ReduceOps$12ReducingSink: void <init>(java.util.function.DoubleBinaryOperator)>
Counter value: 1
SCC 7476 : 1
<java.lang.invoke.ThunkKey: java.lang.invoke.MethodType computeThunkableType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 7477 : 1
<java.time.chrono.MinguoDate: java.time.chrono.Chronology getChronology()>
Counter value: 1
SCC 7478 : 1
<java.lang.invoke.ThunkKey: int hashCode()>
Counter value: 1
SCC 7479 : 1
<java.util.concurrent.TimeUnit: long toMillis(long)>
Counter value: 1
SCC 7480 : 1
<java.util.concurrent.CountedCompleter: java.util.concurrent.CountedCompleter getCompleter()>
Counter value: 1
SCC 7481 : 1
<java.util.ArrayList$SubList$1: void add(java.lang.Object)>
Counter value: 1
SCC 7482 : 1
<java.net.URI: java.lang.String toASCIIString()>
Counter value: 1
SCC 7483 : 1
<java.util.EnumMap: java.lang.Object access$500(java.util.EnumMap,java.lang.Object)>
Counter value: 1
SCC 7484 : 1
<java.util.EnumMap$EntrySet: void <init>(java.util.EnumMap,java.util.EnumMap$1)>
Counter value: 1
SCC 7485 : 1
<java.util.EnumMap: java.util.Set entrySet()>
Counter value: 1
SCC 7486 : 1
<java.lang.invoke.FilterReturnHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 7487 : 1
<java.io.ObjectInputStream: java.lang.ClassLoader latestUserDefinedLoader()>
Counter value: 1
SCC 7488 : 1
<java.util.Spliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 7489 : 1
<sun.security.x509.KeyUsageExtension: java.lang.String toString()>
Counter value: 1
SCC 7490 : 1
<java.util.stream.IntPipeline$9: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 7491 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 7492 : 1
<java.util.concurrent.ThreadLocalRandom$RandomIntsSpliterator: int characteristics()>
Counter value: 1
SCC 7493 : 1
<sun.util.calendar.AbstractCalendar: boolean validateTime(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 7494 : 1
<sun.misc.PathPermissions$1: java.lang.Void run()>
Counter value: 1
SCC 7495 : 1
<java.lang.ProcessBuilder$Redirect$3: java.io.File file()>
Counter value: 1
SCC 7496 : 1
<sun.reflect.ByteVectorImpl: void trim()>
Counter value: 1
SCC 7497 : 1
<java.lang.reflect.WeakCache$CacheKey: void <clinit>()>
Counter value: 1
SCC 7498 : 1
<java.time.Instant: boolean isAfter(java.time.Instant)>
Counter value: 1
SCC 7499 : 1
<java.util.stream.ReduceOps$1: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 7500 : 1
<java.util.TreeMap$NavigableSubMap: java.util.TreeMap$Entry absHighFence()>
Counter value: 1
SCC 7501 : 1
<java.util.stream.FindOps$FindTask: void <init>(java.util.stream.FindOps$FindOp,java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 7502 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: void <init>(java.util.concurrent.ForkJoinPool,java.util.concurrent.ForkJoinWorkerThread)>
Counter value: 1
SCC 7503 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType asCollectorType(java.lang.Class,int)>
Counter value: 1
SCC 7504 : 1
<java.io.OutputStreamWriter: void close()>
Counter value: 1
SCC 7505 : 1
<sun.nio.ch.ChannelInputStream: int read()>
Counter value: 1
SCC 7506 : 1
<java.util.stream.FindOps$FindSink: boolean cancellationRequested()>
Counter value: 1
SCC 7507 : 1
<java.time.chrono.HijrahDate: java.time.chrono.ChronoLocalDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 7508 : 1
<sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes: boolean isDirectory()>
Counter value: 1
SCC 7509 : 1
<java.nio.DirectByteBuffer: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 7510 : 1
<java.security.Provider: void implClear()>
Counter value: 1
SCC 7511 : 1
<sun.misc.ProxyGenerator: byte[] generateProxyClass(java.lang.String,java.lang.Class[],int)>
Counter value: 1
SCC 7512 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType dropParameterTypes(int,int)>
Counter value: 1
SCC 7513 : 1
<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()>
Counter value: 1
SCC 7514 : 1
<sun.reflect.ClassFileAssembler: void opc_instanceof(short)>
Counter value: 1
SCC 7515 : 1
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>
Counter value: 2
SCC 7516 : 1
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>
Counter value: 2
SCC 7517 : 1
<javax.security.auth.Policy$2: void <init>(java.lang.String)>
Counter value: 1
SCC 7518 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setPreemptiveProxyAuthentication(sun.net.www.MessageHeader)>
Counter value: 1
SCC 7519 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: java.util.Map getJavaTimeDisplayNames(java.lang.String,int,int,java.util.Locale)>
Counter value: 1
SCC 7520 : 1
<java.net.InetSocketAddress: int hashCode()>
Counter value: 1
SCC 7521 : 1
<java.util.stream.SortedOps$SizedDoubleSortingSink: void accept(double)>
Counter value: 1
SCC 7522 : 1
<sun.security.util.MemoryCache$HardCacheEntry: java.lang.Object getValue()>
Counter value: 1
SCC 7523 : 1
<java.util.stream.Sink$ChainedDouble: void begin(long)>
Counter value: 2
SCC 7524 : 1
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7525 : 1
<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 7526 : 1
<java.util.WeakHashMap$Entry: java.lang.String toString()>
Counter value: 1
SCC 7527 : 1
<java.util.LongSummaryStatistics: java.lang.String toString()>
Counter value: 1
SCC 7528 : 1
<sun.reflect.UnsafeObjectFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 7529 : 1
<sun.security.x509.CertificatePolicyId: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7530 : 1
<java.time.OffsetDateTime: int get(java.time.temporal.TemporalField)>
Counter value: 1
SCC 7531 : 1
<java.math.BigDecimal$StringBuilderHelper: java.lang.StringBuilder getStringBuilder()>
Counter value: 1
SCC 7532 : 1
<java.lang.invoke.MethodType: java.lang.Class returnType()>
Counter value: 1
SCC 7533 : 1
<java.net.PasswordAuthentication: char[] getPassword()>
Counter value: 1
SCC 7534 : 1
<java.util.IdentityHashMap$Values: void <init>(java.util.IdentityHashMap)>
Counter value: 1
SCC 7535 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToLongTask: void compute()>
Counter value: 1
SCC 7536 : 1
<java.util.Spliterator$OfDouble: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 7537 : 1
<java.util.Collections$UnmodifiableSet: int hashCode()>
Counter value: 2
SCC 7538 : 1
<java.time.zone.ZoneOffsetTransition: java.time.LocalDateTime getDateTimeAfter()>
Counter value: 1
SCC 7539 : 1
<sun.nio.ch.Util: java.lang.reflect.Constructor access$502(java.lang.reflect.Constructor)>
Counter value: 1
SCC 7540 : 1
<sun.nio.ch.Util: void <clinit>()>
Counter value: 1
SCC 7541 : 1
<sun.nio.ch.ThreadPool$lambda_defaultThreadFactory_2__34: void <init>()>
Counter value: 1
SCC 7542 : 1
<sun.nio.fs.UnixCopyFile: void <clinit>()>
Counter value: 1
SCC 7543 : 1
<java.util.Scanner: java.util.regex.Pattern linePattern()>
Counter value: 1
SCC 7544 : 1
<sun.nio.fs.Util: void <clinit>()>
Counter value: 1
SCC 7545 : 1
<sun.util.calendar.LocalGregorianCalendar: boolean validate(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 7546 : 1
<java.util.stream.SpinedBuffer$OfInt$1Splitr: java.util.Spliterator$OfInt arraySpliterator(int[],int,int)>
Counter value: 1
SCC 7547 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoZonedDateTime atZone(java.time.ZoneId)>
Counter value: 1
SCC 7548 : 1
<java.util.stream.Nodes$LongArrayNode: void <init>(long[])>
Counter value: 1
SCC 7549 : 1
<java.util.ArrayDeque: void checkInvariants()>
Counter value: 1
SCC 7550 : 1
<java.util.EnumMap: java.lang.Object unmaskNull(java.lang.Object)>
Counter value: 1
SCC 7551 : 1
<java.lang.invoke.ConvertHandle$FilterHelpers: void load()>
Counter value: 1
SCC 7552 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CollatorProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 7553 : 1
<java.text.DecimalFormatSymbols: char getMinusSign()>
Counter value: 1
SCC 7554 : 1
<java.lang.invoke.CatchHandle: void <init>(java.lang.invoke.CatchHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 7555 : 1
<java.util.jar.Manifest$FastInputStream: void close()>
Counter value: 2
SCC 7556 : 1
<java.io.FilterOutputStream: void write(byte[])>
Counter value: 1
SCC 7557 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl$4: void run()>
Counter value: 1
SCC 7558 : 1
<sun.nio.ch.NativeThread: void <clinit>()>
Counter value: 1
SCC 7559 : 1
<java.util.stream.SpinedBuffer$OfDouble$1Splitr: java.util.Spliterator$OfPrimitive newSpliterator(int,int,int,int)>
Counter value: 1
SCC 7560 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 7561 : 1
<java.util.stream.MatchOps$MatchKind: void <clinit>()>
Counter value: 1
SCC 7562 : 1
<java.util.OptionalLong: java.util.OptionalLong empty()>
Counter value: 1
SCC 7563 : 1
<sun.text.CompactByteArray: java.lang.Object clone()>
Counter value: 2
SCC 7564 : 1
<java.util.stream.Nodes$CollectionNode: void copyInto(java.lang.Object[],int)>
Counter value: 1
SCC 7565 : 1
<java.time.MonthDay: int hashCode()>
Counter value: 1
SCC 7566 : 1
<java.lang.ProcessBuilder$Redirect$1: java.lang.ProcessBuilder$Redirect$Type type()>
Counter value: 1
SCC 7567 : 1
<java.nio.DirectIntBufferU: long ix(int)>
Counter value: 1
SCC 7568 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime withZoneSameLocal(java.time.ZoneId)>
Counter value: 1
SCC 7569 : 1
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 7570 : 1
<java.util.concurrent.FutureTask: java.lang.Object report(int)>
Counter value: 1
SCC 7571 : 1
<sun.security.x509.GeneralSubtree: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7572 : 1
<sun.net.www.protocol.http.DigestAuthentication: java.lang.String getHeaderValue(java.net.URL,java.lang.String)>
Counter value: 1
SCC 7573 : 1
<sun.net.www.MessageHeader: java.lang.String getValue(int)>
Counter value: 1
SCC 7574 : 1
<java.util.ArrayPrefixHelpers$IntCumulateTask: void <init>(java.util.ArrayPrefixHelpers$IntCumulateTask,java.util.function.IntBinaryOperator,int[],int,int,int,int,int)>
Counter value: 1
SCC 7575 : 1
<sun.net.www.http.PosterOutputStream: void write(byte[],int,int)>
Counter value: 1
SCC 7576 : 1
<java.util.SimpleTimeZone: boolean hasSameRules(java.util.TimeZone)>
Counter value: 1
SCC 7577 : 1
<java.lang.Class: java.lang.reflect.Constructor[] cacheConstructors(java.lang.reflect.Constructor[],java.lang.Class$CacheKey)>
Counter value: 1
SCC 7578 : 1
<sun.nio.ch.PendingFuture: boolean prepareForWait()>
Counter value: 1
SCC 7579 : 1
<java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
Counter value: 1
SCC 7580 : 1
<java.util.stream.StreamOpFlag$MaskBuilder: java.util.Map build()>
Counter value: 1
SCC 7581 : 1
<java.lang.Double: java.lang.Double valueOf(double)>
Counter value: 1
SCC 7582 : 1
<java.lang.invoke.BruteArgumentMoverHandle: int[] identityPermute(java.lang.invoke.MethodType)>
Counter value: 1
SCC 7583 : 1
<java.util.Spliterators$EmptySpliterator$OfLong: void <init>()>
Counter value: 1
SCC 7584 : 1
<java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
Counter value: 1
SCC 7585 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildArrayProducer(java.lang.Class)>
Counter value: 1
SCC 7586 : 1
<sun.nio.ch.Net: boolean useExclusiveBind()>
Counter value: 1
SCC 7587 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToLongTask: void compute()>
Counter value: 1
SCC 7588 : 1
<java.util.stream.ReduceOps: java.util.stream.TerminalOp makeRef(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)>
Counter value: 1
SCC 7589 : 1
<java.util.concurrent.Executors$DelegatedExecutorService: void shutdown()>
Counter value: 2
SCC 7590 : 1
<java.util.stream.StreamSpliterators$DoubleWrappingSpliterator: void <init>(java.util.stream.PipelineHelper,java.util.function.Supplier,boolean)>
Counter value: 1
SCC 7591 : 1
<java.util.SimpleTimeZone: int hashCode()>
Counter value: 1
SCC 7592 : 1
<java.net.HttpCookie: java.lang.String access$200(java.net.HttpCookie)>
Counter value: 1
SCC 7593 : 1
<sun.security.util.BitArray: int hashCode()>
Counter value: 1
SCC 7594 : 1
<sun.misc.ProxyGenerator$1: java.lang.Object run()>
Counter value: 1
SCC 7595 : 1
<java.net.SocksSocketImpl: java.lang.String getUserName()>
Counter value: 1
SCC 7596 : 1
<java.lang.invoke.ConstructorHandle: void <init>(java.lang.invoke.ConstructorHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 7597 : 1
<sun.util.logging.LoggingSupport: void log(java.lang.Object,java.lang.Object,java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 7598 : 1
<java.util.Properties$XmlSupport: sun.util.spi.XmlPropertiesProvider loadProviderFromProperty(java.lang.ClassLoader)>
Counter value: 1
SCC 7599 : 1
<sun.nio.ch.ExtendedSocketOption$1: java.lang.String toString()>
Counter value: 1
SCC 7600 : 1
<java.util.TreeMap$NavigableSubMap$SubMapEntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 7601 : 1
<java.net.NetPermission: void <init>(java.lang.String)>
Counter value: 1
SCC 7602 : 1
<java.nio.Bits: long getLongL(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 7603 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfRef: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 7604 : 1
<sun.util.resources.ParallelListResourceBundle$KeySet$1: void remove()>
Counter value: 1
SCC 7605 : 1
<sun.net.www.http.HttpClient: sun.net.www.http.HttpClient New(java.net.URL,java.lang.String,int,boolean,int,sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 7606 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void readInts(int[],int,int)>
Counter value: 1
SCC 7607 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive bufferCreate(int)>
Counter value: 1
SCC 7608 : 1
<java.util.concurrent.ConcurrentSkipListMap$Node: java.lang.Object getValidValue()>
Counter value: 1
SCC 7609 : 1
<sun.net.www.http.HttpCapture: sun.net.www.http.HttpCapture getCapture(java.net.URL)>
Counter value: 1
SCC 7610 : 1
<java.math.MathContext: java.lang.String toString()>
Counter value: 1
SCC 7611 : 1
<java.lang.invoke.MethodHandles$Lookup: java.lang.String toString()>
Counter value: 1
SCC 7612 : 1
<java.nio.file.Files: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>
Counter value: 1
SCC 7613 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 7614 : 1
<java.util.stream.Streams$ConcatSpliterator: int characteristics()>
Counter value: 2
SCC 7615 : 1
<java.lang.invoke.StaticFieldGetterHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 7616 : 1
<java.util.concurrent.CountDownLatch$Sync: void <init>(int)>
Counter value: 1
SCC 7617 : 1
<sun.security.provider.X509Factory: java.security.cert.CRL engineGenerateCRL(java.io.InputStream)>
Counter value: 1
SCC 7618 : 1
<java.util.stream.Sink$ChainedDouble: void end()>
Counter value: 2
SCC 7619 : 1
<java.io.NotActiveException: void <init>(java.lang.String)>
Counter value: 1
SCC 7620 : 1
<java.util.stream.Streams$LongStreamBuilderImpl: void accept(long)>
Counter value: 1
SCC 7621 : 1
<sun.security.util.NullCache: void put(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7622 : 1
<java.time.Instant: java.time.Instant 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 7623 : 1
<java.util.Spliterators$LongIteratorSpliterator: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 7624 : 1
<java.net.HttpCookie$6: void <init>()>
Counter value: 1
SCC 7625 : 1
<java.nio.file.FileTreeWalker: java.nio.file.FileTreeWalker$Event visit(java.nio.file.Path,boolean,boolean)>
Counter value: 1
SCC 7626 : 1
<java.util.concurrent.LinkedBlockingDeque$Node: void <init>(java.lang.Object)>
Counter value: 1
SCC 7627 : 1
<sun.misc.VM: java.lang.ClassLoader latestUserDefinedLoader()>
Counter value: 1
SCC 7628 : 1
<java.security.Provider: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7629 : 1
<java.nio.DirectByteBuffer: byte get(int)>
Counter value: 1
SCC 7630 : 1
<java.util.stream.DoublePipeline: java.util.stream.StreamShape getOutputShape()>
Counter value: 1
SCC 7631 : 1
<sun.reflect.ReflectionFactory: boolean access$202(boolean)>
Counter value: 1
SCC 7632 : 1
<java.util.ArrayDeque$DescendingIterator: java.lang.Object next()>
Counter value: 1
SCC 7633 : 1
<sun.reflect.Reflection: boolean verifyMemberAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)>
Counter value: 1
SCC 7634 : 1
<java.lang.reflect.Modifier: boolean isPrivate(int)>
Counter value: 1
SCC 7635 : 1
<java.lang.reflect.Modifier: boolean isProtected(int)>
Counter value: 1
SCC 7636 : 1
<sun.reflect.Reflection: boolean isSameClassPackage(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 7637 : 1
<sun.reflect.Reflection: boolean isSameClassPackage(java.lang.ClassLoader,java.lang.String,java.lang.ClassLoader,java.lang.String)>
Counter value: 1
SCC 7638 : 1
<sun.reflect.Reflection: boolean isSubclassOf(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 7639 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesTask: void compute()>
Counter value: 1
SCC 7640 : 1
<sun.net.www.protocol.http.HttpURLConnection$12: java.lang.Boolean run()>
Counter value: 1
SCC 7641 : 1
<java.util.concurrent.TimeUnit$3: long toNanos(long)>
Counter value: 1
SCC 7642 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.time.chrono.ChronoLocalDateTime toLocalDateTime()>
Counter value: 1
SCC 7643 : 1
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: int characteristics()>
Counter value: 1
SCC 7644 : 1
<java.nio.CharBuffer: int length()>
Counter value: 1
SCC 7645 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
Counter value: 1
SCC 7646 : 1
<sun.nio.ch.Net: java.net.InetSocketAddress getRevealedLocalAddress(java.net.InetSocketAddress)>
Counter value: 1
SCC 7647 : 1
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: char getChar(java.lang.Object)>
Counter value: 1
SCC 7648 : 1
<java.net.AbstractPlainSocketImpl: void setConnectionResetPending()>
Counter value: 1
SCC 7649 : 1
<java.security.AccessController: void checkPermsNPE(java.security.Permission[])>
Counter value: 1
SCC 7650 : 1
<java.time.Ser: void readExternal(java.io.ObjectInput)>
Counter value: 1
SCC 7651 : 1
<java.io.ClassByNameCache$Reaper: void <init>(java.io.ClassByNameCache,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 7652 : 1
<java.util.stream.SortedOps$OfDouble: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 7653 : 1
<java.util.stream.LongPipeline$1: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 7654 : 1
<java.util.stream.ForEachOps$ForEachOp$OfInt: java.lang.Object evaluateSequential(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 7655 : 1
<java.util.stream.Nodes$AbstractConcNode: void <init>(java.util.stream.Node,java.util.stream.Node)>
Counter value: 1
SCC 7656 : 1
<java.util.Calendar: java.lang.String toString()>
Counter value: 1
SCC 7657 : 1
<java.util.concurrent.TimeUnit$3: long toSeconds(long)>
Counter value: 1
SCC 7658 : 1
<java.lang.CharSequence$1CharIterator: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 7659 : 1
<java.util.stream.AbstractPipeline: void <init>(java.util.stream.AbstractPipeline,int)>
Counter value: 1
SCC 7660 : 1
<java.util.concurrent.ThreadLocalRandom$RandomIntsSpliterator: java.util.concurrent.ThreadLocalRandom$RandomIntsSpliterator trySplit()>
Counter value: 1
SCC 7661 : 1
<java.nio.file.attribute.FileTime: int compareTo(java.lang.Object)>
Counter value: 1
SCC 7662 : 1
<sun.net.www.HeaderParser: int findInt(java.lang.String,int)>
Counter value: 1
SCC 7663 : 1
<java.io.ObjectInputStream: void skipCustomData()>
Counter value: 1
SCC 7664 : 1
<java.util.WeakHashMap$KeyIterator: void <init>(java.util.WeakHashMap)>
Counter value: 1
SCC 7665 : 1
<java.lang.ProcessBuilder$Redirect: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7666 : 1
<java.time.zone.ZoneOffsetTransitionRule: void <init>(java.time.Month,int,java.time.DayOfWeek,java.time.LocalTime,boolean,java.time.zone.ZoneOffsetTransitionRule$TimeDefinition,java.time.ZoneOffset,java.time.ZoneOffset,java.time.ZoneOffset)>
Counter value: 1
SCC 7667 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator: void initPartialTraversalState()>
Counter value: 1
SCC 7668 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachTransformedEntryTask: void compute()>
Counter value: 1
SCC 7669 : 1
<sun.nio.ch.Util$3: int hashCode()>
Counter value: 2
SCC 7670 : 1
<sun.misc.ProxyGenerator: void code_fload(int,java.io.DataOutputStream)>
Counter value: 1
SCC 7671 : 1
<java.nio.DirectByteBuffer: java.nio.ByteBuffer duplicate()>
Counter value: 1
SCC 7672 : 1
<jdk.internal.org.objectweb.asm.TypePath: int getStepArgument(int)>
Counter value: 1
SCC 7673 : 1
<java.time.OffsetTime: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 7674 : 1
<sun.nio.ch.KQueueSelectorProvider: void <init>()>
Counter value: 1
SCC 7675 : 1
<java.lang.InheritableThreadLocal: java.lang.Object childValue(java.lang.Object)>
Counter value: 1
SCC 7676 : 1
<java.lang.reflect.Type: java.lang.String getTypeName()>
Counter value: 1
SCC 7677 : 1
<jdk.net.NetworkPermission: void <init>(java.lang.String)>
Counter value: 1
SCC 7678 : 1
<sun.security.util.DerInputBuffer: void truncate(int)>
Counter value: 1
SCC 7679 : 1
<java.io.Console$3: void close()>
Counter value: 1
SCC 7680 : 1
<java.util.concurrent.ForkJoinTask: void rethrow(java.lang.Throwable)>
Counter value: 1
SCC 7681 : 1
<java.util.stream.ReduceOps$1ReducingSink: void combine(java.util.stream.ReduceOps$1ReducingSink)>
Counter value: 1
SCC 7682 : 1
<java.util.Comparators$NaturalOrderComparator: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7683 : 1
<java.nio.file.InvalidPathException: java.lang.String getReason()>
Counter value: 1
SCC 7684 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachKeyTask: void compute()>
Counter value: 1
SCC 7685 : 1
<java.util.stream.Tripwire$lambda_static_0__37: void <init>()>
Counter value: 1
SCC 7686 : 1
<java.util.HashMap$EntrySet: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 7687 : 1
<java.util.IdentityHashMap: int hashCode()>
Counter value: 1
SCC 7688 : 1
<java.util.TreeMap$EntrySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 7689 : 1
<sun.security.x509.IssuerAlternativeNameExtension: void encodeThis()>
Counter value: 1
SCC 7690 : 1
<java.time.format.DateTimeFormatterBuilder$LocalizedPrinterParser: java.lang.String toString()>
Counter value: 1
SCC 7691 : 1
<java.util.stream.FindOps$FindOp: int getOpFlags()>
Counter value: 1
SCC 7692 : 1
<java.util.stream.MatchOps$MatchOp: java.lang.Object evaluateSequential(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 7693 : 1
<java.util.TreeMap$AscendingSubMap: java.util.Spliterator keySpliterator()>
Counter value: 1
SCC 7694 : 1
<java.io.ObjectInputStream: void close()>
Counter value: 1
SCC 7695 : 1
<java.util.Calendar: int getActualMaximum(int)>
Counter value: 1
SCC 7696 : 1
<sun.nio.ch.Invoker$GroupAndInvokeCount: void <init>(sun.nio.ch.AsynchronousChannelGroupImpl)>
Counter value: 1
SCC 7697 : 1
<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>
Counter value: 1
SCC 7698 : 1
<java.nio.HeapShortBuffer: int ix(int)>
Counter value: 1
SCC 7699 : 1
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7700 : 1
<java.nio.Bits: byte long1(long)>
Counter value: 1
SCC 7701 : 1
<sun.net.www.protocol.http.HttpURLConnection: void expect100Continue()>
Counter value: 1
SCC 7702 : 1
<java.io.ObjectStreamClass$2: void <init>(java.io.ObjectStreamClass)>
Counter value: 1
SCC 7703 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToDoubleTask: java.lang.Double getRawResult()>
Counter value: 1
SCC 7704 : 1
<java.util.stream.SliceOps$1$1: void <init>(java.util.stream.SliceOps$1,java.util.stream.Sink)>
Counter value: 1
SCC 7705 : 1
<java.nio.channels.spi.AbstractSelector: void cancel(java.nio.channels.SelectionKey)>
Counter value: 1
SCC 7706 : 1
<sun.net.www.http.HttpCapture: boolean isInitialized()>
Counter value: 1
SCC 7707 : 1
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinPool$WorkQueue registerWorker(java.util.concurrent.ForkJoinWorkerThread)>
Counter value: 1
SCC 7708 : 1
<java.lang.Thread: void <init>(java.lang.String)>
Counter value: 1
SCC 7709 : 1
<sun.security.x509.DistributionPoint: java.lang.String reasonToString(int)>
Counter value: 1
SCC 7710 : 1
<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Value getValue()>
Counter value: 1
SCC 7711 : 1
<java.util.Collections$2: java.util.Spliterator trySplit()>
Counter value: 1
SCC 7712 : 1
<java.util.JumboEnumSet: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7713 : 1
<java.nio.DirectCharBufferU: void <init>(sun.nio.ch.DirectBuffer,int,int,int,int,int)>
Counter value: 1
SCC 7714 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: int getBaseStyle(int)>
Counter value: 1
SCC 7715 : 1
<java.nio.charset.Charset: int compareTo(java.nio.charset.Charset)>
Counter value: 1
SCC 7716 : 1
<sun.reflect.UnsafeFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 7717 : 1
<java.nio.HeapIntBuffer: int ix(int)>
Counter value: 1
SCC 7718 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void setIndex(java.util.concurrent.RunnableScheduledFuture,int)>
Counter value: 1
SCC 7719 : 1
<java.util.jar.JarFile$3: java.lang.String nextElement()>
Counter value: 1
SCC 7720 : 1
<sun.nio.ch.ServerSocketChannelImpl: java.net.InetSocketAddress localAddress()>
Counter value: 1
SCC 7721 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>
Counter value: 1
SCC 7722 : 1
<java.util.stream.ReduceOps$7ReducingSink: void combine(java.util.stream.ReduceOps$7ReducingSink)>
Counter value: 1
SCC 7723 : 1
<java.util.Collections$SynchronizedMap: java.util.Set keySet()>
Counter value: 2
SCC 7724 : 1
<java.util.ArraysParallelSortHelpers$Relay: void onCompletion(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 7725 : 1
<java.util.LongSummaryStatistics: double getAverage()>
Counter value: 1
SCC 7726 : 1
<sun.nio.ch.SinkChannelImpl: void kill()>
Counter value: 1
SCC 7727 : 1
<sun.nio.cs.FastCharsetProvider$1: void <init>(sun.nio.cs.FastCharsetProvider)>
Counter value: 1
SCC 7728 : 1
<java.time.LocalTime: java.time.LocalTime readExternal(java.io.DataInput)>
Counter value: 1
SCC 7729 : 1
<sun.net.www.MessageHeader: void remove(java.lang.String)>
Counter value: 1
SCC 7730 : 1
<sun.util.calendar.ZoneInfo: boolean useDaylightTime()>
Counter value: 1
SCC 7731 : 1
<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult()>
Counter value: 1
SCC 7732 : 1
<java.util.Collections$UnmodifiableMap: boolean containsValue(java.lang.Object)>
Counter value: 2
SCC 7733 : 1
<java.nio.Bits: byte long5(long)>
Counter value: 1
SCC 7734 : 1
<java.util.TreeMap: java.util.TreeMap$Entry getCeilingEntry(java.lang.Object)>
Counter value: 1
SCC 7735 : 1
<java.util.stream.Nodes: java.util.stream.Node collect(java.util.stream.PipelineHelper,java.util.Spliterator,boolean,java.util.function.IntFunction)>
Counter value: 1
SCC 7736 : 1
<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>
Counter value: 1
SCC 7737 : 1
<java.time.chrono.HijrahChronology: void checkCalendarInit()>
Counter value: 1
SCC 7738 : 1
<java.util.stream.Nodes$SizedCollectorTask: void compute()>
Counter value: 1
SCC 7739 : 1
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>
Counter value: 1
SCC 7740 : 1
<sun.util.locale.UnicodeLocaleExtension: java.util.Set getUnicodeLocaleKeys()>
Counter value: 1
SCC 7741 : 1
<java.util.EnumMap: boolean isValidKey(java.lang.Object)>
Counter value: 1
SCC 7742 : 1
<java.util.stream.Nodes$AbstractConcNode: int getChildCount()>
Counter value: 1
SCC 7743 : 1
<java.util.Spliterators$2Adapter: boolean hasNext()>
Counter value: 1
SCC 7744 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: long estimateSize()>
Counter value: 1
SCC 7745 : 1
<java.util.Collections$CheckedCollection: java.lang.Object typeCheck(java.lang.Object)>
Counter value: 1
SCC 7746 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 7747 : 1
<java.util.Vector$Itr: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 7748 : 1
<java.io.InterruptedIOException: void <init>(java.lang.String)>
Counter value: 1
SCC 7749 : 1
<java.util.Properties$XmlSupport: sun.util.spi.XmlPropertiesProvider loadProvider()>
Counter value: 1
SCC 7750 : 1
<java.util.concurrent.ConcurrentHashMap: int hashCode()>
Counter value: 2
SCC 7751 : 1
<javax.crypto.NullCipherSpi: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
Counter value: 1
SCC 7752 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor: long overflowFree(long)>
Counter value: 1
SCC 7753 : 1
<sun.reflect.UTF8: byte[] encode(java.lang.String)>
Counter value: 1
SCC 7754 : 1
<java.lang.reflect.ReflectAccess: byte[] getConstructorAnnotations(java.lang.reflect.Constructor)>
Counter value: 1
SCC 7755 : 1
<java.util.Base64$EncOutputStream: void checkNewline()>
Counter value: 1
SCC 7756 : 1
<java.net.URI: int needsNormalization(java.lang.String)>
Counter value: 1
SCC 7757 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToDoubleTask: java.lang.Double getRawResult()>
Counter value: 1
SCC 7758 : 1
<java.lang.invoke.FieldHandle: void <init>(java.lang.invoke.FieldHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 7759 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: void clear()>
Counter value: 1
SCC 7760 : 1
<java.util.stream.ReduceOps$12ReducingSink: void begin(long)>
Counter value: 1
SCC 7761 : 1
<sun.nio.fs.AbstractPath$1: void remove()>
Counter value: 1
SCC 7762 : 1
<java.util.TreeMap$Values: void clear()>
Counter value: 1
SCC 7763 : 1
<java.util.concurrent.TimeUnit$6: long convert(long,java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 7764 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.concurrent.ConcurrentSkipListMap$Node hiNode(java.util.Comparator)>
Counter value: 1
SCC 7765 : 1
<java.util.Collections$CopiesList: java.util.stream.Stream stream()>
Counter value: 1
SCC 7766 : 1
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 7767 : 1
<java.io.ObjectStreamClass$3: java.lang.Void run()>
Counter value: 1
SCC 7768 : 1
<java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator: long estimateSize()>
Counter value: 1
SCC 7769 : 1
<java.time.ZoneOffset: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 7770 : 1
<jdk.internal.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7771 : 1
<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: void <init>(int,short)>
Counter value: 1
SCC 7772 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 7773 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachTransformedKeyTask: void compute()>
Counter value: 1
SCC 7774 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef$lambda_tryAdvance_0__31: void <init>()>
Counter value: 1
SCC 7775 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator$accept__56: java.util.stream.Sink bootstrap$(java.util.function.Consumer)>
Counter value: 1
SCC 7776 : 1
<java.util.Collections$UnmodifiableCollection$1: void forEachRemaining(java.util.function.Consumer)>
Counter value: 2
SCC 7777 : 1
<sun.util.PreHashedMap$2: int size()>
Counter value: 1
SCC 7778 : 1
<java.util.ArraysParallelSortHelpers$FJFloat$Sorter: void <init>(java.util.concurrent.CountedCompleter,float[],float[],int,int,int,int)>
Counter value: 1
SCC 7779 : 1
<sun.misc.Signal: java.lang.String toString()>
Counter value: 1
SCC 7780 : 1
<java.util.stream.FindOps$isPresent__101: void <init>()>
Counter value: 1
SCC 7781 : 1
<java.lang.invoke.CollectHandle: void <clinit>()>
Counter value: 1
SCC 7782 : 1
<java.io.ObjectStreamClass$4: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7783 : 1
<java.nio.Bits: void unreserveMemory(long,int)>
Counter value: 1
SCC 7784 : 1
<java.util.stream.SpinedBuffer$OfLong$1Splitr: java.util.Spliterator$OfLong arraySpliterator(long[],int,int)>
Counter value: 1
SCC 7785 : 1
<java.nio.Bits: double getDoubleL(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 7786 : 1
<java.util.stream.Nodes$DoubleArrayNode: void forEach(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 7787 : 1
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void close()>
Counter value: 1
SCC 7788 : 1
<java.nio.Bits: short getShortL(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 7789 : 1
<java.util.Spliterators$EmptySpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 7790 : 1
<sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator: boolean isSelfOrParent(byte[])>
Counter value: 1
SCC 7791 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: void pollAndExecAll()>
Counter value: 1
SCC 7792 : 1
<sun.net.www.URLConnection: void setProxiedHost(java.lang.String)>
Counter value: 1
SCC 7793 : 1
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
Counter value: 1
SCC 7794 : 1
<java.util.stream.FindOps$FindTask: java.util.stream.FindOps$FindTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 7795 : 1
<java.lang.ApplicationShutdownHooks$1: void <init>()>
Counter value: 1
SCC 7796 : 1
<java.util.concurrent.LinkedBlockingQueue: java.lang.String toString()>
Counter value: 1
SCC 7797 : 1
<java.net.NetworkInterface: int hashCode()>
Counter value: 1
SCC 7798 : 1
<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node nextNode(java.util.concurrent.LinkedBlockingQueue$Node)>
Counter value: 1
SCC 7799 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: void end()>
Counter value: 1
SCC 7800 : 1
<sun.security.x509.PolicyInformation: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7801 : 1
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 7802 : 1
<java.io.ObjectInputStream$BlockDataInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 7803 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType genericMethodType(int)>
Counter value: 1
SCC 7804 : 1
<java.util.stream.Nodes$ConcNode$OfPrimitive: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 7805 : 1
<java.io.ObjectOutputStream$1: java.lang.Boolean run()>
Counter value: 1
SCC 7806 : 1
<sun.net.www.protocol.http.HttpURLConnection$12: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.lang.String,int,java.net.URL)>
Counter value: 1
SCC 7807 : 1
<sun.security.x509.PolicyConstraintsExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 7808 : 1
<java.io.ObjectInputStream: java.lang.Object readNull()>
Counter value: 1
SCC 7809 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: void ensureCapacity(long)>
Counter value: 1
SCC 7810 : 1
<jdk.internal.org.objectweb.asm.TypePath: int getStep(int)>
Counter value: 1
SCC 7811 : 1
<java.util.stream.DoublePipeline$2: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 7812 : 1
<java.util.stream.ForEachOps: java.util.stream.TerminalOp makeLong(java.util.function.LongConsumer,boolean)>
Counter value: 1
SCC 7813 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 7814 : 1
<java.lang.invoke.ReceiverBoundHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 7815 : 1
<java.util.stream.LongPipeline: java.util.stream.StreamShape getOutputShape()>
Counter value: 1
SCC 7816 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfInt: void forEach(java.lang.Object,long)>
Counter value: 1
SCC 7817 : 1
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalUnit lambda$static$2(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 7818 : 1
<sun.net.NetworkClient: void setConnectTimeout(int)>
Counter value: 1
SCC 7819 : 1
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 7820 : 1
<java.util.ArrayDeque$DeqIterator: void <init>(java.util.ArrayDeque,java.util.ArrayDeque$1)>
Counter value: 1
SCC 7821 : 1
<java.util.concurrent.TimeUnit: long toSeconds(long)>
Counter value: 1
SCC 7822 : 1
<java.util.AbstractMap: java.lang.Object clone()>
Counter value: 1
SCC 7823 : 1
<java.util.stream.SpinedBuffer$add__30: void <init>(java.util.List)>
Counter value: 1
SCC 7824 : 1
<sun.net.www.http.HttpCapture: void received(int)>
Counter value: 1
SCC 7825 : 1
<java.time.temporal.IsoFields$Unit: boolean isDateBased()>
Counter value: 1
SCC 7826 : 1
<java.time.OffsetTime: void <clinit>()>
Counter value: 1
SCC 7827 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 7828 : 1
<java.text.DigitList: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7829 : 1
<java.util.OptionalLong: void <clinit>()>
Counter value: 1
SCC 7830 : 1
<java.io.Console: java.lang.Object access$000(java.io.Console)>
Counter value: 1
SCC 7831 : 1
<java.io.DataOutputStream: void writeShort(int)>
Counter value: 1
SCC 7832 : 1
<java.util.stream.Nodes$DoubleArrayNode: void <init>(double[])>
Counter value: 1
SCC 7833 : 1
<java.util.ArrayDeque$DeqSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 7834 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,boolean)>
Counter value: 1
SCC 7835 : 1
<java.util.Scanner: void translateSavedIndexes(int)>
Counter value: 1
SCC 7836 : 1
<sun.misc.ProxyGenerator$ProxyMethod: void <init>(sun.misc.ProxyGenerator,java.lang.String,java.lang.Class[],java.lang.Class,java.lang.Class[],java.lang.Class,sun.misc.ProxyGenerator$1)>
Counter value: 1
SCC 7837 : 1
<java.nio.HeapLongBuffer: int ix(int)>
Counter value: 1
SCC 7838 : 1
<java.util.stream.SpinedBuffer$OfDouble$1Splitr: void <init>(java.util.stream.SpinedBuffer$OfDouble,int,int,int,int)>
Counter value: 1
SCC 7839 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 7840 : 1
<java.util.OptionalLong: java.lang.String toString()>
Counter value: 1
SCC 7841 : 1
<java.util.Spliterator: long getExactSizeIfKnown()>
Counter value: 1
SCC 7842 : 1
<java.net.UnknownHostException: void <init>()>
Counter value: 1
SCC 7843 : 1
<java.util.stream.ReduceOps$ReduceOp: void <init>(java.util.stream.StreamShape)>
Counter value: 1
SCC 7844 : 1
<java.util.stream.ReduceOps$11ReducingSink: void begin(long)>
Counter value: 1
SCC 7845 : 1
<java.time.zone.ZoneOffsetTransitionRule: java.time.zone.ZoneOffsetTransitionRule readExternal(java.io.DataInput)>
Counter value: 1
SCC 7846 : 1
<java.util.IdentityHashMap$Values: int size()>
Counter value: 1
SCC 7847 : 1
<java.io.ObjectStreamClass: boolean hasReadObjectNoDataMethod()>
Counter value: 1
SCC 7848 : 1
<java.net.ServerSocket: java.lang.String toString()>
Counter value: 1
SCC 7849 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: int size()>
Counter value: 1
SCC 7850 : 1
<java.util.SubList$1: java.lang.Object previous()>
Counter value: 2
SCC 7851 : 1
<java.util.stream.ReferencePipeline$7$1: void <init>(java.util.stream.ReferencePipeline$7,java.util.stream.Sink)>
Counter value: 1
SCC 7852 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: void set(java.lang.Object)>
Counter value: 1
SCC 7853 : 1
<java.util.ArraysParallelSortHelpers$FJByte$Sorter: void <init>(java.util.concurrent.CountedCompleter,byte[],byte[],int,int,int,int)>
Counter value: 1
SCC 7854 : 1
<java.util.stream.SortedOps$SizedRefSortingSink: void begin(long)>
Counter value: 1
SCC 7855 : 1
<java.util.LinkedList$ListItr: java.lang.Object previous()>
Counter value: 1
SCC 7856 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: boolean equals(java.lang.Object)>
Counter value: 1
SCC 7857 : 1
<java.time.Instant: java.time.Instant readExternal(java.io.DataInput)>
Counter value: 1
SCC 7858 : 1
<java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
Counter value: 2
SCC 7859 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 7860 : 1
<java.io.ObjectInputStream$BlockDataInputStream: int read()>
Counter value: 1
SCC 7861 : 1
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 7862 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: java.util.Spliterator$OfDouble makeSpliterator(java.util.Spliterator$OfDouble)>
Counter value: 1
SCC 7863 : 1
<java.net.ServerSocket: java.net.SocketImpl access$000(java.net.ServerSocket)>
Counter value: 1
SCC 7864 : 1
<java.util.stream.Tripwire$lambda_static_0__37: java.security.PrivilegedAction bootstrap$()>
Counter value: 1
SCC 7865 : 1
<java.util.LinkedList: java.lang.Object remove(int)>
Counter value: 1
SCC 7866 : 1
<java.util.IdentityHashMap$EntrySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 7867 : 1
<java.net.SocketOutputStream: void socketWrite(byte[],int,int)>
Counter value: 1
SCC 7868 : 1
<java.util.TreeMap$KeySpliterator: java.util.TreeMap$KeySpliterator trySplit()>
Counter value: 1
SCC 7869 : 1
<java.util.stream.Nodes$ConcNode$OfLong: java.util.Spliterator spliterator()>
Counter value: 1
SCC 7870 : 1
<sun.reflect.NativeConstructorAccessorImpl: void setParent(sun.reflect.DelegatingConstructorAccessorImpl)>
Counter value: 1
SCC 7871 : 1
<java.util.OptionalDouble: java.util.OptionalDouble empty()>
Counter value: 1
SCC 7872 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 7873 : 1
<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>
Counter value: 1
SCC 7874 : 1
<java.security.KeyStore$Builder$FileBuilder: java.lang.String access$300(java.security.KeyStore$Builder$FileBuilder)>
Counter value: 1
SCC 7875 : 1
<java.lang.invoke.DirectHandle: void <clinit>()>
Counter value: 1
SCC 7876 : 1
<java.util.concurrent.ForkJoinPool: void checkPermission()>
Counter value: 1
SCC 7877 : 1
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 7878 : 1
<java.lang.ApplicationShutdownHooks: void runHooks()>
Counter value: 1
SCC 7879 : 1
<java.util.stream.Nodes$ToArrayTask$OfLong: void <init>(java.util.stream.Node$OfLong,long[],int)>
Counter value: 1
SCC 7880 : 1
<java.io.ObjectStreamField: char getTypeCode()>
Counter value: 1
SCC 7881 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator: void <init>(java.util.Comparator,java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Node,java.lang.Object,int)>
Counter value: 1
SCC 7882 : 1
<sun.net.www.protocol.http.HttpURLConnection: void reset()>
Counter value: 1
SCC 7883 : 1
<javax.security.auth.Policy: javax.security.auth.Policy getPolicy()>
Counter value: 1
SCC 7884 : 1
<java.nio.StringCharBuffer: char getUnchecked(int)>
Counter value: 1
SCC 7885 : 1
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>
Counter value: 1
SCC 7886 : 1
<java.util.TreeMap$AscendingSubMap: java.util.Iterator keyIterator()>
Counter value: 1
SCC 7887 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.Lock readLock()>
Counter value: 1
SCC 7888 : 1
<java.time.temporal.IsoFields$Unit: java.time.temporal.Temporal addTo(java.time.temporal.Temporal,long)>
Counter value: 1
SCC 7889 : 1
<java.util.AbstractMap$2: java.util.Iterator iterator()>
Counter value: 1
SCC 7890 : 1
<sun.reflect.Label: void add(sun.reflect.ClassFileAssembler,short,short,int)>
Counter value: 1
SCC 7891 : 1
<java.util.stream.ReduceOps$8ReducingSink: void begin(long)>
Counter value: 1
SCC 7892 : 1
<sun.nio.ch.SocketAdaptor: java.io.InputStream getInputStream()>
Counter value: 1
SCC 7893 : 1
<java.net.ServerSocket: void close()>
Counter value: 1
SCC 7894 : 1
<java.lang.invoke.PrimitiveHandle: java.lang.Class finishMethodInitialization(java.lang.Class,java.lang.invoke.MethodType)>
Counter value: 1
SCC 7895 : 1
<java.io.ObjectInputStream$FilterValues: long arrayLength()>
Counter value: 1
SCC 7896 : 1
<sun.text.IntHashtable: int size()>
Counter value: 1
SCC 7897 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfInt: void accept(int)>
Counter value: 1
SCC 7898 : 1
<sun.reflect.ClassFileAssembler: void <init>(sun.reflect.ByteVector)>
Counter value: 1
SCC 7899 : 1
<sun.misc.InnocuousThread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,java.lang.ClassLoader)>
Counter value: 1
SCC 7900 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void siftDown(int,java.util.concurrent.RunnableScheduledFuture)>
Counter value: 1
SCC 7901 : 1
<java.nio.DirectShortBufferU: long address()>
Counter value: 1
SCC 7902 : 1
<java.time.chrono.MinguoDate: java.time.chrono.Era getEra()>
Counter value: 1
SCC 7903 : 1
<java.util.stream.SpinedBuffer$OfLong: void <init>(int)>
Counter value: 1
SCC 7904 : 1
<java.util.stream.SliceOps$SliceTask: boolean isLeftCompleted(long)>
Counter value: 1
SCC 7905 : 1
<java.util.TreeMap$EntrySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 7906 : 1
<java.io.ClassByNameCache$LoaderRef: void <init>(boolean,java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 7907 : 1
<java.util.ArraysParallelSortHelpers$FJInt$Merger: void <init>(java.util.concurrent.CountedCompleter,int[],int[],int,int,int,int,int,int)>
Counter value: 1
SCC 7908 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: boolean lambda$initPartialTraversalState$0()>
Counter value: 1
SCC 7909 : 1
<java.time.chrono.HijrahChronology: int getMonthLength(int,int)>
Counter value: 1
SCC 7910 : 1
<java.lang.invoke.Insert1Handle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 7911 : 1
<java.time.chrono.MinguoDate: java.time.chrono.MinguoChronology getChronology()>
Counter value: 1
SCC 7912 : 1
<java.util.stream.IntPipeline$StatelessOp: boolean opIsStateful()>
Counter value: 1
SCC 7913 : 1
<sun.nio.fs.UnixFileSystem$FileStoreIterator: java.nio.file.FileStore readNext()>
Counter value: 1
SCC 7914 : 1
<java.util.Collections$UnmodifiableNavigableSet: void <init>(java.util.NavigableSet)>
Counter value: 1
SCC 7915 : 1
<java.lang.invoke.InvokeGenericHandle: void <init>(java.lang.invoke.MethodType)>
Counter value: 1
SCC 7916 : 1
<java.time.YearMonth: void <init>(int,int)>
Counter value: 1
SCC 7917 : 1
<java.io.Bits: char getChar(byte[],int)>
Counter value: 1
SCC 7918 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: void accept(double)>
Counter value: 1
SCC 7919 : 1
<java.util.stream.IntPipeline$Head: java.util.Spliterator lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 7920 : 1
<java.net.HttpCookie$12: java.lang.String header(java.net.HttpCookie)>
Counter value: 1
SCC 7921 : 1
<java.text.DecimalFormat: java.lang.String getPositivePrefix()>
Counter value: 1
SCC 7922 : 1
<sun.misc.ProxyGenerator: void code_dload(int,java.io.DataOutputStream)>
Counter value: 1
SCC 7923 : 1
<java.lang.invoke.MethodType: java.lang.invoke.MethodType insertParameterTypes(int,java.lang.Class[])>
Counter value: 1
SCC 7924 : 1
<java.security.spec.ECPoint: int hashCode()>
Counter value: 1
SCC 7925 : 1
<java.security.AccessControlContext: java.security.DomainCombiner getCombiner()>
Counter value: 1
SCC 7926 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 7927 : 1
<java.time.chrono.HijrahChronology: void loadCalendarData()>
Counter value: 1
SCC 7928 : 1
<java.util.stream.FindOps$FindOp: java.lang.Object evaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 7929 : 1
<java.util.concurrent.ConcurrentHashMap$KeySetView: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 7930 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfInt: java.lang.Object emptyConsumer()>
Counter value: 1
SCC 7931 : 1
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 7932 : 1
<java.util.TreeMap$SubMap: java.util.Comparator comparator()>
Counter value: 1
SCC 7933 : 1
<java.nio.channels.Channels$1: void close()>
Counter value: 1
SCC 7934 : 1
<java.nio.DirectLongBufferS: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 7935 : 1
<java.nio.ByteBufferAsCharBufferL: char getUnchecked(int)>
Counter value: 1
SCC 7936 : 1
<java.io.OutputStreamWriter: void flush()>
Counter value: 1
SCC 7937 : 1
<java.io.ObjectStreamClass$MemberSignature: void <init>(java.lang.reflect.Constructor)>
Counter value: 1
SCC 7938 : 1
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 7939 : 1
<sun.reflect.'annotation'.AnnotationParser$1: java.lang.'annotation'.Annotation run()>
Counter value: 1
SCC 7940 : 1
<java.util.stream.LongPipeline: java.util.Spliterator$OfLong spliterator()>
Counter value: 1
SCC 7941 : 1
<java.lang.ClassValue$ClassValueMap: java.lang.ClassValue$Entry finishEntry(java.lang.ClassValue,java.lang.ClassValue$Entry)>
Counter value: 1
SCC 7942 : 1
<java.util.AbstractList: boolean addAll(int,java.util.Collection)>
Counter value: 1
SCC 7943 : 1
<java.util.concurrent.ConcurrentHashMap$Node: java.lang.Object getValue()>
Counter value: 1
SCC 7944 : 1
<java.nio.CharBufferSpliterator: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 7945 : 1
<sun.net.www.HeaderParser$ParserIterator: void <init>(sun.net.www.HeaderParser,boolean)>
Counter value: 1
SCC 7946 : 1
<java.util.BitSet: int cardinality()>
Counter value: 1
SCC 7947 : 1
<sun.nio.ch.Net$2: java.net.Inet4Address run()>
Counter value: 1
SCC 7948 : 1
<java.util.concurrent.TimeUnit$6: int excessNanos(long,long)>
Counter value: 1
SCC 7949 : 1
<java.time.Clock$TickClock: boolean equals(java.lang.Object)>
Counter value: 2
SCC 7950 : 1
<java.util.stream.AbstractPipeline: java.util.stream.Sink wrapSink(java.util.stream.Sink)>
Counter value: 1
SCC 7951 : 1
<java.text.Annotation: java.lang.String toString()>
Counter value: 1
SCC 7952 : 1
<java.util.concurrent.ConcurrentHashMap$SearchKeysTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.Function,java.util.concurrent.atomic.AtomicReference)>
Counter value: 1
SCC 7953 : 1
<java.time.LocalDateTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 7954 : 1
<java.util.Properties$XmlSupport: sun.util.spi.XmlPropertiesProvider loadProviderAsService(java.lang.ClassLoader)>
Counter value: 1
SCC 7955 : 1
<java.util.LongSummaryStatistics: long getMax()>
Counter value: 1
SCC 7956 : 1
<java.util.stream.StreamOpFlag: boolean isKnown(int)>
Counter value: 1
SCC 7957 : 1
<java.lang.invoke.Insert1Handle: java.lang.invoke.ThunkTuple computeThunks(java.lang.Object)>
Counter value: 1
SCC 7958 : 1
<java.security.AccessController: java.security.AccessControlContext doPrivilegedWithCombinerHelper(java.security.AccessControlContext)>
Counter value: 1
SCC 7959 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 7960 : 1
<java.io.ObjectStreamClass$EntryFuture$1: java.lang.Void run()>
Counter value: 1
SCC 7961 : 1
<java.util.stream.DistinctOps$1$add__84: java.util.function.BiConsumer bootstrap$()>
Counter value: 1
SCC 7962 : 1
<sun.net.www.http.HttpCaptureOutputStream: void flush()>
Counter value: 1
SCC 7963 : 1
<java.util.concurrent.LinkedBlockingDeque: java.util.Iterator iterator()>
Counter value: 1
SCC 7964 : 1
<java.lang.Access: void blockedOn(java.lang.Thread,sun.nio.ch.Interruptible)>
Counter value: 1
SCC 7965 : 1
<sun.nio.ch.SocketAdaptor: boolean isBound()>
Counter value: 1
SCC 7966 : 1
<java.nio.channels.Channels$ReadableByteChannelImpl: int read(java.nio.ByteBuffer)>
Counter value: 1
SCC 7967 : 1
<java.time.zone.Ser: java.time.ZoneOffset readOffset(java.io.DataInput)>
Counter value: 1
SCC 7968 : 1
<sun.nio.ch.ServerSocketChannelImpl: java.lang.String toString()>
Counter value: 1
SCC 7969 : 1
<java.io.ObjectInputStream: java.lang.String readUTF()>
Counter value: 1
SCC 7970 : 1
<java.nio.CharBuffer: int read(java.nio.CharBuffer)>
Counter value: 1
SCC 7971 : 1
<java.util.EnumMap$EntryIterator$Entry: int hashCode()>
Counter value: 1
SCC 7972 : 1
<java.util.concurrent.ExecutorCompletionService$QueueingFuture: void done()>
Counter value: 1
SCC 7973 : 1
<java.io.Console: boolean access$500()>
Counter value: 1
SCC 7974 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(java.lang.Object[],int)>
Counter value: 1
SCC 7975 : 1
<java.util.IdentityHashMap$EntryIterator$Entry: int hashCode()>
Counter value: 1
SCC 7976 : 1
<java.util.AbstractMap$1: boolean isEmpty()>
Counter value: 1
SCC 7977 : 1
<java.io.ObjectStreamClass$EntryFuture: void <init>()>
Counter value: 1
SCC 7978 : 1
<java.util.Base64$DecInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 7979 : 1
<java.nio.ByteBufferAsCharBufferRB: boolean isReadOnly()>
Counter value: 1
SCC 7980 : 1
<java.util.stream.IntPipeline$2$1: void accept(int)>
Counter value: 1
SCC 7981 : 1
<jdk.internal.org.objectweb.asm.Type: void getDescriptor(java.lang.StringBuffer)>
Counter value: 1
SCC 7982 : 1
<sun.nio.ch.MembershipRegistry: void invalidateAll()>
Counter value: 1
SCC 7983 : 1
<java.util.stream.ReferencePipeline$9$1: void <init>(java.util.stream.ReferencePipeline$9,java.util.stream.Sink)>
Counter value: 1
SCC 7984 : 1
<java.io.ObjectStreamField: java.lang.reflect.Field getField()>
Counter value: 1
SCC 7985 : 1
<java.util.concurrent.SynchronousQueue: java.lang.Object poll()>
Counter value: 1
SCC 7986 : 1
<java.nio.ByteBufferAsCharBufferRL: void <init>(java.nio.ByteBuffer,int,int,int,int,int)>
Counter value: 1
SCC 7987 : 1
<java.util.Spliterators$IntIteratorSpliterator: long estimateSize()>
Counter value: 1
SCC 7988 : 1
<java.util.WeakHashMap$ValueSpliterator: int characteristics()>
Counter value: 1
SCC 7989 : 1
<java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>
Counter value: 1
SCC 7990 : 1
<java.nio.channels.Channels: void writeFullyImpl(java.nio.channels.WritableByteChannel,java.nio.ByteBuffer)>
Counter value: 1
SCC 7991 : 1
<java.util.Collections$CheckedList$1: int previousIndex()>
Counter value: 2
SCC 7992 : 1
<java.net.HttpCookie: boolean startsWithIgnoreCase(java.lang.String,java.lang.String)>
Counter value: 1
SCC 7993 : 1
<java.time.OffsetDateTime: java.time.OffsetDateTime ofInstant(java.time.Instant,java.time.ZoneId)>
Counter value: 1
SCC 7994 : 1
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 7995 : 1
<java.time.Clock$FixedClock: int hashCode()>
Counter value: 1
SCC 7996 : 1
<sun.nio.ch.SocketAdaptor: sun.nio.ch.SocketChannelImpl access$000(sun.nio.ch.SocketAdaptor)>
Counter value: 1
SCC 7997 : 1
<java.security.AccessController: java.lang.Object doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction,java.security.AccessControlContext,java.security.Permission[])>
Counter value: 1
SCC 7998 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySpliterator: int characteristics()>
Counter value: 1
SCC 7999 : 1
<sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream: void write(int)>
Counter value: 2
SCC 8000 : 1
<java.net.NetworkInterface: boolean isUp()>
Counter value: 1
SCC 8001 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean add(java.util.Map$Entry)>
Counter value: 1
SCC 8002 : 1
<java.nio.HeapCharBufferR: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 8003 : 1
<java.util.WeakHashMap$KeySpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 8004 : 1
<java.util.Collections$SynchronizedList: void add(int,java.lang.Object)>
Counter value: 2
SCC 8005 : 1
<java.lang.Thread: void join(long,int)>
Counter value: 1
SCC 8006 : 1
<java.util.Collections$UnmodifiableMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8007 : 1
<sun.net.www.protocol.http.AuthenticationInfo: void addToCache()>
Counter value: 1
SCC 8008 : 1
<java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
Counter value: 2
SCC 8009 : 1
<java.util.Calendar: void appendValue(java.lang.StringBuilder,java.lang.String,boolean,long)>
Counter value: 1
SCC 8010 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 8011 : 1
<java.nio.StringCharBuffer: java.lang.CharSequence subSequence(int,int)>
Counter value: 1
SCC 8012 : 1
<java.lang.invoke.InterfaceHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 8013 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.util.Set schemesListToSet(java.lang.String)>
Counter value: 1
SCC 8014 : 1
<java.util.stream.SliceOps$2: java.util.stream.Node opEvaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.function.IntFunction)>
Counter value: 1
SCC 8015 : 1
<java.nio.DirectByteBufferR: byte _get(int)>
Counter value: 1
SCC 8016 : 1
<sun.net.www.http.HttpClient: void finished()>
Counter value: 1
SCC 8017 : 1
<java.lang.Thread: void blockedOn(sun.nio.ch.Interruptible)>
Counter value: 1
SCC 8018 : 1
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 8019 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: java.lang.String getJavaTimeDisplayName(java.lang.String,int,int,int,java.util.Locale)>
Counter value: 1
SCC 8020 : 1
<java.util.TreeMap: java.lang.Object clone()>
Counter value: 1
SCC 8021 : 1
<java.net.DatagramSocket: boolean isClosed()>
Counter value: 1
SCC 8022 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfLong: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 8023 : 1
<java.util.stream.ForEachOps$ForEachOp$OfRef: java.lang.Object get()>
Counter value: 1
SCC 8024 : 1
<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOfQueryOnly(java.lang.Object)>
Counter value: 1
SCC 8025 : 1
<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: long estimateSize()>
Counter value: 1
SCC 8026 : 1
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8027 : 1
<java.time.LocalDate: java.time.LocalDate readExternal(java.io.DataInput)>
Counter value: 1
SCC 8028 : 1
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 8029 : 1
<java.util.stream.Nodes$CollectorTask$OfDouble$init__93: java.lang.Object apply(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8030 : 1
<java.time.LocalDateTime: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 8031 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.io.InputStream access$200(sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 8032 : 1
<jdk.crypto.jniprovider.NativeCrypto$1: void run()>
Counter value: 1
SCC 8033 : 1
<java.util.concurrent.ForkJoinPool: void <clinit>()>
Counter value: 1
SCC 8034 : 1
<java.lang.Thread: void setName(java.lang.String)>
Counter value: 1
SCC 8035 : 1
<java.nio.file.Files$1: boolean accept(java.nio.file.Path)>
Counter value: 1
SCC 8036 : 1
<java.lang.Access: void registerShutdownHook(int,boolean,java.lang.Runnable)>
Counter value: 1
SCC 8037 : 1
<java.util.stream.SpinedBuffer$OfDouble: double get(long)>
Counter value: 1
SCC 8038 : 1
<java.util.stream.Nodes$CollectorTask$OfInt$init__89: void <init>()>
Counter value: 1
SCC 8039 : 1
<java.util.ResourceBundle$CacheKey: java.lang.String toString()>
Counter value: 1
SCC 8040 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: java.util.stream.Node$OfInt build()>
Counter value: 1
SCC 8041 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath emptyPath()>
Counter value: 1
SCC 8042 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: java.lang.String getNonce()>
Counter value: 1
SCC 8043 : 1
<java.io.ObjectStreamClass: java.lang.Long access$502(java.io.ObjectStreamClass,java.lang.Long)>
Counter value: 1
SCC 8044 : 1
<java.io.File: java.io.File getParentFile()>
Counter value: 1
SCC 8045 : 1
<java.util.Arrays: int deepHashCode(java.lang.Object[])>
Counter value: 2
SCC 8046 : 1
<java.nio.DirectByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
Counter value: 1
SCC 8047 : 1
<sun.net.www.http.HttpClient: void closeServer()>
Counter value: 1
SCC 8048 : 1
<java.net.HttpCookie$2: void assign(java.net.HttpCookie,java.lang.String,java.lang.String)>
Counter value: 1
SCC 8049 : 1
<java.lang.invoke.ConstantDoubleHandle: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 8050 : 1
<sun.nio.ch.Net: java.net.InetSocketAddress asInetSocketAddress(java.net.SocketAddress)>
Counter value: 1
SCC 8051 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl$4$1: java.lang.Void run()>
Counter value: 1
SCC 8052 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator: java.lang.Object next()>
Counter value: 1
SCC 8053 : 1
<java.util.concurrent.ForkJoinTask: boolean cancel(boolean)>
Counter value: 1
SCC 8054 : 1
<sun.nio.ch.ThreadPool$lambda_null_1__36: java.security.PrivilegedAction bootstrap$(java.lang.Runnable)>
Counter value: 1
SCC 8055 : 1
<java.nio.channels.FileChannel$MapMode: java.lang.String toString()>
Counter value: 1
SCC 8056 : 1
<java.nio.HeapCharBuffer: java.nio.CharBuffer put(char[],int,int)>
Counter value: 1
SCC 8057 : 1
<java.util.stream.IntStream$1: int nextInt()>
Counter value: 1
SCC 8058 : 1
<java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>
Counter value: 1
SCC 8059 : 1
<java.util.stream.ReduceOps$2ReducingSink: void begin(long)>
Counter value: 1
SCC 8060 : 1
<java.io.ObjectInputStream: java.lang.Object readHandle(boolean)>
Counter value: 1
SCC 8061 : 1
<java.util.stream.Nodes$IntArrayNode: java.lang.String toString()>
Counter value: 1
SCC 8062 : 1
<java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
Counter value: 1
SCC 8063 : 1
<java.util.AbstractMap$1: boolean contains(java.lang.Object)>
Counter value: 1
SCC 8064 : 1
<java.time.OffsetTime: void <init>(java.time.LocalTime,java.time.ZoneOffset)>
Counter value: 1
SCC 8065 : 1
<java.util.stream.FindOps$init__102: java.util.function.Supplier bootstrap$()>
Counter value: 1
SCC 8066 : 1
<sun.util.PreHashedMap$2$1: void <init>(sun.util.PreHashedMap$2)>
Counter value: 1
SCC 8067 : 1
<sun.reflect.Label$PatchInfo: void <init>(sun.reflect.ClassFileAssembler,short,short,int)>
Counter value: 1
SCC 8068 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 8069 : 1
<java.util.stream.SpinedBuffer: java.util.Spliterator spliterator()>
Counter value: 1
SCC 8070 : 1
<sun.misc.InnocuousThread$2: java.lang.Object run()>
Counter value: 1
SCC 8071 : 1
<java.util.stream.Nodes$IntArrayNode: void forEach(java.lang.Object)>
Counter value: 1
SCC 8072 : 1
<java.util.Collections$UnmodifiableCollection: java.lang.String toString()>
Counter value: 2
SCC 8073 : 1
<java.lang.invoke.FoldVoidHandle: void <init>(java.lang.invoke.FoldVoidHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 8074 : 1
<sun.reflect.MethodAccessorGenerator: void emitInvoke()>
Counter value: 1
SCC 8075 : 1
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster previousOrSame(java.time.DayOfWeek)>
Counter value: 1
SCC 8076 : 1
<sun.nio.fs.UnixPath: byte[] resolve(byte[],byte[])>
Counter value: 1
SCC 8077 : 1
<java.time.LocalDateTime: int getHour()>
Counter value: 1
SCC 8078 : 1
<java.io.ObjectStreamClass: boolean access$2002(java.io.ObjectStreamClass,boolean)>
Counter value: 1
SCC 8079 : 1
<java.lang.Integer: int reverseBytes(int)>
Counter value: 1
SCC 8080 : 1
<java.util.concurrent.ConcurrentHashMap$Node: java.lang.Object getKey()>
Counter value: 1
SCC 8081 : 1
<java.util.concurrent.FutureTask: void finishCompletion()>
Counter value: 1
SCC 8082 : 1
<java.util.Collections$UnmodifiableCollection: boolean remove(java.lang.Object)>
Counter value: 1
SCC 8083 : 1
<java.net.AbstractPlainSocketImpl: int getTimeout()>
Counter value: 1
SCC 8084 : 1
<sun.reflect.NativeMethodAccessorImpl: void <init>(java.lang.reflect.Method)>
Counter value: 1
SCC 8085 : 1
<java.util.Spliterators$LongArraySpliterator: long estimateSize()>
Counter value: 1
SCC 8086 : 1
<java.util.stream.FindOps$FindSink$OfLong: java.lang.Object get()>
Counter value: 1
SCC 8087 : 1
<sun.reflect.ClassFileAssembler: void opc_checkcast(short)>
Counter value: 1
SCC 8088 : 1
<java.util.stream.ReferencePipeline$3: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 8089 : 1
<java.lang.invoke.PermuteHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 8090 : 1
<java.util.Collections$UnmodifiableList: void add(int,java.lang.Object)>
Counter value: 1
SCC 8091 : 1
<java.lang.invoke.MethodTypeHelper: java.lang.Class wrapPrimitive(java.lang.Class)>
Counter value: 1
SCC 8092 : 1
<java.io.ObjectInputStream$ValidationList: java.io.ObjectInputStream$ValidationList$Callback access$1000(java.io.ObjectInputStream$ValidationList)>
Counter value: 1
SCC 8093 : 1
<sun.reflect.ClassFileAssembler: void opc_athrow()>
Counter value: 1
SCC 8094 : 1
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate date(int,int,int)>
Counter value: 1
SCC 8095 : 1
<java.nio.FloatBuffer: int compareTo(java.nio.FloatBuffer)>
Counter value: 1
SCC 8096 : 1
<java.time.chrono.HijrahChronology: java.time.chrono.HijrahDate date(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 8097 : 1
<sun.nio.ch.DatagramDispatcher: void close(java.io.FileDescriptor)>
Counter value: 1
SCC 8098 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void readFully(byte[],int,int,boolean)>
Counter value: 1
SCC 8099 : 1
<java.security.cert.CertPath: java.lang.String toString()>
Counter value: 1
SCC 8100 : 1
<java.util.stream.SliceOps$SliceTask: java.lang.Object getEmptyResult()>
Counter value: 1
SCC 8101 : 1
<sun.nio.ch.FileChannelImpl: int read(java.nio.ByteBuffer)>
Counter value: 1
SCC 8102 : 1
<java.net.HttpCookie: long access$000(java.net.HttpCookie,java.lang.String)>
Counter value: 1
SCC 8103 : 1
<sun.misc.ProxyGenerator$ConstantPool$Entry: void <init>(sun.misc.ProxyGenerator$1)>
Counter value: 1
SCC 8104 : 1
<java.nio.DirectIntBufferU: int get(int)>
Counter value: 1
SCC 8105 : 1
<java.nio.file.Files$2: java.lang.Object next()>
Counter value: 1
SCC 8106 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator$accept__42: void <init>(java.util.stream.SpinedBuffer$OfLong)>
Counter value: 1
SCC 8107 : 1
<java.util.Collections$SynchronizedMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 2
SCC 8108 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistChronology getChronology()>
Counter value: 1
SCC 8109 : 1
<java.util.ArrayPrefixHelpers$CumulateTask: void compute()>
Counter value: 1
SCC 8110 : 1
<sun.security.x509.CertificateExtensions: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8111 : 1
<java.util.Collections$AsLIFOQueue: java.lang.Object poll()>
Counter value: 1
SCC 8112 : 1
<sun.nio.fs.UnixNativeDispatcher$1: void <init>()>
Counter value: 1
SCC 8113 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: void set(java.lang.Object)>
Counter value: 1
SCC 8114 : 1
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.IllegalArgumentException newGetLongIllegalArgumentException()>
Counter value: 1
SCC 8115 : 1
<java.util.concurrent.ConcurrentHashMap$EntryIterator: void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap)>
Counter value: 1
SCC 8116 : 1
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8117 : 1
<sun.net.www.MessageHeader: java.util.Map getHeaders()>
Counter value: 1
SCC 8118 : 1
<java.io.ObjectInputStream$BlockDataInputStream: int available()>
Counter value: 1
SCC 8119 : 1
<java.net.URLPermission: java.lang.String getActions()>
Counter value: 1
SCC 8120 : 1
<java.util.stream.SortedOps$SizedRefSortingSink: void <init>(java.util.stream.Sink,java.util.Comparator)>
Counter value: 1
SCC 8121 : 1
<sun.misc.ProxyGenerator$ConstantPool: short getFieldRef(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 8122 : 1
<java.security.AccessControlContext: boolean equalSets(java.lang.Object[],java.lang.Object[])>
Counter value: 1
SCC 8123 : 1
<java.util.TreeMap$NavigableSubMap: boolean tooHigh(java.lang.Object)>
Counter value: 1
SCC 8124 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfRef: void accept(java.lang.Object)>
Counter value: 1
SCC 8125 : 1
<java.util.stream.Nodes$SpinedNodeBuilder: java.util.Spliterator spliterator()>
Counter value: 1
SCC 8126 : 1
<java.lang.reflect.Field: int getModifiers()>
Counter value: 1
SCC 8127 : 1
<sun.util.PreHashedMap$1$1: boolean findNext()>
Counter value: 1
SCC 8128 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: boolean contains(java.lang.Object)>
Counter value: 2
SCC 8129 : 1
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 8130 : 1
<java.util.RegularEnumSet: boolean isEmpty()>
Counter value: 1
SCC 8131 : 1
<java.util.Spliterators$IntIteratorSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 8132 : 1
<java.nio.channels.Channels$1: void write(byte[],int,int)>
Counter value: 1
SCC 8133 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 8134 : 1
<java.math.BigDecimal: java.lang.String toString()>
Counter value: 1
SCC 8135 : 1
<java.lang.invoke.PrimitiveHandle: int getModifiers()>
Counter value: 1
SCC 8136 : 1
<java.util.EnumMap$KeySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 8137 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator: java.util.Comparator getComparator()>
Counter value: 2
SCC 8138 : 1
<java.util.concurrent.ConcurrentHashMap$SearchEntriesTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 8139 : 1
<java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: boolean doAdvance()>
Counter value: 1
SCC 8140 : 1
<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>
Counter value: 1
SCC 8141 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: void <init>()>
Counter value: 1
SCC 8142 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 8143 : 1
<java.io.ObjectInputStream$HandleTable: int size()>
Counter value: 1
SCC 8144 : 1
<java.util.Spliterator$OfInt$accept__75: java.util.function.IntConsumer bootstrap$(java.util.function.Consumer)>
Counter value: 1
SCC 8145 : 1
<java.io.ObjectStreamClass$6: void <init>()>
Counter value: 1
SCC 8146 : 1
<java.util.Random$RandomDoublesSpliterator: int characteristics()>
Counter value: 1
SCC 8147 : 1
<java.util.concurrent.ForkJoinPool: void shutdown()>
Counter value: 1
SCC 8148 : 1
<java.util.stream.Nodes$SpinedNodeBuilder: void <init>()>
Counter value: 1
SCC 8149 : 1
<sun.net.www.protocol.http.HttpURLConnection: boolean checkSetHost()>
Counter value: 1
SCC 8150 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 8151 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: void acceptConsumed(java.util.function.IntConsumer)>
Counter value: 1
SCC 8152 : 1
<java.nio.file.FileTreeWalker: void pop()>
Counter value: 1
SCC 8153 : 1
<sun.reflect.UnsafeBooleanFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 8154 : 1
<java.time.chrono.JapaneseDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 8155 : 1
<sun.misc.NativeSignalHandler: void handle(sun.misc.Signal)>
Counter value: 1
SCC 8156 : 1
<sun.nio.ch.Net: void translateToSocketException(java.lang.Exception)>
Counter value: 1
SCC 8157 : 1
<sun.nio.ch.IOVecWrapper$Deallocator: void run()>
Counter value: 1
SCC 8158 : 1
<java.lang.ClassValue: java.lang.ClassValue$ClassValueMap initializeMap(java.lang.Class)>
Counter value: 1
SCC 8159 : 1
<sun.reflect.ClassFileAssembler: void emitMagicAndVersion()>
Counter value: 1
SCC 8160 : 1
<java.util.Collections$EmptyList: void sort(java.util.Comparator)>
Counter value: 1
SCC 8161 : 1
<sun.security.x509.DistributionPoint: java.lang.String toString()>
Counter value: 1
SCC 8162 : 1
<java.util.jar.Manifest: java.lang.Object clone()>
Counter value: 1
SCC 8163 : 1
<java.lang.reflect.WeakCache$CacheKey: java.lang.Object valueOf(java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 8164 : 1
<java.util.LinkedHashMap$LinkedKeySet: void clear()>
Counter value: 1
SCC 8165 : 1
<java.io.ObjectInputStream: java.lang.Class readClass(boolean)>
Counter value: 1
SCC 8166 : 1
<java.util.stream.ReduceOps$ReduceTask: java.util.stream.AbstractTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 8167 : 1
<java.net.InetSocketAddress: int getPort()>
Counter value: 1
SCC 8168 : 1
<sun.net.ProgressSource: void setContentType(java.lang.String)>
Counter value: 1
SCC 8169 : 1
<java.util.Calendar: int compareTo(long)>
Counter value: 1
SCC 8170 : 1
<java.util.Hashtable: boolean contains(java.lang.Object)>
Counter value: 1
SCC 8171 : 1
<java.util.stream.ReduceOps$9: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 8172 : 1
<java.time.OffsetTime: int compareTo(java.lang.Object)>
Counter value: 1
SCC 8173 : 1
<java.lang.invoke.VarargsCollectorHandle: java.lang.invoke.MethodHandle asVarargsCollector(java.lang.Class)>
Counter value: 2
SCC 8174 : 1
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>
Counter value: 1
SCC 8175 : 1
<java.util.IdentityHashMap$Values: java.util.Spliterator spliterator()>
Counter value: 1
SCC 8176 : 1
<java.text.DateFormatSymbols: java.lang.Object clone()>
Counter value: 1
SCC 8177 : 1
<java.util.stream.ReferencePipeline$8$1: boolean cancellationRequested()>
Counter value: 2
SCC 8178 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: void setOpaque(java.lang.String)>
Counter value: 1
SCC 8179 : 1
<java.io.ObjectStreamClass$Caches: java.lang.ref.ReferenceQueue access$200()>
Counter value: 1
SCC 8180 : 1
<java.time.chrono.ChronoPeriodImpl: int hashCode()>
Counter value: 1
SCC 8181 : 1
<java.util.Collections$CheckedList$1: void forEachRemaining(java.util.function.Consumer)>
Counter value: 2
SCC 8182 : 1
<java.util.Vector$ListItr: int nextIndex()>
Counter value: 1
SCC 8183 : 1
<java.lang.CharSequence$1CharIterator: int nextInt()>
Counter value: 1
SCC 8184 : 1
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
Counter value: 1
SCC 8185 : 1
<java.util.stream.SortedOps$IntSortingSink: void end()>
Counter value: 2
SCC 8186 : 1
<java.util.concurrent.LinkedBlockingDeque$Itr: java.util.concurrent.LinkedBlockingDeque$Node nextNode(java.util.concurrent.LinkedBlockingDeque$Node)>
Counter value: 1
SCC 8187 : 1
<java.util.EnumMap$EntryIterator$Entry: java.lang.Enum getKey()>
Counter value: 1
SCC 8188 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 8189 : 1
<java.util.Spliterators$IntIteratorSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 8190 : 1
<sun.net.www.protocol.http.HttpURLConnection: void doTunneling()>
Counter value: 1
SCC 8191 : 1
<java.util.stream.Sink$ChainedLong: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 8192 : 1
<java.util.stream.SortedOps$SizedIntSortingSink: void accept(int)>
Counter value: 1
SCC 8193 : 1
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>
Counter value: 1
SCC 8194 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean addAll(java.util.Collection)>
Counter value: 1
SCC 8195 : 1
<java.util.stream.Sink$ChainedInt: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 8196 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator$accept__42: java.util.stream.Sink$OfLong bootstrap$(java.util.stream.SpinedBuffer$OfLong)>
Counter value: 1
SCC 8197 : 1
<sun.nio.fs.UnixPath: int getNameCount()>
Counter value: 1
SCC 8198 : 1
<sun.nio.ch.SocketAdaptor: void close()>
Counter value: 1
SCC 8199 : 1
<java.time.chrono.JapaneseDate: java.lang.String toString()>
Counter value: 1
SCC 8200 : 1
<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle varargsArray(int)>
Counter value: 1
SCC 8201 : 1
<java.util.concurrent.ConcurrentSkipListMap$Iter: void remove()>
Counter value: 1
SCC 8202 : 1
<sun.net.www.protocol.http.HttpURLConnection: boolean followRedirect()>
Counter value: 1
SCC 8203 : 1
<java.net.URLStreamHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>
Counter value: 1
SCC 8204 : 1
<java.nio.channels.spi.SelectorProvider$1: java.lang.Object run()>
Counter value: 1
SCC 8205 : 1
<java.net.JarURLConnection: java.util.jar.JarEntry getJarEntry()>
Counter value: 1
SCC 8206 : 1
<java.util.AbstractMap$1: void <init>(java.util.AbstractMap)>
Counter value: 1
SCC 8207 : 1
<java.util.TreeMap$KeySet: java.util.Spliterator spliterator()>
Counter value: 1
SCC 8208 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object access$000()>
Counter value: 1
SCC 8209 : 1
<java.io.PrintWriter: void flush()>
Counter value: 2
SCC 8210 : 1
<java.nio.ByteBuffer: void <init>(int,int,int,int)>
Counter value: 1
SCC 8211 : 1
<java.nio.FloatBuffer: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8212 : 1
<sun.nio.fs.UnixPath: int hashCode()>
Counter value: 1
SCC 8213 : 1
<java.io.BufferedWriter: void write(int)>
Counter value: 1
SCC 8214 : 1
<java.lang.reflect.Executable: java.lang.reflect.Type[] getGenericParameterTypes()>
Counter value: 1
SCC 8215 : 1
<java.lang.ClassValue: java.lang.ClassValue$Version version()>
Counter value: 1
SCC 8216 : 1
<java.util.jar.Manifest$FastInputStream: int available()>
Counter value: 2
SCC 8217 : 1
<sun.security.x509.X400Address: int constrains(sun.security.x509.GeneralNameInterface)>
Counter value: 1
SCC 8218 : 1
<java.net.NetworkInterface: java.net.InetAddress[] access$000(java.net.NetworkInterface)>
Counter value: 1
SCC 8219 : 1
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object[] toArray()>
Counter value: 1
SCC 8220 : 1
<java.util.DoubleSummaryStatistics: long getCount()>
Counter value: 1
SCC 8221 : 1
<java.lang.invoke.DelegatingMethodHandle: void <clinit>()>
Counter value: 1
SCC 8222 : 1
<sun.misc.ProxyGenerator$ConstantPool: short addEntry(sun.misc.ProxyGenerator$ConstantPool$Entry)>
Counter value: 1
SCC 8223 : 1
<sun.net.www.http.HttpClient: void openServer()>
Counter value: 1
SCC 8224 : 1
<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.lang.String)>
Counter value: 1
SCC 8225 : 1
<java.util.stream.MatchOps$MatchTask: java.util.stream.AbstractTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 8226 : 1
<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper forPrimitiveType(java.lang.Class)>
Counter value: 1
SCC 8227 : 1
<sun.security.x509.AccessDescription: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 8228 : 1
<java.lang.invoke.InnerClassLambdaMetafactory$1: java.lang.reflect.Constructor[] run()>
Counter value: 1
SCC 8229 : 1
<sun.net.www.MessageHeader: void mergeHeader(java.io.InputStream)>
Counter value: 1
SCC 8230 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: java.util.Iterator iterator()>
Counter value: 1
SCC 8231 : 1
<java.lang.invoke.MethodHandleInfoImpl: java.lang.invoke.MethodType getMethodType()>
Counter value: 1
SCC 8232 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: java.util.stream.StreamSpliterators$ArrayBuffer$OfDouble bufferCreate(int)>
Counter value: 1
SCC 8233 : 1
<sun.misc.ProxyGenerator$ConstantPool: short getMethodRef(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 8234 : 1
<java.util.TreeMap$NavigableSubMap$EntrySetView: int size()>
Counter value: 1
SCC 8235 : 1
<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void reset()>
Counter value: 1
SCC 8236 : 1
<sun.security.util.NullCache: void clear()>
Counter value: 1
SCC 8237 : 1
<sun.reflect.UnsafeByteFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 8238 : 1
<java.time.OffsetTime: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 8239 : 1
<java.util.TreeMap$NavigableSubMap: java.util.Set keySet()>
Counter value: 1
SCC 8240 : 1
<jdk.internal.org.objectweb.asm.TypePath: int getLength()>
Counter value: 1
SCC 8241 : 1
<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: int read(byte[])>
Counter value: 1
SCC 8242 : 1
<java.time.ZoneOffset: java.time.ZoneOffset readExternal(java.io.DataInput)>
Counter value: 1
SCC 8243 : 1
<java.net.URLClassLoader$4: java.lang.Object run()>
Counter value: 1
SCC 8244 : 1
<sun.security.util.Cache$EqualByteArray: void <init>(byte[])>
Counter value: 1
SCC 8245 : 1
<sun.net.www.HeaderParser: java.lang.String findValue(java.lang.String)>
Counter value: 1
SCC 8246 : 1
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 8247 : 1
<java.util.stream.Nodes$LongArrayNode: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 8248 : 1
<java.net.HttpCookie: java.lang.String getComment()>
Counter value: 1
SCC 8249 : 1
<sun.net.www.http.KeepAliveStream: void mark(int)>
Counter value: 1
SCC 8250 : 1
<java.io.ObjectInputStream$HandleTable: int assign(java.lang.Object)>
Counter value: 1
SCC 8251 : 1
<java.nio.ByteBufferAsFloatBufferL: int ix(int)>
Counter value: 1
SCC 8252 : 1
<sun.nio.ch.SocketAdaptor$1: java.lang.Object run()>
Counter value: 1
SCC 8253 : 1
<java.net.InetAddress: java.net.InetAddress getLoopbackAddress()>
Counter value: 1
SCC 8254 : 1
<java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
Counter value: 1
SCC 8255 : 1
<java.util.concurrent.LinkedBlockingDeque: boolean linkFirst(java.util.concurrent.LinkedBlockingDeque$Node)>
Counter value: 1
SCC 8256 : 1
<java.util.stream.AbstractTask: java.util.stream.AbstractTask getParent()>
Counter value: 1
SCC 8257 : 1
<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>
Counter value: 1
SCC 8258 : 1
<javax.security.auth.Policy$2: java.lang.Object run()>
Counter value: 1
SCC 8259 : 1
<java.net.URI: java.net.URI normalize(java.net.URI)>
Counter value: 1
SCC 8260 : 1
<java.io.FileReader: void <init>(java.lang.String)>
Counter value: 1
SCC 8261 : 1
<java.nio.Bits: float getFloatL(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 8262 : 1
<java.nio.IntBuffer: java.lang.String toString()>
Counter value: 1
SCC 8263 : 1
<sun.misc.Cleaner$1: void <init>(sun.misc.Cleaner,java.lang.Throwable)>
Counter value: 1
SCC 8264 : 1
<java.lang.Class$3: java.lang.Object run()>
Counter value: 1
SCC 8265 : 1
<java.util.Collections$SetFromMap: boolean equals(java.lang.Object)>
Counter value: 2
SCC 8266 : 1
<java.util.stream.Nodes$ToArrayTask$OfPrimitive: void <init>(java.util.stream.Node$OfPrimitive,java.lang.Object,int,java.util.stream.Nodes$1)>
Counter value: 1
SCC 8267 : 1
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 8268 : 1
<sun.net.www.protocol.http.HttpURLConnection$3: java.lang.Object run()>
Counter value: 1
SCC 8269 : 1
<java.util.Collections$SynchronizedList: java.lang.Object get(int)>
Counter value: 2
SCC 8270 : 1
<java.security.MessageDigest: int access$202(java.security.MessageDigest,int)>
Counter value: 1
SCC 8271 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 8272 : 1
<java.lang.invoke.ConstantDoubleHandle: void <init>(java.lang.invoke.MethodType,double)>
Counter value: 1
SCC 8273 : 1
<java.util.stream.SortedOps$LongSortingSink: void begin(long)>
Counter value: 1
SCC 8274 : 1
<sun.net.NetProperties$1: java.lang.Void run()>
Counter value: 1
SCC 8275 : 1
<java.util.Vector: java.util.List subList(int,int)>
Counter value: 1
SCC 8276 : 1
<java.util.stream.ReferencePipeline$5$1: void accept(java.lang.Object)>
Counter value: 1
SCC 8277 : 1
<java.nio.ByteBufferAsCharBufferL: char get()>
Counter value: 1
SCC 8278 : 1
<java.io.ObjectOutputStream$BlockDataOutputStream: void write(byte[],int,int)>
Counter value: 1
SCC 8279 : 1
<java.net.InetAddress: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8280 : 1
<java.util.TreeMap$NavigableSubMap$EntrySetView: boolean isEmpty()>
Counter value: 1
SCC 8281 : 1
<java.util.BitSet: int nextClearBit(int)>
Counter value: 1
SCC 8282 : 1
<java.util.stream.SortedOps$SizedLongSortingSink: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 8283 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: void <init>()>
Counter value: 1
SCC 8284 : 1
<java.time.chrono.HijrahDate: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 8285 : 1
<sun.net.www.http.ChunkedOutputStream: void write(int)>
Counter value: 1
SCC 8286 : 1
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.String toString()>
Counter value: 1
SCC 8287 : 1
<java.util.stream.Stream$1: boolean hasNext()>
Counter value: 1
SCC 8288 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object remove(int)>
Counter value: 1
SCC 8289 : 1
<java.lang.invoke.MethodTypeHelper: java.lang.Class unwrapPrimitive(java.lang.Class)>
Counter value: 1
SCC 8290 : 1
<java.io.OutputStream: void write(byte[],int,int)>
Counter value: 1
SCC 8291 : 1
<sun.nio.fs.UnixNativeDispatcher: int open(sun.nio.fs.UnixPath,int,int)>
Counter value: 1
SCC 8292 : 1
<java.util.Collections$SynchronizedList: java.util.ListIterator listIterator()>
Counter value: 2
SCC 8293 : 1
<sun.nio.fs.AbstractPath: java.nio.file.Path resolve(java.lang.String)>
Counter value: 1
SCC 8294 : 1
<java.io.ObjectStreamClass: boolean isInstantiable()>
Counter value: 1
SCC 8295 : 1
<sun.security.x509.CertificateExtensions: java.lang.String getName()>
Counter value: 1
SCC 8296 : 1
<java.util.IdentityHashMap$KeySet: void clear()>
Counter value: 1
SCC 8297 : 1
<sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator: void <init>()>
Counter value: 1
SCC 8298 : 1
<java.util.concurrent.ForkJoinTask: int doExec()>
Counter value: 1
SCC 8299 : 1
<java.util.concurrent.ThreadLocalRandom$RandomLongsSpliterator: int characteristics()>
Counter value: 1
SCC 8300 : 1
<java.time.LocalTime: java.time.LocalTime minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 8301 : 1
<java.util.Date: int compareTo(java.lang.Object)>
Counter value: 1
SCC 8302 : 1
<sun.nio.fs.UnixFileKey: int hashCode()>
Counter value: 1
SCC 8303 : 1
<java.util.concurrent.CopyOnWriteArrayList: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 8304 : 1
<java.util.stream.ReduceOps$2ReducingSink: java.lang.Object get()>
Counter value: 1
SCC 8305 : 1
<java.time.Clock$OffsetClock: java.lang.String toString()>
Counter value: 1
SCC 8306 : 1
<java.net.SocketImpl: int getPort()>
Counter value: 1
SCC 8307 : 1
<java.lang.ClassLoader$ClassNameLockRef: void run()>
Counter value: 1
SCC 8308 : 1
<java.nio.DirectLongBufferU: long ix(int)>
Counter value: 1
SCC 8309 : 1
<java.util.stream.Streams$IntStreamBuilderImpl: void accept(int)>
Counter value: 1
SCC 8310 : 1
<java.util.WeakHashMap$ValueSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 8311 : 1
<java.util.TreeMap$DescendingSubMap$DescendingEntrySetView: java.util.Iterator iterator()>
Counter value: 1
SCC 8312 : 1
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>
Counter value: 1
SCC 8313 : 1
<java.nio.HeapLongBuffer: java.nio.LongBuffer put(int,long)>
Counter value: 1
SCC 8314 : 1
<java.io.DataOutputStream: int writeUTF(java.lang.String,java.io.DataOutput)>
Counter value: 1
SCC 8315 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.ThaiBuddhistDate 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 8316 : 1
<java.lang.invoke.MethodHandleStatics$1: void <init>(java.lang.Object[])>
Counter value: 1
SCC 8317 : 1
<java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8318 : 1
<sun.nio.ch.SocketOptionRegistry: sun.nio.ch.OptionKey findOption(java.net.SocketOption,java.net.ProtocolFamily)>
Counter value: 1
SCC 8319 : 1
<java.io.BufferedReader$1: boolean hasNext()>
Counter value: 1
SCC 8320 : 1
<sun.misc.ProxyGenerator: void code_iload(int,java.io.DataOutputStream)>
Counter value: 1
SCC 8321 : 1
<java.time.LocalTime: int compareTo(java.lang.Object)>
Counter value: 1
SCC 8322 : 1
<java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object nextElement()>
Counter value: 1
SCC 8323 : 1
<java.util.stream.Nodes$CollectorTask$OfLong$longBuilder__90: java.util.function.LongFunction bootstrap$()>
Counter value: 1
SCC 8324 : 1
<java.text.SimpleDateFormat: java.lang.Object clone()>
Counter value: 1
SCC 8325 : 1
<java.util.Collections: java.util.Comparator reverseOrder()>
Counter value: 1
SCC 8326 : 1
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: long estimateSize()>
Counter value: 1
SCC 8327 : 1
<java.util.ArraysParallelSortHelpers$FJLong$Sorter: void compute()>
Counter value: 1
SCC 8328 : 1
<java.util.jar.JarVerifier$VerifierCodeSource: boolean isSameDomain(java.lang.Object)>
Counter value: 1
SCC 8329 : 1
<sun.nio.ch.ChannelInputStream: void close()>
Counter value: 1
SCC 8330 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator: void accept(java.lang.Object)>
Counter value: 1
SCC 8331 : 1
<java.lang.reflect.Constructor: int getModifiers()>
Counter value: 1
SCC 8332 : 1
<java.nio.channels.Channels$2: int read(byte[],int,int)>
Counter value: 1
SCC 8333 : 1
<java.util.stream.ReduceOps$3: java.util.stream.ReduceOps$3ReducingSink makeSink()>
Counter value: 1
SCC 8334 : 1
<java.util.concurrent.ConcurrentLinkedQueue$Node: void <init>(java.lang.Object)>
Counter value: 1
SCC 8335 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean tooLow(java.lang.Object,java.util.Comparator)>
Counter value: 1
SCC 8336 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: long getDelay(java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 8337 : 1
<sun.security.provider.X509Factory: void <clinit>()>
Counter value: 1
SCC 8338 : 1
<sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator: java.nio.file.Path next()>
Counter value: 1
SCC 8339 : 1
<java.util.concurrent.CountDownLatch: void await()>
Counter value: 1
SCC 8340 : 1
<sun.reflect.UnsafeFloatFieldAccessorImpl: float getFloat(java.lang.Object)>
Counter value: 1
SCC 8341 : 1
<java.lang.invoke.ConvertHandle$FilterHelpers: java.lang.invoke.MethodHandle getCastFilter(java.lang.invoke.MethodType,boolean)>
Counter value: 1
SCC 8342 : 1
<java.util.stream.SpinedBuffer$OfInt: void <init>(int)>
Counter value: 1
SCC 8343 : 1
<java.net.HttpCookie: java.lang.String toString()>
Counter value: 1
SCC 8344 : 1
<java.util.Random$RandomDoublesSpliterator: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 8345 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: void begin(long)>
Counter value: 1
SCC 8346 : 1
<java.io.ObjectStreamClass$lambda_newInstance_0__87: void <init>(java.io.ObjectStreamClass)>
Counter value: 1
SCC 8347 : 1
<java.time.chrono.HijrahChronology: int getYearLength(int)>
Counter value: 1
SCC 8348 : 1
<sun.nio.ch.Util: void free(java.nio.ByteBuffer)>
Counter value: 1
SCC 8349 : 1
<java.nio.ByteBufferAsCharBufferL: void <init>(java.nio.ByteBuffer,int,int,int,int,int)>
Counter value: 1
SCC 8350 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: long capacity()>
Counter value: 1
SCC 8351 : 1
<sun.nio.ch.IOUtil$1: java.lang.Void run()>
Counter value: 1
SCC 8352 : 1
<sun.security.util.NullCache: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 8353 : 1
<java.nio.DirectByteBufferR: java.nio.ByteBuffer put(byte[],int,int)>
Counter value: 1
SCC 8354 : 1
<java.time.OffsetTime: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 8355 : 1
<java.util.stream.FindOps$FindTask: void foundResult(java.lang.Object)>
Counter value: 1
SCC 8356 : 1
<java.util.concurrent.ForkJoinTask$ExceptionNode: void <init>(java.util.concurrent.ForkJoinTask,java.lang.Throwable,java.util.concurrent.ForkJoinTask$ExceptionNode)>
Counter value: 1
SCC 8357 : 1
<java.util.Collections$CheckedCollection: boolean isEmpty()>
Counter value: 2
SCC 8358 : 1
<java.text.SimpleDateFormat: void set2DigitYearStart(java.util.Date)>
Counter value: 1
SCC 8359 : 1
<java.nio.HeapCharBuffer: java.nio.CharBuffer compact()>
Counter value: 1
SCC 8360 : 1
<sun.security.x509.X509CRLImpl: byte[] getEncodedInternal(java.security.cert.X509CRL)>
Counter value: 1
SCC 8361 : 1
<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],java.security.AccessControlContext)>
Counter value: 1
SCC 8362 : 1
<java.nio.DirectIntBufferU: sun.misc.Cleaner cleaner()>
Counter value: 1
SCC 8363 : 1
<java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8364 : 1
<java.util.stream.ReferencePipeline$10: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 8365 : 1
<java.lang.invoke.DirectHandle: void <init>(java.lang.invoke.PrimitiveHandle,byte)>
Counter value: 1
SCC 8366 : 1
<sun.nio.ch.SocketDispatcher: void <init>()>
Counter value: 1
SCC 8367 : 1
<java.lang.invoke.MethodTypeHelper: java.lang.String getBytecodeStringName(java.lang.Class)>
Counter value: 1
SCC 8368 : 1
<javax.crypto.PermissionsEnumerator: void <init>(java.util.Enumeration)>
Counter value: 1
SCC 8369 : 1
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8370 : 1
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8371 : 1
<java.util.Collections$CopiesList: java.lang.Object[] toArray()>
Counter value: 1
SCC 8372 : 1
<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>
Counter value: 1
SCC 8373 : 1
<java.nio.ByteBufferAsFloatBufferB: float get(int)>
Counter value: 1
SCC 8374 : 1
<sun.security.x509.X400Address: java.lang.String toString()>
Counter value: 1
SCC 8375 : 1
<java.util.jar.JarVerifier$4: java.lang.Object nextElement()>
Counter value: 1
SCC 8376 : 1
<java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8377 : 1
<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: int hashCode()>
Counter value: 1
SCC 8378 : 1
<sun.nio.ch.FileKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8379 : 1
<java.nio.DirectCharBufferU: java.nio.CharBuffer put(char[],int,int)>
Counter value: 1
SCC 8380 : 1
<java.util.stream.SpinedBuffer: void clear()>
Counter value: 1
SCC 8381 : 1
<java.lang.invoke.ThunkKeyWithObjectArray: void <init>(java.lang.invoke.MethodType,java.lang.Object[])>
Counter value: 1
SCC 8382 : 1
<java.util.stream.DistinctOps$1$1: void end()>
Counter value: 2
SCC 8383 : 1
<java.io.ClassByNameCache$LoaderRef: void <init>(java.lang.ClassLoader,java.lang.ref.ReferenceQueue,boolean)>
Counter value: 1
SCC 8384 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: void copyInto(long[],int)>
Counter value: 1
SCC 8385 : 1
<java.nio.Bits: void copyToCharArray(long,java.lang.Object,long,long)>
Counter value: 1
SCC 8386 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 1
SCC 8387 : 1
<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: void <init>(java.util.TreeMap$NavigableSubMap,java.util.TreeMap$Entry,java.util.TreeMap$Entry)>
Counter value: 1
SCC 8388 : 1
<java.util.ArraysParallelSortHelpers$FJInt$Sorter: void <init>(java.util.concurrent.CountedCompleter,int[],int[],int,int,int,int)>
Counter value: 1
SCC 8389 : 1
<sun.security.x509.GeneralSubtrees: sun.security.x509.GeneralSubtree get(int)>
Counter value: 1
SCC 8390 : 1
<java.util.Spliterator$OfInt: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 8391 : 1
<sun.security.x509.CRLNumberExtension: void encode(java.io.OutputStream,sun.security.util.ObjectIdentifier,boolean)>
Counter value: 1
SCC 8392 : 1
<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>
Counter value: 1
SCC 8393 : 1
<java.util.stream.Nodes$IntFixedNodeBuilder: java.util.stream.Node build()>
Counter value: 1
SCC 8394 : 1
<java.lang.invoke.SecurityFrameInjector: byte[] initializeSecurityFrameClassBytes()>
Counter value: 1
SCC 8395 : 1
<sun.net.www.protocol.http.HttpURLConnection: int access$500()>
Counter value: 1
SCC 8396 : 1
<sun.net.www.protocol.http.Negotiator: void finest(java.lang.Exception)>
Counter value: 1
SCC 8397 : 1
<java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator: int characteristics()>
Counter value: 1
SCC 8398 : 1
<java.net.ProxySelector: void <clinit>()>
Counter value: 1
SCC 8399 : 1
<java.util.stream.Nodes$ArrayNode: void copyInto(java.lang.Object[],int)>
Counter value: 1
SCC 8400 : 1
<java.nio.DirectIntBufferS: long ix(int)>
Counter value: 1
SCC 8401 : 1
<sun.nio.cs.StreamEncoder: void implFlush()>
Counter value: 1
SCC 8402 : 1
<java.util.stream.Node: java.util.stream.Node truncate(long,long,java.util.function.IntFunction)>
Counter value: 1
SCC 8403 : 1
<sun.net.www.http.HttpClient: java.lang.String getProxyHostUsed()>
Counter value: 1
SCC 8404 : 1
<java.net.HttpCookie: java.lang.String toNetscapeHeaderString()>
Counter value: 1
SCC 8405 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate: void addImpl(java.text.spi.DateFormatSymbolsProvider)>
Counter value: 1
SCC 8406 : 1
<java.util.BitSet$1BitSetIterator: int nextInt()>
Counter value: 1
SCC 8407 : 1
<sun.security.x509.IssuerAlternativeNameExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 8408 : 1
<sun.security.x509.SubjectKeyIdentifierExtension: java.lang.String getName()>
Counter value: 1
SCC 8409 : 1
<java.util.TreeMap$NavigableSubMap$SubMapEntryIterator: void <init>(java.util.TreeMap$NavigableSubMap,java.util.TreeMap$Entry,java.util.TreeMap$Entry)>
Counter value: 1
SCC 8410 : 1
<java.net.NetworkInterface: boolean isLoopback()>
Counter value: 1
SCC 8411 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean isHeldExclusively()>
Counter value: 1
SCC 8412 : 1
<sun.net.www.protocol.http.DigestAuthentication: void <init>(boolean,java.net.URL,java.lang.String,java.lang.String,java.net.PasswordAuthentication,sun.net.www.protocol.http.DigestAuthentication$Parameters)>
Counter value: 1
SCC 8413 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: void preAccept()>
Counter value: 1
SCC 8414 : 1
<java.net.HttpConnectSocketImpl: java.lang.reflect.Field access$100()>
Counter value: 1
SCC 8415 : 1
<java.io.ObjectInputStream: int readInt()>
Counter value: 1
SCC 8416 : 1
<java.util.stream.Nodes$EmptyNode: long count()>
Counter value: 1
SCC 8417 : 1
<java.nio.StringCharBuffer: void <init>(java.lang.CharSequence,int,int,int,int,int)>
Counter value: 1
SCC 8418 : 1
<java.lang.invoke.ConstructorHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 8419 : 1
<java.util.stream.Nodes$DoubleArrayNode: long count()>
Counter value: 1
SCC 8420 : 1
<java.util.WeakHashMap$EntrySet: java.util.List deepCopy()>
Counter value: 1
SCC 8421 : 1
<java.lang.invoke.ThunkKeyWithIntArray: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8422 : 1
<Node: void <init>()>
Counter value: 1
SCC 8423 : 1
<java.util.stream.ReduceOps$11: java.util.stream.ReduceOps$11ReducingSink makeSink()>
Counter value: 1
SCC 8424 : 1
<java.net.AbstractPlainSocketImpl: void create(boolean)>
Counter value: 1
SCC 8425 : 1
<java.util.stream.Nodes$IntFixedNodeBuilder: java.util.stream.Node$OfInt build()>
Counter value: 1
SCC 8426 : 1
<java.util.concurrent.ForkJoinTask: java.lang.Object get()>
Counter value: 1
SCC 8427 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong: void <init>(java.util.Spliterator$OfLong,long,long)>
Counter value: 1
SCC 8428 : 1
<sun.security.x509.CertificateIssuerExtension: sun.security.x509.GeneralNames get(java.lang.String)>
Counter value: 1
SCC 8429 : 1
<java.util.Locale$LanguageRange: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8430 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachTransformedKeyTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.function.Function,java.util.function.Consumer)>
Counter value: 1
SCC 8431 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getDefaultSerialFields(java.lang.Class)>
Counter value: 1
SCC 8432 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator: java.lang.Object next()>
Counter value: 1
SCC 8433 : 1
<java.io.DataInputStream: float readFloat()>
Counter value: 1
SCC 8434 : 1
<java.lang.reflect.Method: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8435 : 1
<java.lang.invoke.HandleCache: java.util.Map getStaticCache(java.lang.Class)>
Counter value: 1
SCC 8436 : 1
<java.lang.invoke.FilterArgumentsHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 8437 : 1
<java.util.concurrent.LinkedBlockingDeque$LBDSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 8438 : 1
<java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
Counter value: 2
SCC 8439 : 1
<java.nio.DirectShortBufferU: long ix(int)>
Counter value: 1
SCC 8440 : 1
<javax.security.auth.Subject$SecureSet$3: java.lang.Object run()>
Counter value: 1
SCC 8441 : 1
<java.io.ObjectStreamClass$FieldReflector: java.io.ObjectStreamField[] getFields()>
Counter value: 1
SCC 8442 : 1
<java.nio.FloatBuffer: int compare(float,float)>
Counter value: 1
SCC 8443 : 1
<java.util.Collections$SingletonMap: java.util.Collection values()>
Counter value: 1
SCC 8444 : 1
<java.time.chrono.ThaiBuddhistDate: java.time.chrono.Chronology getChronology()>
Counter value: 1
SCC 8445 : 1
<java.util.concurrent.TimeUnit$6: long toSeconds(long)>
Counter value: 1
SCC 8446 : 1
<java.util.stream.IntPipeline: java.util.Spliterator$OfInt adapt(java.util.Spliterator)>
Counter value: 1
SCC 8447 : 1
<java.net.SocksSocketImpl$4: java.net.InetAddress run()>
Counter value: 1
SCC 8448 : 1
<java.util.stream.Nodes$ConcNode$OfLong: java.util.Spliterator$OfLong spliterator()>
Counter value: 1
SCC 8449 : 1
<java.util.stream.SliceOps$SliceTask: java.util.stream.AbstractTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 8450 : 1
<java.nio.channels.ClosedByInterruptException: void <init>()>
Counter value: 1
SCC 8451 : 1
<java.util.ArraysParallelSortHelpers$Relay: void compute()>
Counter value: 1
SCC 8452 : 1
<java.util.JumboEnumSet: java.util.EnumSet clone()>
Counter value: 1
SCC 8453 : 1
<java.util.WeakHashMap$ValueSpliterator: java.util.WeakHashMap$ValueSpliterator trySplit()>
Counter value: 1
SCC 8454 : 1
<java.net.HttpCookie: int guessCookieVersion(java.lang.String)>
Counter value: 1
SCC 8455 : 1
<java.util.stream.Nodes$IntArrayNode: void <init>(long)>
Counter value: 1
SCC 8456 : 1
<sun.security.x509.AccessDescription: sun.security.util.ObjectIdentifier getAccessMethod()>
Counter value: 1
SCC 8457 : 1
<java.util.stream.Nodes$CollectorTask$OfInt: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 8458 : 1
<java.util.zip.ZipFile$ZipEntryIterator: java.lang.Object next()>
Counter value: 1
SCC 8459 : 1
<java.net.Socket: java.lang.Void checkPermission(java.net.SocketImpl)>
Counter value: 1
SCC 8460 : 1
<sun.misc.ProxyGenerator$ConstantPool$IndirectEntry: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8461 : 1
<sun.net.www.ParseUtil: void checkPath(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 8462 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: int nextIndex()>
Counter value: 1
SCC 8463 : 1
<java.util.LinkedHashMap$LinkedKeySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 8464 : 1
<java.util.concurrent.ForkJoinTask: int doInvoke()>
Counter value: 1
SCC 8465 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: java.lang.String toString()>
Counter value: 1
SCC 8466 : 1
<java.util.concurrent.atomic.AtomicInteger: double doubleValue()>
Counter value: 1
SCC 8467 : 1
<java.net.Socket: boolean isClosed()>
Counter value: 1
SCC 8468 : 1
<java.lang.invoke.ExplicitCastHandle: void <init>(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 8469 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive: boolean tryAdvance(java.lang.Object)>
Counter value: 2
SCC 8470 : 1
<java.util.Collections$SynchronizedCollection: boolean addAll(java.util.Collection)>
Counter value: 2
SCC 8471 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.lang.String toString()>
Counter value: 1
SCC 8472 : 1
<com.ibm.oti.util.WeakReferenceNode: void addBefore(com.ibm.oti.util.WeakReferenceNode)>
Counter value: 1
SCC 8473 : 1
<java.net.SocketTimeoutException: void <init>(java.lang.String)>
Counter value: 1
SCC 8474 : 1
<sun.nio.ch.AsynchronousFileChannelImpl: void begin()>
Counter value: 1
SCC 8475 : 1
<java.nio.ByteBuffer: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8476 : 1
<java.util.Collections$SynchronizedNavigableSet: void <init>(java.util.NavigableSet,java.lang.Object)>
Counter value: 1
SCC 8477 : 1
<java.util.concurrent.ThreadLocalRandom$RandomDoublesSpliterator: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 8478 : 1
<java.io.ObjectInputStream$HandleTable$HandleList: void add(int)>
Counter value: 1
SCC 8479 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: int hashCode()>
Counter value: 2
SCC 8480 : 1
<java.util.stream.ReduceOps$12: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 8481 : 1
<sun.net.www.protocol.http.AuthCacheImpl: void remove(java.lang.String,sun.net.www.protocol.http.AuthCacheValue)>
Counter value: 1
SCC 8482 : 1
<java.util.Scanner: java.lang.String getCachedResult()>
Counter value: 1
SCC 8483 : 1
<java.util.concurrent.FutureTask: void set(java.lang.Object)>
Counter value: 1
SCC 8484 : 1
<java.time.OffsetDateTime: java.time.ZoneOffset getOffset()>
Counter value: 1
SCC 8485 : 1
<java.util.stream.SpinedBuffer$OfLong: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 8486 : 1
<java.util.stream.ReferencePipeline: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 8487 : 1
<java.util.concurrent.LinkedBlockingDeque$LBDSpliterator: long estimateSize()>
Counter value: 1
SCC 8488 : 1
<java.util.stream.StreamOpFlag$MaskBuilder: java.util.stream.StreamOpFlag$MaskBuilder setAndClear(java.util.stream.StreamOpFlag$Type)>
Counter value: 1
SCC 8489 : 1
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8490 : 1
<java.util.Collections$SynchronizedList: void sort(java.util.Comparator)>
Counter value: 2
SCC 8491 : 1
<java.util.stream.FindOps$FindSink$OfInt: java.util.OptionalInt get()>
Counter value: 1
SCC 8492 : 1
<jdk.internal.org.xml.sax.SAXException: java.lang.Throwable getCause()>
Counter value: 1
SCC 8493 : 1
<java.util.stream.StreamSpliterators$IntWrappingSpliterator$accept__48: void <init>(java.util.function.IntConsumer)>
Counter value: 1
SCC 8494 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceValuesTask,java.util.function.Function,java.util.function.BiFunction)>
Counter value: 1
SCC 8495 : 1
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8496 : 1
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>
Counter value: 1
SCC 8497 : 1
<java.util.Collections$CheckedNavigableMap: java.util.NavigableSet keySet()>
Counter value: 1
SCC 8498 : 1
<sun.net.www.protocol.http.HttpURLConnection$ErrorStream: int available()>
Counter value: 2
SCC 8499 : 1
<java.io.ObjectInputStream: void access$1400(byte[],int,double[],int,int)>
Counter value: 1
SCC 8500 : 1
<java.lang.invoke.ReceiverBoundHandle: void <init>(java.lang.invoke.PrimitiveHandle,java.lang.Object,java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 8501 : 1
<java.security.spec.PSSParameterSpec: int getTrailerField()>
Counter value: 1
SCC 8502 : 1
<java.util.Random$RandomIntsSpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 8503 : 1
<java.net.SocksSocketImpl: boolean authenticate(byte,java.io.InputStream,java.io.BufferedOutputStream,long)>
Counter value: 1
SCC 8504 : 1
<java.time.zone.ZoneOffsetTransition: int compareTo(java.time.zone.ZoneOffsetTransition)>
Counter value: 1
SCC 8505 : 1
<sun.security.x509.GeneralNames: sun.security.x509.GeneralName get(int)>
Counter value: 1
SCC 8506 : 1
<sun.nio.ch.FileDispatcherImpl: void <clinit>()>
Counter value: 1
SCC 8507 : 1
<java.lang.invoke.ConstantLongHandle: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,java.lang.Object[])>
Counter value: 1
SCC 8508 : 1
<java.io.ObjectInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 8509 : 1
<sun.misc.ProxyGenerator: void access$1700(sun.misc.ProxyGenerator,java.lang.Class,java.io.DataOutputStream)>
Counter value: 1
SCC 8510 : 1
<java.util.stream.DoublePipeline$Head: boolean opIsStateful()>
Counter value: 1
SCC 8511 : 1
<java.lang.invoke.StaticFieldGetterHandle: void <init>(java.lang.invoke.StaticFieldGetterHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 8512 : 1
<jdk.internal.util.xml.impl.ReaderUTF8: int read(char[],int,int)>
Counter value: 1
SCC 8513 : 1
<java.lang.invoke.VarargsCollectorHandle: int getModifiers()>
Counter value: 2
SCC 8514 : 1
<java.time.chrono.AbstractChronology: int lambda$static$2241c452$1(java.time.chrono.ChronoZonedDateTime,java.time.chrono.ChronoZonedDateTime)>
Counter value: 1
SCC 8515 : 1
<java.time.YearMonth: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 8516 : 1
<java.lang.invoke.ProxyClassesDumper$1: java.lang.Object run()>
Counter value: 1
SCC 8517 : 1
<java.time.Clock: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8518 : 1
<java.util.concurrent.LinkedBlockingDeque: boolean remove(java.lang.Object)>
Counter value: 1
SCC 8519 : 1
<sun.net.www.http.HttpClient$1: java.lang.Void run()>
Counter value: 1
SCC 8520 : 1
<java.lang.invoke.OpenJDKCompileStub: java.lang.InternalError OpenJDKCompileStubThrowError()>
Counter value: 1
SCC 8521 : 1
<java.lang.invoke.FieldSetterHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 8522 : 1
<java.util.jar.JarFile$JarEntryIterator: java.lang.Object next()>
Counter value: 1
SCC 8523 : 1
<java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
Counter value: 1
SCC 8524 : 1
<java.time.chrono.HijrahDate: java.time.chrono.HijrahDate resolvePreviousValid(int,int,int)>
Counter value: 1
SCC 8525 : 1
<java.util.concurrent.TimeUnit$6: long toMinutes(long)>
Counter value: 1
SCC 8526 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToIntTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceValuesToIntTask,java.util.function.ToIntFunction,int,java.util.function.IntBinaryOperator)>
Counter value: 1
SCC 8527 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble: java.util.function.DoubleConsumer emptyConsumer()>
Counter value: 1
SCC 8528 : 1
<sun.security.x509.X509CRLImpl: java.lang.String toString()>
Counter value: 1
SCC 8529 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$NumberFormatProviderDelegate: void addImpl(java.util.spi.LocaleServiceProvider)>
Counter value: 1
SCC 8530 : 1
<java.util.stream.IntPipeline$accept__98: java.util.function.IntConsumer bootstrap$(java.util.stream.Sink)>
Counter value: 1
SCC 8531 : 1
<java.io.PushbackInputStream: void reset()>
Counter value: 1
SCC 8532 : 1
<sun.security.x509.GeneralSubtree: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 8533 : 1
<java.util.DoubleSummaryStatistics: double getAverage()>
Counter value: 1
SCC 8534 : 1
<java.time.Year: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 8535 : 1
<sun.net.www.http.ChunkedOutputStream: void <init>(java.io.PrintStream,int)>
Counter value: 1
SCC 8536 : 1
<java.util.stream.Nodes: java.util.stream.Node$Builder$OfLong longBuilder(long)>
Counter value: 1
SCC 8537 : 1
<java.time.LocalTime: java.time.LocalTime 'from'(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 8538 : 1
<java.util.HashMap$EntrySpliterator: int characteristics()>
Counter value: 1
SCC 8539 : 1
<sun.reflect.ReflectionFactory: int access$102(int)>
Counter value: 1
SCC 8540 : 1
<java.util.stream.SortedOps$RefSortingSink$accept__49: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 8541 : 1
<javax.security.auth.x500.X500Principal: void <init>(byte[])>
Counter value: 1
SCC 8542 : 1
<java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
Counter value: 1
SCC 8543 : 1
<sun.nio.ch.SocketAdaptor$2: java.lang.Object run()>
Counter value: 1
SCC 8544 : 1
<java.util.OptionalInt: java.util.OptionalInt of(int)>
Counter value: 1
SCC 8545 : 1
<java.lang.invoke.InvokeGenericHandle: void <init>(java.lang.invoke.InvokeGenericHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 8546 : 1
<sun.nio.ch.ServerSocketAdaptor: boolean isClosed()>
Counter value: 1
SCC 8547 : 1
<java.util.stream.AbstractTask: long suggestTargetSize(long)>
Counter value: 1
SCC 8548 : 1
<java.util.stream.IntPipeline: java.util.Spliterator wrap(java.util.stream.PipelineHelper,java.util.function.Supplier,boolean)>
Counter value: 1
SCC 8549 : 1
<java.util.regex.Matcher: java.util.regex.Matcher region(int,int)>
Counter value: 1
SCC 8550 : 1
<sun.nio.fs.UnixPath: java.nio.file.Path resolve(java.nio.file.Path)>
Counter value: 1
SCC 8551 : 1
<sun.nio.ch.SimpleAsynchronousFileChannelImpl$3: void run()>
Counter value: 1
SCC 8552 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: void setNonce(java.lang.String)>
Counter value: 1
SCC 8553 : 1
<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
Counter value: 1
SCC 8554 : 1
<java.time.temporal.TemporalAccessor: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 8555 : 1
<java.lang.invoke.FieldGetterHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 8556 : 1
<java.net.URLConnection: long getIfModifiedSince()>
Counter value: 1
SCC 8557 : 1
<sun.nio.ch.ExtendedSocketOption$1: java.lang.Class type()>
Counter value: 1
SCC 8558 : 1
<jdk.internal.org.objectweb.asm.Type: void <init>(int,char[],int,int)>
Counter value: 1
SCC 8559 : 1
<java.util.stream.Nodes$CollectorTask$OfInt$init__89: java.util.function.BinaryOperator bootstrap$()>
Counter value: 1
SCC 8560 : 1
<java.nio.DirectDoubleBufferU: long ix(int)>
Counter value: 1
SCC 8561 : 1
<java.nio.CharBuffer: boolean equals(char,char)>
Counter value: 1
SCC 8562 : 1
<java.util.AbstractMap$1: java.util.Iterator iterator()>
Counter value: 1
SCC 8563 : 1
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void lower()>
Counter value: 1
SCC 8564 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 2
SCC 8565 : 1
<java.util.stream.MatchOps$MatchKind: boolean access$000(java.util.stream.MatchOps$MatchKind)>
Counter value: 1
SCC 8566 : 1
<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String,boolean,boolean,boolean,java.lang.ClassLoader)>
Counter value: 1
SCC 8567 : 1
<java.util.stream.SliceOps$1$1: void accept(java.lang.Object)>
Counter value: 2
SCC 8568 : 1
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>
Counter value: 1
SCC 8569 : 1
<sun.nio.ch.SinkChannelImpl: void ensureOpen()>
Counter value: 1
SCC 8570 : 1
<sun.nio.ch.DefaultAsynchronousChannelProvider: java.nio.channels.spi.AsynchronousChannelProvider create()>
Counter value: 1
SCC 8571 : 1
<java.nio.ByteBufferAsCharBufferRB: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 8572 : 1
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void <init>(java.util.concurrent.LinkedBlockingQueue)>
Counter value: 1
SCC 8573 : 1
<java.util.stream.SliceOps$lambda_castingArray_0__68: java.util.function.IntFunction bootstrap$()>
Counter value: 1
SCC 8574 : 1
<java.io.Reader: boolean ready()>
Counter value: 1
SCC 8575 : 1
<java.net.HttpCookie$8: void <init>()>
Counter value: 1
SCC 8576 : 1
<java.nio.HeapFloatBuffer: int ix(int)>
Counter value: 1
SCC 8577 : 1
<java.text.DecimalFormatSymbols: char getPercent()>
Counter value: 1
SCC 8578 : 1
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>
Counter value: 1
SCC 8579 : 1
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoLocalDate 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 8580 : 1
<java.util.stream.Streams$IntStreamBuilderImpl: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 8581 : 1
<java.util.stream.ReduceOps$9ReducingSink: void accept(long)>
Counter value: 1
SCC 8582 : 1
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 8583 : 1
<java.lang.ProcessBuilder$Redirect: java.io.File file()>
Counter value: 1
SCC 8584 : 1
<java.util.concurrent.ConcurrentHashMap$TreeBin: void unlockRoot()>
Counter value: 1
SCC 8585 : 1
<java.io.ObjectInputStream: int read()>
Counter value: 1
SCC 8586 : 1
<java.util.stream.AbstractPipeline: java.util.stream.StreamShape getSourceShape()>
Counter value: 1
SCC 8587 : 1
<java.util.Base64$DecInputStream: void close()>
Counter value: 2
SCC 8588 : 1
<sun.net.www.http.HttpClient: java.lang.String toString()>
Counter value: 1
SCC 8589 : 1
<java.util.stream.LongPipeline$6$1$accept__70: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 8590 : 1
<java.net.HttpCookie: java.lang.String getPortlist()>
Counter value: 1
SCC 8591 : 1
<java.lang.invoke.FieldSetterHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 8592 : 1
<java.lang.Short: int hashCode()>
Counter value: 1
SCC 8593 : 1
<java.util.RegularEnumSet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 8594 : 1
<java.util.EnumMap: boolean access$900(java.util.EnumMap,java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8595 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: java.net.InetAddress getAddress()>
Counter value: 1
SCC 8596 : 1
<java.util.LinkedList$ListItr: int previousIndex()>
Counter value: 1
SCC 8597 : 1
<sun.net.ProgressSource: java.lang.Object clone()>
Counter value: 1
SCC 8598 : 1
<java.util.Collections$CheckedMap: java.util.Set entrySet()>
Counter value: 2
SCC 8599 : 1
<java.security.spec.ECFieldF2m: int hashCode()>
Counter value: 1
SCC 8600 : 1
<java.util.LinkedList$ListItr: void set(java.lang.Object)>
Counter value: 1
SCC 8601 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl$3: java.lang.Object run()>
Counter value: 1
SCC 8602 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getHostAndPort(java.net.URL)>
Counter value: 1
SCC 8603 : 1
<java.util.Spliterator: boolean hasCharacteristics(int)>
Counter value: 1
SCC 8604 : 1
<sun.net.www.MessageHeader: int getKey(java.lang.String)>
Counter value: 1
SCC 8605 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfLong: void <init>(long,java.util.function.LongSupplier)>
Counter value: 1
SCC 8606 : 1
<sun.nio.ch.Invoker: java.lang.ThreadLocal access$000()>
Counter value: 1
SCC 8607 : 1
<java.io.Bits: short getShort(byte[],int)>
Counter value: 1
SCC 8608 : 1
<sun.nio.ch.SimpleAsynchronousFileChannelImpl: void <clinit>()>
Counter value: 1
SCC 8609 : 1
<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>
Counter value: 1
SCC 8610 : 1
<sun.reflect.InstantiationExceptionConstructorAccessorImpl: void <init>(java.lang.String)>
Counter value: 1
SCC 8611 : 1
<sun.net.www.HeaderParser: java.lang.String findKey(int)>
Counter value: 1
SCC 8612 : 1
<sun.security.x509.CertificatePoliciesExtension: void encode(java.io.OutputStream)>
Counter value: 1
SCC 8613 : 1
<java.lang.invoke.MethodHandleImpl: void <clinit>()>
Counter value: 1
SCC 8614 : 1
<java.net.InetAddress: java.lang.String getHostName()>
Counter value: 1
SCC 8615 : 1
<sun.nio.ch.Util$BufferCache: boolean offerFirst(java.nio.ByteBuffer)>
Counter value: 1
SCC 8616 : 1
<java.io.ObjectStreamClass: java.lang.Class access$000(java.io.ObjectStreamClass)>
Counter value: 1
SCC 8617 : 1
<java.util.stream.ReferencePipeline: java.util.stream.Node evaluateToNode(java.util.stream.PipelineHelper,java.util.Spliterator,boolean,java.util.function.IntFunction)>
Counter value: 1
SCC 8618 : 1
<java.io.InterruptedIOException: void <init>()>
Counter value: 1
SCC 8619 : 1
<java.lang.invoke.SpreadHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 8620 : 1
<com.ibm.oti.util.WeakReferenceNode: com.ibm.oti.util.WeakReferenceNode next()>
Counter value: 1
SCC 8621 : 1
<java.util.stream.Nodes$EmptyNode$OfDouble: void <init>()>
Counter value: 1
SCC 8622 : 1
<sun.nio.fs.UnixPath: sun.nio.fs.UnixPath getName(int)>
Counter value: 1
SCC 8623 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: void <init>(sun.net.www.protocol.http.HttpCallerInfo)>
Counter value: 1
SCC 8624 : 1
<java.util.stream.Nodes$CollectionNode: long count()>
Counter value: 1
SCC 8625 : 1
<sun.net.www.protocol.http.BasicAuthentication: boolean isAuthorizationStale(java.lang.String)>
Counter value: 1
SCC 8626 : 1
<java.lang.ClassValue$ClassValueMap: java.lang.ClassValue$Entry[] getCache()>
Counter value: 1
SCC 8627 : 1
<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>
Counter value: 1
SCC 8628 : 1
<java.util.stream.SliceOps$1$1: boolean cancellationRequested()>
Counter value: 2
SCC 8629 : 1
<java.util.stream.DoublePipeline$7$1: void accept(double)>
Counter value: 2
SCC 8630 : 1
<sun.net.www.protocol.http.HttpURLConnection$lambda_getNetProperty_0__33: java.security.PrivilegedAction bootstrap$(java.lang.String)>
Counter value: 1
SCC 8631 : 1
<sun.nio.cs.StreamDecoder: sun.nio.cs.StreamDecoder forInputStreamReader(java.io.InputStream,java.lang.Object,java.nio.charset.Charset)>
Counter value: 1
SCC 8632 : 1
<java.util.stream.DoublePipeline$1: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 8633 : 1
<java.util.Collections$CheckedMap: boolean containsValue(java.lang.Object)>
Counter value: 2
SCC 8634 : 1
<sun.reflect.AccessorGenerator: java.lang.String getClassName(java.lang.Class,boolean)>
Counter value: 2
SCC 8635 : 1
<java.util.concurrent.ConcurrentSkipListMap$ValueSpliterator: int characteristics()>
Counter value: 1
SCC 8636 : 1
<java.util.stream.Nodes: java.util.stream.Node$Builder$OfDouble doubleBuilder(long)>
Counter value: 1
SCC 8637 : 1
<java.net.HttpCookie: boolean isToken(java.lang.String)>
Counter value: 1
SCC 8638 : 1
<sun.util.locale.provider.CurrencyNameProviderImpl: java.lang.String getString(java.lang.String,java.util.Locale)>
Counter value: 1
SCC 8639 : 1
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8640 : 1
<java.util.stream.Nodes$IntArrayNode: java.util.Spliterator spliterator()>
Counter value: 1
SCC 8641 : 1
<java.util.stream.DoublePipeline$3$1: void <init>(java.util.stream.DoublePipeline$3,java.util.stream.Sink)>
Counter value: 1
SCC 8642 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfInt: void forEachRemaining(java.util.function.IntConsumer)>
Counter value: 1
SCC 8643 : 1
<sun.net.www.http.KeepAliveStream: void reset()>
Counter value: 1
SCC 8644 : 1
<java.util.concurrent.ConcurrentLinkedQueue: void <clinit>()>
Counter value: 1
SCC 8645 : 1
<sun.nio.ch.Net$2: java.lang.Object run()>
Counter value: 1
SCC 8646 : 1
<java.util.EnumMap$EntryIterator: void <init>(java.util.EnumMap,java.util.EnumMap$1)>
Counter value: 1
SCC 8647 : 1
<sun.reflect.UnsafeBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 8648 : 1
<sun.util.PreHashedMap$2: java.util.Iterator iterator()>
Counter value: 1
SCC 8649 : 1
<java.util.stream.SliceOps$3$lambda_opEvaluateParallelLazy_0__66: void <init>()>
Counter value: 1
SCC 8650 : 1
<java.lang.invoke.DirectHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 8651 : 1
<java.net.SocketInputStream: int available()>
Counter value: 1
SCC 8652 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: void <init>(java.util.stream.PipelineHelper,java.util.function.Supplier,boolean)>
Counter value: 1
SCC 8653 : 1
<java.util.stream.Nodes$DoubleArrayNode: java.util.Spliterator$OfPrimitive spliterator()>
Counter value: 1
SCC 8654 : 1
<java.util.stream.Nodes$InternalNodeSpliterator$OfLong: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 8655 : 1
<java.util.stream.DoublePipeline: java.util.function.DoubleConsumer adapt(java.util.stream.Sink)>
Counter value: 1
SCC 8656 : 1
<java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
Counter value: 1
SCC 8657 : 1
<java.util.IdentityHashMap$IdentityHashMapIterator: int nextIndex()>
Counter value: 1
SCC 8658 : 1
<java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
Counter value: 1
SCC 8659 : 1
<java.util.IdentityHashMap: java.lang.Object unmaskNull(java.lang.Object)>
Counter value: 1
SCC 8660 : 1
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 8661 : 1
<java.util.concurrent.CountedCompleter: void <init>(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 8662 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor: long triggerTime(long)>
Counter value: 1
SCC 8663 : 1
<sun.net.sdp.SdpProvider$Action: sun.net.sdp.SdpProvider$Action[] values()>
Counter value: 1
SCC 8664 : 1
<java.util.EnumMap: java.util.Collection values()>
Counter value: 1
SCC 8665 : 1
<java.io.FileWriter: void <init>(java.io.File,boolean)>
Counter value: 1
SCC 8666 : 1
<java.util.stream.ForEachOps$ForEachOp: int getOpFlags()>
Counter value: 1
SCC 8667 : 1
<java.lang.invoke.ConstantIntHandle: void <init>(java.lang.invoke.MethodType,int)>
Counter value: 1
SCC 8668 : 1
<java.util.stream.Sink$ChainedReference: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 8669 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 8670 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator: java.util.stream.StreamSpliterators$AbstractWrappingSpliterator wrap(java.util.Spliterator)>
Counter value: 1
SCC 8671 : 1
<java.time.MonthDay: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 8672 : 1
<java.util.stream.MatchOps$BooleanTerminalSink: boolean getAndClearState()>
Counter value: 1
SCC 8673 : 1
<java.lang.ProcessEnvironment$StringValues: int size()>
Counter value: 2
SCC 8674 : 1
<java.util.stream.ReduceOps$13ReducingSink: void accept(double)>
Counter value: 1
SCC 8675 : 1
<sun.misc.PathPermissions: void init()>
Counter value: 1
SCC 8676 : 1
<java.util.stream.Streams$ConcatSpliterator$OfDouble: boolean tryAdvance(java.util.function.DoubleConsumer)>
Counter value: 1
SCC 8677 : 1
<java.lang.Long: float floatValue()>
Counter value: 1
SCC 8678 : 1
<java.net.SocksSocketImpl$3: java.net.ProxySelector run()>
Counter value: 1
SCC 8679 : 1
<sun.security.provider.X509Factory: void addToCache(sun.security.util.Cache,byte[],java.lang.Object)>
Counter value: 1
SCC 8680 : 1
<java.lang.reflect.Constructor: sun.reflect.ConstructorAccessor getConstructorAccessor()>
Counter value: 1
SCC 8681 : 1
<java.util.concurrent.ConcurrentHashMap$ReservationNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>
Counter value: 1
SCC 8682 : 1
<sun.nio.ch.PendingFuture: void setFailure(java.lang.Throwable)>
Counter value: 1
SCC 8683 : 1
<java.nio.channels.spi.AbstractInterruptibleChannel: java.lang.Thread access$202(java.nio.channels.spi.AbstractInterruptibleChannel,java.lang.Thread)>
Counter value: 1
SCC 8684 : 1
<java.nio.file.FileSystemException: java.lang.String getReason()>
Counter value: 1
SCC 8685 : 1
<sun.misc.Unsafe: void copyMemory(long,long,long)>
Counter value: 1
SCC 8686 : 1
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 8687 : 1
<java.net.InterfaceAddress: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8688 : 1
<java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
Counter value: 1
SCC 8689 : 1
<sun.nio.ch.DatagramDispatcher: int read(java.io.FileDescriptor,long,int)>
Counter value: 1
SCC 8690 : 1
<sun.net.www.protocol.http.HttpURLConnection: void validateNTLMCredentials(java.net.PasswordAuthentication)>
Counter value: 1
SCC 8691 : 1
<java.util.EnumMap$KeySet: void <init>(java.util.EnumMap)>
Counter value: 1
SCC 8692 : 1
<java.util.SubList: void add(int,java.lang.Object)>
Counter value: 2
SCC 8693 : 1
<sun.net.www.protocol.http.HttpURLConnection$2: void <init>(sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 8694 : 1
<java.util.stream.ReduceOps$ReduceTask: void <init>(java.util.stream.ReduceOps$ReduceTask,java.util.Spliterator)>
Counter value: 1
SCC 8695 : 1
<java.util.Collections$SetFromMap: int hashCode()>
Counter value: 2
SCC 8696 : 1
<java.util.concurrent.ForkJoinPool: boolean tryRelease(long,java.util.concurrent.ForkJoinPool$WorkQueue,long)>
Counter value: 1
SCC 8697 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator$lambda_forEachRemaining_0__55: java.util.function.Consumer bootstrap$(java.util.stream.StreamSpliterators$DistinctSpliterator,java.util.function.Consumer)>
Counter value: 1
SCC 8698 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.stream.Stream stream()>
Counter value: 1
SCC 8699 : 1
<sun.security.util.Cache$EqualByteArray: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8700 : 1
<sun.security.rsa.PSSParameters: java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class)>
Counter value: 1
SCC 8701 : 1
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8702 : 1
<java.nio.channels.spi.SelectorProvider: void <clinit>()>
Counter value: 1
SCC 8703 : 1
<java.net.SocksSocketImpl: void <clinit>()>
Counter value: 1
SCC 8704 : 1
<java.nio.HeapByteBufferR: java.nio.ByteBuffer compact()>
Counter value: 1
SCC 8705 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$1: void remove()>
Counter value: 2
SCC 8706 : 1
<java.util.concurrent.LinkedBlockingDeque: boolean offerFirst(java.lang.Object)>
Counter value: 1
SCC 8707 : 1
<java.time.temporal.IsoFields$Field: int[] access$200()>
Counter value: 1
SCC 8708 : 1
<java.io.Console$LineReader: void close()>
Counter value: 1
SCC 8709 : 1
<java.util.OptionalDouble: void <init>(double)>
Counter value: 1
SCC 8710 : 1
<java.nio.Bits: int pageSize()>
Counter value: 1
SCC 8711 : 1
<java.util.TreeMap$NavigableSubMap: boolean tooLow(java.lang.Object)>
Counter value: 1
SCC 8712 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: java.lang.String getHeaderValue(java.net.URL,java.lang.String)>
Counter value: 1
SCC 8713 : 1
<java.io.ObjectStreamField: java.lang.String getName()>
Counter value: 1
SCC 8714 : 1
<java.lang.StackTraceElement: int getLineNumber()>
Counter value: 1
SCC 8715 : 1
<java.lang.invoke.IndirectHandle: void <init>(java.lang.invoke.IndirectHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 8716 : 1
<java.nio.DirectCharBufferU: long address()>
Counter value: 1
SCC 8717 : 1
<javax.security.auth.Subject$ClassSet$1: java.lang.Object run()>
Counter value: 1
SCC 8718 : 1
<sun.security.provider.PolicyFile$6: java.lang.Object run()>
Counter value: 1
SCC 8719 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: java.lang.String getDisplayNameImpl(java.lang.String,int,int,int,java.util.Locale,boolean)>
Counter value: 1
SCC 8720 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator$accept__40: void <init>(java.util.stream.SpinedBuffer)>
Counter value: 1
SCC 8721 : 1
<sun.util.calendar.ImmutableGregorianDate: int getHours()>
Counter value: 2
SCC 8722 : 1
<java.util.Collections$EmptyMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8723 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef: void <init>(java.util.Spliterator,long,long,long,long)>
Counter value: 1
SCC 8724 : 1
<java.lang.reflect.Constructor: java.lang.String getSignature()>
Counter value: 1
SCC 8725 : 1
<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper findPrimitiveType(java.lang.Class)>
Counter value: 1
SCC 8726 : 1
<java.lang.invoke.MethodHandleImpl$1: java.lang.Void run()>
Counter value: 1
SCC 8727 : 1
<java.util.stream.ForEachOps$ForEachOrderedTask: void doCompute(java.util.stream.ForEachOps$ForEachOrderedTask)>
Counter value: 1
SCC 8728 : 1
<java.security.AccessControlContext: java.security.DomainCombiner getDomainCombiner()>
Counter value: 1
SCC 8729 : 1
<java.nio.ByteBufferAsIntBufferB: int ix(int)>
Counter value: 1
SCC 8730 : 1
<java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder$1: java.nio.channels.spi.AsynchronousChannelProvider run()>
Counter value: 1
SCC 8731 : 1
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
Counter value: 2
SCC 8732 : 1
<sun.security.util.KnownOIDs: boolean registerNames()>
Counter value: 1
SCC 8733 : 1
<sun.net.www.protocol.http.HttpURLConnection: void setNewClient(java.net.URL,boolean)>
Counter value: 1
SCC 8734 : 1
<java.net.URLConnection: java.io.InputStream getInputStream()>
Counter value: 1
SCC 8735 : 1
<java.util.Spliterators$EmptySpliterator$OfLong: void forEachRemaining(java.util.function.LongConsumer)>
Counter value: 1
SCC 8736 : 1
<java.util.Collections$UnmodifiableList: int hashCode()>
Counter value: 2
SCC 8737 : 1
<java.lang.invoke.MethodHandles$Lookup: boolean isVarargs(int)>
Counter value: 1
SCC 8738 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceMappingsTask: void compute()>
Counter value: 1
SCC 8739 : 1
<sun.reflect.UnsafeCharacterFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 8740 : 1
<java.lang.invoke.SerializedLambda: java.lang.Class access$000(java.lang.invoke.SerializedLambda)>
Counter value: 1
SCC 8741 : 1
<sun.net.www.MessageHeader$HeaderIterator: java.lang.String next()>
Counter value: 2
SCC 8742 : 1
<sun.net.www.protocol.http.HttpURLConnection: void checkMessageHeader(java.lang.String,java.lang.String)>
Counter value: 1
SCC 8743 : 1
<sun.security.x509.X500Name: void <init>(byte[])>
Counter value: 1
SCC 8744 : 1
<java.util.concurrent.CountDownLatch$Sync: int tryAcquireShared(int)>
Counter value: 1
SCC 8745 : 1
<sun.nio.ch.NativeThreadSet: void signalAndWait()>
Counter value: 1
SCC 8746 : 1
<java.nio.IntBuffer: boolean equals(int,int)>
Counter value: 1
SCC 8747 : 1
<sun.util.calendar.ImmutableGregorianDate: boolean equals(java.lang.Object)>
Counter value: 2
SCC 8748 : 1
<java.lang.ClassValue$ClassValueMap: java.lang.ClassValue$Entry startEntry(java.lang.ClassValue)>
Counter value: 1
SCC 8749 : 1
<java.time.temporal.Temporal: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 8750 : 1
<java.time.zone.ZoneOffsetTransition: int compareTo(java.lang.Object)>
Counter value: 1
SCC 8751 : 1
<java.util.Random$RandomLongsSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 8752 : 1
<java.util.regex.Matcher: java.lang.String toString()>
Counter value: 1
SCC 8753 : 1
<java.util.IdentityHashMap$Values: void clear()>
Counter value: 1
SCC 8754 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfDouble: void <init>(java.util.stream.Nodes$SizedCollectorTask$OfDouble,java.util.Spliterator,long,long)>
Counter value: 1
SCC 8755 : 1
<sun.security.x509.NameConstraintsExtension: void encodeThis()>
Counter value: 1
SCC 8756 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt: void acceptConsumed(java.lang.Object)>
Counter value: 1
SCC 8757 : 1
<java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8758 : 1
<java.time.chrono.MinguoDate: java.time.temporal.Temporal minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 8759 : 1
<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean contains(java.lang.Object)>
Counter value: 1
SCC 8760 : 1
<java.time.OffsetDateTime: java.time.OffsetDateTime 'with'(java.time.LocalDateTime,java.time.ZoneOffset)>
Counter value: 1
SCC 8761 : 1
<java.io.ObjectInputStream$BlockDataInputStream: void readBooleans(boolean[],int,int)>
Counter value: 1
SCC 8762 : 1
<sun.net.www.protocol.http.AuthenticationHeader: sun.net.www.HeaderParser headerParser()>
Counter value: 1
SCC 8763 : 1
<java.lang.ClassValue$ClassValueMap: java.lang.ClassValue$Entry loadFromCache(java.lang.ClassValue$Entry[],int)>
Counter value: 1
SCC 8764 : 1
<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle restrictReceiver(java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 8765 : 1
<java.util.stream.Nodes$DoubleArrayNode: void copyInto(double[],int)>
Counter value: 1
SCC 8766 : 1
<java.lang.reflect.Constructor: int getSlot()>
Counter value: 1
SCC 8767 : 1
<java.lang.invoke.ThunkKeyWithInt: boolean equalsThunkKeyWithInt(java.lang.invoke.ThunkKeyWithInt)>
Counter value: 1
SCC 8768 : 1
<java.time.chrono.AbstractChronology: java.time.chrono.Chronology registerChrono(java.time.chrono.Chronology,java.lang.String)>
Counter value: 1
SCC 8769 : 1
<java.lang.CharSequence$1CodePointIterator: int nextInt()>
Counter value: 1
SCC 8770 : 1
<sun.reflect.ReflectionFactory: sun.reflect.MethodAccessor newMethodAccessor(java.lang.reflect.Method)>
Counter value: 1
SCC 8771 : 1
<java.util.stream.DoublePipeline$accept__96: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 8772 : 1
<java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8773 : 1
<java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8774 : 1
<sun.reflect.ClassDefiner: void <clinit>()>
Counter value: 1
SCC 8775 : 1
<java.nio.DirectCharBufferU: char getUnchecked(int)>
Counter value: 1
SCC 8776 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef$lambda_tryAdvance_0__31: java.util.function.Consumer bootstrap$()>
Counter value: 1
SCC 8777 : 1
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>
Counter value: 1
SCC 8778 : 1
<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>
Counter value: 2
SCC 8779 : 1
<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>
Counter value: 1
SCC 8780 : 1
<java.util.concurrent.ConcurrentSkipListSet: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8781 : 1
<java.lang.ProcessEnvironment$StringEntrySet: boolean remove(java.lang.Object)>
Counter value: 2
SCC 8782 : 1
<java.time.chrono.HijrahDate: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8783 : 1
<java.lang.Thread: void join()>
Counter value: 1
SCC 8784 : 1
<java.lang.SecurityManager$2: java.lang.String run()>
Counter value: 1
SCC 8785 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: java.util.Locale[] getAvailableLocales()>
Counter value: 1
SCC 8786 : 1
<java.util.stream.Nodes: java.util.stream.Node$OfDouble flattenDouble(java.util.stream.Node$OfDouble)>
Counter value: 1
SCC 8787 : 1
<sun.net.www.http.HttpClient: java.net.Proxy newHttpProxy(java.lang.String,int,java.lang.String)>
Counter value: 1
SCC 8788 : 1
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>
Counter value: 1
SCC 8789 : 1
<java.lang.ClassValue$Version: void <init>(java.lang.ClassValue)>
Counter value: 1
SCC 8790 : 1
<java.util.stream.Nodes$LongArrayNode: long count()>
Counter value: 1
SCC 8791 : 1
<java.lang.ProcessEnvironment$StringEntrySet: int hashCode()>
Counter value: 2
SCC 8792 : 1
<java.net.Socket: boolean isOutputShutdown()>
Counter value: 1
SCC 8793 : 1
<java.util.Random: void nextBytes(byte[])>
Counter value: 1
SCC 8794 : 1
<java.lang.invoke.PrimitiveHandle: java.lang.Class getDefc()>
Counter value: 1
SCC 8795 : 1
<java.lang.invoke.MethodHandle: java.lang.invoke.MethodHandle asCollector(java.lang.Class,int)>
Counter value: 1
SCC 8796 : 1
<sun.net.www.HeaderParser$ParserIterator: java.lang.String next()>
Counter value: 1
SCC 8797 : 1
<java.io.ObjectInputStream$HandleTable: void setObject(int,java.lang.Object)>
Counter value: 1
SCC 8798 : 1
<java.util.Base64$DecInputStream: int available()>
Counter value: 2
SCC 8799 : 1
<java.net.AbstractPlainSocketImpl: void close()>
Counter value: 1
SCC 8800 : 1
<java.util.stream.DoublePipeline$7$1: void begin(long)>
Counter value: 2
SCC 8801 : 1
<java.util.Spliterators$LongArraySpliterator: boolean tryAdvance(java.util.function.LongConsumer)>
Counter value: 1
SCC 8802 : 1
<sun.reflect.ClassFileAssembler: void setStack(int)>
Counter value: 1
SCC 8803 : 1
<java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>
Counter value: 1
SCC 8804 : 1
<java.security.ProtectionDomain$JavaSecurityAccessImpl: java.lang.Object doIntersectionPrivilege(java.security.PrivilegedAction,java.security.AccessControlContext,java.security.AccessControlContext)>
Counter value: 1
SCC 8805 : 1
<java.io.ObjectInputStream$GetClassCachingSettingAction: java.lang.Boolean run()>
Counter value: 1
SCC 8806 : 1
<java.util.stream.Streams$RangeIntSpliterator: boolean tryAdvance(java.util.function.IntConsumer)>
Counter value: 1
SCC 8807 : 1
<sun.nio.ch.SimpleAsynchronousFileChannelImpl: void close()>
Counter value: 1
SCC 8808 : 1
<java.io.ClassByNameCache$Key: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8809 : 1
<java.util.IdentityHashMap$KeySpliterator: int characteristics()>
Counter value: 1
SCC 8810 : 1
<java.util.Random$RandomIntsSpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 8811 : 1
<sun.util.calendar.ImmutableGregorianDate: java.util.TimeZone getZone()>
Counter value: 2
SCC 8812 : 1
<java.util.concurrent.ForkJoinWorkerThread: void <init>(java.util.concurrent.ForkJoinPool,java.lang.ThreadGroup,java.security.AccessControlContext)>
Counter value: 1
SCC 8813 : 1
<sun.reflect.UnsafeBooleanFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 8814 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: void accept(int)>
Counter value: 1
SCC 8815 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator: int characteristics()>
Counter value: 2
SCC 8816 : 1
<java.io.ObjectStreamClass: boolean packageEquals(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 8817 : 1
<java.util.stream.FindOps$FindTask: void onCompletion(java.util.concurrent.CountedCompleter)>
Counter value: 1
SCC 8818 : 1
<java.util.OptionalLong: java.util.OptionalLong of(long)>
Counter value: 1
SCC 8819 : 1
<java.lang.invoke.MethodHandleImpl$BindCaller: boolean checkCallerClass(java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 8820 : 1
<sun.nio.ch.Invoker: void bindToGroup(sun.nio.ch.AsynchronousChannelGroupImpl)>
Counter value: 1
SCC 8821 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDate toLocalDate()>
Counter value: 1
SCC 8822 : 1
<sun.security.x509.GeneralSubtree: java.lang.String toString()>
Counter value: 1
SCC 8823 : 1
<java.net.NetworkInterface$1checkedAddresses: java.lang.Object nextElement()>
Counter value: 1
SCC 8824 : 1
<java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8825 : 1
<sun.util.calendar.AbstractCalendar: sun.util.calendar.CalendarDate getCalendarDate()>
Counter value: 1
SCC 8826 : 1
<sun.util.resources.ParallelListResourceBundle$KeySet: boolean contains(java.lang.Object)>
Counter value: 2
SCC 8827 : 1
<java.util.stream.LongPipeline$3$1: void <init>(java.util.stream.LongPipeline$3,java.util.stream.Sink)>
Counter value: 1
SCC 8828 : 1
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinPool makeCommonPool()>
Counter value: 1
SCC 8829 : 1
<java.lang.invoke.MethodHandleStatics$1: java.lang.Object run()>
Counter value: 1
SCC 8830 : 1
<java.time.chrono.JapaneseDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 8831 : 1
<java.time.chrono.ChronoZonedDateTimeImpl: int hashCode()>
Counter value: 1
SCC 8832 : 1
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 8833 : 1
<java.lang.ProcessBuilder$Redirect$4: java.lang.ProcessBuilder$Redirect$Type type()>
Counter value: 1
SCC 8834 : 1
<java.util.stream.LongPipeline$5$1: void accept(long)>
Counter value: 1
SCC 8835 : 1
<java.util.concurrent.ConcurrentHashMap$Node: java.lang.String toString()>
Counter value: 1
SCC 8836 : 1
<java.nio.file.spi.FileSystemProvider$1: java.lang.Object run()>
Counter value: 1
SCC 8837 : 1
<java.lang.invoke.FieldGetterHandle: void <init>(java.lang.invoke.FieldGetterHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 8838 : 1
<java.util.Spliterators$1Adapter: void accept(java.lang.Object)>
Counter value: 1
SCC 8839 : 1
<java.io.ObjectStreamField: int compareTo(java.lang.Object)>
Counter value: 1
SCC 8840 : 1
<java.util.Spliterators$LongIteratorSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 8841 : 1
<java.util.TreeMap$TreeMapSpliterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry,java.util.TreeMap$Entry,int,int,int)>
Counter value: 1
SCC 8842 : 1
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 8843 : 1
<sun.nio.ch.ThreadPool: java.lang.Thread lambda$defaultThreadFactory$2(java.lang.Runnable)>
Counter value: 1
SCC 8844 : 1
<java.util.DoubleSummaryStatistics: double getMin()>
Counter value: 1
SCC 8845 : 1
<java.io.ObjectStreamClass$MemberSignature: void <init>(java.lang.reflect.Field)>
Counter value: 1
SCC 8846 : 1
<java.lang.Class: java.lang.reflect.Field[] lookupCachedFields(java.lang.Class$CacheKey)>
Counter value: 1
SCC 8847 : 1
<java.util.concurrent.ForkJoinPool$EmptyTask: boolean exec()>
Counter value: 1
SCC 8848 : 1
<java.nio.CharBufferSpliterator: long estimateSize()>
Counter value: 1
SCC 8849 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfRef: void lambda$tryAdvance$0(java.lang.Object)>
Counter value: 1
SCC 8850 : 1
<sun.net.www.ParseUtil: void appendFragment(java.lang.StringBuffer,java.lang.String)>
Counter value: 1
SCC 8851 : 1
<java.util.HashMap$HashMapSpliterator: void <init>(java.util.HashMap,int,int,int,int)>
Counter value: 1
SCC 8852 : 1
<sun.net.www.http.HttpCapture: void sent(int)>
Counter value: 1
SCC 8853 : 1
<java.util.concurrent.TimeUnit$3: long toHours(long)>
Counter value: 1
SCC 8854 : 1
<sun.net.NetworkClient: java.net.Socket createSocket()>
Counter value: 1
SCC 8855 : 1
<java.lang.Class: java.lang.reflect.Field[] cacheFields(java.lang.reflect.Field[],java.lang.Class$CacheKey)>
Counter value: 1
SCC 8856 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet$1: boolean hasNext()>
Counter value: 2
SCC 8857 : 1
<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void mark(int)>
Counter value: 1
SCC 8858 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfPrimitive: void <init>(java.util.Spliterator$OfPrimitive,long,long)>
Counter value: 1
SCC 8859 : 1
<java.util.IdentityHashMap$KeySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 8860 : 1
<java.lang.invoke.FoldVoidHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 8861 : 1
<java.nio.Bits: char getCharB(java.nio.ByteBuffer,int)>
Counter value: 1
SCC 8862 : 1
<java.net.HttpCookie: java.lang.String getValue()>
Counter value: 1
SCC 8863 : 1
<java.util.IntSummaryStatistics: long getSum()>
Counter value: 1
SCC 8864 : 1
<java.net.HttpURLConnection: void <clinit>()>
Counter value: 1
SCC 8865 : 1
<java.util.Collections$CheckedCollection: int size()>
Counter value: 2
SCC 8866 : 1
<java.nio.file.FileTreeWalker$DirectoryNode: boolean skipped()>
Counter value: 1
SCC 8867 : 1
<java.time.chrono.ChronoPeriodImpl: java.time.chrono.ChronoPeriodImpl readExternal(java.io.DataInput)>
Counter value: 1
SCC 8868 : 1
<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>
Counter value: 1
SCC 8869 : 1
<java.time.Instant: java.time.Instant plusNanos(long)>
Counter value: 1
SCC 8870 : 1
<java.util.Spliterators$AbstractLongSpliterator$HoldingLongConsumer: void accept(long)>
Counter value: 1
SCC 8871 : 1
<java.util.stream.ReduceOps$10ReducingSink: void accept(long)>
Counter value: 1
SCC 8872 : 1
<java.util.stream.LongPipeline$8: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 8873 : 1
<java.nio.file.spi.FileSystemProvider: void <clinit>()>
Counter value: 1
SCC 8874 : 1
<java.util.stream.AbstractPipeline: java.util.stream.BaseStream sequential()>
Counter value: 1
SCC 8875 : 1
<sun.net.www.protocol.http.BasicAuthentication: void <init>(boolean,java.lang.String,int,java.lang.String,java.net.PasswordAuthentication)>
Counter value: 1
SCC 8876 : 1
<java.time.Ser: java.lang.Object read(java.io.ObjectInput)>
Counter value: 1
SCC 8877 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.List toList(java.util.Collection)>
Counter value: 1
SCC 8878 : 1
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
Counter value: 1
SCC 8879 : 1
<java.lang.J9VMInternals$3: java.lang.String run()>
Counter value: 1
SCC 8880 : 1
<java.util.stream.SpinedBuffer$OfPrimitive: int chunkFor(long)>
Counter value: 1
SCC 8881 : 1
<java.time.Year: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 8882 : 1
<java.util.stream.Nodes: java.util.stream.Node node(java.util.Collection)>
Counter value: 1
SCC 8883 : 1
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: long getLong(java.lang.Object)>
Counter value: 1
SCC 8884 : 1
<java.time.DayOfWeek: int get(java.time.temporal.TemporalField)>
Counter value: 1
SCC 8885 : 1
<java.util.stream.AbstractPipeline: java.util.Spliterator sourceSpliterator(int)>
Counter value: 1
SCC 8886 : 1
<java.util.stream.Nodes$CollectorTask$OfDouble$doubleBuilder__92: void <init>()>
Counter value: 1
SCC 8887 : 1
<sun.nio.ch.SourceChannelImpl: void implConfigureBlocking(boolean)>
Counter value: 1
SCC 8888 : 1
<java.util.Spliterators$3Adapter: void accept(long)>
Counter value: 1
SCC 8889 : 1
<sun.net.www.HeaderParser: void parse()>
Counter value: 1
SCC 8890 : 1
<sun.reflect.UnsafeCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 8891 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8892 : 1
<java.lang.invoke.ReceiverBoundHandle: void <init>(java.lang.invoke.ReceiverBoundHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 8893 : 1
<sun.reflect.generics.repository.MethodRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
Counter value: 1
SCC 8894 : 1
<java.util.stream.ReferencePipeline$9$1: void begin(long)>
Counter value: 2
SCC 8895 : 1
<java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8896 : 1
<java.util.stream.Collectors$Partition: java.util.Set entrySet()>
Counter value: 1
SCC 8897 : 1
<java.lang.invoke.BruteArgumentMoverHandle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,int[],java.lang.Object[],java.lang.invoke.MethodHandle)>
Counter value: 1
SCC 8898 : 1
<sun.net.www.protocol.http.HttpURLConnection$1: java.net.PasswordAuthentication run()>
Counter value: 1
SCC 8899 : 1
<java.util.stream.ReferencePipeline$7$1: boolean cancellationRequested()>
Counter value: 2
SCC 8900 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceValuesToIntTask: java.lang.Integer getRawResult()>
Counter value: 1
SCC 8901 : 1
<java.lang.invoke.ThunkTable$Properties$1: java.lang.Boolean run()>
Counter value: 1
SCC 8902 : 1
<java.nio.charset.Charset: int hashCode()>
Counter value: 1
SCC 8903 : 1
<java.util.concurrent.TimeUnit: void timedWait(java.lang.Object,long)>
Counter value: 1
SCC 8904 : 1
<java.time.zone.ZoneRules: boolean isValidOffset(java.time.LocalDateTime,java.time.ZoneOffset)>
Counter value: 1
SCC 8905 : 1
<java.nio.file.AccessDeniedException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 8906 : 1
<sun.security.util.MemoryCache$HardCacheEntry: java.lang.Object getKey()>
Counter value: 1
SCC 8907 : 1
<java.net.URLPermission$Authority: boolean impliesHostrange(java.net.URLPermission$Authority)>
Counter value: 1
SCC 8908 : 1
<java.util.WeakHashMap$Values: boolean contains(java.lang.Object)>
Counter value: 1
SCC 8909 : 1
<java.net.SocketImpl: void setSocket(java.net.Socket)>
Counter value: 1
SCC 8910 : 1
<java.lang.invoke.MethodHandles$Lookup: void initCheck(java.lang.String)>
Counter value: 1
SCC 8911 : 1
<java.io.ClassByNameCache$LoaderRef: java.lang.ClassLoader getActiveLoader()>
Counter value: 1
SCC 8912 : 1
<java.nio.file.attribute.FileTime: java.lang.StringBuilder append(java.lang.StringBuilder,int,int)>
Counter value: 1
SCC 8913 : 1
<java.util.stream.IntPipeline$3: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 8914 : 1
<sun.security.x509.X509Key: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8915 : 1
<java.util.stream.Nodes$CollectorTask$OfRef: java.util.stream.Node$Builder lambda$new$0(java.util.function.IntFunction,long)>
Counter value: 1
SCC 8916 : 1
<java.util.AbstractMap$SimpleEntry: void <init>(java.util.Map$Entry)>
Counter value: 1
SCC 8917 : 1
<java.util.stream.Nodes$SpinedNodeBuilder: void begin(long)>
Counter value: 1
SCC 8918 : 1
<java.io.ObjectStreamClass$FieldReflector: void <init>(java.io.ObjectStreamField[])>
Counter value: 1
SCC 8919 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: java.lang.Object asPrimitiveArray()>
Counter value: 1
SCC 8920 : 1
<java.util.concurrent.ConcurrentHashMap$BulkTask: java.util.concurrent.ConcurrentHashMap$Node advance()>
Counter value: 1
SCC 8921 : 1
<java.util.stream.Nodes$ConcNode: java.lang.String toString()>
Counter value: 1
SCC 8922 : 1
<java.util.ArrayList: boolean addAll(int,java.util.Collection)>
Counter value: 1
SCC 8923 : 1
<sun.nio.ch.DatagramDispatcher: void preClose(java.io.FileDescriptor)>
Counter value: 1
SCC 8924 : 1
<java.nio.HeapCharBuffer: char get(int)>
Counter value: 1
SCC 8925 : 1
<java.io.Console$1: void <init>()>
Counter value: 1
SCC 8926 : 1
<java.nio.file.spi.FileSystemProvider: java.util.List installedProviders()>
Counter value: 1
SCC 8927 : 1
<sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes: boolean isSymbolicLink()>
Counter value: 1
SCC 8928 : 1
<java.time.zone.ZoneOffsetTransition: java.time.zone.ZoneOffsetTransition readExternal(java.io.DataInput)>
Counter value: 1
SCC 8929 : 1
<java.util.stream.SortedOps$SizedDoubleSortingSink: void end()>
Counter value: 2
SCC 8930 : 1
<sun.security.x509.GeneralNames: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8931 : 1
<java.util.Hashtable: boolean containsValue(java.lang.Object)>
Counter value: 1
SCC 8932 : 1
<java.nio.file.FileTreeWalker$Event: void <init>(java.nio.file.FileTreeWalker$EventType,java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)>
Counter value: 1
SCC 8933 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.util.Iterator valueIterator()>
Counter value: 1
SCC 8934 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: void forEach(java.util.function.IntConsumer)>
Counter value: 1
SCC 8935 : 1
<java.util.stream.ReduceOps$6ReducingSink: void <init>(java.util.function.IntBinaryOperator)>
Counter value: 1
SCC 8936 : 1
<java.util.Collections$SynchronizedMap: java.lang.Object remove(java.lang.Object)>
Counter value: 2
SCC 8937 : 1
<java.net.SocketImpl: void <init>()>
Counter value: 1
SCC 8938 : 1
<sun.security.x509.KeyIdentifier: void encode(sun.security.util.DerOutputStream)>
Counter value: 1
SCC 8939 : 1
<java.util.stream.ReduceOps$4: void <init>(java.util.stream.StreamShape,java.util.function.BiConsumer,java.util.function.BiConsumer,java.util.function.Supplier)>
Counter value: 1
SCC 8940 : 1
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: int getInt(java.lang.Object)>
Counter value: 1
SCC 8941 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$lambda_entryConsumer_0__32: java.util.function.Consumer bootstrap$(java.util.function.Consumer)>
Counter value: 1
SCC 8942 : 1
<java.lang.reflect.Parameter: boolean isImplicit()>
Counter value: 1
SCC 8943 : 1
<java.time.OffsetDateTime: int compareTo(java.time.OffsetDateTime)>
Counter value: 1
SCC 8944 : 1
<java.time.chrono.JapaneseChronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 8945 : 1
<java.util.stream.ReferencePipeline$6: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 8946 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: java.time.chrono.ChronoLocalDateTimeImpl 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 8947 : 1
<java.util.concurrent.TimeUnit$6: long toMillis(long)>
Counter value: 1
SCC 8948 : 1
<java.util.Collections$CheckedList: java.util.ListIterator listIterator(int)>
Counter value: 2
SCC 8949 : 1
<sun.security.util.Cache: sun.security.util.Cache newSoftMemoryCache(int)>
Counter value: 1
SCC 8950 : 1
<java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8951 : 1
<java.nio.DirectCharBufferU: boolean isReadOnly()>
Counter value: 1
SCC 8952 : 1
<java.util.stream.AbstractShortCircuitTask: void shortCircuit(java.lang.Object)>
Counter value: 1
SCC 8953 : 1
<java.time.chrono.HijrahDate: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 8954 : 1
<java.lang.invoke.MethodHandleStatics$1: java.lang.Void run()>
Counter value: 1
SCC 8955 : 1
<java.util.WeakHashMap$KeySet: void <init>(java.util.WeakHashMap)>
Counter value: 1
SCC 8956 : 1
<java.nio.HeapByteBufferR: java.nio.ByteBuffer slice()>
Counter value: 1
SCC 8957 : 1
<java.util.Spliterators$LongArraySpliterator: void <init>(long[],int,int,int)>
Counter value: 1
SCC 8958 : 1
<java.time.LocalTime: java.time.LocalTime 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 8959 : 1
<java.security.KeyStore$Builder$FileBuilder: java.security.KeyStore$ProtectionParameter access$502(java.security.KeyStore$Builder$FileBuilder,java.security.KeyStore$ProtectionParameter)>
Counter value: 1
SCC 8960 : 1
<java.util.IdentityHashMap$EntryIterator$Entry: void <init>(java.util.IdentityHashMap$EntryIterator,int)>
Counter value: 1
SCC 8961 : 1
<java.util.concurrent.SynchronousQueue: boolean containsAll(java.util.Collection)>
Counter value: 1
SCC 8962 : 1
<java.util.stream.StreamSpliterators$DelegatingSpliterator: void forEachRemaining(java.util.function.Consumer)>
Counter value: 2
SCC 8963 : 1
<sun.security.util.DerInputBuffer: int hashCode()>
Counter value: 1
SCC 8964 : 1
<java.net.URLPermission$Authority: boolean impliesPortrange(java.net.URLPermission$Authority)>
Counter value: 1
SCC 8965 : 1
<java.lang.J9VMInternals: java.lang.Throwable access$100(java.lang.Throwable,java.util.HashMap)>
Counter value: 1
SCC 8966 : 1
<java.util.concurrent.LinkedBlockingDeque$AbstractItr: void <init>(java.util.concurrent.LinkedBlockingDeque)>
Counter value: 1
SCC 8967 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
Counter value: 1
SCC 8968 : 1
<java.util.HashMap$EntrySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 8969 : 1
<java.security.Security$2: java.lang.Object run()>
Counter value: 1
SCC 8970 : 1
<sun.net.www.http.HttpClient: boolean needsTunneling()>
Counter value: 1
SCC 8971 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: boolean offer(java.lang.Object)>
Counter value: 1
SCC 8972 : 1
<javax.crypto.spec.RC5ParameterSpec: boolean equals(java.lang.Object)>
Counter value: 1
SCC 8973 : 1
<java.time.OffsetDateTime: int compareTo(java.lang.Object)>
Counter value: 1
SCC 8974 : 1
<java.util.stream.Nodes$SpinedNodeBuilder: void accept(java.lang.Object)>
Counter value: 1
SCC 8975 : 1
<java.nio.ByteBufferAsFloatBufferL: float get(int)>
Counter value: 1
SCC 8976 : 1
<java.time.chrono.MinguoDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 8977 : 1
<java.util.AbstractList$ListItr: void add(java.lang.Object)>
Counter value: 1
SCC 8978 : 1
<java.time.LocalDateTime: int compareTo(java.time.chrono.ChronoLocalDateTime)>
Counter value: 1
SCC 8979 : 1
<java.util.concurrent.ConcurrentHashMap$ReduceEntriesTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 8980 : 1
<java.util.stream.SpinedBuffer$OfLong: void arrayForEach(long[],int,int,java.util.function.LongConsumer)>
Counter value: 1
SCC 8981 : 1
<java.security.MessageDigest: java.security.Provider access$100(java.security.MessageDigest)>
Counter value: 1
SCC 8982 : 1
<java.util.TreeMap$KeySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 8983 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef: void <init>(java.util.Spliterator,long,long)>
Counter value: 1
SCC 8984 : 1
<java.util.SubList: int access$210(java.util.SubList)>
Counter value: 1
SCC 8985 : 1
<java.util.concurrent.ThreadLocalRandom: long internalNextLong(long,long)>
Counter value: 1
SCC 8986 : 1
<java.lang.invoke.MethodHandles$Lookup: void checkSecurity(java.lang.Class,java.lang.Class,int)>
Counter value: 1
SCC 8987 : 1
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>
Counter value: 1
SCC 8988 : 1
<sun.security.rsa.PSSParameters: byte[] engineGetEncoded()>
Counter value: 1
SCC 8989 : 1
<java.util.stream.Nodes$CollectorTask$OfInt: java.lang.Object doLeaf()>
Counter value: 1
SCC 8990 : 1
<java.net.PlainSocketImpl: void <clinit>()>
Counter value: 1
SCC 8991 : 1
<java.util.stream.Nodes$DoubleFixedNodeBuilder: void accept(double)>
Counter value: 1
SCC 8992 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasPrevious()>
Counter value: 1
SCC 8993 : 1
<java.time.YearMonth: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 8994 : 1
<java.util.TreeMap$DescendingKeySpliterator: int characteristics()>
Counter value: 1
SCC 8995 : 1
<java.time.chrono.ChronoLocalDateImpl: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 8996 : 1
<java.nio.channels.UnresolvedAddressException: void <init>()>
Counter value: 1
SCC 8997 : 1
<java.util.Collections$CheckedMap: java.lang.Object remove(java.lang.Object)>
Counter value: 2
SCC 8998 : 1
<java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble: java.util.Spliterator$OfDouble makeSpliterator(java.util.Spliterator$OfDouble,long,long,long,long)>
Counter value: 1
SCC 8999 : 1
<sun.net.www.protocol.http.AuthenticationInfo: boolean requestIsInProgress(java.lang.String)>
Counter value: 1
SCC 9000 : 1
<java.lang.reflect.WeakCache$CacheKey: int hashCode()>
Counter value: 1
SCC 9001 : 1
<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble: void <init>(java.util.Spliterator$OfDouble,long,long)>
Counter value: 1
SCC 9002 : 1
<java.net.HostPortrange: int hashCode()>
Counter value: 1
SCC 9003 : 1
<sun.net.www.protocol.http.DigestAuthentication$Parameters: void setNewCnonce()>
Counter value: 1
SCC 9004 : 1
<sun.reflect.AccessorGenerator: short ctorIndexForPrimitiveType(java.lang.Class)>
Counter value: 1
SCC 9005 : 1
<java.lang.Class: java.net.URL getResource(java.lang.String)>
Counter value: 1
SCC 9006 : 1
<java.lang.Short: int compareTo(java.lang.Object)>
Counter value: 1
SCC 9007 : 1
<java.io.ObjectInputStream$PeekInputStream: long getBytesRead()>
Counter value: 1
SCC 9008 : 1
<java.util.Collections: java.util.NavigableSet checkedNavigableSet(java.util.NavigableSet,java.lang.Class)>
Counter value: 1
SCC 9009 : 1
<java.security.Provider: void load(java.io.InputStream)>
Counter value: 2
SCC 9010 : 1
<java.lang.StackTraceElement: java.lang.String toString()>
Counter value: 1
SCC 9011 : 1
<java.util.Collections: int indexOfSubList(java.util.List,java.util.List)>
Counter value: 1
SCC 9012 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 9013 : 1
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 9014 : 1
<sun.reflect.ClassFileAssembler: void opc_sipush(short)>
Counter value: 1
SCC 9015 : 1
<java.security.cert.X509CRL: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9016 : 1
<java.nio.DirectByteBufferR: java.nio.ByteBuffer duplicate()>
Counter value: 1
SCC 9017 : 1
<sun.reflect.ClassFileAssembler: void opc_invokevirtual(short,int,int)>
Counter value: 1
SCC 9018 : 1
<sun.net.SocksProxy: int protocolVersion()>
Counter value: 1
SCC 9019 : 1
<java.util.Collections$CheckedMap: void putAll(java.util.Map)>
Counter value: 1
SCC 9020 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: void accept(long)>
Counter value: 1
SCC 9021 : 1
<sun.net.www.protocol.http.DigestAuthentication: java.lang.String getHeaderValueImpl(java.lang.String,java.lang.String)>
Counter value: 1
SCC 9022 : 1
<java.util.stream.DoublePipeline$8$1: void <init>(java.util.stream.DoublePipeline$8,java.util.stream.Sink)>
Counter value: 1
SCC 9023 : 1
<java.net.URI: int compareTo(java.lang.Object)>
Counter value: 1
SCC 9024 : 1
<java.nio.channels.Channels$3: void close()>
Counter value: 1
SCC 9025 : 1
<sun.reflect.ClassFileAssembler: void opc_aconst_null()>
Counter value: 1
SCC 9026 : 1
<java.io.BufferedWriter: void flush()>
Counter value: 2
SCC 9027 : 1
<sun.reflect.ReflectionFactory: void checkInitted()>
Counter value: 1
SCC 9028 : 1
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 9029 : 1
<java.util.stream.SliceOps$2$lambda_opEvaluateParallelLazy_0__65: java.util.function.IntFunction bootstrap$()>
Counter value: 1
SCC 9030 : 1
<sun.reflect.ClassFileAssembler: void opc_dup()>
Counter value: 1
SCC 9031 : 1
<sun.net.www.protocol.http.NegotiateAuthentication: boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection,sun.net.www.HeaderParser,java.lang.String)>
Counter value: 1
SCC 9032 : 1
<sun.net.www.protocol.http.HttpURLConnection$5: java.lang.String run()>
Counter value: 1
SCC 9033 : 1
<jdk.net.ExtendedSocketOptions$ExtSocketOption: java.lang.String name()>
Counter value: 1
SCC 9034 : 1
<java.net.SocksSocketImpl$6: java.lang.Object run()>
Counter value: 1
SCC 9035 : 1
<sun.net.www.MessageHeader: void prepend(java.lang.String,java.lang.String)>
Counter value: 1
SCC 9036 : 1
<java.util.stream.ForEachOps$ForEachOp$OfInt: java.lang.Object get()>
Counter value: 1
SCC 9037 : 1
<sun.net.www.MessageHeader$HeaderIterator: boolean hasNext()>
Counter value: 1
SCC 9038 : 1
<java.time.chrono.MinguoDate: int getProlepticYear()>
Counter value: 1
SCC 9039 : 1
<sun.reflect.ByteVectorImpl: byte[] getData()>
Counter value: 1
SCC 9040 : 1
<sun.net.NetProperties: java.lang.Boolean getBoolean(java.lang.String)>
Counter value: 1
SCC 9041 : 1
<java.util.stream.IntPipeline$4: void <init>(java.util.stream.IntPipeline,java.util.stream.AbstractPipeline,java.util.stream.StreamShape,int,java.util.function.IntFunction)>
Counter value: 1
SCC 9042 : 1
<java.util.concurrent.ForkJoinTask: java.lang.ref.ReferenceQueue access$000()>
Counter value: 1
SCC 9043 : 1
<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>
Counter value: 1
SCC 9044 : 1
<java.time.chrono.ChronoLocalDateImpl: void <init>()>
Counter value: 1
SCC 9045 : 1
<java.util.EnumMap: int entryHashCode(int)>
Counter value: 1
SCC 9046 : 1
<java.util.Arrays: void sort(long[],int,int)>
Counter value: 1
SCC 9047 : 1
<java.util.HashMap$EntrySet: boolean remove(java.lang.Object)>
Counter value: 1
SCC 9048 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfLong: void forEach(java.util.function.LongConsumer,long)>
Counter value: 1
SCC 9049 : 1
<java.util.concurrent.Executors$1: java.lang.Object call()>
Counter value: 1
SCC 9050 : 1
<java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator: void forEachRemaining(java.lang.Object)>
Counter value: 1
SCC 9051 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceKeysToDoubleTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceKeysToDoubleTask,java.util.function.ToDoubleFunction,double,java.util.function.DoubleBinaryOperator)>
Counter value: 1
SCC 9052 : 1
<java.security.KeyStore$Builder$2$1: java.lang.Object run()>
Counter value: 1
SCC 9053 : 1
<java.nio.StringCharBuffer: java.nio.CharBuffer subSequence(int,int)>
Counter value: 1
SCC 9054 : 1
<sun.reflect.misc.ReflectUtil: boolean isVMAnonymousClass(java.lang.Class)>
Counter value: 1
SCC 9055 : 1
<java.util.concurrent.ConcurrentSkipListMap$EntrySet: void <init>(java.util.concurrent.ConcurrentNavigableMap)>
Counter value: 1
SCC 9056 : 1
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 9057 : 1
<sun.security.x509.CertificateX509Key: java.lang.String getName()>
Counter value: 1
SCC 9058 : 1
<sun.misc.ProxyGenerator: java.lang.String access$800(sun.misc.ProxyGenerator)>
Counter value: 1
SCC 9059 : 1
<java.util.stream.IntPipeline$1$1: void accept(int)>
Counter value: 1
SCC 9060 : 1
<java.util.EnumMap: int hashCode()>
Counter value: 1
SCC 9061 : 1
<sun.security.pkcs.ContentInfo: java.lang.String toString()>
Counter value: 1
SCC 9062 : 1
<java.util.stream.SortedOps$AbstractDoubleSortingSink: void <init>(java.util.stream.Sink)>
Counter value: 1
SCC 9063 : 1
<java.io.ObjectInputStream$PeekInputStream: int read(byte[],int,int)>
Counter value: 2
SCC 9064 : 1
<java.net.Socket$1: java.lang.Object run()>
Counter value: 1
SCC 9065 : 1
<java.util.Collections$EmptyList: java.util.Spliterator spliterator()>
Counter value: 1
SCC 9066 : 1
<java.util.stream.ReferencePipeline$7: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 9067 : 1
<java.time.LocalDateTime: java.time.LocalDateTime 'with'(java.time.temporal.TemporalField,long)>
Counter value: 1
SCC 9068 : 1
<java.math.MutableBigInteger: java.lang.String toString()>
Counter value: 1
SCC 9069 : 1
<java.security.KeyStore$SecretKeyEntry: java.lang.String toString()>
Counter value: 1
SCC 9070 : 1
<sun.nio.ch.Util: void offerFirstTemporaryDirectBuffer(java.nio.ByteBuffer)>
Counter value: 1
SCC 9071 : 1
<java.io.ObjectStreamClass: java.lang.reflect.Constructor getExternalizableConstructor(java.lang.Class)>
Counter value: 1
SCC 9072 : 1
<javax.security.auth.SubjectDomainCombiner$3: java.lang.Object run()>
Counter value: 1
SCC 9073 : 1
<java.lang.invoke.MethodHandleCache: void addDirectHandle(java.lang.invoke.DirectHandle)>
Counter value: 1
SCC 9074 : 1
<java.util.stream.DistinctOps$1: java.util.Spliterator opEvaluateParallelLazy(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 9075 : 1
<java.util.stream.Nodes$ToArrayTask$OfLong: void <init>(java.util.stream.Node$OfLong,long[],int,java.util.stream.Nodes$1)>
Counter value: 1
SCC 9076 : 1
<sun.net.www.protocol.http.HttpURLConnection: java.lang.String getNetProperty(java.lang.String)>
Counter value: 1
SCC 9077 : 1
<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 9078 : 1
<java.util.Collections$EmptyListIterator: java.lang.Object previous()>
Counter value: 1
SCC 9079 : 1
<java.util.concurrent.ConcurrentHashMap$KeySetView: boolean contains(java.lang.Object)>
Counter value: 1
SCC 9080 : 1
<sun.net.www.http.HttpClient: void setCacheRequest(java.net.CacheRequest)>
Counter value: 1
SCC 9081 : 1
<java.util.stream.ReduceOps$13ReducingSink: void <init>(java.util.function.Supplier,java.util.function.ObjDoubleConsumer,java.util.function.BinaryOperator)>
Counter value: 1
SCC 9082 : 1
<java.net.InetAddress: int hashCode()>
Counter value: 1
SCC 9083 : 1
<java.lang.invoke.VarargsCollectorHandle: void <init>(java.lang.invoke.VarargsCollectorHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 9084 : 1
<java.lang.invoke.ConvertHandle$FilterHelpers: java.lang.invoke.MethodHandle getPrimitiveReturnFilter(java.lang.invoke.MethodType,boolean)>
Counter value: 1
SCC 9085 : 1
<java.io.ObjectInputStream$HandleTable$HandleList: int size()>
Counter value: 1
SCC 9086 : 1
<java.nio.channels.ClosedChannelException: void <init>()>
Counter value: 1
SCC 9087 : 1
<sun.net.www.http.KeepAliveCache$1: java.lang.Object run()>
Counter value: 1
SCC 9088 : 1
<java.util.stream.AbstractPipeline: void copyInto(java.util.stream.Sink,java.util.Spliterator)>
Counter value: 1
SCC 9089 : 1
<java.util.stream.Nodes$EmptyNode: void <init>()>
Counter value: 1
SCC 9090 : 1
<java.nio.file.FileTreeWalker$DirectoryNode: java.nio.file.DirectoryStream stream()>
Counter value: 1
SCC 9091 : 1
<java.util.Collections$ReverseComparator: int compare(java.lang.Comparable,java.lang.Comparable)>
Counter value: 1
SCC 9092 : 1
<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>
Counter value: 1
SCC 9093 : 1
<java.util.stream.ForEachOps$ForEachOp: java.lang.Void evaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 9094 : 1
<java.time.LocalDateTime: java.time.LocalDateTime readExternal(java.io.DataInput)>
Counter value: 1
SCC 9095 : 1
<java.nio.DirectIntBufferS: int get(int)>
Counter value: 1
SCC 9096 : 1
<java.util.IdentityHashMap$IdentityHashMapIterator: void remove()>
Counter value: 1
SCC 9097 : 1
<sun.nio.ch.FileDispatcherImpl: int write(java.io.FileDescriptor,long,int)>
Counter value: 1
SCC 9098 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator$lambda_initPartialTraversalState_0__43: java.util.function.BooleanSupplier bootstrap$(java.util.stream.StreamSpliterators$LongWrappingSpliterator)>
Counter value: 1
SCC 9099 : 1
<java.io.ObjectStreamClass: java.io.ObjectStreamClass lookup(java.lang.Class,boolean)>
Counter value: 1
SCC 9100 : 1
<java.time.chrono.ThaiBuddhistDate: int getProlepticYear()>
Counter value: 1
SCC 9101 : 1
<java.lang.ProcessBuilder$Redirect$5: java.io.File file()>
Counter value: 1
SCC 9102 : 1
<java.io.Console: java.nio.charset.Charset access$800(java.io.Console)>
Counter value: 1
SCC 9103 : 1
<java.util.stream.DoublePipeline$8: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
Counter value: 1
SCC 9104 : 1
<java.util.stream.ReferencePipeline$2: void <init>(java.util.stream.ReferencePipeline,java.util.stream.AbstractPipeline,java.util.stream.StreamShape,int,java.util.function.Predicate)>
Counter value: 1
SCC 9105 : 1
<java.util.stream.Nodes$EmptyNode$OfRef: void <init>()>
Counter value: 1
SCC 9106 : 1
<java.time.chrono.ChronoLocalDateImpl: java.lang.String toString()>
Counter value: 1
SCC 9107 : 1
<java.util.Arrays: void parallelSort(int[])>
Counter value: 1
SCC 9108 : 1
<java.util.stream.Nodes$LongSpinedNodeBuilder: void forEach(java.util.function.LongConsumer)>
Counter value: 1
SCC 9109 : 1
<sun.reflect.ByteVectorImpl: void <init>(int)>
Counter value: 1
SCC 9110 : 1
<sun.nio.ch.MembershipKeyImpl: void invalidate()>
Counter value: 1
SCC 9111 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: void remove()>
Counter value: 1
SCC 9112 : 1
<java.nio.channels.FileLock: java.lang.String toString()>
Counter value: 1
SCC 9113 : 1
<javax.crypto.CryptoPermission: int getMaxKeySize()>
Counter value: 1
SCC 9114 : 1
<java.util.stream.Nodes$CollectionNode: void <init>(java.util.Collection)>
Counter value: 1
SCC 9115 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableSet keySet()>
Counter value: 1
SCC 9116 : 1
<sun.nio.fs.NativeBuffer: int size()>
Counter value: 1
SCC 9117 : 1
<java.lang.ClassValue$ClassValueMap: java.lang.ClassValue$Entry probeBackupLocations(java.lang.ClassValue$Entry[],java.lang.ClassValue)>
Counter value: 1
SCC 9118 : 1
<java.util.stream.Sink: void accept(int)>
Counter value: 1
SCC 9119 : 1
<java.lang.reflect.ReflectAccess: int getConstructorSlot(java.lang.reflect.Constructor)>
Counter value: 1
SCC 9120 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive: void reset()>
Counter value: 1
SCC 9121 : 1
<java.nio.HeapByteBufferR: java.nio.ByteBuffer put(byte)>
Counter value: 1
SCC 9122 : 1
<sun.net.www.protocol.http.HttpCallerInfo: void <init>(java.net.URL)>
Counter value: 1
SCC 9123 : 1
<java.nio.CharBufferSpliterator: void <init>(java.nio.CharBuffer,int,int)>
Counter value: 1
SCC 9124 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate readExternal(java.io.DataInput)>
Counter value: 1
SCC 9125 : 1
<java.io.ObjectInputStream$HandleTable: void grow()>
Counter value: 1
SCC 9126 : 1
<java.util.stream.IntPipeline$10$1: void <init>(java.util.stream.IntPipeline$10,java.util.stream.Sink)>
Counter value: 1
SCC 9127 : 1
<java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>
Counter value: 1
SCC 9128 : 1
<java.io.ClassByNameCache$CreateReaperAction: java.lang.Object run()>
Counter value: 1
SCC 9129 : 1
<sun.invoke.util.Wrapper: int hashChar(char)>
Counter value: 1
SCC 9130 : 1
<java.util.BitSet$1BitSetIterator: boolean hasNext()>
Counter value: 1
SCC 9131 : 1
<sun.reflect.DelegatingConstructorAccessorImpl: void setDelegate(sun.reflect.ConstructorAccessorImpl)>
Counter value: 1
SCC 9132 : 1
<sun.nio.ch.FileChannelImpl: long size()>
Counter value: 1
SCC 9133 : 1
<java.lang.ProcessEnvironment$StringEntrySet$2: void <init>(java.lang.Object)>
Counter value: 1
SCC 9134 : 1
<java.time.YearMonth: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalAdjuster)>
Counter value: 1
SCC 9135 : 1
<java.time.OffsetDateTime: java.time.LocalDateTime toLocalDateTime()>
Counter value: 1
SCC 9136 : 1
<java.lang.Double: int hashCode()>
Counter value: 1
SCC 9137 : 1
<java.util.concurrent.ConcurrentLinkedQueue$Itr: boolean hasNext()>
Counter value: 1
SCC 9138 : 1
<java.lang.ApplicationShutdownHooks$1: void run()>
Counter value: 1
SCC 9139 : 1
<sun.reflect.ClassFileAssembler: void opc_return()>
Counter value: 1
SCC 9140 : 1
<sun.security.util.DerOutputStream: void writeImplicit(byte,sun.security.util.DerOutputStream)>
Counter value: 1
SCC 9141 : 1
<java.util.concurrent.ConcurrentHashMap$ReduceKeysTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 9142 : 1
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>
Counter value: 1
SCC 9143 : 1
<sun.net.www.http.KeepAliveStreamCleaner: void <init>()>
Counter value: 1
SCC 9144 : 1
<sun.nio.ch.AsynchronousChannelGroupImpl$1: void run()>
Counter value: 2
SCC 9145 : 1
<java.lang.ClassValue: java.lang.Object getFromHashMap(java.lang.Class)>
Counter value: 1
SCC 9146 : 1
<java.util.Collections$CheckedMap$CheckedEntrySet: java.util.Iterator iterator()>
Counter value: 2
SCC 9147 : 1
<java.util.concurrent.SynchronousQueue: java.util.Iterator iterator()>
Counter value: 1
SCC 9148 : 1
<java.util.HashMap$ValueSpliterator: java.util.HashMap$ValueSpliterator trySplit()>
Counter value: 1
SCC 9149 : 1
<sun.net.www.protocol.http.NTLMAuthenticationProxy: void <init>(java.lang.reflect.Constructor,java.lang.reflect.Constructor)>
Counter value: 1
SCC 9150 : 1
<java.net.SocketOutputStream: void write(byte[])>
Counter value: 1
SCC 9151 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime resolveInstant(java.time.LocalDateTime)>
Counter value: 1
SCC 9152 : 1
<java.net.URI: void maybeAddLeadingDot(char[],int[])>
Counter value: 1
SCC 9153 : 1
<sun.util.calendar.JulianCalendar: int getDayOfWeek(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 9154 : 1
<java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToLongTask: void <init>(java.util.concurrent.ConcurrentHashMap$BulkTask,int,int,int,java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToLongTask,java.util.function.ToLongFunction,long,java.util.function.LongBinaryOperator)>
Counter value: 1
SCC 9155 : 1
<java.nio.HeapShortBuffer: short get(int)>
Counter value: 1
SCC 9156 : 1
<java.util.Collections$CheckedList$1: boolean hasNext()>
Counter value: 2
SCC 9157 : 1
<java.util.stream.StreamSpliterators$LongWrappingSpliterator$accept__54: java.util.stream.Sink$OfLong bootstrap$(java.util.function.LongConsumer)>
Counter value: 1
SCC 9158 : 1
<java.util.concurrent.atomic.AtomicInteger: int getAndSet(int)>
Counter value: 1
SCC 9159 : 1
<java.io.ObjectInputStream$setValidator__62: sun.misc.JavaObjectInputStreamAccess bootstrap$()>
Counter value: 1
SCC 9160 : 1
<java.nio.channels.NonWritableChannelException: void <init>()>
Counter value: 1
SCC 9161 : 1
<java.util.GregorianCalendar: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9162 : 1
<sun.security.util.MemoryCache$SoftCacheEntry: void invalidate()>
Counter value: 1
SCC 9163 : 1
<java.time.chrono.ChronoLocalDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 9164 : 1
<java.util.stream.Nodes$CollectorTask: java.util.stream.Node doLeaf()>
Counter value: 1
SCC 9165 : 1
<java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>
Counter value: 2
SCC 9166 : 1
<java.io.ObjectStreamClass: void <clinit>()>
Counter value: 1
SCC 9167 : 1
<java.util.Spliterators: java.util.Spliterator spliterator(java.lang.Object[],int,int,int)>
Counter value: 1
SCC 9168 : 1
<java.util.concurrent.ConcurrentHashMap$ForEachTransformedValueTask: void compute()>
Counter value: 1
SCC 9169 : 1
<java.util.concurrent.LinkedBlockingQueue: void enqueue(java.util.concurrent.LinkedBlockingQueue$Node)>
Counter value: 1
SCC 9170 : 1
<java.nio.charset.Charset: void access$200(java.util.Iterator,java.util.Map)>
Counter value: 1
SCC 9171 : 1
<java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: java.nio.channels.spi.AsynchronousChannelProvider load()>
Counter value: 1
SCC 9172 : 1
<java.nio.ByteBufferAsCharBufferL: int ix(int)>
Counter value: 1
SCC 9173 : 1
<java.io.ObjectStreamClass: boolean access$1200(java.io.ObjectStreamClass)>
Counter value: 1
SCC 9174 : 1
<java.time.ZoneOffset: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 9175 : 1
<java.io.ObjectOutputStream: void write(byte[],int,int)>
Counter value: 1
SCC 9176 : 1
<java.lang.invoke.ThunkTuple: void load()>
Counter value: 1
SCC 9177 : 1
<java.util.stream.ReferencePipeline$9$1: boolean cancellationRequested()>
Counter value: 2
SCC 9178 : 1
<java.util.stream.FindOps$FindOp: java.lang.Object evaluateSequential(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 9179 : 1
<java.time.chrono.JapaneseDate: java.time.chrono.JapaneseDate minus(long,java.time.temporal.TemporalUnit)>
Counter value: 1
SCC 9180 : 1
<sun.net.NetworkClient$2: java.lang.Object run()>
Counter value: 1
SCC 9181 : 1
<sun.net.www.protocol.http.HttpURLConnection$6: void <init>(sun.net.www.protocol.http.HttpURLConnection)>
Counter value: 1
SCC 9182 : 1
<java.nio.channels.spi.SelectorProvider: boolean loadProviderFromProperty()>
Counter value: 1
SCC 9183 : 1
<java.util.concurrent.ForkJoinPool: boolean tryExternalUnpush(java.util.concurrent.ForkJoinTask)>
Counter value: 1
SCC 9184 : 1
<java.util.ArraysParallelSortHelpers$FJLong$Merger: void <init>(java.util.concurrent.CountedCompleter,long[],long[],int,int,int,int,int,int)>
Counter value: 1
SCC 9185 : 1
<java.util.stream.FindOps$FindSink$OfDouble: java.lang.Object get()>
Counter value: 1
SCC 9186 : 1
<java.time.chrono.HijrahChronology: int getMinimumMonthLength()>
Counter value: 1
SCC 9187 : 1
<java.net.HttpConnectSocketImpl: void <clinit>()>
Counter value: 1
SCC 9188 : 1
<java.security.ProtectionDomain: boolean access$100(java.security.ProtectionDomain)>
Counter value: 1
SCC 9189 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfInt: java.util.stream.Nodes$SizedCollectorTask makeChild(java.util.Spliterator,long,long)>
Counter value: 1
SCC 9190 : 1
<java.util.stream.Nodes$CollectionNode: void forEach(java.util.function.Consumer)>
Counter value: 1
SCC 9191 : 1
<java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfLong: java.util.Spliterator$OfLong trySplit()>
Counter value: 1
SCC 9192 : 1
<sun.net.www.http.HttpClient$1: void <init>(sun.net.www.http.HttpClient,java.net.InetSocketAddress)>
Counter value: 1
SCC 9193 : 1
<sun.misc.ObjectInputFilter$Config$Global$lambda_checkInput_9__100: boolean test(java.lang.Object)>
Counter value: 1
SCC 9194 : 1
<java.net.SocketOutputStream: void close()>
Counter value: 1
SCC 9195 : 1
<java.lang.invoke.MethodType: java.lang.String toString()>
Counter value: 1
SCC 9196 : 1
<java.lang.invoke.FilterArgumentsHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 9197 : 1
<java.util.stream.SpinedBuffer: void copyInto(java.lang.Object[],int)>
Counter value: 1
SCC 9198 : 1
<java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9199 : 1
<sun.invoke.util.Wrapper$Format: void <clinit>()>
Counter value: 1
SCC 9200 : 1
<java.util.stream.Nodes$ConcNode$OfPrimitive: void copyInto(java.lang.Object,int)>
Counter value: 2
SCC 9201 : 1
<java.lang.ProcessEnvironment$StringEnvironment: java.lang.Object remove(java.lang.Object)>
Counter value: 1
SCC 9202 : 1
<java.util.jar.Manifest$FastInputStream: int read(byte[],int,int)>
Counter value: 2
SCC 9203 : 1
<java.util.Spliterators$LongArraySpliterator: boolean tryAdvance(java.lang.Object)>
Counter value: 1
SCC 9204 : 1
<java.util.TreeMap$NavigableSubMap$EntrySetView: boolean remove(java.lang.Object)>
Counter value: 1
SCC 9205 : 1
<java.lang.Float: float parseFloat(java.lang.String)>
Counter value: 1
SCC 9206 : 1
<java.security.cert.CertPath: int hashCode()>
Counter value: 1
SCC 9207 : 1
<sun.misc.ProxyGenerator$ConstantPool$Entry: void <init>()>
Counter value: 1
SCC 9208 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate: void addImpl(java.text.spi.DecimalFormatSymbolsProvider)>
Counter value: 1
SCC 9209 : 1
<java.util.stream.SliceOps$SliceTask: java.lang.Object doLeaf()>
Counter value: 1
SCC 9210 : 1
<sun.net.www.HeaderParser$ParserIterator: java.lang.Object next()>
Counter value: 1
SCC 9211 : 1
<java.lang.invoke.SerializedLambda: java.lang.String toString()>
Counter value: 1
SCC 9212 : 1
<java.time.Year: java.time.Year readExternal(java.io.DataInput)>
Counter value: 1
SCC 9213 : 1
<sun.security.provider.NativePRNG: java.net.URL access$000()>
Counter value: 1
SCC 9214 : 1
<sun.nio.ch.IOStatus: boolean check(long)>
Counter value: 1
SCC 9215 : 1
<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void <init>(sun.net.www.protocol.http.HttpURLConnection,java.io.InputStream)>
Counter value: 1
SCC 9216 : 1
<javax.security.auth.Policy$3: java.lang.Object run()>
Counter value: 1
SCC 9217 : 1
<java.util.SubList$1: java.lang.Object next()>
Counter value: 2
SCC 9218 : 1
<java.security.Signature$Delegate: java.lang.Object clone()>
Counter value: 2
SCC 9219 : 1
<sun.reflect.UnsafeBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 9220 : 1
<java.lang.invoke.MethodTypeHelper: void <clinit>()>
Counter value: 1
SCC 9221 : 1
<sun.security.util.BitArray: java.lang.String toString()>
Counter value: 1
SCC 9222 : 1
<java.io.ObjectOutputStream$BlockDataOutputStream: void writeBlockHeader(int)>
Counter value: 1
SCC 9223 : 1
<java.util.stream.SliceOps$4: java.util.Spliterator opEvaluateParallelLazy(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 9224 : 1
<sun.net.www.http.KeepAliveCache: void put(java.net.URL,java.lang.Object,sun.net.www.http.HttpClient)>
Counter value: 1
SCC 9225 : 1
<java.util.stream.StreamSpliterators$WrappingSpliterator$accept__56: void <init>(java.util.function.Consumer)>
Counter value: 1
SCC 9226 : 1
<java.util.stream.SpinedBuffer$OfInt$1Splitr: java.util.stream.SpinedBuffer$OfInt$1Splitr newSpliterator(int,int,int,int)>
Counter value: 1
SCC 9227 : 1
<sun.security.x509.KeyIdentifier: java.lang.String toString()>
Counter value: 1
SCC 9228 : 1
<java.io.ObjectStreamClass: void initNonProxy(java.io.ObjectStreamClass,java.lang.Class,java.lang.ClassNotFoundException,java.io.ObjectStreamClass)>
Counter value: 1
SCC 9229 : 1
<java.util.concurrent.CopyOnWriteArrayList: void clear()>
Counter value: 1
SCC 9230 : 1
<sun.net.sdp.SdpProvider$PortRangeRule: void <init>(sun.net.sdp.SdpProvider$Action,int,int)>
Counter value: 1
SCC 9231 : 1
<java.util.concurrent.CountedCompleter: void <init>()>
Counter value: 1
SCC 9232 : 1
<java.util.stream.StreamSpliterators$ArrayBuffer: void <init>()>
Counter value: 1
SCC 9233 : 1
<sun.net.www.http.ChunkedOutputStream: void ensureOpen()>
Counter value: 1
SCC 9234 : 1
<java.time.chrono.ChronoLocalDateTimeImpl: int get(java.time.temporal.TemporalField)>
Counter value: 1
SCC 9235 : 1
<sun.util.logging.PlatformLogger: void severe(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 9236 : 1
<java.net.InetSocketAddress$InetSocketAddressHolder: java.lang.String access$700(java.net.InetSocketAddress$InetSocketAddressHolder)>
Counter value: 1
SCC 9237 : 1
<java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: java.nio.channels.spi.AsynchronousChannelProvider access$000()>
Counter value: 1
SCC 9238 : 1
<java.io.ObjectStreamClass$EntryFuture$1: void <init>(java.io.ObjectStreamClass$EntryFuture)>
Counter value: 1
SCC 9239 : 1
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: void <init>(java.lang.Object[],int,java.util.concurrent.CopyOnWriteArrayList$1)>
Counter value: 1
SCC 9240 : 1
<sun.net.www.protocol.http.HttpURLConnection: sun.net.www.protocol.http.AuthenticationInfo resetProxyAuthentication(sun.net.www.protocol.http.AuthenticationInfo,sun.net.www.protocol.http.AuthenticationHeader)>
Counter value: 1
SCC 9241 : 1
<java.time.temporal.TemporalQueries: java.time.LocalTime lambda$static$6(java.time.temporal.TemporalAccessor)>
Counter value: 1
SCC 9242 : 1
<java.util.stream.IntPipeline$9$1: void begin(long)>
Counter value: 2
SCC 9243 : 1
<java.net.HttpCookie: java.lang.String getPath()>
Counter value: 1
SCC 9244 : 1
<sun.reflect.'annotation'.AnnotationInvocationHandler: void <init>(java.lang.Class,java.util.Map)>
Counter value: 1
SCC 9245 : 1
<sun.security.x509.DistributionPointName: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9246 : 1
<java.io.Console: char[] access$100(java.io.Console)>
Counter value: 1
SCC 9247 : 1
<java.text.BreakIterator: java.lang.Object clone()>
Counter value: 1
SCC 9248 : 1
<sun.nio.ch.NativeDispatcher: int pread(java.io.FileDescriptor,long,int,long)>
Counter value: 1
SCC 9249 : 1
<java.lang.Float: int hashCode(float)>
Counter value: 1
SCC 9250 : 1
<sun.net.www.protocol.http.DigestAuthentication: java.lang.String computeDigest(boolean,java.lang.String,char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 9251 : 1
<java.net.StandardSocketOptions$StdSocketOption: java.lang.String name()>
Counter value: 1
SCC 9252 : 1
<sun.invoke.util.Wrapper: void <init>(java.lang.String,int,java.lang.Class,java.lang.Class,char,java.lang.Object,java.lang.Object,int)>
Counter value: 1
SCC 9253 : 1
<java.util.concurrent.ConcurrentHashMap$ReduceValuesTask: java.lang.Object getRawResult()>
Counter value: 1
SCC 9254 : 1
<java.util.concurrent.ForkJoinPool$WorkQueue: java.util.concurrent.ForkJoinTask[] growArray()>
Counter value: 1
SCC 9255 : 1
<java.util.IdentityHashMap$IdentityHashMapIterator: void <init>(java.util.IdentityHashMap,java.util.IdentityHashMap$1)>
Counter value: 1
SCC 9256 : 1
<java.util.IdentityHashMap$IdentityHashMapIterator: void <init>(java.util.IdentityHashMap)>
Counter value: 1
SCC 9257 : 1
<java.util.stream.ForEachOps$ForEachOp$OfRef: java.lang.Object evaluateParallel(java.util.stream.PipelineHelper,java.util.Spliterator)>
Counter value: 1
SCC 9258 : 1
<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>
Counter value: 1
SCC 9259 : 1
<java.time.chrono.AbstractChronology$lambda_static_7f2d2d5b_1__5: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 9260 : 1
<java.io.ObjectStreamClass: boolean access$400(java.io.ObjectStreamClass)>
Counter value: 1
SCC 9261 : 1
<sun.util.locale.provider.RuleBasedBreakIterator$1: java.lang.Object run()>
Counter value: 1
SCC 9262 : 1
<java.util.stream.Nodes$SizedCollectorTask$OfInt: java.util.stream.Nodes$SizedCollectorTask$OfInt makeChild(java.util.Spliterator,long,long)>
Counter value: 1
SCC 9263 : 1
<java.nio.charset.Charset: void put(java.util.Iterator,java.util.Map)>
Counter value: 1
SCC 9264 : 1
<java.lang.invoke.ConvertHandle$FilterHelpers: java.lang.invoke.MethodHandle getBoxingReturnFilter(java.lang.invoke.MethodType)>
Counter value: 1
SCC 9265 : 1
<java.util.stream.ReduceOps$3: java.util.stream.ReduceOps$AccumulatingSink makeSink()>
Counter value: 1
SCC 9266 : 1
<sun.reflect.AccessorGenerator: void emitCommonConstantPoolEntries()>
Counter value: 1
SCC 9267 : 1
<java.lang.invoke.BruteArgumentMoverHandle: void <init>(java.lang.invoke.BruteArgumentMoverHandle,java.lang.invoke.MethodType)>
Counter value: 1
SCC 9268 : 1
<java.time.YearMonth: int get(java.time.temporal.TemporalField)>
Counter value: 1
SCC 9269 : 1
<sun.net.ProgressSource: void beginTracking()>
Counter value: 1
SCC 9270 : 1
<sun.net.www.http.ChunkedInputStream: void ensureOpen()>
Counter value: 1
SCC 9271 : 1
<java.lang.invoke.InnerClassLambdaMetafactory: java.lang.String access$000(java.lang.invoke.InnerClassLambdaMetafactory)>
Counter value: 1
SCC 9272 : 1
<sun.nio.ch.SimpleAsynchronousFileChannelImpl: sun.nio.ch.FileDispatcher access$100()>
Counter value: 1
SCC 9273 : 1
<java.util.stream.Nodes$CollectorTask$OfRef: void <init>(java.util.stream.PipelineHelper,java.util.function.IntFunction,java.util.Spliterator)>
Counter value: 1
SCC 9274 : 1
<sun.nio.ch.IOStatus: long normalize(long)>
Counter value: 1
SCC 9275 : 1
<java.lang.reflect.WeakCache$CacheKey: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 9276 : 1
<javax.security.auth.SubjectDomainCombiner$2: java.lang.Object run()>
Counter value: 1
SCC 9277 : 1
<sun.reflect.AccessorGenerator: boolean isPrivate()>
Counter value: 1
SCC 9278 : 1
<javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>()>
Counter value: 1
SCC 9279 : 1
<java.time.MonthDay: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9280 : 1
<java.util.stream.SliceOps$3: java.lang.Long[] lambda$opEvaluateParallelLazy$0(int)>
Counter value: 1
SCC 9281 : 1
<java.time.chrono.HijrahDate: long toEpochDay()>
Counter value: 1
SCC 9282 : 1
<sun.nio.cs.StreamEncoder: void flush()>
Counter value: 1
SCC 9283 : 1
<java.util.concurrent.CountedCompleter: java.util.concurrent.CountedCompleter firstComplete()>
Counter value: 1
SCC 9284 : 1
<sun.nio.fs.NativeBuffer: void <init>(int)>
Counter value: 1
SCC 9285 : 1
<java.util.stream.StreamSpliterators$DistinctSpliterator: java.util.Spliterator trySplit()>
Counter value: 2
SCC 9286 : 1
<java.util.IdentityHashMap$EntrySpliterator: java.util.Spliterator trySplit()>
Counter value: 1
SCC 9287 : 1
<java.security.AccessControlContext: boolean hasDebugCodeBase()>
Counter value: 2
SCC 9288 : 1
<java.util.TreeMap$ValueSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 9289 : 1
<sun.misc.ProxyGenerator: void codeLocalLoadStore(int,int,int,java.io.DataOutputStream)>
Counter value: 1
SCC 9290 : 1
<java.lang.invoke.MethodCacheKey: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9291 : 1
<sun.invoke.util.Wrapper: int hashWrap(java.lang.Class)>
Counter value: 1
SCC 9292 : 1
<sun.misc.ProxyGenerator$ConstantPool: short getNameAndType(java.lang.String,java.lang.String)>
Counter value: 1
SCC 9293 : 1
<sun.util.locale.provider.LocaleResources: java.lang.String[] getTimeZoneNames(java.lang.String)>
Counter value: 1
SCC 9294 : 1
<java.util.ArrayDeque: java.util.ArrayDeque clone()>
Counter value: 1
SCC 9295 : 1
<java.lang.ProcessEnvironment$StringValues$1: java.lang.String next()>
Counter value: 1
SCC 9296 : 1
<java.util.EnumMap$1: void <init>()>
Counter value: 1
SCC 9297 : 1
<java.nio.channels.Channels$WritableByteChannelImpl: int write(java.nio.ByteBuffer)>
Counter value: 1
SCC 9298 : 1
<java.util.stream.Nodes$DoubleSpinedNodeBuilder: void copyInto(double[],int)>
Counter value: 1
SCC 9299 : 1
<java.util.Collections$UnmodifiableList$1: void remove()>
Counter value: 1
SCC 9300 : 1
<java.util.stream.Sink$ChainedReference: void begin(long)>
Counter value: 2
SCC 9301 : 1
<java.util.stream.LongPipeline$StatefulOp: java.util.Spliterator lazySpliterator(java.util.function.Supplier)>
Counter value: 1
SCC 9302 : 1
<java.util.concurrent.ForkJoinTask$AdaptedRunnable: void run()>
Counter value: 1
SCC 9303 : 1
<java.nio.ByteBufferAsCharBufferB: java.nio.CharBuffer compact()>
Counter value: 1
SCC 9304 : 1
<java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>
Counter value: 1
SCC 9305 : 1
<java.lang.ProcessBuilder$Redirect$5: java.lang.ProcessBuilder$Redirect$Type type()>
Counter value: 1
SCC 9306 : 1
<sun.net.www.protocol.http.AuthenticationInfo: java.lang.String getPath()>
Counter value: 1
SCC 9307 : 1
<javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: java.lang.Object getValue(java.lang.Object)>
Counter value: 1
SCC 9308 : 1
<java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap: java.util.NavigableSet navigableKeySet()>
Counter value: 1
SCC 9309 : 1
<java.util.stream.ReduceOps$ReduceTask: java.util.stream.ReduceOps$ReduceTask makeChild(java.util.Spliterator)>
Counter value: 1
SCC 9310 : 1
<java.time.ZonedDateTime: java.time.ZonedDateTime resolveLocal(java.time.LocalDateTime)>
Counter value: 1
SCC 9311 : 1
<java.util.SubList: java.util.ListIterator listIterator(int)>
Counter value: 1
SCC 9312 : 1
<java.util.stream.Streams$ConcatSpliterator: java.util.Spliterator trySplit()>
Counter value: 2
SCC 9313 : 1
<java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
Counter value: 1
SCC 9314 : 1
<java.util.stream.Nodes$ToArrayTask$OfRef: java.util.stream.Nodes$ToArrayTask$OfRef makeChild(int,int)>
Counter value: 1
SCC 9315 : 1
<java.lang.Thread: long getId()>
Counter value: 1
SCC 9316 : 1
<java.util.TreeMap$KeySpliterator: int characteristics()>
Counter value: 1
SCC 9317 : 1
<sun.reflect.UnsafeCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 9318 : 1
<java.lang.Character: char reverseBytes(char)>
Counter value: 1
SCC 9319 : 1
<java.util.stream.SliceOps$SliceTask: long completedSize(long)>
Counter value: 2
SCC 9320 : 1
<sun.net.sdp.SdpProvider: java.util.List loadRulesFromFile(java.lang.String)>
Counter value: 1
SCC 9321 : 1
<java.net.URI: boolean equal(java.lang.String,java.lang.String)>
Counter value: 1
SCC 9322 : 1
<sun.security.x509.CRLExtensions: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9323 : 1
<java.util.TreeMap$NavigableSubMap$SubMapEntryIterator: void remove()>
Counter value: 1
SCC 9324 : 1
<java.lang.ClassValue$ClassValueMap: void addToCache(java.lang.ClassValue$Entry)>
Counter value: 1
SCC 9325 : 1
<java.util.stream.Nodes$IntSpinedNodeBuilder: int[] asPrimitiveArray()>
Counter value: 1
SCC 9326 : 1
<java.lang.invoke.BruteArgumentMoverHandle: java.lang.invoke.MethodHandle cloneWithNewType(java.lang.invoke.MethodType)>
Counter value: 1
SCC 9327 : 1
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: boolean tryAdvance(java.util.function.Consumer)>
Counter value: 1
SCC 9328 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: java.lang.String getDisplayName(java.lang.String,java.util.Locale)>
Counter value: 2
SCC 9329 : 1
<java.lang.invoke.InvokeGenericHandle: java.lang.invoke.ThunkTable thunkTable()>
Counter value: 1
SCC 9330 : 1
<sun.util.PreHashedMap$1: void <init>(sun.util.PreHashedMap)>
Counter value: 1
SCC 9331 : 1
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void setBoolean(java.lang.Object,boolean)>
Counter value: 1
SCC 9332 : 5521
<java.nio.ByteBuffer: void <init>(int,int,int,int,byte[],int)>
<java.nio.HeapByteBuffer: void <init>(byte[],int,int)>
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>
<java.lang.StringCoding: char[] decode(java.nio.charset.Charset,byte[],int,int)>
<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>
<com.ibm.oti.util.Util: java.lang.String toString(byte[])>
<com.ibm.oti.vm.VM: java.lang.String[] getVMArgs()>
<java.lang.ClassLoader: void initializeClassLoaderAssertStatus()>
<java.lang.ClassLoader: void <init>(java.lang.Void,java.lang.String,java.lang.ClassLoader)>
<java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>
<java.lang.InternalAnonymousClassLoader: void <init>()>
<java.lang.ClassLoader: void initializeClassLoaders()>
<java.lang.Thread: void initialize(boolean,java.lang.ThreadGroup,java.lang.Thread,java.security.AccessControlContext,boolean)>
<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,java.security.AccessControlContext,boolean)>
<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)>
<java.lang.UNIXProcess: java.lang.Thread lambda$null$0(java.lang.ThreadGroup,java.lang.Runnable)>
<java.lang.UNIXProcess$lambda_null_0__22: java.lang.Thread newThread(java.lang.Runnable)>
<java.util.concurrent.ThreadPoolExecutor$Worker: void <init>(java.util.concurrent.ThreadPoolExecutor,java.lang.Runnable)>
<java.util.concurrent.ThreadPoolExecutor: boolean addWorker(java.lang.Runnable,boolean)>
<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
<java.lang.UNIXProcess: void initStreams(int[])>
<java.lang.UNIXProcess: java.lang.Void lambda$new$2(int[])>
<java.lang.UNIXProcess$lambda_new_2__26: java.lang.Object run()>
<java.lang.UNIXProcess: void <init>(byte[],byte[],int,byte[],int,byte[],int[],boolean)>
<java.lang.ProcessImpl: java.lang.Process start(java.lang.String[],java.util.Map,java.lang.String,java.lang.ProcessBuilder$Redirect[],boolean)>
<java.lang.ProcessBuilder: java.lang.Process start()>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String)>
<sun.net.www.MimeLauncher: void run()>
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void <init>()>
<sun.security.provider.SeedGenerator: void <clinit>()>
<sun.security.provider.SeedGenerator: byte[] access$100(long)>
<sun.security.provider.SeedGenerator$1: java.lang.Void run()>
<sun.security.provider.SeedGenerator$1: java.lang.Object run()>
<sun.security.provider.SeedGenerator: byte[] getSystemEntropy()>
<sun.security.provider.SecureRandom$SeederHolder: void <clinit>()>
<sun.security.provider.SecureRandom$SeederHolder: sun.security.provider.SecureRandom access$100()>
<sun.security.provider.SecureRandom: void engineNextBytes(byte[])>
<java.security.SecureRandom: void nextBytes(byte[])>
<java.security.SecureRandom: int next(int)>
<java.util.Random: long nextLong()>
<java.nio.file.TempFileHelper: java.nio.file.Path generatePath(java.lang.String,java.lang.String,java.nio.file.Path)>
<java.nio.file.TempFileHelper: java.nio.file.Path create(java.nio.file.Path,java.lang.String,java.lang.String,boolean,java.nio.file.attribute.FileAttribute[])>
<java.nio.file.TempFileHelper: java.nio.file.Path createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])>
<java.nio.file.Files: java.nio.file.Path createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])>
<sun.net.www.protocol.jar.URLJarFile$1: java.util.jar.JarFile run()>
<sun.net.www.protocol.jar.URLJarFile$1: java.lang.Object run()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>
<sun.util.locale.provider.SPILocaleProviderAdapter: java.util.spi.LocaleServiceProvider findInstalledProvider(java.lang.Class)>
<sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
<sun.util.locale.provider.LocaleServiceProviderPool: void <init>(java.lang.Class)>
<sun.util.locale.provider.LocaleServiceProviderPool: sun.util.locale.provider.LocaleServiceProviderPool getPool(java.lang.Class)>
<sun.util.locale.provider.CalendarDataUtility: java.lang.String retrieveJavaTimeFieldValueName(java.lang.String,int,int,int,java.util.Locale)>
<java.time.format.DateTimeTextProvider: java.lang.Object createStore(java.time.temporal.TemporalField,java.util.Locale)>
<java.time.format.DateTimeTextProvider: java.lang.Object findStore(java.time.temporal.TemporalField,java.util.Locale)>
<java.time.format.DateTimeTextProvider: java.util.Iterator getTextIterator(java.time.temporal.TemporalField,java.time.format.TextStyle,java.util.Locale)>
<java.time.format.DateTimeTextProvider: java.util.Iterator getTextIterator(java.time.chrono.Chronology,java.time.temporal.TemporalField,java.time.format.TextStyle,java.util.Locale)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeParseContext parseUnresolved0(java.lang.CharSequence,java.text.ParsePosition)>
<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseResolved0(java.lang.CharSequence,java.text.ParsePosition)>
<java.time.format.DateTimeFormatter: java.lang.Object parse(java.lang.CharSequence,java.time.temporal.TemporalQuery)>
<java.time.LocalDate: java.time.LocalDate parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>
<openj9.internal.security.RestrictedSecurity: boolean isPolicySunset(java.lang.String)>
<openj9.internal.security.RestrictedSecurity: void restrictsCheck()>
<openj9.internal.security.RestrictedSecurity: boolean configure(java.util.Properties)>
<java.security.Security: void initialize()>
<java.security.Security: void access$000()>
<java.security.Security$1: java.lang.Void run()>
<java.security.Security$1: java.lang.Object run()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<java.nio.charset.Charset: java.nio.charset.Charset lookupViaProviders(java.lang.String)>
<java.nio.charset.Charset: java.nio.charset.Charset lookup2(java.lang.String)>
<java.nio.charset.Charset: java.nio.charset.Charset lookup(java.lang.String)>
<java.nio.charset.Charset: boolean isSupported(java.lang.String)>
<sun.nio.cs.StreamDecoder: sun.nio.cs.StreamDecoder forInputStreamReader(java.io.InputStream,java.lang.Object,java.lang.String)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<javax.crypto.CryptoPermissions: void load(java.io.InputStream)>
<javax.crypto.JarVerifier: void verify()>
<javax.crypto.JceSecurity: javax.crypto.CryptoPermissions verifyExemptJar(java.net.URL)>
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermissions getAppPermissions(java.net.URL)>
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getCryptoPermission(java.lang.String)>
<javax.crypto.Cipher: javax.crypto.CryptoPermission getConfiguredPermission(java.lang.String)>
<javax.crypto.Cipher: void initCryptoPermission()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>
<java.security.Signature$Delegate: java.security.SignatureSpi newInstance(java.security.Provider$Service)>
<java.security.Signature$Delegate: void chooseFirstProvider()>
<java.security.Signature$Delegate: void engineUpdate(byte[],int,int)>
<java.security.Signature: void update(byte[],int,int)>
<java.security.Signature: void update(byte[])>
<sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>
<sun.security.pkcs.PKCS7: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.SignerInfo,byte[])>
<sun.security.pkcs.PKCS7: sun.security.pkcs.SignerInfo[] verify(byte[])>
<sun.security.pkcs.SignerInfo: java.security.Timestamp getTimestamp()>
<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>
<sun.security.util.SignatureFileVerifier: void processImpl(java.util.Hashtable,java.util.List,java.lang.String)>
<sun.security.util.SignatureFileVerifier: void process(java.util.Hashtable,java.util.List,java.lang.String)>
<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>
<java.util.jar.JarVerifier: void update(int,sun.security.util.ManifestEntryVerifier)>
<java.util.jar.JarVerifier$VerifierStream: int read()>
<java.io.DataInputStream: int readInt()>
<java.util.Currency$1: java.lang.Void run()>
<java.util.Currency$1: java.lang.Object run()>
<java.util.Currency: void <clinit>()>
<java.util.Currency: long[] access$100(java.io.DataInputStream,int)>
<java.security.Policy: java.security.Policy getPolicyNoCheck()>
<java.security.ProtectionDomain: boolean implies(java.security.Permission)>
<java.security.AccessController: boolean checkPermissionHelper(java.security.Permission,java.security.AccessControlContext,java.security.DomainCombiner,java.lang.Object[],int,java.security.AccessControlContext$AccessCache,java.lang.Object[],int,int)>
<java.security.AccessController: void checkPermission(java.security.Permission)>
<java.lang.SecurityManager: void checkPermission(java.security.Permission)>
<com.ibm.oti.vm.AbstractClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>
<java.util.ResourceBundle$RBClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<sun.text.normalizer.ICUData: java.io.InputStream getStream(java.lang.Class,java.lang.String,boolean)>
<sun.text.normalizer.ICUData: java.io.InputStream getStream(java.lang.String)>
<sun.text.normalizer.UBiDiProps: void <init>()>
<sun.text.normalizer.UBiDiProps: sun.text.normalizer.UBiDiProps getSingleton()>
<sun.text.normalizer.UCharacter: void <clinit>()>
<sun.text.normalizer.UCharacter: sun.text.normalizer.VersionInfo getAge(int)>
<sun.text.normalizer.UnicodeSet$VersionFilter: boolean contains(int)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet applyFilter(sun.text.normalizer.UnicodeSet$Filter,int)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet applyPropertyAlias(java.lang.String,java.lang.String,sun.text.normalizer.SymbolTable)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet applyPropertyPattern(java.lang.String,java.text.ParsePosition,sun.text.normalizer.SymbolTable)>
<sun.text.normalizer.UnicodeSet: void applyPropertyPattern(sun.text.normalizer.RuleCharacterIterator,java.lang.StringBuffer,sun.text.normalizer.SymbolTable)>
<sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet applyPattern(java.lang.String,java.text.ParsePosition,sun.text.normalizer.SymbolTable,int)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet applyPattern(java.lang.String)>
<sun.text.normalizer.NormalizerImpl: sun.text.normalizer.UnicodeSet internalGetNXUnicode(int)>
<sun.text.normalizer.NormalizerImpl: sun.text.normalizer.UnicodeSet internalGetNX(int)>
<sun.text.normalizer.NormalizerImpl: sun.text.normalizer.UnicodeSet getNX(int)>
<sun.text.normalizer.NormalizerBase: java.lang.String decompose(java.lang.String,boolean,int)>
<sun.text.normalizer.NormalizerBase$NFDMode: java.lang.String normalize(java.lang.String,int)>
<sun.text.normalizer.NormalizerBase: java.lang.String normalize(java.lang.String,java.text.Normalizer$Form,int)>
<sun.text.normalizer.NormalizerBase: java.lang.String normalize(java.lang.String,java.text.Normalizer$Form)>
<java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>
<java.util.regex.Pattern: java.lang.String composeOneStep(java.lang.String)>
<java.util.regex.Pattern: java.lang.String produceEquivalentAlternation(java.lang.String)>
<java.util.regex.Pattern: void normalize()>
<java.util.regex.Pattern: void compile()>
<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<java.net.URLClassLoader: void <clinit>()>
<java.net.URLClassLoader$6: sun.misc.URLClassPath getURLClassPath(java.net.URLClassLoader)>
<sun.misc.Launcher$AppClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>
<sun.misc.Launcher$AppClassLoader$1: sun.misc.Launcher$AppClassLoader run()>
<sun.misc.Launcher$AppClassLoader$1: java.lang.Object run()>
<sun.misc.Launcher$AppClassLoader: java.lang.ClassLoader getAppClassLoader(java.lang.ClassLoader)>
<sun.misc.Launcher: void <init>()>
<sun.misc.Launcher: void <clinit>()>
<sun.misc.Launcher: sun.misc.Launcher getLauncher()>
<sun.misc.ExtensionDependency: boolean installExtension(sun.misc.ExtensionInfo,sun.misc.ExtensionInfo)>
<sun.misc.ExtensionDependency: boolean checkExtensionAgainst(java.lang.String,java.util.jar.Attributes,java.io.File)>
<sun.misc.ExtensionDependency: boolean checkExtensionAgainstInstalled(java.lang.String,java.util.jar.Attributes)>
<sun.misc.ExtensionDependency: boolean checkExtension(java.lang.String,java.util.jar.Attributes)>
<sun.misc.ExtensionDependency: boolean checkExtensions(java.util.jar.JarFile)>
<sun.misc.ExtensionDependency: boolean checkExtensionsDependencies(java.util.jar.JarFile)>
<sun.misc.URLClassPath$JarLoader: void parseExtensionsDependencies()>
<sun.misc.URLClassPath$JarLoader: java.net.URL[] getClassPath()>
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>
<sun.misc.URLClassPath: boolean ensureLoaderOpened(int)>
<sun.misc.URLClassPath: int[] getLookupCache(java.lang.String)>
<sun.misc.URLClassPath: java.net.URL findResource(java.lang.String,boolean)>
<java.net.URLClassLoader$1: java.net.URL run()>
<java.net.URLClassLoader$1: java.lang.Object run()>
<java.net.URLClassLoader: java.net.URL findResource(java.lang.String)>
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
<java.util.ResourceBundle$RBClassLoader: java.net.URL getResource(java.lang.String)>
<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>
<javax.crypto.JceSecurity: void setupJurisdictionPolicies()>
<javax.crypto.JceSecurity: void access$000()>
<javax.crypto.JceSecurity$1: java.lang.Object run()>
<javax.crypto.JceSecurity: void <clinit>()>
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)>
<javax.crypto.Cipher: void chooseFirstProvider()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<java.security.Signature$CipherAdapter: boolean engineVerify(byte[])>
<java.security.Signature$Delegate: boolean engineVerify(byte[])>
<java.security.Signature: boolean verify(byte[])>
<javax.crypto.Cipher: byte[] update(byte[],int,int)>
<java.security.Signature$CipherAdapter: void engineUpdate(byte[],int,int)>
<javax.crypto.JceSecurity: boolean isRestricted()>
<javax.crypto.JceSecurity: java.net.URL getCodeBase(java.lang.Class)>
<javax.crypto.JceSecurity: java.lang.Exception getVerificationResult(java.security.Provider)>
<javax.crypto.JceSecurity: boolean canUseProvider(java.security.Provider)>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>
<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>
<javax.crypto.Cipher: void init(int,java.security.Key)>
<java.security.Signature$CipherAdapter: void engineInitVerify(java.security.PublicKey)>
<java.security.SignatureSpi: void engineInitVerify(java.security.PublicKey,java.security.spec.AlgorithmParameterSpec)>
<java.security.Signature$Delegate: void engineInitVerify(java.security.PublicKey,java.security.spec.AlgorithmParameterSpec)>
<java.security.Signature: void initVerify(java.security.PublicKey,java.security.spec.AlgorithmParameterSpec)>
<java.security.Signature$1: void initVerify(java.security.Signature,java.security.PublicKey,java.security.spec.AlgorithmParameterSpec)>
<sun.security.util.SignatureUtil: void initVerifyWithParam(java.security.Signature,java.security.PublicKey,java.security.spec.AlgorithmParameterSpec)>
<java.security.Signature$Delegate: void tryOperation(java.security.SignatureSpi,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<java.security.Signature$CipherAdapter: void engineInitSign(java.security.PrivateKey)>
<java.security.Signature$CipherAdapter: void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)>
<java.security.SignatureSpi: void engineInitSign(java.security.PrivateKey,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<javax.crypto.JceSecurity: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>
<javax.crypto.JceSecurity: java.net.URL access$100()>
<javax.crypto.JceSecurity$2: java.net.URL run()>
<javax.crypto.JceSecurity$2: java.lang.Object run()>
<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>
<java.util.ServiceLoader$LazyIterator: java.lang.Object next()>
<java.util.ServiceLoader$1: java.lang.Object next()>
<sun.util.locale.provider.SPILocaleProviderAdapter$1: java.util.spi.LocaleServiceProvider run()>
<sun.util.locale.provider.SPILocaleProviderAdapter$1: java.lang.Object run()>
<java.util.ResourceBundle: void <clinit>()>
<java.util.ResourceBundle$CacheKey: java.lang.Object clone()>
<java.util.ResourceBundle: java.util.ResourceBundle putBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle,java.util.ResourceBundle$Control)>
<java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>
<java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>
<com.ibm.oti.util.PriviAction: java.lang.Object run()>
<com.ibm.oti.util.Msg: void <clinit>()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.time.zone.TzdbZoneRulesProvider: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<sun.security.util.ObjectIdentifier: java.lang.String toString()>
<sun.security.x509.Extension: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>
<java.util.jar.JarVerifier: void beginEntry(java.util.jar.JarEntry,sun.security.util.ManifestEntryVerifier)>
<java.util.jar.JarVerifier$VerifierStream: void <init>(java.util.jar.Manifest,java.util.jar.JarEntry,java.io.InputStream,java.util.jar.JarVerifier)>
<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<sun.net.www.protocol.jar.JarURLConnection: java.io.InputStream getInputStream()>
<sun.misc.URLClassPath$Loader: sun.misc.Resource getResource(java.lang.String,boolean)>
<sun.misc.URLClassPath: sun.misc.Resource getResource(java.lang.String,boolean,java.lang.ClassLoader,boolean)>
<java.net.URLClassLoader$ClassFinder: java.lang.Object run()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>
<sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>
<sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean)>
<sun.misc.URLClassPath$JarLoader: java.net.URL findResource(java.lang.String,boolean)>
<sun.misc.URLClassPath$1: boolean next()>
<sun.misc.URLClassPath$1: boolean hasMoreElements()>
<java.net.URLClassLoader$2$1: java.net.URL run()>
<java.net.URLClassLoader$2$1: java.lang.Object run()>
<java.net.URLClassLoader$2: boolean next()>
<java.net.URLClassLoader$2: java.net.URL nextElement()>
<java.net.URLClassLoader$2: java.lang.Object nextElement()>
<java.util.ServiceLoader$LazyIterator: boolean hasNextService()>
<java.util.ServiceLoader$LazyIterator: boolean hasNext()>
<java.util.ServiceLoader$1: boolean hasNext()>
<java.net.InetAddress$3: sun.net.spi.nameservice.NameService run()>
<java.net.InetAddress$3: java.lang.Object run()>
<java.net.InetAddress: sun.net.spi.nameservice.NameService createNSProvider(java.lang.String)>
<java.net.InetAddress: void <clinit>()>
<java.net.InetAddress: void access$200(java.lang.String)>
<java.net.InetAddress$2: java.net.InetAddress[] lookupAllHostAddr(java.lang.String)>
<java.net.InetAddress: java.net.InetAddress[] getAddressesFromNameService(java.lang.String,java.net.InetAddress)>
<java.net.InetAddress$NameServiceAddresses: java.net.InetAddress[] get()>
<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean,boolean)>
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String,java.net.InetAddress)>
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<java.net.SocketPermission: void getCanonName()>
<java.net.SocketPermission: boolean impliesIgnoreMask(java.net.SocketPermission)>
<java.net.SocketPermission: boolean implies(java.security.Permission)>
<com.ibm.oti.shared.SharedClassPermissionCollection: boolean implies(java.security.Permission)>
<sun.security.provider.PolicyFile: boolean implies(java.security.ProtectionDomain,java.security.Permission)>
<java.security.Permissions: boolean implies(java.security.Permission)>
<java.security.CodeSource: boolean matchLocation(java.security.CodeSource)>
<java.security.CodeSource: boolean implies(java.security.CodeSource)>
<sun.security.provider.PolicyFile$7: java.lang.Boolean run()>
<sun.security.provider.PolicyFile$7: java.lang.Object run()>
<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>
<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.Permissions,java.security.ProtectionDomain)>
<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>
<java.security.ProtectionDomain$1: java.security.PermissionCollection run()>
<java.security.ProtectionDomain$1: java.lang.Object run()>
<java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>
<java.security.ProtectionDomain: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>
<java.util.Collections$SynchronizedMap: java.lang.String toString()>
<sun.security.x509.CertificateExtensions: java.lang.String toString()>
<sun.security.pkcs.PKCS9Attribute: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>
<java.text.MessageFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<java.text.Format: java.lang.String format(java.lang.Object)>
<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>
<sun.security.provider.PolicyParser: void skipEntry()>
<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>
<sun.security.provider.PolicyParser: void read(java.io.Reader)>
<sun.security.provider.PolicyFile: boolean init(java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>
<sun.security.provider.PolicyFile: boolean access$400(sun.security.provider.PolicyFile,java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>
<sun.security.provider.PolicyFile$2: java.lang.Void run()>
<sun.security.provider.PolicyFile$2: java.lang.Object run()>
<sun.security.provider.PolicyFile: void initPolicyFile(sun.security.provider.PolicyFile$PolicyInfo,java.net.URL)>
<sun.security.provider.PolicyFile: void init(java.net.URL)>
<sun.security.provider.PolicyFile: void <init>()>
<sun.security.provider.PolicyFile$3: java.lang.Boolean run()>
<sun.security.provider.PolicyFile$3: java.lang.Object run()>
<sun.security.provider.PolicyFile: boolean initPolicyFile(java.lang.String,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>
<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>
<sun.security.provider.PolicyParser: void parseKeyStoreEntry()>
<sun.security.provider.PolicyParser: void parseStorePassURL()>
<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$PermissionEntry parsePermissionEntry()>
<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>
<sun.security.provider.PolicyParser: boolean peekAndMatch(java.lang.String)>
<sun.security.provider.PolicyParser: java.util.Map parseProperties(java.lang.String)>
<sun.misc.ExtensionInfo: int convertToken(java.lang.String)>
<sun.misc.ExtensionInfo: int strictCompareExtensionVersion(java.lang.String,java.lang.String)>
<sun.misc.ExtensionInfo: int compareExtensionVersion(java.lang.String,java.lang.String)>
<sun.misc.ExtensionInfo: int isCompatibleWith(sun.misc.ExtensionInfo)>
<sun.security.provider.PolicyFile: void expandPermissionName(sun.security.provider.PolicyParser$PermissionEntry,java.security.KeyStore)>
<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>
<java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
<sun.util.locale.provider.LocaleResources: java.lang.String getDateTimePattern(java.lang.String,int,int,java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getDateTimePattern(int,int,java.util.Calendar)>
<sun.util.locale.provider.DateFormatProviderImpl: java.text.DateFormat getInstance(int,int,java.util.Locale)>
<sun.util.locale.provider.DateFormatProviderImpl: java.text.DateFormat getTimeInstance(int,java.util.Locale)>
<java.text.DateFormat: java.text.DateFormat get(sun.util.locale.provider.LocaleProviderAdapter,int,int,java.util.Locale)>
<java.text.DateFormat: java.text.DateFormat get(int,int,int,java.util.Locale)>
<java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>
<java.text.MessageFormat: void makeFormat(int,int,java.lang.StringBuilder[])>
<java.text.MessageFormat: void applyPattern(java.lang.String)>
<java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>
<java.text.MessageFormat: void <init>(java.lang.String)>
<sun.security.provider.PolicyParser$ParsingException: void <init>(int,java.lang.String)>
<sun.security.provider.PolicyParser$DomainEntry: void add(sun.security.provider.PolicyParser$KeyStoreEntry)>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>
<sun.util.locale.provider.DateFormatProviderImpl: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
<sun.util.locale.provider.DateFormatProviderImpl: java.text.DateFormat getDateInstance(int,java.util.Locale)>
<java.text.Format: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>
<java.text.AttributeEntry: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>
<java.security.PermissionsHash: boolean implies(java.security.Permission)>
<java.security.BasicPermissionCollection: boolean implies(java.security.Permission)>
<java.net.SocketPermissionCollection: boolean implies(java.security.Permission)>
<java.net.SocketPermission: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<java.util.Properties: void enumerateStringProperties(java.util.Hashtable)>
<java.util.Properties: java.util.Set stringPropertyNames()>
<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>
<java.security.Provider: java.lang.Object get(java.lang.Object)>
<java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>
<sun.util.locale.provider.TimeZoneNameProviderImpl: java.lang.String[][] getZoneStrings(java.util.Locale)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] getZoneStrings(java.util.Locale)>
<java.text.DateFormatSymbols: java.lang.String[][] getZoneStringsImpl(boolean)>
<java.text.DateFormatSymbols: java.lang.String[][] getZoneStringsWrapper()>
<java.text.DateFormatSymbols: int getZoneIndex(java.lang.String)>
<java.text.SimpleDateFormat: int subParseZoneString(java.lang.String,int,java.text.CalendarBuilder)>
<java.text.SimpleDateFormat: int subParse(java.lang.String,int,int,int,boolean,boolean[],java.text.ParsePosition,boolean,java.text.CalendarBuilder)>
<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<java.util.Currency: boolean isPastCutoverDate(java.lang.String)>
<java.util.Currency: void replaceCurrencyData(java.util.regex.Pattern,java.lang.String,java.lang.String)>
<java.util.Currency: void access$300(java.util.regex.Pattern,java.lang.String,java.lang.String)>
<java.text.SimpleDateFormat: void subFormat(int,int,java.text.Format$FieldDelegate,java.lang.StringBuffer,boolean)>
<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.Format$FieldDelegate)>
<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<sun.security.util.DerOutputStream: void putTime(java.util.Date,byte)>
<sun.security.util.DerOutputStream: void putGeneralizedTime(java.util.Date)>
<sun.security.x509.X509CRLEntryImpl: void encode(sun.security.util.DerOutputStream)>
<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded0()>
<sun.security.x509.X509CRLEntryImpl: int compareTo(sun.security.x509.X509CRLEntryImpl)>
<sun.security.x509.X509CRLEntryImpl: int compareTo(java.lang.Object)>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>
<java.util.ComparableTimSort: void mergeAt(int)>
<java.util.ComparableTimSort: void mergeForceCollapse()>
<java.util.ComparableTimSort: void sort(java.lang.Object[],int,int,java.lang.Object[],int,int)>
<java.util.Arrays: void sort(java.lang.Object[])>
<java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
<java.util.Arrays$ArrayList: void sort(java.util.Comparator)>
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<sun.net.www.protocol.file.FileURLConnection: java.io.InputStream getInputStream()>
<sun.misc.URLClassPath$Loader: java.net.URL findResource(java.lang.String,boolean)>
<java.net.URL: java.io.InputStream openStream()>
<sun.security.provider.SeedGenerator$URLSeedGenerator$1: java.io.InputStream run()>
<sun.security.provider.SeedGenerator$URLSeedGenerator$1: java.lang.Object run()>
<sun.security.provider.SeedGenerator$URLSeedGenerator: void init()>
<sun.security.provider.SeedGenerator$URLSeedGenerator: void <init>(java.lang.String)>
<sun.security.provider.NativeSeedGenerator: void <init>(java.lang.String)>
<sun.security.util.PolicyUtil: java.io.InputStream getInputStream(java.net.URL)>
<sun.security.util.PolicyUtil: java.security.KeyStore getKeyStore(java.net.URL,java.lang.String,java.lang.String,java.lang.String,java.lang.String,sun.security.util.Debug)>
<java.util.ServiceLoader: java.util.Iterator parse(java.lang.Class,java.net.URL)>
<java.util.ServiceLoader: java.util.Iterator access$200(java.util.ServiceLoader,java.lang.Class,java.net.URL)>
<sun.misc.URLClassPath$Loader$1: java.io.InputStream getInputStream()>
<sun.misc.Resource: java.io.InputStream cachedInputStream()>
<sun.misc.Resource: java.nio.ByteBuffer getByteBuffer()>
<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,sun.misc.Resource)>
<java.net.URLClassLoader: java.lang.Class access$400(java.net.URLClassLoader,java.lang.String,sun.misc.Resource)>
<sun.misc.Resource: byte[] getBytes()>
<sun.misc.URLClassPath$JarLoader$2: byte[] getBytes()>
<sun.net.www.protocol.jar.URLJarFile: java.util.jar.JarFile retrieve(java.net.URL,sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController)>
<sun.net.www.protocol.jar.URLJarFile: java.util.jar.JarFile getJarFile(java.net.URL,sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController)>
<sun.net.www.protocol.jar.JarFileFactory: java.util.jar.JarFile get(java.net.URL,boolean)>
<sun.net.www.protocol.jar.JarURLConnection: void connect()>
<sun.net.www.protocol.jar.JarURLConnection: long getContentLengthLong()>
<sun.net.www.protocol.jar.JarURLConnection: int getContentLength()>
<sun.misc.URLClassPath$Loader$1: int getContentLength()>
<sun.net.www.protocol.jar.JarURLConnection: java.util.jar.JarEntry getJarEntry()>
<sun.net.www.protocol.jar.JarURLConnection: java.util.jar.JarFile getJarFile()>
<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>
<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile access$900(sun.misc.URLClassPath$JarLoader,java.net.URL)>
<sun.misc.URLClassPath$JarLoader$1: java.lang.Void run()>
<sun.misc.URLClassPath$JarLoader$1: java.lang.Object run()>
<sun.misc.URLClassPath$JarLoader: void ensureOpen()>
<sun.misc.URLClassPath$JarLoader: void close()>
<java.io.FileDescriptor: void closeAll(java.io.Closeable)>
<java.io.FileOutputStream: void close()>
<java.lang.UNIXProcess$ProcessPipeOutputStream: void processExited()>
<java.lang.UNIXProcess: void lambda$initStreams$3()>
<java.lang.UNIXProcess$lambda_initStreams_3__28: void run()>
<java.util.concurrent.ThreadPoolExecutor: void runWorker(java.util.concurrent.ThreadPoolExecutor$Worker)>
<java.util.concurrent.ThreadPoolExecutor$Worker: void run()>
<java.lang.Thread: void run()>
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>
<sun.misc.InnocuousThread: void run()>
<java.lang.UNIXProcess: void lambda$initStreams$5()>
<java.lang.UNIXProcess$lambda_initStreams_5__27: void run()>
<java.io.FilterOutputStream: void close()>
<java.io.FileInputStream: void close()>
<java.lang.Package: java.util.jar.Manifest loadManifest(java.lang.String)>
<java.lang.Package: java.util.jar.Manifest access$100(java.lang.String)>
<java.lang.Package$1: java.lang.Package run()>
<java.lang.Package$1: java.lang.Object run()>
<java.lang.Package: java.lang.Package defineSystemPackage(java.lang.String,java.lang.String)>
<java.lang.Package: java.lang.Package getSystemPackage(java.lang.String)>
<java.lang.VMAccess: java.lang.Package getSystemPackage(java.lang.String)>
<com.ibm.oti.vm.BootstrapClassLoader: java.lang.Package getPackage(java.lang.String)>
<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>
<java.net.URLClassLoader: java.lang.Package getAndVerifyPackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>
<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,byte[],java.security.CodeSource,java.util.jar.Manifest)>
<java.net.URLClassLoader: java.lang.Class findClass(java.lang.String)>
<java.lang.ClassLoader: java.lang.Class loadClassHelper(java.lang.String,boolean,boolean)>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>
<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<sun.net.www.protocol.file.Handler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>
<sun.net.www.protocol.file.Handler: java.net.URLConnection openConnection(java.net.URL)>
<java.net.URL: java.net.URLConnection openConnection()>
<com.ibm.oti.vm.AbstractClassLoader: java.net.URL findResource(java.lang.String)>
<sun.misc.URLClassPath: void check(java.net.URL)>
<sun.misc.URLClassPath$JarLoader: sun.misc.Resource checkResource(java.lang.String,boolean,java.util.jar.JarEntry)>
<sun.misc.URLClassPath$FileLoader: sun.misc.Resource getResource(java.lang.String,boolean)>
<sun.misc.URLClassPath$FileLoader: java.net.URL findResource(java.lang.String,boolean)>
<sun.misc.URLClassPath: java.net.URL checkURL(java.net.URL)>
<com.ibm.oti.vm.AbstractClassLoader: java.util.Enumeration findResources(java.lang.String)>
<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>
<sun.net.www.protocol.jar.JarURLConnection: void <init>(java.net.URL,sun.net.www.protocol.jar.Handler)>
<sun.net.www.protocol.jar.Handler: java.net.URLConnection openConnection(java.net.URL)>
<sun.net.www.protocol.jar.JarFileFactory: java.net.URLConnection getConnection(java.util.jar.JarFile)>
<sun.net.www.protocol.jar.JarFileFactory: java.security.Permission getPermission(java.util.jar.JarFile)>
<sun.net.www.protocol.jar.JarFileFactory: java.util.jar.JarFile getCachedJarFile(java.net.URL)>
<javax.crypto.JarVerifier$1: java.util.jar.JarFile run()>
<javax.crypto.JarVerifier$1: java.lang.Object run()>
<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>
<java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>
<java.security.SecureClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>
<java.security.SecureClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.CodeSource)>
<sun.misc.Launcher$AppClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>
<sun.net.www.ParseUtil: java.net.URL fileToEncodedURL(java.io.File)>
<sun.security.provider.PolicyFile: java.security.CodeSource canonicalizeCodebase(java.security.CodeSource,boolean)>
<sun.security.provider.PolicyFile: java.security.CodeSource getCodeSource(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>
<sun.security.provider.PolicyFile: java.security.CodeSource access$700(sun.security.provider.PolicyFile,java.security.CodeSource,boolean)>
<sun.security.provider.PolicyFile$4: java.lang.Void run()>
<sun.security.provider.PolicyFile$4: java.lang.Object run()>
<sun.security.provider.PolicyFile: void initStaticPolicy(sun.security.provider.PolicyFile$PolicyInfo)>
<sun.security.provider.PolicyFile: void access$500(sun.security.provider.PolicyFile,sun.security.provider.PolicyFile$PolicyInfo)>
<sun.security.provider.PolicyFile$5: java.security.CodeSource run()>
<sun.security.provider.PolicyFile$5: java.lang.Object run()>
<sun.misc.Launcher: java.net.URL getFileURL(java.io.File)>
<sun.misc.Launcher$ExtClassLoader: java.net.URL[] getExtURLs(java.io.File[])>
<sun.misc.Launcher$ExtClassLoader: void <init>(java.io.File[])>
<sun.misc.Launcher$ExtClassLoader$1: sun.misc.Launcher$ExtClassLoader run()>
<sun.misc.Launcher$ExtClassLoader$1: java.lang.Object run()>
<sun.misc.Launcher$ExtClassLoader: sun.misc.Launcher$ExtClassLoader createExtClassLoader()>
<sun.misc.Launcher$ExtClassLoader: sun.misc.Launcher$ExtClassLoader getExtClassLoader()>
<sun.misc.Launcher: java.net.URL[] pathToURLs(java.io.File[])>
<sun.misc.Launcher: java.net.URL[] access$400(java.io.File[])>
<sun.misc.ExtensionDependency$4: java.net.URL run()>
<sun.misc.ExtensionDependency$4: java.lang.Object run()>
<sun.misc.ExtensionDependency: java.lang.Boolean addNewExtensionsToClassLoader(sun.misc.Launcher$ExtClassLoader)>
<sun.misc.URLClassPath$JarLoader: void <init>(java.net.URL,java.net.URLStreamHandler,java.util.HashMap,java.security.AccessControlContext,boolean)>
<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>
<sun.misc.URLClassPath$3: java.lang.Object run()>
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(java.net.URL)>
<sun.misc.URLClassPath$JarLoader$3: sun.misc.URLClassPath$JarLoader run()>
<sun.misc.URLClassPath$JarLoader$3: java.lang.Object run()>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>
<java.net.URL: void <init>(java.net.URL,java.lang.String)>
<sun.misc.URLClassPath$JarLoader: java.net.URL tryResolveFile(java.net.URL,java.lang.String)>
<sun.misc.URLClassPath$JarLoader: java.net.URL tryResolve(java.net.URL,java.lang.String)>
<sun.misc.URLClassPath$JarLoader: java.net.URL[] parseClassPath(java.net.URL,java.lang.String)>
<sun.misc.URLClassPath$JarLoader: java.net.URL tryResolveNonFile(java.net.URL,java.lang.String)>
<java.net.URL: void <init>(java.lang.String)>
<com.ibm.oti.shared.SharedClassAbstractHelper: java.net.URL getURLToCheck(java.net.URL)>
<com.ibm.oti.shared.SharedClassAbstractHelper: boolean validateURL(java.net.URL,boolean)>
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: boolean storeSharedClass(java.lang.String,java.lang.Class,int)>
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: boolean storeSharedClass(java.lang.Class,int)>
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: void setClasspath(java.net.URL[])>
<sun.misc.URLClassPath: void updateClasspathWithSharedClassesHelper(int)>
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: void initializeURLs()>
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: void <init>(java.lang.ClassLoader,java.net.URL[],int,boolean,boolean)>
<com.ibm.oti.shared.SharedClassHelperFactoryImpl: com.ibm.oti.shared.SharedClassURLClasspathHelper getURLClasspathHelper(java.lang.ClassLoader,java.net.URL[])>
<java.net.URLClassLoader: void initializeSharedClassesSupport(java.net.URL[])>
<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>
<sun.net.www.protocol.jar.Handler: java.lang.String parseAbsoluteSpec(java.lang.String)>
<sun.net.www.protocol.jar.Handler: void parseURL(java.net.URL,java.lang.String,int,int)>
<sun.net.www.protocol.jar.Handler: int hashCode(java.net.URL)>
<java.net.URL: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<java.time.zone.ZoneRulesProvider: void registerProvider0(java.time.zone.ZoneRulesProvider)>
<java.time.zone.ZoneRulesProvider: void registerProvider(java.time.zone.ZoneRulesProvider)>
<java.time.zone.ZoneRulesProvider$1: java.lang.Object run()>
<java.time.zone.ZoneRulesProvider: void <clinit>()>
<java.time.zone.ZoneRulesProvider: java.util.Set getAvailableZoneIds()>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>
<java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>
<java.time.ZoneRegion: java.time.ZoneRegion ofId(java.lang.String,boolean)>
<java.time.ZoneId: java.time.ZoneId ofWithPrefix(java.lang.String,int,boolean)>
<java.time.ZoneId: java.time.ZoneId of(java.lang.String,boolean)>
<java.time.ZoneId: java.time.ZoneId of(java.lang.String)>
<java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: int parseOffsetBased(java.time.format.DateTimeParseContext,java.lang.CharSequence,int,int,java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser)>
<java.time.zone.ZoneRulesProvider: java.time.zone.ZoneRulesProvider getProvider(java.lang.String)>
<java.time.zone.ZoneRulesProvider: java.time.zone.ZoneRules getRules(java.lang.String,boolean)>
<java.time.ZoneRegion: java.time.zone.ZoneRules getRules()>
<java.time.ZonedDateTime: java.time.ZonedDateTime create(long,int,java.time.ZoneId)>
<java.time.ZonedDateTime: java.time.ZonedDateTime ofInstant(java.time.Instant,java.time.ZoneId)>
<java.time.chrono.IsoChronology: java.time.ZonedDateTime zonedDateTime(java.time.Instant,java.time.ZoneId)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoZonedDateTime zonedDateTime(java.time.Instant,java.time.ZoneId)>
<java.time.format.Parsed: void resolveInstantFields0(java.time.ZoneId)>
<java.time.format.Parsed: void resolveInstantFields()>
<java.time.format.Parsed: void resolveFields()>
<java.time.format.Parsed: java.time.temporal.TemporalAccessor resolve(java.time.format.ResolverStyle,java.util.Set)>
<java.time.format.DateTimeParseContext: java.time.temporal.TemporalAccessor toResolved(java.time.format.ResolverStyle,java.util.Set)>
<java.time.format.DateTimePrintContext: java.time.temporal.TemporalAccessor adjust(java.time.temporal.TemporalAccessor,java.time.format.DateTimeFormatter)>
<java.time.format.DateTimePrintContext: void <init>(java.time.temporal.TemporalAccessor,java.time.format.DateTimeFormatter)>
<java.time.format.DateTimeFormatter: void formatTo(java.time.temporal.TemporalAccessor,java.lang.Appendable)>
<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>
<java.time.Instant: java.lang.String toString()>
<java.time.ZonedDateTime: java.time.ZonedDateTime ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)>
<java.time.ZonedDateTime: java.time.ZonedDateTime of(java.time.LocalDateTime,java.time.ZoneId)>
<java.time.LocalDateTime: java.time.ZonedDateTime atZone(java.time.ZoneId)>
<java.time.LocalDateTime: java.time.chrono.ChronoZonedDateTime atZone(java.time.ZoneId)>
<java.time.format.Parsed: void resolveInstant()>
<javax.crypto.Cipher$Transform: boolean matches(java.lang.String,java.lang.String)>
<javax.crypto.Cipher$Transform: int supports(java.security.Provider$Service,java.lang.String,java.lang.String)>
<javax.crypto.Cipher$Transform: int supportsMode(java.security.Provider$Service)>
<javax.crypto.Cipher$Transform: int supportsPadding(java.security.Provider$Service)>
<java.time.temporal.WeekFields: java.time.temporal.WeekFields of(java.time.DayOfWeek,int)>
<java.time.temporal.WeekFields: java.time.temporal.WeekFields of(java.util.Locale)>
<java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: java.time.format.DateTimeFormatterBuilder$DateTimePrinterParser printerParser(java.util.Locale)>
<java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.temporal.WeekFields: void <clinit>()>
<java.time.temporal.WeekFields$ComputedDayOfField: boolean isSupportedBy(java.time.temporal.TemporalAccessor)>
<java.time.LocalTime: boolean isSupported(java.time.temporal.TemporalField)>
<java.time.temporal.IsoFields$Field$4: boolean isSupportedBy(java.time.temporal.TemporalAccessor)>
<java.time.LocalDateTime: boolean isSupported(java.time.temporal.TemporalField)>
<java.time.temporal.ChronoField: boolean isSupportedBy(java.time.temporal.TemporalAccessor)>
<java.time.Instant: boolean isSupported(java.time.temporal.TemporalField)>
<java.time.format.DateTimePrintContext$1: boolean isSupported(java.time.temporal.TemporalField)>
<java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.time.temporal.TemporalQueries: java.time.ZoneOffset lambda$static$3(java.time.temporal.TemporalAccessor)>
<java.time.temporal.TemporalQueries$lambda_static_3__11: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
<java.time.format.DateTimePrintContext$1: java.lang.Object query(java.time.temporal.TemporalQuery)>
<java.time.format.DateTimeFormatterBuilder: java.time.ZoneId lambda$static$0(java.time.temporal.TemporalAccessor)>
<java.time.format.DateTimeFormatterBuilder$lambda_static_0__4: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
<java.time.Instant: java.lang.Object query(java.time.temporal.TemporalQuery)>
<java.time.LocalDate: java.time.LocalDate 'from'(java.time.temporal.TemporalAccessor)>
<java.time.chrono.IsoChronology: java.time.LocalDate date(java.time.temporal.TemporalAccessor)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate date(java.time.temporal.TemporalAccessor)>
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: int setValue(java.time.format.DateTimeParseContext,long,int,int)>
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: long getValue(java.time.format.DateTimePrintContext,long)>
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.time.temporal.WeekFields$ComputedDayOfField: int localizedWeekOfWeekBasedYear(java.time.temporal.TemporalAccessor)>
<java.time.temporal.WeekFields$ComputedDayOfField: long getFrom(java.time.temporal.TemporalAccessor)>
<java.time.ZonedDateTime: long getLong(java.time.temporal.TemporalField)>
<java.time.temporal.ChronoField: long getFrom(java.time.temporal.TemporalAccessor)>
<java.time.LocalTime: long getLong(java.time.temporal.TemporalField)>
<java.time.temporal.TemporalQueries: java.time.LocalDate lambda$static$5(java.time.temporal.TemporalAccessor)>
<java.time.temporal.TemporalQueries$lambda_static_5__13: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
<java.time.LocalTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
<java.time.temporal.TemporalQueries: java.time.chrono.Chronology lambda$static$1(java.time.temporal.TemporalAccessor)>
<java.time.temporal.TemporalQueries$lambda_static_1__9: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
<java.time.format.Parsed: java.lang.Object query(java.time.temporal.TemporalQuery)>
<java.time.chrono.Chronology: java.time.chrono.Chronology 'from'(java.time.temporal.TemporalAccessor)>
<java.time.temporal.IsoFields$Field: boolean isIso(java.time.temporal.TemporalAccessor)>
<java.time.temporal.IsoFields$Field: boolean access$100(java.time.temporal.TemporalAccessor)>
<java.time.temporal.IsoFields$Field$2: boolean isSupportedBy(java.time.temporal.TemporalAccessor)>
<java.time.temporal.IsoFields$Field$2: long getFrom(java.time.temporal.TemporalAccessor)>
<java.time.Instant: long getLong(java.time.temporal.TemporalField)>
<java.time.Instant: java.time.Instant 'from'(java.time.temporal.TemporalAccessor)>
<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(java.time.temporal.TemporalAccessor,char,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void printDateTime(java.lang.Object,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(java.lang.Object,java.util.Locale)>
<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>
<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<java.lang.Throwable: java.lang.String toString()>
<sun.security.provider.PolicyParser: java.lang.String getKeyStoreUrl()>
<java.lang.Throwable: void <init>(java.lang.Throwable)>
<java.lang.Error: void <init>(java.lang.Throwable)>
<java.lang.VirtualMachineError: void <init>(java.lang.Throwable)>
<java.lang.InternalError: void <init>(java.lang.Throwable)>
<java.text.DigitList: java.lang.Object clone()>
<java.text.DecimalFormat: java.lang.Object clone()>
<java.text.SimpleDateFormat: void initialize(java.util.Locale)>
<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
<sun.net.www.protocol.file.FileURLConnection: void initializeHeaders()>
<sun.net.www.protocol.file.FileURLConnection: long getContentLengthLong()>
<sun.net.www.protocol.file.FileURLConnection: int getContentLength()>
<sun.util.calendar.CalendarDate: java.lang.Object clone()>
<java.util.GregorianCalendar: java.lang.Object clone()>
<java.util.GregorianCalendar: int getWeekYear()>
<java.util.GregorianCalendar: int getActualMaximum(int)>
<java.util.GregorianCalendar: void pinDayOfMonth()>
<java.util.GregorianCalendar: void add(int,int)>
<sun.util.BuddhistCalendar: void add(int,int)>
<java.text.SimpleDateFormat: void initializeDefaultCentury()>
<sun.util.BuddhistCalendar: int getActualMaximum(int)>
<java.util.GregorianCalendar: void setWeekDate(int,int,int)>
<java.util.Calendar$Builder: java.util.Calendar build()>
<sun.util.locale.provider.CalendarProviderImpl: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>
<java.util.Calendar: java.util.Calendar createCalendar(java.util.TimeZone,java.util.Locale)>
<java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>
<java.text.SimpleDateFormat: void initializeCalendar(java.util.Locale)>
<java.text.CalendarBuilder: java.util.Calendar establish(java.util.Calendar)>
<java.util.GregorianCalendar: int getLeastMaximum(int)>
<java.util.GregorianCalendar: int getMaximum(int)>
<java.util.GregorianCalendar: void computeTime()>
<java.util.Calendar: void updateTime()>
<java.util.Calendar: void complete()>
<java.util.GregorianCalendar: void setGregorianChange(java.util.Date)>
<java.util.JapaneseImperialCalendar: void add(int,int)>
<java.util.GregorianCalendar: java.util.GregorianCalendar getNormalizedCalendar()>
<java.util.GregorianCalendar: int getActualMinimum(int)>
<java.util.Calendar: int get(int)>
<java.text.SimpleDateFormat: void parseAmbiguousDatesAsAfter(java.util.Date)>
<java.util.JapaneseImperialCalendar: java.lang.String getDisplayName(int,int,java.util.Locale)>
<sun.util.BuddhistCalendar: int get(int)>
<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>
<sun.util.BuddhistCalendar: java.lang.String getDisplayName(int,int,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(java.util.Calendar,char,java.util.Locale)>
<java.util.Calendar: long getTimeInMillis()>
<java.util.Date: sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date)>
<java.util.Date: sun.util.calendar.BaseCalendar$Date normalize()>
<java.util.Date: long getTimeImpl()>
<java.util.Date: long getTime()>
<java.util.Date: boolean equals(java.lang.Object)>
<java.security.Timestamp: boolean equals(java.lang.Object)>
<java.security.CodeSigner: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>
<java.util.AbstractMap: boolean access$000(java.lang.Object,java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<java.util.ResourceBundle$Control: java.util.ResourceBundle$Control getNoFallbackControl(java.util.List)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List getLookupLocales(java.util.Locale)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObject(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,java.lang.String,java.lang.Object[])>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNames(java.lang.String,java.util.Locale)>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: java.lang.String getDisplayName(java.lang.String,int,java.util.Locale)>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String retrieveDisplayName(java.lang.String,boolean,int,java.util.Locale)>
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>
<java.util.Date: java.lang.String toString()>
<sun.security.x509.X509CRLEntryImpl: java.lang.String toString()>
<sun.security.x509.CertificateValidity: java.lang.String toString()>
<sun.security.x509.X509CertInfo: java.lang.String toString()>
<sun.security.x509.X509CertImpl: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String retrieveGenericDisplayName(java.lang.String,int,java.util.Locale)>
<sun.util.locale.provider.CalendarDataUtility: int retrieveFirstDayOfWeek(java.util.Locale)>
<java.util.Calendar: void setWeekCountData(java.util.Locale)>
<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>
<java.util.JapaneseImperialCalendar: void <init>(java.util.TimeZone,java.util.Locale)>
<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale,boolean)>
<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>
<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>
<sun.util.BuddhistCalendar: void <init>(java.util.TimeZone,java.util.Locale)>
<java.util.JapaneseImperialCalendar: void <init>(java.util.TimeZone,java.util.Locale,boolean)>
<sun.util.locale.provider.CalendarDataUtility: java.util.Map retrieveJavaTimeFieldValueNames(java.lang.String,int,int,java.util.Locale)>
<sun.util.locale.provider.CalendarDataUtility: java.util.Map retrieveFieldValueNames(java.lang.String,int,int,java.util.Locale)>
<sun.util.BuddhistCalendar: java.util.Map getDisplayNames(int,int,java.util.Locale)>
<java.text.SimpleDateFormat: java.util.Map getDisplayNamesMap(int,java.util.Locale)>
<java.util.JapaneseImperialCalendar: java.util.Map getDisplayNames(int,int,java.util.Locale)>
<java.util.Calendar: java.util.Map getDisplayNames(int,int,java.util.Locale)>
<sun.util.locale.provider.CalendarDataUtility: int retrieveMinimalDaysInFirstWeek(java.util.Locale)>
<java.util.Currency: java.lang.String getSymbol(java.util.Locale)>
<java.text.DecimalFormatSymbols: void initialize(java.util.Locale)>
<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>
<sun.util.locale.provider.DecimalFormatSymbolsProviderImpl: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,char[],java.util.Formatter$Flags,int,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(java.math.BigInteger,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void printInteger(java.lang.Object,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder,long,java.util.Formatter$Flags,int,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>
<java.util.Formatter$FormatSpecifier: void print(java.math.BigDecimal,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void printFloat(java.lang.Object,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>
<java.util.Formatter$FormatSpecifier: void print(double,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(float,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(long,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(int,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(short,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: void print(byte,java.util.Locale)>
<java.util.Formatter: char getZero(java.util.Locale)>
<java.util.Formatter: void <init>(java.util.Locale,java.lang.Appendable)>
<java.util.Formatter: void <init>()>
<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>
<java.util.Formatter$FormatSpecifier: char getZero(java.util.Locale)>
<sun.util.locale.provider.NumberFormatProviderImpl: java.text.NumberFormat getInstance(java.util.Locale,int)>
<sun.util.locale.provider.NumberFormatProviderImpl: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>
<java.text.NumberFormat: java.text.NumberFormat getInstance(sun.util.locale.provider.LocaleProviderAdapter,java.util.Locale,int)>
<java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>
<java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)>
<java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>
<sun.util.locale.provider.NumberFormatProviderImpl: java.text.NumberFormat getPercentInstance(java.util.Locale)>
<sun.util.locale.provider.NumberFormatProviderImpl: java.text.NumberFormat getIntegerInstance(java.util.Locale)>
<sun.util.locale.provider.NumberFormatProviderImpl: java.text.NumberFormat getNumberInstance(java.util.Locale)>
<sun.util.locale.provider.CalendarDataUtility: java.lang.String retrieveFieldValueName(java.lang.String,int,int,int,java.util.Locale)>
<java.util.ResourceBundle$Control: java.util.ResourceBundle$Control getControl(java.util.List)>
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>
<java.text.DateFormatSymbols: void initializeData(java.util.Locale)>
<java.text.DateFormatSymbols: void <init>(java.util.Locale)>
<sun.util.locale.provider.DateFormatSymbolsProviderImpl: java.text.DateFormatSymbols getInstance(java.util.Locale)>
<java.text.DateFormatSymbols: java.text.DateFormatSymbols getProviderInstance(java.util.Locale)>
<java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstanceRef(java.util.Locale)>
<java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>
<java.util.Calendar: java.util.Map getDisplayNamesImpl(int,int,java.util.Locale)>
<java.text.Collator: java.text.Collator getInstance(java.util.Locale)>
<java.text.Collator: java.text.Collator getInstance()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>
<java.util.Collections$SynchronizedMap: boolean containsKey(java.lang.Object)>
<java.lang.ClassLoader: boolean registerAsParallelCapable()>
<sun.misc.Launcher$AppClassLoader: void <clinit>()>
<sun.misc.Launcher$ExtClassLoader: void <clinit>()>
<sun.misc.Launcher$ExtClassLoader: java.io.File[] access$100()>
<java.security.SecureClassLoader: void <clinit>()>
<java.net.URLClassLoader: boolean showClassLoading(java.lang.String)>
<java.net.URLClassLoader: boolean access$300(java.net.URLClassLoader,java.lang.String)>
<java.util.Hashtable: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>
<java.util.Arrays: boolean deepEquals(java.lang.Object[],java.lang.Object[])>
<java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>
<java.util.Collections$SingletonList: boolean contains(java.lang.Object)>
<java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<sun.util.locale.UnicodeLocaleExtension: java.lang.String getUnicodeLocaleType(java.lang.String)>
<sun.util.locale.LocaleExtensions: java.lang.String getUnicodeLocaleType(java.lang.String)>
<java.util.Locale: java.lang.String getUnicodeLocaleType(java.lang.String)>
<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter findAdapter(java.lang.Class,java.util.Locale)>
<sun.util.locale.provider.LocaleResources: java.lang.Object[] getDecimalFormatSymbolsData()>
<sun.util.locale.LocaleExtensions: sun.util.locale.Extension getExtension(java.lang.Character)>
<sun.util.locale.LanguageTag: sun.util.locale.LanguageTag parseLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>
<java.util.Locale: java.lang.String toLanguageTag()>
<sun.util.locale.provider.LocaleProviderAdapter: boolean isSupportedLocale(java.util.Locale,sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
<sun.util.locale.provider.DateFormatSymbolsProviderImpl: boolean isSupportedLocale(java.util.Locale)>
<sun.util.locale.provider.BreakIteratorProviderImpl: boolean isSupportedLocale(java.util.Locale)>
<sun.util.resources.LocaleData$LocaleDataResourceBundleControl: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)>
<sun.util.locale.provider.DateFormatProviderImpl: boolean isSupportedLocale(java.util.Locale)>
<sun.util.locale.provider.LocaleNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>
<sun.util.locale.provider.CollatorProviderImpl: boolean isSupportedLocale(java.util.Locale)>
<sun.util.locale.provider.DecimalFormatSymbolsProviderImpl: boolean isSupportedLocale(java.util.Locale)>
<sun.util.locale.provider.TimeZoneNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>
<sun.util.locale.provider.NumberFormatProviderImpl: boolean isSupportedLocale(java.util.Locale)>
<java.time.format.DateTimeTextProvider$LocaleStore: java.lang.String getText(long,java.time.format.TextStyle)>
<java.time.format.DateTimeTextProvider: java.lang.String getText(java.time.temporal.TemporalField,long,java.time.format.TextStyle,java.util.Locale)>
<java.time.format.DateTimeTextProvider: java.lang.String getText(java.time.chrono.Chronology,java.time.temporal.TemporalField,long,java.time.format.TextStyle,java.util.Locale)>
<java.time.format.DateTimeFormatterBuilder$1: java.lang.String getText(java.time.chrono.Chronology,java.time.temporal.TemporalField,long,java.time.format.TextStyle,java.util.Locale)>
<java.time.format.DateTimeFormatterBuilder$1: java.lang.String getText(java.time.temporal.TemporalField,long,java.time.format.TextStyle,java.util.Locale)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>
<java.util.LinkedHashMap: void afterNodeInsertion(boolean)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>
<sun.misc.JarIndex: void addMapping(java.lang.String,java.lang.String)>
<sun.misc.JarIndex: void read(java.io.InputStream)>
<sun.misc.JarIndex: void <init>(java.io.InputStream)>
<sun.misc.JarIndex: sun.misc.JarIndex getJarIndex(java.util.jar.JarFile,sun.misc.MetaIndex)>
<sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>
<sun.security.util.ManifestDigester: void <init>(byte[])>
<java.lang.Character$UnicodeBlock: void <init>(java.lang.String,java.lang.String[])>
<java.lang.Character$UnicodeBlock: void <clinit>()>
<java.lang.CharacterData02: boolean isJavaIdentifierPart(int)>
<java.lang.Character: boolean isJavaIdentifierPart(int)>
<java.util.ServiceLoader: int parseLine(java.lang.Class,java.net.URL,java.io.BufferedReader,int,java.util.List)>
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty unicodeBlockPropertyFor(java.lang.String)>
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty family(boolean,boolean)>
<java.util.regex.Pattern: java.util.regex.Pattern$Node atom()>
<java.util.regex.Pattern: java.util.regex.Pattern$Node sequence(java.util.regex.Pattern$Node)>
<java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()>
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty range(java.util.regex.Pattern$BitClass)>
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty clazz(boolean)>
<java.lang.Character$UnicodeBlock: void <init>(java.lang.String,java.lang.String)>
<java.lang.CharacterData02: boolean isJavaIdentifierStart(int)>
<java.lang.Character: boolean isJavaIdentifierStart(int)>
<java.lang.Character: boolean isJavaIdentifierStart(char)>
<java.lang.Class: java.lang.String getSimpleName()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
<sun.util.locale.provider.HostLocaleProviderAdapter: java.util.spi.LocaleServiceProvider findInstalledProvider(java.lang.Class)>
<java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock forName(java.lang.String)>
<java.lang.Character$UnicodeBlock: void <init>(java.lang.String)>
<java.util.regex.Pattern$Block: boolean isSatisfiedBy(int)>
<java.util.regex.Pattern$CharProperty$1: boolean isSatisfiedBy(int)>
<java.util.regex.Pattern$5: boolean isSatisfiedBy(int)>
<java.util.regex.Pattern$7: boolean isSatisfiedBy(int)>
<java.util.regex.Pattern$CharProperty: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Neg: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Matcher: boolean search(int)>
<java.util.regex.Matcher: boolean find(int)>
<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>
<java.util.regex.Matcher: boolean find()>
<sun.security.util.Debug: java.lang.String marshal(java.lang.String)>
<sun.security.util.Debug: void <clinit>()>
<java.net.SocketPermission: boolean authorizedIPv6(java.lang.String,byte[])>
<java.net.SocketPermission: boolean authorized(java.lang.String,byte[])>
<java.net.SocketPermission: boolean isUntrusted()>
<sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String,java.lang.String)>
<sun.security.x509.AVA: void <clinit>()>
<sun.security.x509.AVA: sun.security.util.DerValue parseHexString(java.io.Reader,int)>
<sun.security.x509.AVA: void <init>(java.io.Reader,int,java.util.Map)>
<sun.security.x509.AVA: void <init>(java.io.Reader,java.util.Map)>
<sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>
<sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>
<sun.security.x509.X500Name: void <init>(java.lang.String,java.util.Map)>
<javax.security.auth.x500.X500Principal: void <init>(java.lang.String,java.util.Map)>
<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>
<sun.security.provider.PolicyFile: java.lang.String getDN(java.lang.String,java.security.KeyStore)>
<sun.security.provider.PolicyFile: boolean replacePrincipals(java.util.List,java.security.KeyStore)>
<sun.security.x509.AVA: sun.security.util.DerValue parseQuotedString(java.io.Reader,java.lang.StringBuilder)>
<sun.security.x509.AVA: java.lang.String toRFC2253CanonicalString()>
<sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>
<java.text.AttributedString: boolean access$200(java.lang.Object,java.lang.Object)>
<java.text.AttributedString$AttributedStringIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>
<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator$Attribute[])>
<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator)>
<java.text.Format: java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.text.AttributedCharacterIterator,java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>
<java.text.AttributedString$AttributedStringIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>
<java.text.AttributedString: java.lang.Object getAttributeCheckRange(java.text.AttributedCharacterIterator$Attribute,int,int,int)>
<java.text.AttributedString: java.lang.Object access$400(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute,int,int,int)>
<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>
<java.util.AbstractMap: int size()>
<java.text.AttributedString: void setAttributes(java.util.Map,int)>
<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator[])>
<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>
<java.text.DecimalFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<java.text.SimpleDateFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>
<java.text.Format: java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.text.AttributedCharacterIterator[])>
<java.text.AttributedString: boolean mapsDiffer(java.util.Map,java.util.Map)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.jar.Attributes: boolean equals(java.lang.Object)>
<java.util.jar.Manifest: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode getTreeNode(int,java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>
<java.util.HashMap: boolean containsKey(java.lang.Object)>
<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>
<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>
<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>
<java.lang.Double: java.lang.String toHexString(double)>
<java.util.Formatter$FormatSpecifier: java.lang.String hexDouble(double,int)>
<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>
<java.time.format.Parsed: void resolveTimeLenient()>
<java.util.regex.Pattern: int escape(boolean,boolean,boolean)>
<java.time.format.Parsed: void resolveFractional()>
<java.util.HashSet: boolean contains(java.lang.Object)>
<sun.net.RegisteredDomain: java.lang.String getRegisteredDomain(java.lang.String)>
<sun.net.RegisteredDomain: sun.security.util.RegisteredDomain registeredDomain(java.lang.String)>
<sun.security.util.RegisteredDomain: java.util.Optional 'from'(java.lang.String)>
<java.net.SocketPermission: boolean match(java.lang.String,java.lang.String)>
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String)>
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguageTag(sun.util.locale.LanguageTag)>
<java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>
<sun.util.locale.provider.TimeZoneNameProviderImpl: java.util.Locale[] getAvailableLocales()>
<java.util.spi.LocaleServiceProvider: boolean isSupportedLocale(java.util.Locale)>
<sun.util.locale.provider.CalendarDataProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.CalendarProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.LocaleNameProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.CollatorProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.DateFormatProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.BreakIteratorProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.CurrencyNameProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.CalendarNameProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.DateFormatSymbolsProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.DecimalFormatSymbolsProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.cldr.CLDRLocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.NumberFormatProviderImpl: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] createAvailableLocales()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] access$100()>
<sun.util.locale.provider.JRELocaleProviderAdapter$AvailableJRELocales: void <clinit>()>
<sun.util.locale.provider.JRELocaleProviderAdapter$AvailableJRELocales: java.util.Locale[] access$000()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>
<java.util.AbstractCollection: boolean retainAll(java.util.Collection)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet retainAll(sun.text.normalizer.UnicodeSet)>
<sun.security.util.AlgorithmDecomposer: void hasLoop(java.util.Set,java.lang.String,java.lang.String)>
<sun.security.util.AlgorithmDecomposer: java.util.Set decomposeOneHash(java.lang.String)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: void permits(java.lang.String,sun.security.util.ConstraintsParameters,boolean)>
<sun.security.util.DisabledAlgorithmConstraints: void permits(java.lang.String,sun.security.util.ConstraintsParameters,boolean)>
<sun.security.util.DisabledAlgorithmConstraints: void permits(java.lang.String,java.security.AlgorithmParameters,sun.security.util.ConstraintsParameters,boolean)>
<sun.security.pkcs.SignerInfo: java.util.Set verifyAlgorithms(sun.security.pkcs.SignerInfo[],sun.security.util.JarConstraintsParameters,java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean permittedCheck(java.lang.String,java.lang.String)>
<sun.security.util.DisabledAlgorithmConstraints: void permitsPSSParams(java.security.AlgorithmParameters,sun.security.util.ConstraintsParameters)>
<sun.security.util.DisabledAlgorithmConstraints: void permits(java.security.AlgorithmParameters,sun.security.util.ConstraintsParameters)>
<sun.security.util.ManifestEntryVerifier: boolean checkConstraints(java.lang.String,sun.security.util.JarConstraintsParameters)>
<sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable,java.util.Map)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>
<java.util.AbstractSet: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
<java.lang.ClassLoader: void setSigners(java.lang.Class,java.lang.Object[])>
<java.lang.ClassLoader: java.lang.Class defineClassInternal(java.lang.String,byte[],int,int,java.security.ProtectionDomain,boolean)>
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)>
<sun.misc.VM: void saveAndRemoveProperties(java.util.Properties)>
<java.lang.System: void ensureProperties(boolean)>
<java.lang.System: void afterClinitInitialization()>
<java.util.jar.JarVerifier: void doneWithMeta()>
<java.util.jar.JarFile: void initializeVerifier()>
<java.util.jar.JarFile: void ensureInitialization()>
<java.util.jar.JavaUtilJarAccessImpl: void ensureInitialization(java.util.jar.JarFile)>
<sun.misc.URLClassPath$JarLoader$2: java.util.jar.Manifest getManifest()>
<sun.net.www.MimeTable: void parse(java.util.Properties)>
<sun.net.www.MimeTable: void load()>
<sun.net.www.MimeTable: void <init>()>
<sun.net.www.MimeTable$DefaultInstanceHolder$1: sun.net.www.MimeTable run()>
<sun.net.www.MimeTable$DefaultInstanceHolder$1: java.lang.Object run()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.security.Provider: void putId()>
<java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>
<sun.security.jca.ProviderList$1: void <init>(java.lang.String,double,java.lang.String)>
<sun.security.jca.ProviderList: void <clinit>()>
<sun.security.jca.ProviderList: java.security.Provider getProvider(int)>
<sun.security.jca.ProviderList: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
<sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>
<java.security.SecureRandom: void getDefaultPRNG(boolean,byte[])>
<java.security.SecureRandom: void <init>()>
<java.nio.file.TempFileHelper: void <clinit>()>
<java.security.SecureRandom: byte[] getSeed(int)>
<java.util.concurrent.ThreadLocalRandom: long initialSeed()>
<java.util.concurrent.ThreadLocalRandom: void <clinit>()>
<java.util.concurrent.ConcurrentHashMap: void fullAddCount(long,boolean)>
<java.util.concurrent.ConcurrentHashMap: void addCount(long,int)>
<java.util.concurrent.ConcurrentHashMap: void clear()>
<java.time.zone.TzdbZoneRulesProvider: void load(java.io.DataInputStream)>
<java.time.zone.TzdbZoneRulesProvider: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.lang.Class$ReflectCache: java.lang.Object insertIfAbsent(java.lang.Class$CacheKey,java.lang.Object)>
<java.lang.Class: java.lang.reflect.Method cacheMethod(java.lang.reflect.Method)>
<java.lang.Class: java.lang.reflect.Method getMethodHelper(boolean,boolean,java.util.List,java.lang.String,java.lang.Class[])>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.lang.Class: java.lang.Class getPrimitiveClass(java.lang.String)>
<java.lang.Character: void <clinit>()>
<java.lang.Character: int digit(char,int)>
<java.lang.Long: long parseLong(java.lang.String,int)>
<java.lang.Long: long parseLong(java.lang.String)>
<java.text.DigitList: long getLong()>
<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
<java.text.DecimalFormat: boolean subparse(java.lang.String,java.text.ParsePosition,java.lang.String,java.lang.String,java.text.DigitList,boolean,boolean[])>
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>
<sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>
<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>
<java.util.GregorianCalendar: void setGregorianChange(long)>
<java.util.GregorianCalendar: int computeFields(int,int)>
<java.util.GregorianCalendar: void computeFields()>
<java.util.Calendar: void setTimeInMillis(long)>
<java.util.Calendar: void setTime(java.util.Date)>
<java.util.Calendar: void set(int,int)>
<java.util.Calendar: void set(int,int,int,int,int,int)>
<sun.util.BuddhistCalendar: void set(int,int)>
<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getCalendarDate(long)>
<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getLastJulianDate()>
<java.util.GregorianCalendar: long getFixedDateMonth1(sun.util.calendar.BaseCalendar$Date,long)>
<java.util.GregorianCalendar: int actualMonthLength()>
<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getGregorianCutoverDate()>
<java.util.GregorianCalendar: boolean isLeapYear(int)>
<java.util.GregorianCalendar: int monthLength(int,int)>
<java.util.GregorianCalendar: int monthLength(int)>
<java.util.GregorianCalendar: long getFixedDate(sun.util.calendar.BaseCalendar,int,int)>
<java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getCutoverCalendarSystem()>
<java.util.GregorianCalendar: long getFixedDateJan1(sun.util.calendar.BaseCalendar$Date,long)>
<java.util.SimpleTimeZone: int getOffsets(long,int[])>
<java.util.SimpleTimeZone: int getOffset(long)>
<sun.util.calendar.ZoneInfo: int getOffsets(long,int[],int)>
<sun.util.calendar.ZoneInfo: int getOffsetsByWall(long,int[])>
<sun.util.calendar.AbstractCalendar: long getTime(sun.util.calendar.CalendarDate)>
<sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>
<java.util.JapaneseImperialCalendar: void pinDayOfMonth(sun.util.calendar.LocalGregorianCalendar$Date)>
<java.util.JapaneseImperialCalendar: long getFixedDate(int,int,int)>
<java.util.JapaneseImperialCalendar: void computeTime()>
<sun.util.calendar.AbstractCalendar: sun.util.calendar.CalendarDate getNthDayOfWeek(int,int,sun.util.calendar.CalendarDate)>
<java.util.SimpleTimeZone: long getTransition(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,int,int,int,int,int)>
<java.util.SimpleTimeZone: long getEnd(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int)>
<java.util.SimpleTimeZone: int getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)>
<java.util.SimpleTimeZone: long getStart(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int)>
<java.util.JapaneseImperialCalendar: int computeFields(int,int)>
<java.util.JapaneseImperialCalendar: void computeFields()>
<sun.security.util.DerInputBuffer: java.util.Date getTime(int,boolean)>
<sun.security.util.DerInputBuffer: java.util.Date getGeneralizedTime(int)>
<sun.security.util.DerInputStream: java.util.Date getGeneralizedTime()>
<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>
<sun.security.x509.CertificateValidity: void <init>(sun.security.util.DerInputStream)>
<sun.security.x509.X509CertInfo: void parse(sun.security.util.DerValue)>
<sun.security.x509.X509CertInfo: void <init>(sun.security.util.DerValue)>
<sun.security.x509.X509CertImpl: void parse(sun.security.util.DerValue)>
<sun.security.x509.X509CertImpl: void <init>(sun.security.util.DerValue)>
<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>
<sun.security.pkcs.PKCS7: void parse(sun.security.util.DerInputStream,boolean)>
<sun.security.pkcs.PKCS7: void parse(sun.security.util.DerInputStream)>
<sun.security.pkcs.PKCS7: void <init>(byte[])>
<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS7 getTsToken()>
<sun.security.util.SignatureFileVerifier: void <init>(java.util.ArrayList,sun.security.util.ManifestDigester,java.lang.String,byte[])>
<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>
<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>
<sun.security.x509.X509CertInfo: void <init>(byte[])>
<sun.security.pkcs.PKCS7: void populateCertIssuerNames()>
<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate getCertificate(java.math.BigInteger,sun.security.x509.X500Name)>
<sun.security.pkcs.SignerInfo: java.util.ArrayList getCertificateChain(sun.security.pkcs.PKCS7)>
<sun.security.pkcs.SignerInfo: java.security.cert.X509Certificate getCertificate(sun.security.pkcs.PKCS7)>
<sun.security.timestamp.TimestampToken: void parse(byte[])>
<sun.security.timestamp.TimestampToken: void <init>(byte[])>
<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>
<sun.security.x509.X509CRLImpl: void <init>(sun.security.util.DerValue)>
<sun.security.x509.X509CRLEntryImpl: void parse(sun.security.util.DerValue)>
<sun.security.x509.X509CRLEntryImpl: void <init>(sun.security.util.DerValue)>
<sun.security.util.DerInputBuffer: java.util.Date getUTCTime(int)>
<sun.security.util.DerInputStream: java.util.Date getUTCTime()>
<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>
<sun.security.pkcs.PKCS9Attributes: byte[] decode(sun.security.util.DerInputStream)>
<sun.security.pkcs.PKCS9Attributes: void <init>(sun.security.util.DerInputStream,boolean)>
<sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream,boolean)>
<sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream)>
<sun.security.pkcs.PKCS9Attributes: void <init>(sun.security.util.DerInputStream)>
<sun.util.calendar.BaseCalendar: boolean normalize(sun.util.calendar.CalendarDate)>
<java.util.Date: long getMillisOf(java.util.Date)>
<java.util.Date: boolean before(java.util.Date)>
<sun.security.util.JarConstraintsParameters: void <init>(java.security.CodeSigner[])>
<sun.util.calendar.ZoneInfo: int getOffsetsByStandard(long,int[])>
<sun.util.calendar.ZoneInfo: int getOffset(long)>
<sun.util.calendar.AbstractCalendar: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>
<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>
<sun.util.calendar.Gregorian: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>
<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,java.util.TimeZone)>
<sun.util.calendar.Gregorian: sun.util.calendar.CalendarDate getCalendarDate(long,java.util.TimeZone)>
<sun.util.calendar.Era: void <init>(java.lang.String,java.lang.String,long,boolean)>
<java.util.JapaneseImperialCalendar: void <clinit>()>
<java.util.JapaneseImperialCalendar: int getMaximum(int)>
<java.util.JapaneseImperialCalendar: int getLeastMaximum(int)>
<java.util.JapaneseImperialCalendar: int getWeekNumber(long,long)>
<java.util.JapaneseImperialCalendar: long getFixedDateJan1(sun.util.calendar.LocalGregorianCalendar$Date,long)>
<java.util.JapaneseImperialCalendar: int getEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>
<java.util.JapaneseImperialCalendar: int getTransitionEraIndex(sun.util.calendar.LocalGregorianCalendar$Date)>
<java.util.JapaneseImperialCalendar: long getFixedDateMonth1(sun.util.calendar.LocalGregorianCalendar$Date,long)>
<java.util.JapaneseImperialCalendar: boolean isTransitionYear(int)>
<java.util.JapaneseImperialCalendar: int getMinimum(int)>
<java.util.JapaneseImperialCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long)>
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,java.util.TimeZone)>
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.CalendarDate getCalendarDate(long,java.util.TimeZone)>
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>
<java.util.Date: sun.util.calendar.BaseCalendar getCalendarSystem(long)>
<sun.util.calendar.Era: long getSince(java.util.TimeZone)>
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date adjustYear(sun.util.calendar.LocalGregorianCalendar$Date,long,int)>
<sun.util.calendar.LocalGregorianCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>
<sun.util.calendar.ZoneInfo: int getOffsets(long,int[])>
<sun.util.calendar.ZoneInfo: int getRawOffset()>
<java.util.Date: sun.util.calendar.BaseCalendar getJulianCalendar()>
<java.util.Date: sun.util.calendar.BaseCalendar getCalendarSystem(int)>
<java.math.BigInteger: void <init>(char[],int,int)>
<java.math.BigDecimal: void <init>(char[],int,int,java.math.MathContext)>
<java.math.BigDecimal: void <init>(char[],int,int)>
<java.text.DigitList: java.math.BigDecimal getBigDecimal()>
<java.math.BigDecimal: void <init>(java.lang.String)>
<sun.net.util.IPAddressUtil: int digit(char,int)>
<java.net.SocketPermission: void init(java.lang.String,int)>
<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>
<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>
<sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>
<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>
<sun.security.provider.PolicyFile: void addPerms(java.security.Permissions,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>
<java.lang.SecurityManager: void checkConnect(java.lang.String,int)>
<java.net.InetAddress: java.lang.String getHostFromNameService(java.net.InetAddress,boolean)>
<java.net.InetAddress: java.lang.String getHostName(boolean)>
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>
<sun.net.util.IPAddressUtil: byte[] textToNumericFormatV6(java.lang.String)>
<sun.net.util.IPAddressUtil: boolean isIPv6LiteralAddress(java.lang.String)>
<sun.net.util.IPAddressUtil: java.lang.String checkHost(java.lang.String)>
<sun.net.util.IPAddressUtil: java.lang.String checkAuthority(java.net.URL)>
<java.net.URL: java.net.URI toURI()>
<sun.security.provider.SunEntries: java.io.File getDeviceFile(java.net.URL)>
<com.ibm.oti.shared.SharedClassAbstractHelper$1: java.lang.Integer run()>
<com.ibm.oti.shared.SharedClassAbstractHelper$1: java.lang.Object run()>
<java.net.URLStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>
<sun.net.www.protocol.file.Handler: void parseURL(java.net.URL,java.lang.String,int,int)>
<sun.net.util.IPAddressUtil: byte[] textToNumericFormatV4(java.lang.String)>
<sun.net.util.IPAddressUtil: byte[] validateNumericFormatV4(java.lang.String)>
<java.math.BigInteger: int parseInt(char[],int,int)>
<java.math.BigDecimal: long parseExp(char[],int,int)>
<java.math.BigInteger: void <init>(java.lang.String,int)>
<java.math.BigInteger: void <init>(java.lang.String)>
<sun.security.util.ObjectIdentifier: void <init>(java.lang.String)>
<sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier of(sun.security.util.KnownOIDs)>
<sun.security.pkcs.PKCS9Attribute: void <clinit>()>
<sun.security.x509.AVAKeyword: void <clinit>()>
<sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map)>
<sun.security.x509.AVAKeyword: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,boolean,boolean)>
<sun.security.x509.AVA: java.lang.String toKeyword(int,java.util.Map)>
<sun.security.x509.AVA: java.lang.String toString()>
<sun.security.x509.RDN: java.lang.String toString()>
<sun.security.x509.X500Name: void generateDN()>
<sun.security.x509.X500Name: java.lang.String toString()>
<sun.security.x509.GeneralName: java.lang.String toString()>
<sun.security.x509.X509CertInfo: void emit(sun.security.util.DerOutputStream)>
<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>
<sun.security.x509.X509CertImpl: byte[] getTBSCertificate()>
<javax.security.auth.x500.X500Principal: java.lang.String toString()>
<sun.security.x509.AVA: java.lang.String toRFC1779String(java.util.Map)>
<sun.security.x509.RDN: java.lang.String toRFC1779String(java.util.Map)>
<sun.security.x509.X500Name: java.lang.String generateRFC1779DN(java.util.Map)>
<sun.security.x509.X500Name: java.lang.String getRFC1779Name(java.util.Map)>
<sun.security.x509.X500Name: java.lang.String getRFC1779Name()>
<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>
<javax.security.auth.x500.X500Principal: java.lang.String getName()>
<sun.security.x509.AVA: java.lang.String toRFC2253String(java.util.Map)>
<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>
<sun.security.x509.RDN: java.lang.String toRFC2253String(boolean)>
<sun.security.x509.X500Name: java.lang.String getRFC2253CanonicalName()>
<sun.security.x509.X500Name: int hashCode()>
<java.lang.Object: java.lang.String toString()>
<java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()>
<java.util.concurrent.ThreadPoolExecutor$AbortPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>
<java.util.concurrent.ThreadPoolExecutor: void reject(java.lang.Runnable)>
<java.security.PermissionCollection: java.lang.String toString()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()>
<sun.text.normalizer.UnicodeSet: void syntaxError(sun.text.normalizer.RuleCharacterIterator,java.lang.String)>
<sun.security.x509.GeneralName: int hashCode()>
<java.text.AttributeEntry: int hashCode()>
<java.util.Objects: int hashCode(java.lang.Object)>
<java.util.HashMap$Node: int hashCode()>
<java.util.AbstractMap: int hashCode()>
<java.util.jar.Manifest: int hashCode()>
<java.util.AbstractSet: int hashCode()>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>
<java.util.AbstractList: int hashCode()>
<java.util.Vector: int hashCode()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermissions getMinimum(javax.crypto.CryptoPermissions)>
<sun.util.locale.provider.LocaleResources: java.lang.String[] getNumberPatterns()>
<javax.crypto.CryptoPermissions: java.security.PermissionCollection getPermissionCollection(javax.crypto.CryptoPermission)>
<javax.crypto.CryptoPermissions: void add(java.security.Permission)>
<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs findMatch(java.lang.String)>
<sun.security.pkcs.PKCS9Attribute: java.lang.String getName(sun.security.util.ObjectIdentifier)>
<sun.security.pkcs.PKCS9Attribute: java.lang.String getName()>
<sun.security.pkcs.PKCS9Attribute: void throwSingleValuedException()>
<sun.security.pkcs.PKCS9Attribute: void throwTagException(java.lang.Byte)>
<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>
<java.lang.reflect.WeakCache: boolean containsValue(java.lang.Object)>
<java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>
<sun.reflect.misc.ReflectUtil: void checkProxyPackageAccess(java.lang.Class)>
<sun.reflect.misc.ReflectUtil: void checkPackageAccess(java.lang.Class)>
<sun.reflect.misc.ReflectUtil: void checkProxyPackageAccess(java.lang.ClassLoader,java.lang.Class[])>
<java.lang.Class: void checkMemberAccess(java.lang.SecurityManager,java.lang.ClassLoader,int)>
<java.lang.Class: java.lang.Class getEnclosingClass()>
<sun.reflect.generics.scope.ClassScope: sun.reflect.generics.scope.Scope computeEnclosingScope()>
<sun.reflect.generics.scope.AbstractScope: sun.reflect.generics.scope.Scope getEnclosingScope()>
<sun.reflect.generics.scope.AbstractScope: java.lang.reflect.TypeVariable lookup(java.lang.String)>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.TypeVariable findTypeVariable(java.lang.String)>
<sun.reflect.generics.visitor.Reifier: void visitTypeVariableSignature(sun.reflect.generics.tree.TypeVariableSignature)>
<sun.reflect.generics.tree.TypeVariableSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<sun.reflect.generics.visitor.Reifier: void visitArrayTypeSignature(sun.reflect.generics.tree.ArrayTypeSignature)>
<sun.reflect.generics.tree.ArrayTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<sun.reflect.generics.visitor.Reifier: java.lang.reflect.Type[] reifyTypeArguments(sun.reflect.generics.tree.TypeArgument[])>
<sun.reflect.generics.visitor.Reifier: void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature)>
<sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Class comparableClassFor(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: void <init>(java.util.concurrent.ConcurrentHashMap$TreeNode)>
<java.util.concurrent.ConcurrentHashMap: void treeifyBin(java.util.concurrent.ConcurrentHashMap$Node[],int)>
<java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>
<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Node[] helpTransfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node)>
<java.util.concurrent.ConcurrentHashMap: void tryPresize(int)>
<java.util.HashMap: java.lang.Class comparableClassFor(java.lang.Object)>
<java.util.HashMap$TreeNode: void treeify(java.util.HashMap$Node[])>
<java.util.HashMap: void treeifyBin(java.util.HashMap$Node[],int)>
<java.util.HashMap$TreeNode: void split(java.util.HashMap,java.util.HashMap$Node[],int,int)>
<java.util.HashMap: java.util.HashMap$Node[] resize()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>
<java.util.LinkedHashMap: void <init>(java.util.Map)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendText(java.time.temporal.TemporalField,java.util.Map)>
<java.time.format.DateTimeFormatter: void <clinit>()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatter toFormatter(java.util.Locale,java.time.format.ResolverStyle,java.time.chrono.Chronology)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatter toFormatter(java.time.format.ResolverStyle,java.time.chrono.Chronology)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatter toFormatter(java.util.Locale)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatter toFormatter()>
<java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>
<java.time.Year: void <clinit>()>
<java.time.chrono.IsoChronology: java.time.LocalDate resolveYMD(java.util.Map,java.time.format.ResolverStyle)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate resolveYMD(java.util.Map,java.time.format.ResolverStyle)>
<java.time.chrono.AbstractChronology: java.time.chrono.ChronoLocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<java.time.chrono.IsoChronology: java.time.LocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate resolveDate(java.util.Map,java.time.format.ResolverStyle)>
<java.time.format.Parsed: void resolveDateFields()>
<java.util.HashMap: void putAll(java.util.Map)>
<java.time.format.Parsed: java.time.format.Parsed copy()>
<java.time.format.DateTimeParseContext: void startOptional()>
<java.util.HashMap: void <init>(java.util.Map)>
<java.util.PropertyResourceBundle: void <init>(java.io.InputStream)>
<java.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>
<java.util.ResourceBundle: java.util.ResourceBundle loadBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.ResourceBundle$Control,boolean)>
<java.util.jar.Attributes: void <init>(java.util.jar.Attributes)>
<java.util.jar.Attributes: java.lang.Object clone()>
<sun.net.www.protocol.jar.URLJarFile: java.util.jar.Manifest getManifest()>
<java.util.jar.JarFile: void maybeInstantiateVerifier()>
<java.util.jar.JarFile: void access$200(java.util.jar.JarFile)>
<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>
<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>
<sun.misc.URLClassPath$JarLoader$2: java.security.CodeSigner[] getCodeSigners()>
<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>
<javax.crypto.JceSecurity: void loadPolicies(java.io.File,javax.crypto.CryptoPermissions,javax.crypto.CryptoPermissions)>
<java.util.zip.ZipFile: void close()>
<sun.net.www.protocol.jar.URLJarFile: void close()>
<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile checkJar(java.util.jar.JarFile)>
<sun.misc.URLClassPath$Loader: void close()>
<sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream: void close()>
<java.util.zip.InflaterInputStream: void close()>
<java.util.zip.ZipInputStream: void close()>
<java.lang.UNIXProcess$ProcessPipeInputStream: void processExited()>
<java.io.FilterInputStream: void close()>
<sun.util.calendar.ZoneInfoFile$1: java.lang.Object run()>
<sun.util.calendar.ZoneInfoFile: void <clinit>()>
<sun.util.calendar.ZoneInfoFile: void addOldMapping()>
<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>
<sun.util.calendar.ZoneInfoFile: void access$000(java.io.DataInputStream)>
<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.lang.String,long[],int[],long[],int[],sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule[])>
<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>
<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo0(java.lang.String)>
<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.lang.String)>
<java.util.TimeZone: java.util.TimeZone parseCustomTimeZone(java.lang.String)>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String,boolean)>
<java.util.TimeZone: java.util.TimeZone setDefaultZone()>
<java.util.TimeZone: java.util.TimeZone getDefaultRef()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<java.time.ZoneId: java.time.ZoneId systemDefault()>
<java.time.Clock: java.time.Clock systemDefaultZone()>
<java.time.LocalDate: java.time.LocalDate now()>
<sun.util.calendar.CalendarDate: void <init>()>
<sun.util.calendar.BaseCalendar$Date: void <init>()>
<sun.util.calendar.ImmutableGregorianDate: void <init>(sun.util.calendar.BaseCalendar$Date)>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<sun.util.calendar.ZoneInfo: java.util.TimeZone getTimeZone(java.lang.String)>
<sun.util.calendar.ZoneInfo: java.util.Map getAliasTable()>
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String getObject(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.Object getObject(java.util.spi.LocaleServiceProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
<sun.util.calendar.ZoneInfoFile: java.util.Map getAliasMap()>
<sun.util.calendar.ZoneInfoFile: int addTrans(long[],int,int[],int,long,int,int)>
<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getCustomTimeZone(java.lang.String,int)>
<java.io.PushbackInputStream: void close()>
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void processExited()>
<sun.net.www.MeteredStream: void close()>
<sun.net.www.MeteredStream: void justRead(long)>
<sun.net.www.MeteredStream: long skip(long)>
<java.io.BufferedInputStream: long skip(long)>
<java.io.DataInputStream: int skipBytes(int)>
<sun.text.normalizer.ICUBinary: byte[] readHeader(java.io.InputStream,byte[],sun.text.normalizer.ICUBinary$Authenticate)>
<sun.text.normalizer.NormalizerDataReader: void <init>(java.io.InputStream)>
<sun.text.normalizer.NormalizerImpl: void <init>()>
<sun.text.normalizer.NormalizerImpl: void <clinit>()>
<sun.text.normalizer.NormalizerImpl: boolean composeHangul(char,char,long,char[],int[],int,boolean,char[],int,sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.NormalizerImpl: int compose(char[],int,int,char[],int,int,int,sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.NormalizerBase: java.lang.String compose(java.lang.String,boolean,int)>
<sun.text.normalizer.NormalizerBase$NFKCMode: java.lang.String normalize(java.lang.String,int)>
<sun.text.normalizer.NormalizerBase$NFCMode: java.lang.String normalize(java.lang.String,int)>
<sun.text.normalizer.NormalizerBase$NFCMode: int normalize(char[],int,int,char[],int,int,sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.NormalizerBase$Mode: int normalize(char[],int,int,char[],int,int,int)>
<sun.text.normalizer.NormalizerBase: int next(sun.text.normalizer.UCharacterIterator,char[],int,int,sun.text.normalizer.NormalizerBase$Mode,boolean,boolean[],int)>
<sun.text.normalizer.NormalizerBase: boolean nextNormalize()>
<sun.text.normalizer.NormalizerBase: int next()>
<java.text.CollationElementIterator: int next()>
<java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>
<java.text.Collator: int compare(java.lang.Object,java.lang.Object)>
<java.util.TimSort: int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator)>
<java.util.TimSort: void mergeHi(int,int,int,int)>
<java.util.TimSort: void mergeAt(int)>
<java.util.TimSort: void mergeCollapse()>
<java.util.TimSort: void sort(java.lang.Object[],int,int,java.util.Comparator,java.lang.Object[],int,int)>
<java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>
<java.util.ArrayList: void sort(java.util.Comparator)>
<java.util.TimSort: void mergeForceCollapse()>
<java.util.TimSort: void mergeLo(int,int,int,int)>
<java.util.TimSort: void binarySort(java.lang.Object[],int,int,int,java.util.Comparator)>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)>
<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>
<java.util.Arrays: void legacyMergeSort(java.lang.Object[],int,int,java.util.Comparator)>
<java.util.TimSort: int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator)>
<java.util.TimSort: int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator)>
<java.text.CollationElementIterator: int nextContractChar(int)>
<java.text.CollationElementIterator: int[] makeReorderedBuffer(int,int,int[],boolean)>
<sun.text.normalizer.NormalizerBase: int normalize(char[],int,int,char[],int,int,sun.text.normalizer.NormalizerBase$Mode,int)>
<sun.text.normalizer.NormalizerBase: int previous(sun.text.normalizer.UCharacterIterator,char[],int,int,sun.text.normalizer.NormalizerBase$Mode,boolean,boolean[],int)>
<sun.text.normalizer.NormalizerBase: boolean previousNormalize()>
<sun.text.normalizer.NormalizerBase: int previous()>
<java.text.CollationElementIterator: int prevContractChar(int)>
<sun.text.Normalizer: int getCombiningClass(int)>
<java.util.regex.Pattern: int getClass(int)>
<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)>
<sun.text.normalizer.NormalizerImpl: int decompose(long,int,sun.text.normalizer.NormalizerImpl$DecomposeArgs)>
<sun.text.normalizer.NormalizerImpl: boolean isNFDSafe(long,int,int)>
<sun.text.normalizer.NormalizerBase$IsNextNFDSafe: boolean isNextBoundary(sun.text.normalizer.UCharacterIterator,int,int,int[])>
<sun.text.normalizer.NormalizerBase: int findNextIterationBoundary(sun.text.normalizer.UCharacterIterator,sun.text.normalizer.NormalizerBase$IsNextBoundary,int,int,char[])>
<sun.text.normalizer.NormalizerBase$IsPrevNFDSafe: boolean isPrevBoundary(sun.text.normalizer.UCharacterIterator,int,int,char[])>
<sun.text.normalizer.NormalizerBase: int findPreviousIterationBoundary(sun.text.normalizer.UCharacterIterator,sun.text.normalizer.NormalizerBase$IsPrevBoundary,int,int,char[],int[])>
<sun.text.normalizer.NormalizerImpl: int findNextStarter(char[],int,int,int,int,char)>
<sun.text.normalizer.NormalizerImpl: java.lang.String canonicalDecomposeWithSingleQuotation(java.lang.String)>
<java.text.RBTableBuilder: void build(java.lang.String,int)>
<java.text.RBCollationTables: void <init>(java.lang.String,int)>
<java.text.RuleBasedCollator: void <init>(java.lang.String,int)>
<java.text.RuleBasedCollator: void <init>(java.lang.String)>
<sun.util.locale.provider.CollatorProviderImpl: java.text.Collator getInstance(java.util.Locale)>
<sun.text.normalizer.NormalizerImpl: boolean isTrueStarter(long,int,int)>
<sun.text.normalizer.NormalizerBase$IsNextTrueStarter: boolean isNextBoundary(sun.text.normalizer.UCharacterIterator,int,int,int[])>
<sun.text.normalizer.NormalizerBase$IsPrevTrueStarter: boolean isPrevBoundary(sun.text.normalizer.UCharacterIterator,int,int,char[])>
<sun.text.normalizer.NormalizerImpl: int decompose(char[],int,int,char[],int,int,boolean,int[],sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.NormalizerBase$NFKDMode: int normalize(char[],int,int,char[],int,int,sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.NormalizerBase$NFDMode: int normalize(char[],int,int,char[],int,int,sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.NormalizerImpl: char[] composePart(sun.text.normalizer.NormalizerImpl$ComposePartArgs,int,char[],int,int,int,sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.NormalizerImpl: int getCombiningIndexFromStarter(char,char)>
<sun.text.normalizer.NormalizerImpl: char recompose(sun.text.normalizer.NormalizerImpl$RecomposeArgs,int,sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.NormalizerImpl: sun.text.normalizer.UnicodeSet internalGetNXHangul()>
<sun.text.normalizer.NormalizerImpl: long getPrevNorm32(sun.text.normalizer.NormalizerImpl$PrevArgs,int,int)>
<sun.text.normalizer.NormalizerImpl: int getPrevCC(sun.text.normalizer.NormalizerImpl$PrevArgs)>
<sun.text.normalizer.NormalizerImpl: int mergeOrdered(char[],int,int,char[],int,int,boolean)>
<sun.text.normalizer.NormalizerImpl: int mergeOrdered(char[],int,int,char[],int,int)>
<sun.text.normalizer.NormalizerImpl: int insertOrdered(char[],int,int,int,char,char,int)>
<sun.text.normalizer.NormalizerImpl: int getNextCombining(sun.text.normalizer.NormalizerImpl$NextCombiningArgs,int,sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.NormalizerImpl: long getNorm32(char[],int,int)>
<sun.text.normalizer.NormalizerBase$NFCMode: int getMinC()>
<sun.text.normalizer.NormalizerImpl: int getNextCC(sun.text.normalizer.NormalizerImpl$NextCCArgs)>
<sun.text.normalizer.NormalizerImpl: int getFromIndexesArr(int)>
<sun.text.normalizer.NormalizerBase: long getPrevNorm32(sun.text.normalizer.UCharacterIterator,int,int,char[])>
<sun.text.normalizer.NormalizerBase: long access$1000(sun.text.normalizer.UCharacterIterator,int,int,char[])>
<sun.text.normalizer.NormalizerBase: long getNextNorm32(sun.text.normalizer.UCharacterIterator,int,int,int[])>
<sun.text.normalizer.NormalizerBase: long access$1100(sun.text.normalizer.UCharacterIterator,int,int,int[])>
<sun.text.normalizer.NormalizerImpl: java.lang.String convert(java.lang.String)>
<sun.text.normalizer.NormalizerImpl: sun.text.normalizer.UnicodeSet internalGetNXCJKCompat()>
<sun.text.normalizer.NormalizerImpl: int getCombiningClass(int)>
<sun.text.normalizer.UCharacterPropertyReader: void <init>(java.io.InputStream)>
<sun.text.normalizer.UCharacterProperty: void <init>()>
<sun.text.normalizer.UCharacterProperty: sun.text.normalizer.UCharacterProperty getInstance()>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet getInclusions(int)>
<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)>
<sun.text.normalizer.UCharacterPropertyReader: void read(sun.text.normalizer.UCharacterProperty)>
<java.io.FilterInputStream: long skip(long)>
<java.io.PushbackInputStream: long skip(long)>
<sun.net.www.MeteredStream: int read()>
<sun.security.util.Password: char[] readPassword(java.io.InputStream,boolean)>
<sun.security.util.Password: char[] readPassword(java.io.InputStream)>
<java.io.FilterInputStream: int read()>
<java.io.PushbackInputStream: int read()>
<java.io.InputStream: int read(byte[],int,int)>
<java.lang.UNIXProcess$ProcessPipeInputStream: byte[] drainInputStream(java.io.InputStream)>
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: java.io.InputStream drainInputStream(java.io.InputStream)>
<java.io.DataInputStream: int readUnsignedShort()>
<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>
<java.io.DataInputStream: java.lang.String readUTF()>
<java.util.Currency: java.lang.String[] readStringArray(java.io.DataInputStream,int)>
<java.util.Currency: java.lang.String[] access$200(java.io.DataInputStream,int)>
<java.io.DataInputStream: byte readByte()>
<sun.util.calendar.ZoneInfoFile: int readOffset(java.io.DataInput)>
<sun.util.calendar.ZoneInfoFile: long readEpochSec(java.io.DataInput)>
<java.io.DataInputStream: char readChar()>
<sun.text.normalizer.NormalizerDataReader: void read(byte[],byte[],byte[],char[],char[])>
<sun.text.normalizer.CharTrie: void unserialize(java.io.InputStream)>
<sun.text.normalizer.Trie: void <init>(java.io.InputStream,sun.text.normalizer.Trie$DataManipulate)>
<sun.text.normalizer.CharTrie: void <init>(java.io.InputStream,sun.text.normalizer.Trie$DataManipulate)>
<sun.text.normalizer.IntTrie: void <init>(java.io.InputStream,sun.text.normalizer.Trie$DataManipulate)>
<sun.text.normalizer.Trie: void unserialize(java.io.InputStream)>
<sun.text.normalizer.IntTrie: void unserialize(java.io.InputStream)>
<java.io.DataInputStream: short readShort()>
<sun.net.www.MeteredStream: int read(byte[],int,int)>
<java.io.DataInputStream: int read(byte[],int,int)>
<java.util.zip.InflaterInputStream: void fill()>
<java.util.zip.InflaterInputStream: int read(byte[],int,int)>
<java.util.zip.InflaterInputStream: int read()>
<sun.misc.IOUtils: byte[] readNBytes(java.io.InputStream,int)>
<sun.misc.IOUtils: byte[] readAllBytes(java.io.InputStream)>
<java.util.jar.JarFile: byte[] getBytes(java.util.zip.ZipEntry)>
<java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()>
<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>
<sun.net.www.protocol.jar.URLJarFile: boolean isSuperMan()>
<sun.misc.ExtensionDependency$1: java.util.jar.Manifest run()>
<sun.misc.ExtensionDependency$1: java.lang.Object run()>
<java.util.jar.JarFile: void checkForSpecialAttributes()>
<java.util.jar.JarFile: boolean hasClassPathAttribute()>
<java.util.jar.JavaUtilJarAccessImpl: boolean jarFileHasClassPathAttribute(java.util.jar.JarFile)>
<sun.misc.IOUtils: byte[] readExactlyNBytes(java.io.InputStream,int)>
<sun.security.util.DerValue: sun.security.util.DerInputStream init(boolean,java.io.InputStream,boolean)>
<sun.security.util.DerValue: void <init>(java.io.InputStream,boolean)>
<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>
<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSet(int,boolean)>
<sun.security.pkcs.ContentInfo: void <init>(sun.security.util.DerInputStream,boolean)>
<sun.security.pkcs.ContentInfo: void <init>(sun.security.util.DerInputStream)>
<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSet(int)>
<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>
<sun.security.x509.X500Name: void parseDER(sun.security.util.DerInputStream)>
<sun.security.x509.X500Name: void <init>(sun.security.util.DerInputStream)>
<sun.security.x509.X500Name: void <init>(sun.security.util.DerValue)>
<sun.security.x509.GeneralName: void <init>(sun.security.util.DerValue,boolean)>
<sun.security.x509.GeneralName: void <init>(sun.security.util.DerValue)>
<sun.security.x509.GeneralNames: void <init>(sun.security.util.DerValue)>
<sun.security.pkcs.ESSCertId: void <init>(sun.security.util.DerValue)>
<sun.security.pkcs.SigningCertificateInfo: void parse(byte[])>
<sun.security.pkcs.SigningCertificateInfo: void <init>(byte[])>
<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSequence(int)>
<sun.security.x509.CRLExtensions: void init(sun.security.util.DerInputStream)>
<sun.security.x509.CRLExtensions: void <init>(sun.security.util.DerInputStream)>
<sun.security.x509.EDIPartyName: void <init>(sun.security.util.DerValue)>
<sun.security.x509.CertificateExtensions: void init(sun.security.util.DerInputStream)>
<sun.security.x509.CertificateExtensions: void <init>(sun.security.util.DerInputStream)>
<sun.security.util.DerValue: void <init>(byte[],boolean)>
<sun.security.util.DerValue: void <init>(byte[])>
<sun.security.x509.AlgorithmId: void derEncode(java.io.OutputStream)>
<sun.security.x509.AlgorithmId: void encode(sun.security.util.DerOutputStream)>
<sun.security.x509.X509Key: void encode(sun.security.util.DerOutputStream,sun.security.x509.AlgorithmId,sun.security.util.BitArray)>
<sun.security.x509.X509Key: void encode(sun.security.util.DerOutputStream)>
<sun.security.x509.X509Key: byte[] getEncodedInternal()>
<sun.security.x509.X509Key: byte[] getEncoded()>
<sun.security.x509.CertificateX509Key: void encode(java.io.OutputStream)>
<sun.security.x509.X509Key: byte[] encode()>
<sun.security.x509.X509Key: void <init>(sun.security.x509.AlgorithmId,sun.security.util.BitArray)>
<sun.security.x509.X509Key: java.security.PublicKey buildX509Key(sun.security.x509.AlgorithmId,sun.security.util.BitArray)>
<sun.security.x509.X509Key: java.security.PublicKey parse(sun.security.util.DerValue)>
<sun.security.x509.CertificateX509Key: void <init>(sun.security.util.DerInputStream)>
<sun.security.pkcs.SignerInfo: void derEncode(java.io.OutputStream)>
<sun.security.util.DerOutputStream: void putOrderedSet(byte,sun.security.util.DerEncoder[],java.util.Comparator)>
<sun.security.util.DerOutputStream: void putOrderedSetOf(byte,sun.security.util.DerEncoder[])>
<sun.security.pkcs.PKCS9Attributes: byte[] generateDerEncoding()>
<sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>
<sun.security.x509.RDN: void encode(sun.security.util.DerOutputStream)>
<sun.security.x509.X500Name: void encode(sun.security.util.DerOutputStream)>
<sun.security.x509.CertificateAlgorithmId: void encode(java.io.OutputStream)>
<sun.security.x509.AlgorithmId: java.lang.String getName()>
<sun.security.pkcs.SignerInfo: void verifyTimestamp(sun.security.timestamp.TimestampToken)>
<sun.security.x509.AlgorithmId: java.lang.String toString()>
<sun.security.x509.CertificateAlgorithmId: java.lang.String toString()>
<sun.security.x509.X509Key: java.lang.String toString()>
<sun.security.x509.CertificateX509Key: java.lang.String toString()>
<sun.security.x509.AlgorithmId: void decodeParams()>
<sun.security.x509.AlgorithmId: void <init>(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)>
<sun.security.x509.AlgorithmId: sun.security.x509.AlgorithmId parse(sun.security.util.DerValue)>
<sun.security.x509.CertificateAlgorithmId: void <init>(sun.security.util.DerInputStream)>
<java.util.jar.JarVerifier$VerifierStream: int read(byte[],int,int)>
<java.io.InputStream: long skip(long)>
<java.io.BufferedInputStream: void fill()>
<java.io.BufferedInputStream: int read()>
<java.io.BufferedInputStream: int read1(byte[],int,int)>
<java.io.BufferedInputStream: int read(byte[],int,int)>
<sun.security.provider.SeedGenerator$URLSeedGenerator: void getSeedBytes(byte[])>
<sun.security.provider.SeedGenerator: void generateSeed(byte[])>
<sun.security.provider.SecureRandom: byte[] engineGenerateSeed(int)>
<java.security.SecureRandom: byte[] generateSeed(int)>
<java.util.zip.ZipInputStream: void readFully(byte[],int,int)>
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry readLOC()>
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>
<java.util.jar.JarInputStream: java.util.jar.JarEntry checkManifest(java.util.jar.JarEntry)>
<java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>
<java.util.zip.ZipInputStream: void readEnd(java.util.zip.ZipEntry)>
<java.util.zip.ZipInputStream: int read(byte[],int,int)>
<java.util.jar.JarInputStream: int read(byte[],int,int)>
<java.util.zip.ZipInputStream: void closeEntry()>
<java.util.jar.Manifest$FastInputStream: void fill()>
<java.util.jar.Manifest$FastInputStream: int readLine(byte[],int,int)>
<java.util.jar.Manifest$FastInputStream: int readLine(byte[])>
<java.util.jar.Manifest: void read(java.io.InputStream)>
<java.util.jar.Manifest: void <init>(java.util.jar.JarVerifier,java.io.InputStream)>
<java.util.jar.Manifest: void <init>(java.io.InputStream)>
<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>
<java.util.jar.Manifest$FastInputStream: byte peek()>
<java.io.DataInputStream: void readFully(byte[],int,int)>
<java.io.DataInputStream: void readFully(byte[])>
<java.io.DataInputStream: long readLong()>
<java.util.Currency: long[] readLongArray(java.io.DataInputStream,int)>
<java.io.FilterInputStream: int read(byte[],int,int)>
<java.io.PushbackInputStream: int read(byte[],int,int)>
<java.util.zip.ZipFile$ZipFileInflaterInputStream: void fill()>
<java.io.InputStream: int read(byte[])>
<sun.security.util.DerInputStream: void getBytes(byte[])>
<sun.security.util.DerValue: byte[] getDataBytes()>
<sun.security.util.DerValue: java.lang.String getUTF8String()>
<sun.security.util.DerValue: java.lang.String getAsString()>
<sun.security.util.DerValue: java.lang.String toString()>
<sun.security.util.DerValue: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>
<java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<java.time.chrono.AbstractChronology: java.time.chrono.ChronoLocalDate resolveYMAD(java.util.Map,java.time.format.ResolverStyle)>
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.chrono.ChronoLocalDate resolveWoM(java.util.Map,java.time.chrono.Chronology,int,long,long,int,java.time.format.ResolverStyle)>
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.chrono.ChronoLocalDate resolve(java.util.Map,java.time.temporal.TemporalAccessor,java.time.format.ResolverStyle)>
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.TemporalAccessor resolve(java.util.Map,java.time.temporal.TemporalAccessor,java.time.format.ResolverStyle)>
<java.time.chrono.AbstractChronology: java.time.chrono.ChronoLocalDate resolveYD(java.util.Map,java.time.format.ResolverStyle)>
<java.io.ExpiringCache: java.io.ExpiringCache$Entry entryFor(java.lang.String)>
<java.io.ExpiringCache: void cleanup()>
<java.io.ExpiringCache: java.lang.String get(java.lang.String)>
<java.io.UnixFileSystem: java.lang.String canonicalize(java.lang.String)>
<java.io.File: java.lang.String getCanonicalPath()>
<java.io.File: java.io.File getCanonicalFile()>
<sun.misc.URLClassPath$FileLoader: void <init>(java.net.URL)>
<sun.misc.MetaIndex: void registerDirectory(java.io.File)>
<java.io.FilePermission$1: java.lang.String run()>
<java.io.FilePermission$1: java.lang.Object run()>
<java.io.FilePermission: void init(int)>
<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>
<java.lang.SecurityManager: void checkDelete(java.lang.String)>
<java.util.zip.ZipFile: void <init>(java.io.File,int,java.nio.charset.Charset)>
<java.util.zip.ZipFile: void <init>(java.io.File,int)>
<java.util.jar.JarFile: void <init>(java.io.File,boolean,int)>
<sun.net.www.protocol.jar.URLJarFile: void <init>(java.io.File,sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController)>
<java.util.jar.JarFile: void <init>(java.io.File)>
<java.util.jar.JarFile: void <init>(java.lang.String)>
<sun.net.www.protocol.jar.URLJarFile: void <init>(java.net.URL,sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController)>
<com.ibm.oti.vm.AbstractClassLoader: void fillCache(int)>
<com.ibm.oti.vm.AbstractClassLoader: java.net.URL findResourceImpl(int,java.lang.String)>
<com.ibm.oti.vm.AbstractClassLoader: java.net.URL access$100(com.ibm.oti.vm.AbstractClassLoader,int,java.lang.String)>
<com.ibm.oti.vm.AbstractClassLoader$1: java.lang.Object run()>
<com.ibm.oti.vm.AbstractClassLoader$2: java.lang.Object run()>
<java.lang.SecurityManager: void checkRead(java.lang.String)>
<java.io.File: java.lang.String[] normalizedList()>
<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>
<sun.misc.ExtensionDependency: java.io.File[] getExtFiles(java.io.File[])>
<sun.misc.ExtensionDependency: java.io.File[] access$300(java.io.File[])>
<sun.misc.ExtensionDependency$3: java.io.File[] run()>
<sun.misc.ExtensionDependency$3: java.lang.Object run()>
<sun.misc.ExtensionDependency: java.io.File[] getInstalledExtensions()>
<java.io.File: java.lang.String[] list()>
<sun.net.www.protocol.file.FileURLConnection: void connect()>
<java.io.File: long length()>
<sun.misc.URLClassPath$FileLoader$1: int getContentLength()>
<java.io.File: boolean isDirectory()>
<java.io.File: java.net.URI toURI()>
<java.io.File: boolean exists()>
<sun.security.jca.ProviderConfig$1: java.lang.Boolean run()>
<sun.security.jca.ProviderConfig$1: java.lang.Object run()>
<sun.security.jca.ProviderConfig: void checkSunPKCS11Solaris()>
<sun.security.jca.ProviderConfig: void <init>(java.lang.String,java.lang.String)>
<sun.security.jca.ProviderList: void <init>()>
<sun.security.jca.ProviderList: void <init>(sun.security.jca.ProviderList$1)>
<sun.security.jca.ProviderList$2: sun.security.jca.ProviderList run()>
<sun.security.jca.ProviderList$2: java.lang.Object run()>
<sun.security.jca.ProviderList: sun.security.jca.ProviderList fromSecurityProperties()>
<sun.security.jca.Providers: void <clinit>()>
<sun.security.jca.Providers: sun.security.jca.ProviderList getSystemProviderList()>
<sun.security.jca.Providers: sun.security.jca.ProviderList getFullProviderList()>
<java.security.Security: java.security.Provider[] getProviders()>
<sun.security.x509.AlgorithmId: java.util.HashMap computeOidTable()>
<sun.security.x509.AlgorithmId: java.util.Map oidTable()>
<sun.security.x509.AlgorithmId: sun.security.util.ObjectIdentifier algOID(java.lang.String)>
<sun.security.x509.AlgorithmId: sun.security.x509.AlgorithmId get(java.lang.String)>
<sun.security.jca.Providers: sun.security.jca.ProviderList getProviderList()>
<java.security.SecureRandom: java.lang.String getPrngAlgorithm()>
<sun.security.jca.GetInstance: java.util.List getServices(java.lang.String,java.lang.String)>
<java.security.KeyFactory: void <init>(java.lang.String)>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>
<sun.security.util.SignatureUtil: java.lang.String checkName(java.lang.String)>
<sun.security.util.SignatureUtil: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String,byte[])>
<sun.security.util.SignatureUtil: java.security.spec.AlgorithmParameterSpec getParamSpec(java.lang.String,java.security.AlgorithmParameters)>
<sun.security.jca.Providers: java.lang.Object startJarVerification()>
<sun.security.jca.GetInstance: java.security.Provider$Service getService(java.lang.String,java.lang.String,java.lang.String)>
<sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.lang.String)>
<java.security.Security: java.lang.Object[] getImpl(java.lang.String,java.lang.String,java.lang.String)>
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
<sun.security.util.AnchorCertificates$1: java.lang.Void run()>
<sun.security.util.AnchorCertificates$1: java.lang.Object run()>
<sun.security.util.AnchorCertificates: void <clinit>()>
<sun.security.util.AnchorCertificates: java.util.Set access$102(java.util.Set)>
<sun.security.util.JarConstraintsParameters: boolean anchorIsJdkCA()>
<sun.security.util.DisabledAlgorithmConstraints$jdkCAConstraint: void permits(sun.security.util.ConstraintsParameters)>
<sun.security.util.DisabledAlgorithmConstraints$Constraint: boolean next(sun.security.util.ConstraintsParameters)>
<sun.security.util.DisabledAlgorithmConstraints$DenyAfterConstraint: void permits(sun.security.util.ConstraintsParameters)>
<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: void permits(sun.security.util.ConstraintsParameters)>
<sun.security.util.DisabledAlgorithmConstraints$UsageConstraint: void permits(sun.security.util.ConstraintsParameters)>
<sun.security.util.AnchorCertificates: java.util.Set access$100()>
<sun.security.util.AnchorCertificates: sun.security.util.Debug access$200()>
<sun.security.util.AnchorCertificates: java.util.Set access$000()>
<sun.security.util.AnchorCertificates: java.util.Set access$002(java.util.Set)>
<sun.security.util.AnchorCertificates: boolean issuerOf(java.security.cert.X509Certificate)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<sun.security.util.SignatureFileVerifier: java.security.MessageDigest getDigest(java.lang.String)>
<sun.security.x509.X509CertImpl: java.lang.String getFingerprint(java.lang.String,java.security.cert.X509Certificate)>
<sun.security.provider.SecureRandom: void init(byte[])>
<sun.security.provider.SecureRandom: void <init>(byte[])>
<sun.security.provider.SecureRandom: void <init>(byte[],sun.security.provider.SecureRandom$1)>
<sun.security.provider.SecureRandom: void <init>()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>
<java.security.Security: java.security.Provider getProvider(java.lang.String)>
<sun.security.jca.GetInstance: java.util.List getServices(java.util.List)>
<sun.security.jca.Providers: java.security.Provider getSunProvider()>
<sun.security.util.ManifestEntryVerifier$SunProviderHolder: void <clinit>()>
<sun.security.util.ManifestEntryVerifier$SunProviderHolder: java.security.Provider access$000()>
<sun.security.jca.Providers: sun.security.jca.ProviderList beginThreadProviderList(sun.security.jca.ProviderList)>
<sun.security.jca.Providers: void setSystemProviderList(sun.security.jca.ProviderList)>
<sun.security.jca.Providers: void stopJarVerification(java.lang.Object)>
<sun.security.jca.Providers: void endThreadProviderList(sun.security.jca.ProviderList)>
<sun.security.jca.Providers: sun.security.jca.ProviderList getThreadProviderList()>
<sun.security.jca.Providers: void changeThreadProviderList(sun.security.jca.ProviderList)>
<sun.security.jca.ProviderConfig: void <init>(java.lang.String)>
<sun.security.jca.ProviderList: sun.security.jca.ProviderList getJarList(java.lang.String[])>
<sun.util.cldr.CLDRLocaleProviderAdapter$1: java.lang.Boolean run()>
<sun.util.cldr.CLDRLocaleProviderAdapter$1: java.lang.Object run()>
<sun.util.cldr.CLDRLocaleProviderAdapter: void <init>()>
<sun.util.locale.provider.LocaleProviderAdapter: void <clinit>()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set createLanguageTagSet(java.lang.String)>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DateFormatSymbolsProvider getDateFormatSymbolsProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CurrencyNameProvider getCurrencyNameProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.NumberFormatProvider getNumberFormatProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.LocaleNameProvider getLocaleNameProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.spi.CalendarProvider getCalendarProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DateFormatProvider getDateFormatProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.CollatorProvider getCollatorProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CalendarDataProvider getCalendarDataProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.TimeZoneNameProvider getTimeZoneNameProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.BreakIteratorProvider getBreakIteratorProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.CalendarNameProvider getCalendarNameProvider()>
<sun.util.locale.provider.JRELocaleProviderAdapter: java.text.spi.DecimalFormatSymbolsProvider getDecimalFormatSymbolsProvider()>
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter forJRE()>
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getResourceBundleBased()>
<java.time.format.DateTimeTextProvider: java.lang.Object getLocalizedResource(java.lang.String,java.util.Locale)>
<sun.util.locale.provider.FallbackLocaleProviderAdapter: java.util.Set createLanguageTagSet(java.lang.String)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.List getAdapterPreference()>
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)>
<sun.util.locale.provider.JRELocaleProviderAdapter: void <clinit>()>
<sun.util.locale.provider.JRELocaleProviderAdapter: boolean isNonENLangSupported()>
<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter forType(sun.util.locale.provider.LocaleProviderAdapter$Type)>
<sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>
<sun.util.locale.provider.JRELocaleProviderAdapter$1: java.lang.Boolean run()>
<sun.util.locale.provider.JRELocaleProviderAdapter$1: java.lang.Object run()>
<com.ibm.oti.vm.AbstractClassLoader: java.io.InputStream openFile(java.lang.String)>
<sun.misc.ExtensionDependency$2: java.io.File run()>
<sun.misc.ExtensionDependency$2: java.lang.Object run()>
<sun.misc.ExtensionDependency: java.io.File checkExtensionExists(java.lang.String)>
<sun.misc.FileURLMapper: boolean exists()>
<java.io.File: boolean isFile()>
<java.io.FileInputStream: void <init>(java.io.File)>
<java.io.FileInputStream: void <init>(java.lang.String)>
<sun.util.calendar.CalendarSystem$1: java.util.Properties run()>
<sun.util.calendar.CalendarSystem$1: java.lang.Object run()>
<sun.util.calendar.CalendarSystem: java.util.Properties getCalendarProperties()>
<sun.misc.URLClassPath$FileLoader$1: java.io.InputStream getInputStream()>
<java.io.FileReader: void <init>(java.io.File)>
<java.io.File: long lastModified()>
<java.lang.SecurityManager: void checkWrite(java.lang.String)>
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>
<java.io.FileOutputStream: void <init>(java.lang.String)>
<sun.net.www.protocol.file.FileURLConnection: java.security.Permission getPermission()>
<sun.net.www.protocol.jar.JarURLConnection: java.security.Permission getPermission()>
<java.lang.SecurityManager: void checkExec(java.lang.String)>
<sun.security.provider.PolicyFile: java.lang.String canonPath(java.lang.String)>
<java.io.ExpiringCache: void put(java.lang.String,java.lang.String)>
<java.time.format.Parsed: void resolveTimeFields()>
<java.time.chrono.IsoChronology: java.time.LocalDate resolveYearOfEra(java.util.Map,java.time.format.ResolverStyle)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate resolveYearOfEra(java.util.Map,java.time.format.ResolverStyle)>
<java.util.HashSet: boolean remove(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor: void addWorkerFailed(java.util.concurrent.ThreadPoolExecutor$Worker)>
<java.util.concurrent.ThreadPoolExecutor: void processWorkerExit(java.util.concurrent.ThreadPoolExecutor$Worker,boolean)>
<java.time.chrono.AbstractChronology: java.time.chrono.ChronoLocalDate resolveYMAA(java.util.Map,java.time.format.ResolverStyle)>
<java.time.chrono.IsoChronology: void resolveProlepticMonth(java.util.Map,java.time.format.ResolverStyle)>
<java.time.chrono.AbstractChronology: java.time.chrono.ChronoLocalDate resolveYAD(java.util.Map,java.time.format.ResolverStyle)>
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.chrono.ChronoLocalDate resolveWoY(java.util.Map,java.time.chrono.Chronology,int,long,int,java.time.format.ResolverStyle)>
<java.time.temporal.IsoFields$Field$3: java.time.chrono.ChronoLocalDate resolve(java.util.Map,java.time.temporal.TemporalAccessor,java.time.format.ResolverStyle)>
<java.time.temporal.IsoFields$Field$3: java.time.temporal.TemporalAccessor resolve(java.util.Map,java.time.temporal.TemporalAccessor,java.time.format.ResolverStyle)>
<java.time.chrono.AbstractChronology: java.time.chrono.ChronoLocalDate resolveYAA(java.util.Map,java.time.format.ResolverStyle)>
<sun.net.www.protocol.jar.JarFileFactory: void close(java.util.jar.JarFile)>
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.chrono.ChronoLocalDate resolveWBY(java.util.Map,java.time.chrono.Chronology,int,java.time.format.ResolverStyle)>
<java.util.HashMap$HashIterator: void remove()>
<java.security.Provider: void removeInvalidServices(java.util.Map)>
<java.security.Provider: void ensureLegacyParsed()>
<java.security.Provider: java.util.Set getServices()>
<java.time.format.Parsed: void crossCheck(java.time.temporal.TemporalAccessor)>
<java.time.format.Parsed: void crossCheck()>
<java.util.LinkedHashMap$LinkedHashIterator: void remove()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<java.util.PropertyPermissionCollection: void add(java.security.Permission)>
<java.security.Permissions: void add(java.security.Permission)>
<java.lang.Class: void allocateAllPermissionsPD()>
<java.lang.Class: java.security.ProtectionDomain getProtectionDomainInternal()>
<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>
<java.security.Permissions: java.security.PermissionCollection getPermissionCollection(java.security.Permission,boolean)>
<java.time.format.DateTimeParseContext: java.lang.Long getParsed(java.time.temporal.TemporalField)>
<java.util.regex.UnicodeProp: java.util.regex.UnicodeProp forPOSIXName(java.lang.String)>
<java.lang.Class: java.util.HashMap getMethodSet(java.util.HashMap,boolean,boolean)>
<java.lang.Class: java.lang.reflect.Method getMostSpecificMethodFromAllInterfacesOfCurrentClass(java.util.HashMap,java.lang.reflect.Method,java.lang.String,java.lang.Class[])>
<java.lang.Class: java.lang.reflect.Method getMostSpecificMethodFromAllInterfacesOfAllSuperclasses(java.util.HashMap,java.lang.String,java.lang.Class[])>
<java.text.SimpleDateFormat: int matchString(java.lang.String,int,int,java.util.Map,java.text.CalendarBuilder)>
<java.util.regex.UnicodeProp: java.util.regex.UnicodeProp forName(java.lang.String)>
<sun.security.util.CurveDB: void add(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.util.regex.Pattern)>
<sun.security.util.CurveDB: void <clinit>()>
<sun.security.util.CurveDB: sun.security.util.NamedCurve lookup(java.security.spec.ECParameterSpec)>
<sun.security.util.DisabledAlgorithmConstraints: java.util.List getNamedCurveFromKey(java.security.Key)>
<sun.security.util.CurveDB: java.lang.String[] getNamesByOID(java.lang.String)>
<sun.security.util.ManifestDigester: sun.security.util.ManifestDigester$Entry get(java.lang.String,boolean)>
<java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<java.security.ProtectionDomain$2$1: java.security.PermissionCollection get(java.security.ProtectionDomain)>
<sun.security.x509.CertificateExtensions: sun.security.x509.Extension get(java.lang.String)>
<sun.security.x509.X509CertInfo: void verifyCert(sun.security.x509.X500Name,sun.security.x509.CertificateExtensions)>
<sun.security.x509.X509CertInfo: java.lang.Object get(java.lang.String)>
<sun.security.x509.X509CertImpl: sun.security.x509.SerialNumber getSerialNumberObject()>
<sun.security.x509.X509CertImpl: java.math.BigInteger getSerialNumber()>
<sun.security.x509.X509CertImpl: javax.security.auth.x500.X500Principal getIssuerX500Principal()>
<sun.security.util.JarConstraintsParameters: java.lang.String toString()>
<sun.security.x509.X509CertImpl: java.security.PublicKey getPublicKey()>
<sun.security.x509.X509CertImpl: java.security.Principal getIssuerDN()>
<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>
<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>
<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>
<sun.security.x509.X509CertImpl: boolean[] getKeyUsage()>
<sun.security.x509.X509CertImpl: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
<sun.security.x509.X509CertImpl: boolean hasUnsupportedCriticalExtension()>
<sun.security.x509.X509CertImpl: java.security.Principal getSubjectDN()>
<sun.security.x509.CRLExtensions: sun.security.x509.Extension get(java.lang.String)>
<sun.security.x509.X509CRLEntryImpl: sun.security.x509.Extension getExtension(sun.security.util.ObjectIdentifier)>
<sun.security.x509.X509CRLEntryImpl: sun.security.x509.CertificateIssuerExtension getCertificateIssuerExtension()>
<sun.security.x509.X509CRLImpl: javax.security.auth.x500.X500Principal getCertIssuer(sun.security.x509.X509CRLEntryImpl,javax.security.auth.x500.X500Principal)>
<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>
<sun.security.x509.OIDMap: java.lang.String getName(sun.security.util.ObjectIdentifier)>
<java.util.PropertyResourceBundle: java.lang.Object handleGetObject(java.lang.String)>
<java.util.ResourceBundle: java.lang.Object getObject(java.lang.String)>
<java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getDateTimePattern(java.lang.String,java.lang.String,int,java.lang.String)>
<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>
<sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>
<javax.security.auth.Subject$SecureSet$1: void remove()>
<sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>
<javax.security.auth.Subject: void <init>(boolean,java.util.Set,java.util.Set,java.util.Set)>
<sun.security.provider.PolicyParser$PrincipalEntry: void <init>(java.lang.String,java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCollationData()>
<sun.util.cldr.CLDRLocaleProviderAdapter: java.util.Set createLanguageTagSet(java.lang.String)>
<java.util.ResourceBundle: java.util.Set handleKeySet()>
<java.util.ResourceBundle: boolean containsKey(java.lang.String)>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: boolean isRestrictedServiceAllowed(java.security.Provider$Service)>
<openj9.internal.security.RestrictedSecurity: boolean isServiceAllowed(java.security.Provider$Service)>
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service access$200(sun.security.jca.ProviderList$ServiceList,int)>
<sun.security.jca.ProviderList$ServiceList$1: java.security.Provider$Service next()>
<sun.security.jca.ProviderList$ServiceList$1: java.lang.Object next()>
<java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>
<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>
<sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>
<java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>
<java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL,java.lang.ClassLoader)>
<java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL,java.lang.ClassLoader,java.lang.Package$1)>
<java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>
<java.net.URLClassLoader: void definePackageInternal(java.lang.String,java.util.jar.Manifest,java.net.URL)>
<java.net.URLClassLoader: boolean isSealed(java.lang.String,java.util.jar.Manifest)>
<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>
<sun.misc.ExtensionInfo: void <init>(java.lang.String,java.util.jar.Attributes)>
<java.time.format.ZoneName: java.lang.String toZid(java.lang.String,java.util.Locale)>
<java.time.format.DateTimeTextProvider$LocaleStore: java.util.Iterator getTextIterator(java.time.format.TextStyle)>
<java.time.format.DateTimeFormatterBuilder$1: java.util.Iterator getTextIterator(java.time.chrono.Chronology,java.time.temporal.TemporalField,java.time.format.TextStyle,java.util.Locale)>
<java.time.format.DateTimeFormatterBuilder$1: java.util.Iterator getTextIterator(java.time.temporal.TemporalField,java.time.format.TextStyle,java.util.Locale)>
<sun.reflect.Reflection: java.lang.reflect.Method[] filterMethods(java.lang.Class,java.lang.reflect.Method[])>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<java.time.format.ZoneName: void <clinit>()>
<java.time.format.ZoneName: java.lang.String toZid(java.lang.String)>
<java.security.Provider: java.lang.String getEngineName(java.lang.String)>
<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>
<openj9.internal.security.RestrictedSecurity: void <clinit>()>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: void initProviders()>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: void init()>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: void <init>(java.lang.String,java.util.Properties)>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: void <init>(java.lang.String,java.util.Properties,openj9.internal.security.RestrictedSecurity$1)>
<openj9.internal.security.RestrictedSecurity: boolean isProviderAllowed(java.lang.Class)>
<openj9.internal.security.RestrictedSecurity: void access$1200(java.lang.Exception)>
<openj9.internal.security.RestrictedSecurity: void checkIfKnownProfileSupported()>
<sun.security.jca.ProviderConfig: java.security.Provider getProvider()>
<sun.security.jca.ProviderList: java.security.Provider getProvider(java.lang.String)>
<sun.security.jca.ProviderList: int loadAll()>
<sun.security.jca.ProviderList: sun.security.jca.ProviderList removeInvalid()>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: boolean isRestrictedProviderAllowed(java.lang.String)>
<openj9.internal.security.RestrictedSecurity: boolean isProviderAllowed(java.lang.String)>
<openj9.internal.security.RestrictedSecurity: void checkFIPSCompatibility(java.util.Properties)>
<openj9.internal.security.RestrictedSecurity: void access$1300(java.lang.String)>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: void initConstraints()>
<openj9.internal.security.RestrictedSecurity: void setProperties(java.util.Properties)>
<openj9.internal.security.RestrictedSecurity: void getProfileID(java.util.Properties)>
<openj9.internal.security.RestrictedSecurity: boolean isEnabled()>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: void initProperties()>
<openj9.internal.security.RestrictedSecurity: java.lang.String getRandomAlgorithm()>
<openj9.internal.security.RestrictedSecurity: sun.security.util.Debug access$1100()>
<openj9.internal.security.RestrictedSecurity: void printStackTraceAndExit(java.lang.String)>
<openj9.internal.security.RestrictedSecurity: void setProviders(java.util.Properties)>
<java.security.Provider$Service: java.lang.String getAttribute(java.lang.String)>
<java.security.Provider$Service: boolean hasKeyAttributes()>
<java.security.Provider$Service: boolean supportsParameter(java.lang.Object)>
<sun.util.locale.LanguageTag: sun.util.locale.LanguageTag parse(java.lang.String,sun.util.locale.ParseStatus)>
<java.time.format.DateTimeFormatterBuilder: void parsePattern(java.lang.String)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendPattern(java.lang.String)>
<java.lang.ProcessEnvironment$StringEnvironment: java.lang.String get(java.lang.Object)>
<java.lang.ProcessEnvironment$StringEnvironment: java.lang.Object get(java.lang.Object)>
<java.time.format.Parsed: long getLong(java.time.temporal.TemporalField)>
<sun.security.x509.OIDMap: java.lang.Class getClass(sun.security.util.ObjectIdentifier)>
<sun.security.x509.CRLExtensions: void parseExtension(sun.security.x509.Extension)>
<sun.security.x509.UnparseableExtension: void <init>(sun.security.x509.Extension,java.lang.Throwable)>
<sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>
<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface getGNI(sun.security.util.ObjectIdentifier,byte[])>
<sun.security.x509.OtherName: void <init>(sun.security.util.DerValue)>
<sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(int,int,int,int)>
<sun.text.normalizer.UnicodeSet: void <clinit>()>
<sun.text.normalizer.UnicodeSet: void _appendToPat(java.lang.StringBuffer,java.lang.String,boolean)>
<sun.text.normalizer.UnicodeSet: java.lang.StringBuffer _generatePattern(java.lang.StringBuffer,boolean,boolean)>
<sun.text.normalizer.UnicodeSet: java.lang.StringBuffer _toPattern(java.lang.StringBuffer,boolean)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add(java.lang.String)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add(int[],int,int)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet addAll(sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add_unchecked(int,int)>
<sun.text.normalizer.UCharacterProperty: sun.text.normalizer.VersionInfo getAge(int)>
<sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(java.lang.String)>
<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>
<java.lang.Class: java.util.HashMap addInterfaceMethods(java.util.HashMap,java.util.Set,java.util.HashMap,boolean)>
<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>
<java.util.jar.JarInputStream: java.util.zip.ZipEntry createZipEntry(java.lang.String)>
<java.util.jar.Manifest: java.util.jar.Attributes getTrustedAttributes(java.lang.String)>
<java.util.jar.JavaUtilJarAccessImpl: java.util.jar.Attributes getTrustedAttributes(java.util.jar.Manifest,java.lang.String)>
<sun.security.x509.AVAKeyword: java.lang.String getKeyword(sun.security.util.ObjectIdentifier,int,java.util.Map)>
<java.time.chrono.AbstractChronology: void addFieldValue(java.util.Map,java.time.temporal.ChronoField,long)>
<sun.security.x509.AVAKeyword: boolean hasKeyword(sun.security.util.ObjectIdentifier,int)>
<sun.security.x509.AVA: boolean hasRFC2253Keyword()>
<sun.security.x509.AVAComparator: int compare(sun.security.x509.AVA,sun.security.x509.AVA)>
<sun.security.x509.AVAComparator: int compare(java.lang.Object,java.lang.Object)>
<java.util.regex.Pattern$CharPropertyNames: java.util.regex.Pattern$CharProperty charPropertyFor(java.lang.String)>
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty charPropertyNodeFor(java.lang.String)>
<sun.security.util.ManifestEntryVerifier: java.util.Map algsPermittedStatusForSigners(java.util.Map,java.security.CodeSigner[])>
<sun.security.x509.X509CertInfo: int attributeMap(java.lang.String)>
<java.lang.Class: void addMethod(java.util.HashMap,java.lang.Class$MethodInfo)>
<java.security.UnresolvedPermissionCollection: java.util.List getUnresolvedPermissions(java.security.Permission)>
<java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>
<sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.security.Provider$Service,java.lang.Class)>
<sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String,java.security.Provider)>
<java.security.Security: java.lang.Object[] getImpl(java.lang.String,java.lang.String,java.security.Provider)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>
<java.security.Signature: boolean isSpi(java.security.Provider$Service)>
<java.security.Signature: boolean access$200(java.security.Provider$Service)>
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.BaseLocale getBaseLocale()>
<java.util.Locale$Builder: java.util.Locale build()>
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale getLookupLocale(java.util.Locale)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Set getAvailableLocaleSet()>
<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>
<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult access$200(java.nio.charset.CoderResult$Cache,int)>
<java.nio.charset.CoderResult: java.nio.charset.CoderResult malformedForLength(int)>
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>
<java.lang.StringCoding$StringEncoder: byte[] encode(char[],int,int)>
<java.lang.StringCoding: byte[] encode(java.lang.String,char[],int,int)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<sun.security.util.DerValue: sun.security.util.DerInputStream init(byte,java.lang.String)>
<sun.security.util.DerValue: void <init>(java.lang.String)>
<sun.security.x509.AVA: sun.security.util.DerValue parseString(java.io.Reader,int,int,java.lang.StringBuilder)>
<sun.security.util.DerValue: void <init>(byte,java.lang.String)>
<com.ibm.oti.util.Util: void convert(java.lang.String,java.lang.StringBuilder)>
<com.ibm.oti.util.Util: java.lang.String urlEncode(java.lang.String)>
<com.ibm.oti.vm.AbstractClassLoader: java.lang.String toURLString(java.lang.String,int)>
<sun.security.util.DerOutputStream: void writeString(java.lang.String,byte,java.lang.String)>
<sun.security.util.DerOutputStream: void putIA5String(java.lang.String)>
<sun.security.util.DerOutputStream: void putPrintableString(java.lang.String)>
<sun.security.x509.AVA: java.lang.String toKeywordValueString(java.lang.String)>
<java.lang.StringCoding: byte[] encode(char[],int,int)>
<java.lang.String: byte[] getBytes()>
<java.lang.ProcessImpl: byte[] toCString(java.lang.String)>
<com.ibm.oti.util.Util: byte[] getBytes(java.lang.String)>
<java.lang.ClassLoader: void loadLibraryWithPath(java.lang.String,java.lang.ClassLoader,java.lang.String)>
<java.lang.ClassLoader: void loadLibraryWithClassLoader(java.lang.String,java.lang.ClassLoader)>
<java.lang.System: void loadLibrary(java.lang.String)>
<java.net.InetAddress$1: java.lang.Void run()>
<java.net.InetAddress$1: java.lang.Object run()>
<jdk.crypto.jniprovider.NativeCrypto: java.lang.Long lambda$static$0()>
<jdk.crypto.jniprovider.NativeCrypto$lambda_static_0__19: java.lang.Object run()>
<jdk.crypto.jniprovider.NativeCrypto: void <clinit>()>
<sun.security.provider.SunEntries: void <clinit>()>
<sun.security.provider.SunEntries: java.lang.String getSeedSource()>
<jdk.crypto.jniprovider.NativeCrypto: boolean isAlgorithmEnabled(java.lang.String,java.lang.String,boolean,java.lang.String)>
<jdk.crypto.jniprovider.NativeCrypto: boolean isAlgorithmEnabled(java.lang.String,java.lang.String)>
<jdk.crypto.jniprovider.NativeCrypto: boolean isLoaded()>
<jdk.crypto.jniprovider.NativeCrypto: long getVersion()>
<sun.net.PortConfig$1: java.lang.Void run()>
<sun.net.PortConfig$1: java.lang.Object run()>
<sun.net.PortConfig: void <clinit>()>
<sun.net.PortConfig: int access$002(int)>
<sun.net.PortConfig: int getLower()>
<java.net.SocketPermission$1: java.lang.Integer run()>
<java.net.SocketPermission$1: java.lang.Object run()>
<sun.net.PortConfig: int access$102(int)>
<sun.net.PortConfig: int getUpper()>
<java.net.NetworkInterface$1: java.lang.Void run()>
<java.net.NetworkInterface$1: java.lang.Object run()>
<java.net.NetworkInterface: void <clinit>()>
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>
<java.net.DefaultInterface: java.net.NetworkInterface chooseDefaultInterface()>
<java.net.DefaultInterface: void <clinit>()>
<java.net.DefaultInterface: java.net.NetworkInterface getDefault()>
<sun.security.provider.SeedGenerator: void addNetworkAdapterInfo(java.security.MessageDigest)>
<sun.security.provider.SeedGenerator: void access$000(java.security.MessageDigest)>
<java.net.Inet6Address: void initstr(java.lang.String,byte[],java.lang.String)>
<java.net.Inet6Address: void <init>(java.lang.String,byte[],java.lang.String)>
<java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)>
<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOfQueryOnly(java.lang.String)>
<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(java.lang.String)>
<java.lang.ProcessEnvironment$StringEnvironment: java.lang.String put(java.lang.String,java.lang.String)>
<java.lang.ProcessEnvironment$StringEnvironment: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder environment(java.lang.String[])>
<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOfQueryOnly(java.lang.Object)>
<java.lang.UNIXProcess: byte[] toCString(java.lang.String)>
<java.lang.UNIXProcess: void <clinit>()>
<java.lang.UNIXProcess: java.io.FileDescriptor newFileDescriptor(int)>
<java.lang.UNIXProcess$ProcessPipeOutputStream: void <init>(int)>
<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void <init>(int)>
<java.lang.UNIXProcess$ProcessPipeInputStream: void <init>(int)>
<java.lang.UNIXProcess$lambda_static_1__20: java.lang.Object run()>
<java.util.zip.ZipCoder: byte[] getBytes(java.lang.String)>
<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>
<java.util.jar.JarFile: java.util.jar.JarEntry getManEntry()>
<sun.net.www.protocol.jar.URLJarFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
<java.util.zip.ZipCoder: byte[] getBytesUTF8(java.lang.String)>
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<sun.nio.cs.StreamEncoder: void flushLeftoverChar(java.nio.CharBuffer,boolean)>
<sun.nio.cs.StreamEncoder: void implWrite(char[],int,int)>
<sun.nio.cs.StreamEncoder: void write(char[],int,int)>
<java.io.OutputStreamWriter: void write(char[],int,int)>
<java.io.BufferedWriter: void flushBuffer()>
<java.io.BufferedWriter: void write(java.lang.String,int,int)>
<java.io.Writer: void write(java.lang.String)>
<java.io.BufferedWriter: void newLine()>
<java.io.PrintStream: void newLine()>
<java.io.PrintStream: void println()>
<sun.misc.HexDumpEncoder: void encodeLineSuffix(java.io.OutputStream)>
<sun.misc.CharacterEncoder: void encode(java.io.InputStream,java.io.OutputStream)>
<sun.misc.CharacterEncoder: java.lang.String encode(byte[])>
<sun.security.pkcs.ESSCertId: java.lang.String toString()>
<sun.security.pkcs.SigningCertificateInfo: java.lang.String toString()>
<sun.misc.CharacterEncoder: void encodeBuffer(java.io.InputStream,java.io.OutputStream)>
<sun.misc.CharacterEncoder: java.lang.String encodeBuffer(byte[])>
<sun.security.x509.IPAddressName: java.lang.String toString()>
<sun.security.pkcs.SignerInfo: java.lang.String toString()>
<sun.security.x509.UnparseableExtension: java.lang.String toString()>
<com.ibm.oti.util.Util: void appendLnTo(java.lang.Appendable)>
<java.lang.Throwable: java.lang.StackTraceElement[] printStackTrace(java.lang.Appendable,java.lang.StackTraceElement[],int,boolean,java.util.Set)>
<java.lang.Throwable: void printStackTraceHelper(java.lang.Appendable)>
<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: java.lang.String format(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Throwable)>
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Throwable)>
<sun.util.logging.PlatformLogger: void info(java.lang.String,java.lang.Throwable)>
<java.util.Currency: void info(java.lang.String,java.lang.Throwable)>
<java.util.Currency: void access$400(java.lang.String,java.lang.Throwable)>
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String)>
<sun.util.logging.PlatformLogger: void warning(java.lang.String)>
<sun.util.logging.PlatformLogger: void info(java.lang.String)>
<sun.util.logging.PlatformLogger: void config(java.lang.String)>
<sun.util.locale.provider.LocaleServiceProviderPool: void config(java.lang.Class,java.lang.String)>
<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>
<java.lang.Throwable: void printStackTrace()>
<java.security.AccessControlContext: boolean checkPermissionWithCache(java.security.Permission,java.security.DomainCombiner,java.lang.Object[],int,java.security.AccessControlContext,boolean,java.security.Permission[],java.security.AccessControlContext,java.security.AccessControlContext$AccessCache)>
<openj9.internal.security.RestrictedSecurity: void printStackTraceAndExit(java.lang.Exception)>
<java.security.AccessController: void debugPrintStack(boolean,java.security.Permission)>
<java.security.AccessController: boolean debugHelperJEP140(java.lang.Object[],java.security.Permission)>
<java.security.AccessController: boolean debugHelperPreJEP140(java.lang.Object[],java.security.Permission)>
<java.security.Policy$2: java.security.Policy run()>
<java.security.Policy$2: java.lang.Object run()>
<java.lang.Thread: void dumpStack()>
<sun.security.jca.ProviderConfig$2: java.security.Provider run()>
<sun.security.jca.ProviderConfig$2: java.lang.Object run()>
<sun.security.jca.ProviderConfig: java.security.Provider doLoadProvider()>
<java.security.AccessController: void throwACE(boolean,java.security.Permission,java.security.ProtectionDomain,boolean)>
<java.security.UnresolvedPermission: java.security.Permission resolve(java.security.Permission,java.security.cert.Certificate[])>
<java.security.MessageDigest: java.lang.String toString()>
<java.io.PrintStream: void write(java.lang.String)>
<java.io.PrintStream: void print(java.lang.String)>
<sun.misc.HexDumpEncoder: void encodeAtom(java.io.OutputStream,byte[],int,int)>
<java.io.PrintStream: java.io.PrintStream append(java.lang.CharSequence)>
<java.io.PrintStream: java.lang.Appendable append(java.lang.CharSequence)>
<com.ibm.oti.util.Util: void appendTo(java.lang.Appendable,java.lang.CharSequence)>
<com.ibm.oti.util.Util: void printStackTraceElement(java.lang.StackTraceElement,java.lang.Object,java.lang.Appendable,boolean)>
<com.ibm.oti.util.Util: void appendTo(java.lang.Appendable,int)>
<com.ibm.oti.util.Util: void appendTo(java.lang.Appendable,java.lang.CharSequence,int)>
<sun.misc.HexDumpEncoder: void encodeLinePrefix(java.io.OutputStream,int)>
<java.nio.charset.CharsetEncoder: java.nio.ByteBuffer encode(java.nio.CharBuffer)>
<java.net.URI: void appendEncoded(java.lang.StringBuffer,char)>
<java.net.URI: java.lang.String quote(java.lang.String,long,long)>
<java.net.URI: void appendSchemeSpecificPart(java.lang.StringBuffer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
<java.net.URI: java.lang.String toString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.net.URI: void defineSchemeSpecificPart()>
<java.net.URI: java.lang.String getRawSchemeSpecificPart()>
<java.net.URI: java.lang.String getSchemeSpecificPart()>
<sun.security.x509.URIName: sun.security.x509.URIName nameConstraint(sun.security.util.DerValue)>
<java.net.URI: void appendFragment(java.lang.StringBuffer,java.lang.String)>
<java.net.URI: void appendAuthority(java.lang.StringBuffer,java.lang.String,java.lang.String,java.lang.String,int)>
<java.lang.StringCoding: byte[] encode(java.nio.charset.Charset,char[],int,int)>
<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>
<java.util.Base64$Decoder: byte[] decode(java.lang.String)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>
<sun.nio.cs.StreamDecoder: int implRead(char[],int,int)>
<sun.nio.cs.StreamDecoder: int read(char[],int,int)>
<sun.nio.cs.StreamDecoder: int read0()>
<sun.nio.cs.StreamDecoder: int read()>
<java.io.InputStreamReader: int read()>
<java.io.StreamTokenizer: int read()>
<java.io.StreamTokenizer: int nextToken()>
<javax.crypto.CryptoPolicyParser: java.lang.String match(java.lang.String)>
<javax.crypto.CryptoPolicyParser: boolean peekAndMatch(java.lang.String)>
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$GrantEntry parseGrantEntry(java.util.Hashtable)>
<javax.crypto.CryptoPolicyParser: void read(java.io.Reader)>
<java.security.AccessControlContext: int debugSetting()>
<java.security.AccessControlContext: void debugPrintAccess()>
<java.security.AccessController: java.security.ProtectionDomain[] generatePDarray(java.security.DomainCombiner,java.security.AccessControlContext,java.lang.Object[],boolean,int)>
<java.security.AccessController: java.security.AccessControlContext getContextHelper(boolean)>
<java.security.AccessController: java.security.AccessControlContext getContext()>
<java.util.ServiceLoader: void <init>(java.lang.Class,java.lang.ClassLoader)>
<java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>
<java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>
<java.nio.charset.Charset$1: void <init>()>
<java.nio.charset.Charset: java.util.Iterator providers()>
<java.nio.charset.Charset: java.util.Iterator access$000()>
<java.nio.charset.Charset$2: java.nio.charset.Charset run()>
<java.nio.charset.Charset$2: java.lang.Object run()>
<java.util.ServiceLoader: java.util.ServiceLoader loadInstalled(java.lang.Class)>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>
<java.lang.UNIXProcess: java.util.concurrent.Executor lambda$static$1()>
<javax.crypto.CryptoPolicyParser: int match()>
<java.io.InputStreamReader: int read(char[],int,int)>
<java.io.BufferedReader: int read1(char[],int,int)>
<java.io.BufferedReader: int read(char[],int,int)>
<java.io.BufferedReader: void fill()>
<java.io.BufferedReader: int read()>
<java.io.BufferedReader: boolean ready()>
<java.io.BufferedReader: java.lang.String readLine(boolean)>
<java.io.BufferedReader: java.lang.String readLine()>
<java.io.Reader: int read(char[])>
<java.util.Properties$LineReader: int readLine()>
<java.util.Properties: void load0(java.util.Properties$LineReader)>
<java.util.Properties: void load(java.io.InputStream)>
<com.ibm.oti.vm.MsgHelp: java.util.Hashtable loadMessages(java.lang.String)>
<java.util.Properties: void load(java.io.Reader)>
<java.lang.StringCoding$StringDecoder: char[] decode(byte[],int,int)>
<java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>
<java.lang.StringCoding: char[] decode(byte[],int,int)>
<java.lang.String: void <init>(byte[],int,int)>
<java.io.ByteArrayOutputStream: java.lang.String toString()>
<java.lang.String: void <init>(byte[])>
<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>
<java.lang.ProcessEnvironment: void <clinit>()>
<java.lang.ProcessEnvironment: int access$100(byte[])>
<java.lang.ProcessEnvironment$ExternalData: int hashCode()>
<java.util.TreeMap$Entry: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: int hashCode()>
<java.lang.ProcessEnvironment$ExternalData: boolean equals(java.lang.Object)>
<java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>
<java.text.ChoiceFormat: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>
<java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<java.lang.ProcessEnvironment: void access$200(java.lang.String)>
<java.lang.ProcessEnvironment: void access$400(java.lang.String)>
<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(java.lang.String)>
<java.lang.ProcessEnvironment$Variable: int compareTo(java.lang.ProcessEnvironment$Variable)>
<java.lang.ProcessEnvironment$Variable: int compareTo(java.lang.Object)>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.security.ProtectionDomain$2$1: void put(java.security.ProtectionDomain,java.security.PermissionCollection)>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.LocaleExtensions getLocaleExtensions()>
<java.util.TreeSet: boolean add(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<java.util.HashSet: void <init>(java.util.Collection)>
<java.time.zone.TzdbZoneRulesProvider: java.util.Set provideZoneIds()>
<sun.net.RegisteredDomain: void <clinit>()>
<java.util.TreeSet: boolean addAll(java.util.Collection)>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>
<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>
<java.util.Arrays: void legacyMergeSort(java.lang.Object[],int,int)>
<java.util.Arrays: void sort(java.lang.Object[],int,int)>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>
<java.util.HashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>
<java.util.TreeMap: boolean containsKey(java.lang.Object)>
<java.util.TreeSet: boolean contains(java.lang.Object)>
<java.util.AbstractSet: boolean removeAll(java.util.Collection)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet removeAll(sun.text.normalizer.UnicodeSet)>
<java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>
<java.util.TreeSet: boolean remove(java.lang.Object)>
<java.util.TreeMap: int compare(java.lang.Object,java.lang.Object)>
<java.lang.ProcessEnvironment$Value: int compareTo(java.lang.ProcessEnvironment$Value)>
<java.lang.ProcessEnvironment$Value: int compareTo(java.lang.Object)>
<java.lang.ProcessEnvironment: int access$300(byte[],byte[])>
<java.lang.ProcessEnvironment: boolean access$000(byte[],byte[])>
<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>
<java.lang.String: void <init>(byte[],int,int,java.lang.String)>
<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>
<java.lang.String: void <init>(byte[],java.lang.String)>
<sun.security.x509.AVA: java.lang.String getEmbeddedHexString(java.util.List)>
<sun.security.util.DerValue: java.lang.String getBMPString()>
<sun.security.util.DerValue: java.lang.String getGeneralString()>
<sun.security.util.DerValue: java.lang.String getPrintableString()>
<sun.security.util.DerValue: java.lang.String getIA5String()>
<sun.security.x509.URIName: void <init>(sun.security.util.DerValue)>
<sun.security.x509.DNSName: void <init>(sun.security.util.DerValue)>
<sun.security.x509.RFC822Name: void <init>(sun.security.util.DerValue)>
<sun.security.util.DerValue: java.lang.String getT61String()>
<java.util.jar.Manifest: java.lang.String parseName(byte[],int)>
<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)>
<java.util.zip.ZipFile: java.util.zip.ZipEntry getZipEntry(java.lang.String,long)>
<java.util.zip.ZipFile: java.util.zip.ZipEntry access$900(java.util.zip.ZipFile,java.lang.String,long)>
<java.util.zip.ZipFile$ZipEntryIterator: java.util.zip.ZipEntry next()>
<java.util.zip.ZipFile$ZipEntryIterator: java.util.zip.ZipEntry nextElement()>
<java.util.zip.ZipFile$ZipEntryIterator: java.lang.Object nextElement()>
<java.util.jar.JarFile$JarEntryIterator: java.util.jar.JarEntry next()>
<java.util.jar.JarFile$JarEntryIterator: java.util.jar.JarEntry nextElement()>
<java.util.jar.JarFile$JarEntryIterator: java.lang.Object nextElement()>
<sun.misc.URLClassPath$JarLoader: boolean validIndex(java.lang.String)>
<java.util.zip.ZipCoder: java.lang.String toStringUTF8(byte[],int)>
<java.net.URI: java.lang.String decode(java.lang.String)>
<java.net.URI: java.lang.String getAuthority()>
<java.io.File: void <init>(java.net.URI)>
<java.net.URI: java.lang.String getPath()>
<java.net.URI: java.lang.String getFragment()>
<java.net.URI: java.lang.String getQuery()>
<java.net.URI: java.lang.String getUserInfo()>
<sun.net.www.ParseUtil: java.lang.String decode(java.lang.String)>
<java.net.JarURLConnection: void parseSpecs(java.net.URL)>
<java.net.JarURLConnection: void <init>(java.net.URL)>
<sun.misc.FileURLMapper: java.lang.String getPath()>
<java.nio.charset.CharsetEncoder: boolean isLegalReplacement(byte[])>
<sun.nio.cs.US_ASCII$Encoder: boolean isLegalReplacement(byte[])>
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder replaceWith(byte[])>
<java.nio.charset.CharsetEncoder: void <init>(java.nio.charset.Charset,float,float,byte[])>
<java.nio.charset.CharsetEncoder: void <init>(java.nio.charset.Charset,float,float)>
<sun.nio.cs.US_ASCII$Encoder: void <init>(java.nio.charset.Charset)>
<sun.nio.cs.US_ASCII$Encoder: void <init>(java.nio.charset.Charset,sun.nio.cs.US_ASCII$1)>
<sun.nio.cs.US_ASCII: java.nio.charset.CharsetEncoder newEncoder()>
<sun.nio.cs.ThreadLocalCoders$2: java.lang.Object create(java.lang.Object)>
<sun.nio.cs.ThreadLocalCoders$Cache: java.lang.Object forName(java.lang.Object)>
<sun.nio.cs.ThreadLocalCoders: java.nio.charset.CharsetDecoder decoderFor(java.lang.Object)>
<sun.nio.cs.ThreadLocalCoders: java.nio.charset.CharsetEncoder encoderFor(java.lang.Object)>
<sun.nio.cs.StreamEncoder: void <init>(java.io.OutputStream,java.lang.Object,java.nio.charset.Charset)>
<sun.nio.cs.StreamEncoder: sun.nio.cs.StreamEncoder forOutputStreamWriter(java.io.OutputStream,java.lang.Object,java.lang.String)>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<java.io.PrintStream: void <init>(boolean,java.io.OutputStream)>
<java.io.PrintStream: void <init>(java.io.OutputStream,boolean)>
<java.lang.System: java.io.PrintStream createConsole(java.io.FileDescriptor,java.lang.String)>
<java.io.PrintStream: void <init>(java.io.OutputStream)>
<sun.misc.CharacterEncoder: void encodeBufferPrefix(java.io.OutputStream)>
<sun.misc.HexDumpEncoder: void encodeBufferPrefix(java.io.OutputStream)>
<sun.nio.cs.StreamEncoder: sun.nio.cs.StreamEncoder forOutputStreamWriter(java.io.OutputStream,java.lang.Object,java.nio.charset.Charset)>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>
<java.io.PrintStream: void <init>(boolean,java.io.OutputStream,java.nio.charset.Charset)>
<java.io.PrintStream: void <init>(java.io.OutputStream,boolean,java.lang.String)>
<java.util.zip.ZipCoder: java.nio.charset.CharsetEncoder encoder()>
<java.lang.StringCoding$StringEncoder: void <init>(java.nio.charset.Charset,java.lang.String)>
<java.lang.StringCoding$StringEncoder: void <init>(java.nio.charset.Charset,java.lang.String,java.lang.StringCoding$1)>
<sun.nio.cs.US_ASCII$Decoder: java.nio.charset.CoderResult decodeBufferLoop(java.nio.ByteBuffer,java.nio.CharBuffer)>
<sun.nio.cs.US_ASCII$Decoder: java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer)>
<sun.nio.cs.Surrogate$Parser: int parse(char,char[],int,int)>
<sun.nio.cs.US_ASCII$Encoder: java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer,java.nio.ByteBuffer)>
<sun.nio.cs.US_ASCII$Encoder: java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer)>
<sun.nio.cs.US_ASCII$Decoder: java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer,java.nio.CharBuffer)>
<sun.nio.cs.Surrogate$Parser: int parse(char,java.nio.CharBuffer)>
<sun.nio.cs.US_ASCII$Encoder: java.nio.charset.CoderResult encodeBufferLoop(java.nio.CharBuffer,java.nio.ByteBuffer)>
<java.nio.charset.CoderResult: java.nio.charset.CoderResult unmappableForLength(int)>
<sun.nio.cs.Surrogate$Parser: java.nio.charset.CoderResult unmappableResult()>
<sun.util.locale.provider.LocaleDataMetaInfo: java.lang.String getSupportedLocaleString(java.lang.String)>
<sun.misc.JarIndex: java.util.LinkedList get(java.lang.String)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: java.util.List getConstraints(java.lang.String)>
<sun.reflect.Reflection: java.lang.reflect.Field[] filterFields(java.lang.Class,java.lang.reflect.Field[])>
<java.lang.Class: java.lang.reflect.Field getDeclaredFieldInternal(java.lang.String,boolean)>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<java.util.concurrent.SynchronousQueue$TransferStack: void <clinit>()>
<java.util.concurrent.SynchronousQueue$TransferStack: boolean shouldSpin(java.util.concurrent.SynchronousQueue$TransferStack$SNode)>
<java.util.concurrent.SynchronousQueue$TransferStack: java.util.concurrent.SynchronousQueue$TransferStack$SNode awaitFulfill(java.util.concurrent.SynchronousQueue$TransferStack$SNode,boolean,long)>
<java.util.concurrent.SynchronousQueue$TransferStack: java.lang.Object transfer(java.lang.Object,boolean,long)>
<java.util.concurrent.SynchronousQueue: java.lang.Object take()>
<java.util.concurrent.ThreadPoolExecutor: java.lang.Runnable getTask()>
<java.util.concurrent.SynchronousQueue: boolean offer(java.lang.Object)>
<java.util.concurrent.SynchronousQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<java.util.concurrent.SynchronousQueue: void <init>(boolean)>
<java.util.concurrent.SynchronousQueue: void <init>()>
<java.util.concurrent.SynchronousQueue$TransferStack: boolean casHead(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.util.concurrent.SynchronousQueue$TransferStack$SNode)>
<java.util.concurrent.SynchronousQueue$TransferStack: void clean(java.util.concurrent.SynchronousQueue$TransferStack$SNode)>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1: java.lang.reflect.Field run()>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1: java.lang.Object run()>
<java.lang.Class: java.lang.Object[] getEnumConstantsShared()>
<java.lang.Access: java.lang.Enum[] getEnumConstantsShared(java.lang.Class)>
<java.util.EnumSet: java.lang.Enum[] getUniverse(java.lang.Class)>
<java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>
<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>
<java.lang.UNIXProcess$Platform: void <init>(java.lang.String,int,java.lang.UNIXProcess$LaunchMechanism[])>
<java.lang.UNIXProcess$Platform: void <clinit>()>
<java.lang.UNIXProcess$Platform: java.lang.UNIXProcess$Platform get()>
<java.lang.UNIXProcess$Platform$lambda_get_2__21: java.lang.Object run()>
<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>
<java.nio.file.Files: java.nio.file.Path createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
<java.lang.Class: java.util.Map enumConstantDirectory()>
<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript valueOf(java.lang.String)>
<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript forName(java.lang.String)>
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty unicodeScriptPropertyFor(java.lang.String)>
<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type valueOf(java.lang.String)>
<java.util.regex.UnicodeProp: java.util.regex.UnicodeProp valueOf(java.lang.String)>
<java.lang.UNIXProcess$LaunchMechanism: java.lang.UNIXProcess$LaunchMechanism valueOf(java.lang.String)>
<java.lang.UNIXProcess$Platform: java.lang.UNIXProcess$LaunchMechanism lambda$launchMechanism$1()>
<java.lang.UNIXProcess$Platform$lambda_launchMechanism_1__25: java.lang.Object run()>
<java.lang.UNIXProcess$Platform: java.lang.UNIXProcess$LaunchMechanism launchMechanism()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void <clinit>()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void acquire(int)>
<java.util.concurrent.ThreadPoolExecutor$Worker: void lock()>
<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: void increaseConfirmedCount(int)>
<java.util.concurrent.locks.ReentrantLock$NonfairSync: void lock()>
<java.util.concurrent.locks.ReentrantLock: void lock()>
<java.util.concurrent.ThreadPoolExecutor: void tryTerminate()>
<java.util.concurrent.ThreadPoolExecutor: boolean remove(java.lang.Runnable)>
<java.util.concurrent.ThreadPoolExecutor: void shutdown()>
<java.util.concurrent.ThreadPoolExecutor: java.lang.Void lambda$finalize$0()>
<java.util.concurrent.ThreadPoolExecutor$lambda_finalize_0__23: java.lang.Object run()>
<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor: void checkShutdownAccess()>
<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(java.util.Collection)>
<java.util.concurrent.ThreadPoolExecutor: void interruptIdleWorkers(boolean)>
<java.util.concurrent.ThreadPoolExecutor: void interruptIdleWorkers()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean compareAndSetWaitStatus(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int,int)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void doReleaseShared()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void setHeadAndPropagate(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void doAcquireShared(int)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void acquireShared(int)>
<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: byte[] findSharedClass(java.lang.String,java.lang.String,com.ibm.oti.shared.SharedClassURLClasspathHelper$IndexHolder)>
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: byte[] findSharedClass(java.lang.String,com.ibm.oti.shared.SharedClassURLClasspathHelper$IndexHolder)>
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: java.net.URL[] getClasspath()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean releaseShared(int)>
<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean transferForSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: void doSignalAll(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: void signalAll()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void cancelAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean acquireQueued(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean shouldParkAfterFailedAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void unparkSuccessor(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean release(int)>
<java.util.concurrent.locks.ReentrantLock: void unlock()>
<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>
<java.util.concurrent.ThreadPoolExecutor$Worker: void unlock()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean compareAndSetHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node enq(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean compareAndSetNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean compareAndSetTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean compareAndSetState(int,int)>
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int fullTryAcquireShared(java.lang.Thread)>
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int tryAcquireShared(int)>
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: boolean tryAcquire(int)>
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: boolean tryReleaseShared(int)>
<java.util.concurrent.locks.ReentrantLock$Sync: boolean nonfairTryAcquire(int)>
<java.util.concurrent.locks.ReentrantLock$NonfairSync: boolean tryAcquire(int)>
<java.util.concurrent.ThreadPoolExecutor$Worker: boolean tryAcquire(int)>
<java.util.concurrent.ThreadPoolExecutor$Worker: boolean tryLock()>
<java.lang.Class: long getFieldOffset(java.lang.Class,java.lang.String,long)>
<java.lang.Class: java.lang.String cacheCanonicalName(java.lang.String)>
<java.lang.Class: java.lang.String getCanonicalName()>
<java.lang.Class: java.lang.String cacheSimpleName(java.lang.String)>
<java.lang.Class: long getFieldOffset(java.lang.String)>
<java.lang.Class: java.lang.Class getDeclaringClass()>
<java.lang.Class: java.lang.Class[] getInterfaces()>
<java.util.concurrent.locks.LockSupport: void <clinit>()>
<java.util.concurrent.locks.LockSupport: void unpark(java.lang.Thread)>
<java.util.concurrent.SynchronousQueue$TransferQueue: java.lang.Object transfer(java.lang.Object,boolean,long)>
<java.util.concurrent.locks.LockSupport: void setBlocker(java.lang.Thread,java.lang.Object)>
<java.util.concurrent.locks.LockSupport: void parkNanos(java.lang.Object,long)>
<java.util.concurrent.SynchronousQueue$TransferQueue: java.lang.Object awaitFulfill(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.lang.Object,boolean,long)>
<java.util.concurrent.locks.LockSupport: void park(java.lang.Object)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean parkAndCheckInterrupt()>
<java.io.File: void <clinit>()>
<sun.net.www.MimeEntry: void setImageFileName(java.lang.String)>
<sun.net.www.MimeTable: void fill(sun.net.www.MimeEntry,java.lang.String,java.lang.String)>
<sun.net.www.MimeTable: void parse(java.lang.String,sun.net.www.MimeEntry)>
<sun.net.www.MimeTable: void parse(java.lang.String,java.lang.String)>
<sun.misc.Launcher$ExtClassLoader: java.io.File[] getExtDirs()>
<java.io.File: java.lang.String getName()>
<java.io.UnixFileSystem: int getBooleanAttributes(java.io.File)>
<sun.misc.ExtensionDependency: java.io.File[] getExtDirs()>
<sun.misc.ExtensionDependency: java.io.File[] access$000()>
<java.io.File: boolean isInvalid()>
<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>
<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String)>
<sun.security.util.PropertyExpander: java.lang.String expand(java.lang.String,boolean)>
<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String,boolean)>
<sun.security.provider.PolicyParser: java.lang.String getStorePassURL()>
<sun.security.provider.PolicyParser: java.lang.String expand(java.lang.String)>
<sun.security.util.PropertyExpander: java.lang.String expand(java.lang.String)>
<sun.security.jca.ProviderConfig$3: java.lang.String run()>
<sun.security.jca.ProviderConfig$3: java.lang.Object run()>
<sun.security.jca.ProviderConfig: java.lang.String expand(java.lang.String)>
<sun.security.provider.PolicyParser: java.lang.String[] parseExtDirs(java.lang.String,int)>
<java.io.File: java.lang.String slashify(java.lang.String,boolean)>
<sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>
<sun.misc.Launcher: java.io.File[] access$300(java.lang.String)>
<java.io.File: int compareTo(java.io.File)>
<java.io.File: int compareTo(java.lang.Object)>
<java.io.File: boolean equals(java.lang.Object)>
<java.io.File: java.io.File getAbsoluteFile()>
<java.io.File: void <init>(java.io.File,java.lang.String)>
<java.io.File: int hashCode()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.security.Security: java.io.File securityPropFile(java.lang.String)>
<java.io.UnixFileSystem: java.lang.String parentOrNull(java.lang.String)>
<java.io.File: void <init>(java.lang.String,java.lang.String)>
<java.io.File: boolean isAbsolute()>
<java.util.jar.JarFile: boolean isKnownNotToHaveSpecialAttributes()>
<java.io.File: java.lang.String getParent()>
<java.io.FilePermission: boolean impliesIgnoreMask(java.io.FilePermission)>
<java.io.FilePermission: boolean implies(java.security.Permission)>
<java.io.FilePermissionCollection: boolean implies(java.security.Permission)>
<java.io.File: void <init>(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: void <clinit>()>
<java.util.Random: void <clinit>()>
<java.util.Random: void <init>()>
<sun.security.provider.PolicyFile$PolicyInfo: void <init>(int)>
<java.util.concurrent.ThreadLocalRandom: void <init>()>
<java.util.Random: long seedUniquifier()>
<java.security.SecureRandom: void setSeed(long)>
<java.util.Random: void <init>(long)>
<java.security.SecureRandom: void <init>(java.security.SecureRandomSpi,java.security.Provider,java.lang.String)>
<java.util.concurrent.ThreadLocalRandom: void localInit()>
<java.util.concurrent.ThreadLocalRandom: int nextSecondarySeed()>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doPut(java.lang.Object,java.lang.Object,boolean)>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListSet: boolean add(java.lang.Object)>
<java.util.concurrent.ThreadLocalRandom: int advanceProbe(int)>
<java.security.SecureRandom: void <clinit>()>
<java.util.concurrent.ThreadLocalRandom: int getProbe()>
<java.util.Random: void setSeed(long)>
<java.util.concurrent.locks.ReentrantReadWriteLock: void <clinit>()>
<java.util.concurrent.locks.ReentrantReadWriteLock: long getThreadId(java.lang.Thread)>
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter: void <init>()>
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter: java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter initialValue()>
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter: java.lang.Object initialValue()>
<java.lang.ThreadLocal: java.lang.Object setInitialValue()>
<java.lang.ThreadLocal: java.lang.Object get()>
<jdk.internal.misc.TerminatingThreadLocal: void register(jdk.internal.misc.TerminatingThreadLocal)>
<java.lang.StringCoding: java.lang.Object deref(java.lang.ThreadLocal)>
<sun.misc.FormattedFloatingDecimal: char[] getBuffer()>
<sun.misc.FormattedFloatingDecimal: void <init>(int,sun.misc.FormattedFloatingDecimal$Form,sun.misc.FloatingDecimal$BinaryToASCIIConverter)>
<sun.misc.FormattedFloatingDecimal: sun.misc.FormattedFloatingDecimal valueOf(double,int,sun.misc.FormattedFloatingDecimal$Form)>
<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$BinaryToASCIIBuffer getBinaryToASCIIBuffer()>
<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$BinaryToASCIIConverter getBinaryToASCIIConverter(double,boolean)>
<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$BinaryToASCIIConverter getBinaryToASCIIConverter(double)>
<sun.misc.FloatingDecimal: java.lang.String toJavaFormatString(double)>
<java.lang.Double: java.lang.String toString(double)>
<java.lang.String: java.lang.String valueOf(double)>
<java.lang.StringBuilder: java.lang.StringBuilder append(double)>
<java.security.Provider: java.lang.String toString()>
<java.text.DigitList: void set(boolean,double,int,boolean)>
<java.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.Format$FieldDelegate)>
<java.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>
<java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$BinaryToASCIIConverter getBinaryToASCIIConverter(float)>
<sun.misc.FloatingDecimal: java.lang.String toJavaFormatString(float)>
<java.lang.Float: java.lang.String toString(float)>
<java.lang.String: java.lang.String valueOf(float)>
<java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<java.util.Hashtable: void <init>(int,float)>
<java.util.Hashtable: void <init>(int)>
<com.ibm.oti.shared.SharedClassPermissionCollection: void <init>()>
<com.ibm.oti.shared.SharedClassPermission: java.security.PermissionCollection newPermissionCollection()>
<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])>
<java.util.Hashtable: void <init>()>
<java.util.Properties: void <init>(java.util.Properties)>
<java.util.Properties: void <init>()>
<sun.misc.VM: void <clinit>()>
<sun.misc.VM: java.lang.String getSavedProperty(java.lang.String)>
<sun.misc.URLClassPath: void <clinit>()>
<sun.misc.URLClassPath: boolean access$1800()>
<sun.misc.URLClassPath$1: void <init>(sun.misc.URLClassPath,java.lang.String,boolean)>
<sun.misc.URLClassPath: java.util.Enumeration findResources(java.lang.String,boolean)>
<java.net.URLClassLoader: java.util.Enumeration findResources(java.lang.String)>
<sun.misc.URLClassPath: boolean knownToNotExist(java.lang.String)>
<sun.misc.Launcher$AppClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
<sun.misc.URLClassPath: void <init>(java.net.URL[],java.net.URLStreamHandlerFactory,java.security.AccessControlContext)>
<sun.misc.URLClassPath: void <init>(java.net.URL[],java.net.URLStreamHandlerFactory,java.security.AccessControlContext,com.ibm.oti.shared.SharedClassURLClasspathHelper)>
<sun.misc.URLClassPath: boolean access$1400()>
<sun.misc.URLClassPath: boolean access$600()>
<sun.misc.URLClassPath: void addURL(java.net.URL)>
<java.net.URLClassLoader: void addURL(java.net.URL)>
<sun.misc.Launcher$ExtClassLoader: void addExtURL(java.net.URL)>
<sun.misc.URLClassPath: boolean access$1700()>
<sun.misc.URLClassPath: void validateLookupCache(int,java.lang.String)>
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getNextLoader(int[],int)>
<sun.misc.URLClassPath: sun.misc.URLClassPath$Loader access$100(sun.misc.URLClassPath,int[],int)>
<sun.misc.URLClassPath: void initLookupCache(java.lang.ClassLoader)>
<sun.misc.URLClassPath: void disableAllLookupCaches()>
<java.util.zip.ZipFile: void <clinit>()>
<java.util.zip.ZipFile$1: int getManifestNum(java.util.jar.JarFile)>
<java.util.zip.ZipFile: long access$1200(long)>
<java.util.zip.ZipFile$ZipFileInputStream: void <init>(java.util.zip.ZipFile,long)>
<java.util.zip.ZipFile$1: boolean startsWithLocHeader(java.util.zip.ZipFile)>
<java.util.zip.ZipFile: void access$1000(long,long)>
<java.util.zip.ZipFile$ZipFileInputStream: void close()>
<java.util.zip.ZipFile$ZipFileInputStream: long skip(long)>
<java.util.zip.ZipFile$ZipFileInputStream: int read(byte[],int,int)>
<java.util.zip.ZipFile$ZipFileInputStream: int read()>
<java.util.jar.JarVerifier: java.security.CodeSigner[] getCodeSigners(java.util.jar.JarFile,java.util.jar.JarEntry)>
<java.util.jar.JarVerifier: java.security.cert.Certificate[] getCerts(java.util.jar.JarFile,java.util.jar.JarEntry)>
<sun.nio.cs.StreamDecoder: int readBytes()>
<sun.nio.cs.StreamDecoder: void implClose()>
<sun.nio.cs.StreamDecoder: void close()>
<java.io.InputStreamReader: void close()>
<java.io.BufferedReader: void close()>
<java.util.jar.JarVerifier$VerifierStream: void close()>
<java.io.BufferedInputStream: void close()>
<java.util.zip.ZipFile: int access$1400(long,long,long,byte[],int,int)>
<java.util.zip.ZipFile$ZipEntryIterator: void <init>(java.util.zip.ZipFile)>
<java.util.zip.ZipFile: java.util.Enumeration entries()>
<java.util.jar.JarFile: java.util.Enumeration access$001(java.util.jar.JarFile)>
<java.util.jar.JarFile$JarEntryIterator: void <init>(java.util.jar.JarFile)>
<java.util.jar.JarFile$JarEntryIterator: void <init>(java.util.jar.JarFile,java.util.jar.JarFile$1)>
<java.util.jar.JarFile: java.util.Enumeration entries()>
<java.util.zip.ZipFile$ZipEntryIterator: boolean hasNext()>
<java.util.zip.ZipFile$ZipEntryIterator: boolean hasMoreElements()>
<java.util.jar.JarFile$JarEntryIterator: boolean hasNext()>
<java.util.jar.JarFile$JarEntryIterator: boolean hasMoreElements()>
<java.util.zip.ZipFile: long access$1100(long)>
<java.util.zip.ZipFile: long access$500(long,int)>
<java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>
<java.util.jar.JarFile: void <clinit>()>
<sun.net.www.protocol.jar.URLJarFile: void <clinit>()>
<java.util.zip.ZipFile: java.lang.String access$700(long)>
<java.net.URL: boolean isBuiltinStreamHandler(java.net.URLStreamHandler)>
<java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
<java.nio.Bits: void <clinit>()>
<java.nio.Bits: java.nio.ByteOrder byteOrder()>
<sun.misc.VM: boolean isBooted()>
<java.nio.charset.Charset: boolean atBugLevel(java.lang.String)>
<java.nio.charset.CharsetDecoder: void <init>(java.nio.charset.Charset,float,float,java.lang.String)>
<java.nio.charset.CharsetDecoder: void <init>(java.nio.charset.Charset,float,float)>
<sun.nio.cs.US_ASCII$Decoder: void <init>(java.nio.charset.Charset)>
<sun.nio.cs.US_ASCII$Decoder: void <init>(java.nio.charset.Charset,sun.nio.cs.US_ASCII$1)>
<sun.nio.cs.US_ASCII: java.nio.charset.CharsetDecoder newDecoder()>
<java.lang.StringCoding$StringDecoder: void <init>(java.nio.charset.Charset,java.lang.String)>
<java.lang.StringCoding$StringDecoder: void <init>(java.nio.charset.Charset,java.lang.String,java.lang.StringCoding$1)>
<sun.nio.cs.StreamDecoder: void <init>(java.io.InputStream,java.lang.Object,java.nio.charset.Charset)>
<sun.nio.cs.ThreadLocalCoders$1: java.lang.Object create(java.lang.Object)>
<java.util.zip.ZipCoder: java.nio.charset.CharsetDecoder decoder()>
<java.nio.charset.Charset: void checkName(java.lang.String)>
<java.nio.charset.Charset: void <init>(java.lang.String,java.lang.String[])>
<sun.nio.cs.US_ASCII: void <init>()>
<sun.nio.cs.FastCharsetProvider: java.nio.charset.Charset lookup(java.lang.String)>
<sun.nio.cs.FastCharsetProvider: java.nio.charset.Charset charsetForName(java.lang.String)>
<sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()>
<java.lang.Class: void <clinit>()>
<sun.util.locale.provider.LocaleServiceProviderPool: void <clinit>()>
<java.lang.Class$MethodInfo: void update(java.lang.reflect.Method)>
<java.lang.Class$MethodInfo: void update(java.lang.Class$MethodInfo)>
<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<java.nio.file.FileSystems$DefaultFileSystemHolder: java.nio.file.spi.FileSystemProvider getDefaultProvider()>
<java.nio.file.FileSystems$DefaultFileSystemHolder: java.nio.file.spi.FileSystemProvider access$000()>
<java.nio.file.FileSystems$DefaultFileSystemHolder$1: java.nio.file.spi.FileSystemProvider run()>
<java.nio.file.FileSystems$DefaultFileSystemHolder$1: java.lang.Object run()>
<java.nio.file.FileSystems$DefaultFileSystemHolder: java.nio.file.FileSystem defaultFileSystem()>
<java.nio.file.FileSystems$DefaultFileSystemHolder: void <clinit>()>
<java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>
<java.io.File: java.nio.file.Path toPath()>
<java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>
<sun.misc.InnocuousThread: java.lang.ClassLoader getContextClassLoader()>
<java.util.ResourceBundle$RBClassLoader: void <clinit>()>
<java.util.ResourceBundle: java.lang.ClassLoader getLoader(java.lang.Class)>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.util.ResourceBundle$Control)>
<sun.util.resources.LocaleData$2: sun.util.resources.OpenListResourceBundle run()>
<sun.util.resources.LocaleData$2: java.lang.Object run()>
<sun.util.resources.LocaleData: sun.util.resources.OpenListResourceBundle getSupplementary(java.lang.String,java.util.Locale)>
<sun.util.resources.LocaleData: boolean setSupplementary(java.lang.String,sun.util.resources.ParallelListResourceBundle)>
<sun.util.resources.LocaleData: void setSupplementary(sun.util.resources.ParallelListResourceBundle)>
<sun.util.locale.provider.LocaleResources: java.util.ResourceBundle getJavaTimeFormatData()>
<sun.util.resources.LocaleData$1: java.util.ResourceBundle run()>
<sun.util.resources.LocaleData$1: java.lang.Object run()>
<sun.util.resources.LocaleData: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>
<sun.util.resources.LocaleData: java.util.ResourceBundle getNumberFormatData(java.util.Locale)>
<sun.util.resources.LocaleData: java.util.ResourceBundle getDateFormatData(java.util.Locale)>
<sun.util.resources.LocaleData: sun.util.resources.TimeZoneNamesBundle getTimeZoneNames(java.util.Locale)>
<sun.util.locale.provider.LocaleResources: java.util.Set getZoneIDs()>
<sun.util.resources.LocaleData: java.util.ResourceBundle getCollationData(java.util.Locale)>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>
<sun.security.util.ResourcesMgr$1: java.util.ResourceBundle run()>
<sun.security.util.ResourcesMgr$1: java.lang.Object run()>
<java.util.ResourceBundle$RBClassLoader$1: java.util.ResourceBundle$RBClassLoader run()>
<java.util.ResourceBundle$RBClassLoader$1: java.lang.Object run()>
<java.util.ResourceBundle$RBClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.util.ResourceBundle$RBClassLoader: java.util.ResourceBundle$RBClassLoader access$000()>
<java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread: java.lang.ClassLoader getContextClassLoader()>
<java.lang.Integer: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<sun.net.InetAddressCachePolicy$2: java.lang.Integer run()>
<sun.net.InetAddressCachePolicy$2: java.lang.Object run()>
<sun.net.InetAddressCachePolicy: void <clinit>()>
<sun.net.InetAddressCachePolicy: int get()>
<sun.net.InetAddressCachePolicy: int getNegative()>
<sun.net.InetAddressCachePolicy$1: java.lang.Integer run()>
<sun.net.InetAddressCachePolicy$1: java.lang.Object run()>
<sun.security.util.BitArray: void set(int,boolean)>
<sun.security.x509.IPAddressName: void parseIPv6(java.lang.String)>
<sun.security.x509.IPAddressName: void <init>(java.lang.String)>
<sun.security.x509.URIName: void <init>(java.lang.String)>
<sun.security.util.BitArray: void <init>(boolean[])>
<sun.security.x509.KeyUsageExtension: void encodeThis()>
<sun.security.x509.KeyUsageExtension: void <init>(boolean[])>
<java.math.BigInteger: int bitLength()>
<java.math.BigInteger: void toString(java.math.BigInteger,java.lang.StringBuilder,int,int)>
<java.math.BigInteger: java.lang.String toString(int)>
<sun.security.util.Debug: java.lang.String toHexString(java.math.BigInteger)>
<sun.security.x509.SerialNumber: java.lang.String toString()>
<sun.security.x509.CertificateSerialNumber: java.lang.String toString()>
<java.math.BigInteger: java.lang.String toString()>
<java.math.BigDecimal: java.lang.String toPlainString()>
<java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.text.DigitList: void set(boolean,java.math.BigInteger,int)>
<java.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.Format$FieldDelegate,boolean)>
<java.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.Format$FieldDelegate)>
<java.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>
<java.text.SimpleDateFormat: void zeroPaddingNumber(int,int,int,java.lang.StringBuffer)>
<java.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition)>
<java.util.Formatter$FormatSpecifier$BigDecimalLayout: void layout(java.math.BigInteger,int,java.util.Formatter$BigDecimalLayoutForm)>
<java.util.Formatter$FormatSpecifier$BigDecimalLayout: void <init>(java.util.Formatter$FormatSpecifier,java.math.BigInteger,int,java.util.Formatter$BigDecimalLayoutForm)>
<java.security.spec.ECFieldFp: int getFieldSize()>
<java.math.BigInteger: int intLength()>
<java.math.BigInteger: java.math.BigInteger clearBit(int)>
<java.security.spec.ECFieldF2m: void <init>(int,java.math.BigInteger)>
<java.math.BigInteger: byte[] toByteArray()>
<java.math.BigDecimal: java.math.BigInteger toStrictBigInteger(java.math.BigInteger)>
<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>
<java.math.BigDecimal: java.math.BigDecimal add(long,long,int)>
<java.math.BigDecimal: java.math.BigDecimal add(long,int,long,int)>
<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>
<java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: long convertFromFraction(java.math.BigDecimal)>
<java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: java.math.BigDecimal convertToFraction(long)>
<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>
<java.math.BigDecimal: void <init>(java.math.BigInteger,int,java.math.MathContext)>
<sun.security.util.ObjectIdentifier: int pack7Oid(java.math.BigInteger,byte[],int)>
<sun.security.util.ObjectIdentifier: void init(int[],int)>
<sun.security.util.ObjectIdentifier: void <init>(int[])>
<sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>
<sun.security.x509.X500Name: void <clinit>()>
<sun.security.x509.X500Name: javax.security.auth.x500.X500Principal asX500Principal()>
<sun.security.x509.X509CertInfo: java.lang.Object getX500Name(java.lang.String,boolean)>
<sun.security.x509.X509CRLImpl: javax.security.auth.x500.X500Principal getIssuerX500Principal()>
<sun.security.x509.OIDMap: void <clinit>()>
<sun.security.x509.OIDMap: void addInternal(java.lang.String,sun.security.util.ObjectIdentifier,java.lang.String)>
<sun.security.x509.AlgorithmId: void <clinit>()>
<sun.security.x509.AlgorithmId: void <init>(sun.security.util.ObjectIdentifier,java.security.AlgorithmParameters)>
<sun.security.x509.ExtendedKeyUsageExtension: void <clinit>()>
<sun.security.x509.OIDMap$OIDInfo: java.lang.Class getClazz()>
<sun.security.x509.AlgorithmId: sun.security.util.ObjectIdentifier oid(int[])>
<sun.security.util.DerOutputStream: void putInteger(java.math.BigInteger)>
<sun.security.x509.SerialNumber: void encode(sun.security.util.DerOutputStream)>
<sun.security.x509.CertificateSerialNumber: void encode(java.io.OutputStream)>
<java.math.BigDecimal: int bigDigitLength(java.math.BigInteger)>
<java.math.BigDecimal: int precision()>
<java.math.BigDecimal: int compareMagnitude(java.math.BigDecimal)>
<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>
<java.math.BigDecimal: long longValueExact()>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.MathContext)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>
<java.math.BigDecimal: java.math.BigDecimal doRound(java.math.BigDecimal,java.math.MathContext)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigInteger,int,java.math.BigInteger,int,long,java.math.MathContext)>
<java.math.BigDecimal: java.math.BigDecimal divideSmallFastPath(long,int,long,int,long,java.math.MathContext)>
<java.math.BigDecimal: java.math.BigDecimal divide(long,int,long,int,long,java.math.MathContext)>
<java.math.BigDecimal: java.math.BigDecimal divide(long,int,java.math.BigInteger,int,long,java.math.MathContext)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigInteger,int,long,int,long,java.math.MathContext)>
<java.math.BigDecimal: boolean fractionOnly()>
<java.math.BigDecimal: long longValue()>
<java.math.BigDecimal: int intValue()>
<java.security.spec.EllipticCurve: void checkValidity(java.security.spec.ECField,java.math.BigInteger,java.lang.String)>
<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>
<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger pow(int)>
<java.math.BigDecimal: java.math.BigInteger bigTenToThe(int)>
<java.math.BigDecimal: java.math.BigInteger bigMultiplyPowerTen(int)>
<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>
<java.math.BigDecimal: java.math.BigDecimal movePointLeft(int)>
<java.math.BigDecimal: java.math.BigInteger toBigInteger()>
<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>
<java.math.BigDecimal: java.math.BigInteger bigMultiplyPowerTen(long,int)>
<java.math.BigDecimal: int compareMagnitudeNormalized(long,int,java.math.BigInteger,int)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigInteger,int,long,int,int,int)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,int)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,java.math.RoundingMode)>
<java.math.BigDecimal: java.math.BigDecimal divide(long,int,java.math.BigInteger,int,int,int)>
<java.math.BigDecimal: java.math.BigDecimal add(long,int,java.math.BigInteger,int)>
<java.math.BigDecimal: java.math.BigDecimal divide(long,int,long,int,int,int)>
<java.math.BigDecimal: java.math.BigInteger bigMultiplyPowerTen(java.math.BigInteger,int)>
<java.math.BigDecimal: int compareMagnitudeNormalized(java.math.BigInteger,int,java.math.BigInteger,int)>
<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigInteger,int,java.math.BigInteger,int)>
<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigInteger,int,java.math.BigInteger,int,int,int)>
<java.math.BigDecimal: java.math.BigInteger divideAndRoundByTenPow(java.math.BigInteger,int,int)>
<java.math.BigDecimal: java.math.BigDecimal scaledTenPow(int,int,int)>
<java.math.BigDecimal: java.math.BigDecimal roundedTenPower(int,int,int,int)>
<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>
<java.util.Base64$Decoder: int decode0(byte[],int,int,byte[])>
<java.util.Base64$Decoder: byte[] decode(byte[])>
<sun.security.util.DerIndefLenConverter: int parseLength()>
<sun.security.util.DerIndefLenConverter: byte[] convertBytes(byte[])>
<sun.security.util.DerIndefLenConverter: byte[] convertStream(java.io.InputStream,byte,byte)>
<sun.security.util.DerValue: void <init>(sun.security.util.DerInputBuffer)>
<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>
<sun.security.x509.CertificateVersion: void construct(sun.security.util.DerValue)>
<sun.security.x509.CertificateVersion: void <init>(sun.security.util.DerValue)>
<sun.security.x509.AVA: void <init>(sun.security.util.DerValue)>
<sun.security.x509.Extension: void <init>(sun.security.util.DerValue)>
<sun.security.util.DerInputStream: void init(byte[],int,int,boolean)>
<sun.security.util.DerInputStream: void <init>(byte[],int,int,boolean)>
<sun.security.util.DerValue: byte[] getOctetString()>
<sun.security.pkcs.ContentInfo: byte[] getData()>
<sun.security.x509.IPAddressName: void <init>(sun.security.util.DerValue)>
<sun.security.util.DerInputStream: void <init>(byte[])>
<sun.security.pkcs.ContentInfo: byte[] getContentBytes()>
<java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<java.nio.ByteBuffer: java.lang.String toString()>
<java.net.URI: void defineString()>
<java.net.URI: java.lang.String toString()>
<java.net.URI: java.net.URL toURL()>
<sun.security.x509.URIName: java.lang.String toString()>
<java.text.DigitList: double getDouble()>
<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<sun.security.util.SignatureFileVerifier: java.lang.String getWeakAlgorithms(java.lang.String)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeParseException createError(java.lang.CharSequence,java.lang.RuntimeException)>
<java.net.URISyntaxException: java.lang.String getMessage()>
<java.net.URI: java.net.URI create(java.lang.String)>
<java.io.FilePermission: void <clinit>()>
<java.io.FilePermission: java.lang.String getActions()>
<java.security.Permission: java.lang.String toString()>
<com.ibm.oti.vm.MsgHelp: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object[])>
<com.ibm.oti.vm.MsgHelp: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.ibm.oti.util.Msg: java.lang.String getString(java.lang.String,java.lang.Object[])>
<com.ibm.oti.util.Msg: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)>
<java.lang.ClassLoader: java.lang.String checkClassName(java.lang.String)>
<com.ibm.oti.shared.SharedAbstractHelper: void initialize(java.lang.ClassLoader,int,boolean,boolean)>
<java.lang.Class: void checkInnerClassAttrOfEnclosingClass()>
<java.lang.Class: java.lang.Object cast(java.lang.Object)>
<java.util.ServiceLoader$LazyIterator: java.lang.Object nextService()>
<java.util.ServiceLoader$LazyIterator: java.lang.Object access$700(java.util.ServiceLoader$LazyIterator)>
<java.util.ServiceLoader$LazyIterator$2: java.lang.Object run()>
<com.ibm.oti.shared.SharedClassHelperFactoryImpl: com.ibm.oti.shared.SharedClassFilter getGlobalSharingFilter()>
<com.ibm.oti.shared.SharedAbstractHelper: boolean isVerbose()>
<com.ibm.oti.shared.SharedAbstractHelper: void printVerboseError(java.lang.String)>
<com.ibm.oti.shared.SharedClassAbstractHelper: void setSharingFilter(com.ibm.oti.shared.SharedClassFilter)>
<com.ibm.oti.shared.SharedClassAbstractHelper: boolean validateClassLoader(java.lang.ClassLoader,java.lang.Class)>
<com.ibm.oti.shared.SharedAbstractHelper: void printVerboseInfo(java.lang.String)>
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: void growURLs(int)>
<com.ibm.oti.util.Msg: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)>
<com.ibm.oti.vm.MsgHelp: java.lang.String format(java.lang.String,java.lang.Object)>
<com.ibm.oti.util.Msg: java.lang.String getString(java.lang.String,java.lang.Object)>
<com.ibm.oti.util.Msg: java.lang.String getString(java.lang.String,int)>
<com.ibm.oti.util.Util: java.lang.String convertUTF8WithBuf(byte[],char[],int,int)>
<com.ibm.oti.util.Util: java.lang.String convertFromUTF8(byte[],int,int)>
<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
<java.lang.ClassLoader: void checkPackageSigners(java.lang.String,java.lang.String,java.security.cert.Certificate[])>
<java.security.AccessControlContext: boolean debugPermission(java.security.Permission)>
<com.ibm.oti.shared.SharedClassPermissionCollection: void add(java.security.Permission)>
<com.ibm.oti.vm.AbstractClassLoader: void initalizePermissions()>
<sun.misc.URLClassPath$JarLoader: boolean isRelative(java.lang.String)>
<java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<java.lang.Class: java.lang.String getSignature()>
<java.lang.Class: java.lang.String getParameterTypesSignature(boolean,java.lang.String,java.lang.Class[],java.lang.String)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<sun.security.x509.X500Name$1: java.lang.Object[] run()>
<sun.security.x509.X500Name$1: java.lang.Object run()>
<java.math.MutableBigInteger: int getLowestSetBit()>
<java.math.MutableBigInteger: java.math.MutableBigInteger divideKnuth(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>
<java.math.BigInteger: java.math.BigInteger divideKnuth(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>
<java.math.MutableBigInteger: java.math.MutableBigInteger divideKnuth(java.math.MutableBigInteger,java.math.MutableBigInteger)>
<java.math.MutableBigInteger: java.math.MutableBigInteger divide2n1n(java.math.MutableBigInteger,java.math.MutableBigInteger)>
<java.math.MutableBigInteger: java.math.MutableBigInteger divideAndRemainderBurnikelZiegler(java.math.MutableBigInteger,java.math.MutableBigInteger)>
<java.math.BigInteger: java.math.BigInteger[] divideAndRemainderBurnikelZiegler(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger divideBurnikelZiegler(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)>
<java.math.BigDecimal: java.math.BigDecimal createAndStripZerosToMatchScale(java.math.BigInteger,int,long)>
<java.math.BigDecimal: java.math.BigDecimal divideAndRound128(long,long,long,int,int,int,int)>
<java.math.BigDecimal: java.math.BigDecimal multiplyDivideAndRound(long,long,long,int,int,int)>
<java.math.BigDecimal: java.math.BigDecimal divideAndRound(java.math.BigInteger,long,int,int,int)>
<java.math.BigDecimal: java.math.BigDecimal divideAndRound(java.math.BigInteger,java.math.BigInteger,int,int,int)>
<java.math.BigDecimal: java.math.BigDecimal stripTrailingZeros()>
<java.math.MutableBigInteger: java.math.MutableBigInteger divide(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>
<java.math.MutableBigInteger: java.math.MutableBigInteger divide(java.math.MutableBigInteger,java.math.MutableBigInteger)>
<java.math.BigInteger: java.lang.String smallToString(int)>
<java.math.BigDecimal: java.math.BigInteger divideAndRound(java.math.BigInteger,java.math.BigInteger,int)>
<java.math.MutableBigInteger: java.math.MutableBigInteger divide3n2n(java.math.MutableBigInteger,java.math.MutableBigInteger)>
<java.math.BigInteger: java.math.BigInteger[] divideAndRemainderKnuth(java.math.BigInteger)>
<java.net.URL: void <clinit>()>
<sun.misc.URLClassPath: java.net.URL[] getURLs()>
<java.net.URLClassLoader: java.net.URL[] getURLs()>
<com.ibm.oti.shared.SharedClassAbstractHelper: java.net.URL convertJarURL(java.net.URL)>
<sun.net.www.protocol.jar.Handler: boolean sameFile(java.net.URL,java.net.URL)>
<java.net.URLStreamHandler: boolean equals(java.net.URL,java.net.URL)>
<java.net.URL: boolean equals(java.lang.Object)>
<java.security.AccessControlContext: boolean debugCodeBase(java.net.URL)>
<java.lang.Package: boolean isSealed(java.net.URL)>
<java.security.CodeSource: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>
<java.util.ArrayList: boolean contains(java.lang.Object)>
<sun.net.ProgressMonitor: void updateProgress(sun.net.ProgressSource)>
<sun.net.ProgressSource: void updateProgress(long,long)>
<sun.net.www.MeteredStream: void <init>(java.io.InputStream,sun.net.ProgressSource,long)>
<sun.net.ProgressMonitor: void unregisterSource(sun.net.ProgressSource)>
<sun.net.ProgressSource: void finishTracking()>
<java.util.Locale: void <clinit>()>
<javax.crypto.Cipher$Transform: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<javax.crypto.Cipher: java.util.List getTransforms(java.lang.String)>
<java.util.Locale: java.util.Locale getDefault()>
<java.lang.String: java.lang.String toUpperCase()>
<java.security.KeyStore: void <init>(java.security.KeyStoreSpi,java.security.Provider,java.lang.String)>
<java.util.Formatter$FormatSpecifier: void print(java.lang.String)>
<java.util.Formatter$FormatSpecifier: void printBoolean(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>
<java.util.ResourceBundle$Control: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>
<java.lang.String: java.lang.String toLowerCase()>
<sun.net.util.URLUtil: java.lang.String urlNoFragString(java.net.URL)>
<sun.net.www.URLConnection: boolean isProxiedHost(java.lang.String)>
<sun.net.www.MimeEntry: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
<sun.net.www.MimeEntry: void <init>(java.lang.String)>
<java.net.URLStreamHandler: int hashCode(java.net.URL)>
<sun.misc.JarFilter: boolean accept(java.io.File,java.lang.String)>
<com.ibm.oti.shared.SharedClassPermission: void decodeActions(java.lang.String)>
<com.ibm.oti.shared.SharedClassPermission: void <init>(java.lang.String,java.lang.String)>
<com.ibm.oti.shared.SharedClassPermission: void <init>(java.lang.ClassLoader,java.lang.String)>
<com.ibm.oti.shared.SharedAbstractHelper: boolean checkPermission(java.lang.SecurityManager,java.lang.ClassLoader,java.lang.String)>
<com.ibm.oti.shared.SharedAbstractHelper: boolean checkWritePermission(java.lang.ClassLoader)>
<com.ibm.oti.shared.SharedAbstractHelper: boolean checkReadPermission(java.lang.ClassLoader)>
<com.ibm.oti.shared.SharedAbstractHelperFactory: boolean checkPermission(java.lang.ClassLoader,java.lang.String)>
<com.ibm.oti.shared.SharedAbstractHelperFactory: boolean canFind(java.lang.ClassLoader)>
<com.ibm.oti.shared.SharedAbstractHelperFactory: boolean canStore(java.lang.ClassLoader)>
<sun.net.www.MimeTable: sun.net.www.MimeEntry findByFileName(java.lang.String)>
<sun.net.www.MimeTable: java.lang.String getContentTypeFor(java.lang.String)>
<java.net.URLConnection$1: java.lang.String getContentTypeFor(java.lang.String)>
<java.util.Locale: java.util.Locale getDefault(java.util.Locale$Category)>
<java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>
<java.security.Provider: void <clinit>()>
<java.security.Provider: java.lang.String[] getTypeAndAlgorithm(java.lang.String)>
<java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.security.Provider: java.util.Map access$1000()>
<java.util.Locale: java.util.Locale initDefault()>
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>
<java.util.ResourceBundle$Control$CandidateListCache: java.lang.Object createObject(java.lang.Object)>
<sun.util.locale.LocaleObjectCache: java.lang.Object get(java.lang.Object)>
<sun.util.locale.BaseLocale: sun.util.locale.BaseLocale getInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.Locale: java.util.Locale getInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,sun.util.locale.LocaleExtensions)>
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.Locale: java.util.Locale initDefault(java.util.Locale$Category)>
<java.util.Locale: java.util.Locale getInstance(java.lang.String,java.lang.String,java.lang.String)>
<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.util.Locale: void <init>(java.lang.String,java.lang.String)>
<java.util.ResourceBundle$Control: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)>
<java.util.Locale: java.util.Locale getInstance(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>
<java.util.Locale: java.util.Locale stripExtensions()>
<java.util.Locale: java.util.Locale createConstant(java.lang.String,java.lang.String)>
<sun.security.util.SignatureFileVerifier: void <clinit>()>
<sun.security.util.SignatureFileVerifier: boolean matches(java.security.CodeSigner[],java.security.CodeSigner[],java.security.CodeSigner[])>
<sun.security.util.SignatureFileVerifier: boolean isSubSet(java.security.CodeSigner[],java.security.CodeSigner[])>
<sun.security.util.SignatureFileVerifier: int initializeMaxSigFileSize()>
<sun.security.util.SignatureFileVerifier: java.lang.String toHex(byte[])>
<javax.crypto.Cipher: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec(java.security.AlgorithmParameters)>
<javax.crypto.Cipher: void checkCryptoPerm(javax.crypto.CipherSpi,java.security.Key,java.security.AlgorithmParameters)>
<javax.crypto.Cipher: void implInit(javax.crypto.CipherSpi,int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>
<javax.crypto.Cipher: void checkCryptoPerm(javax.crypto.CipherSpi,java.security.Key)>
<java.util.ResourceBundle$Control: java.lang.String toBundleName(java.lang.String,java.util.Locale)>
<java.util.ResourceBundle$Control: boolean needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)>
<java.util.ResourceBundle: java.util.ResourceBundle findBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control)>
<sun.util.resources.LocaleData$LocaleDataResourceBundleControl: java.lang.String toBundleName(java.lang.String,java.util.Locale)>
<java.security.Provider$UString: void <init>(java.lang.String)>
<java.security.Provider$Service: void addAttribute(java.lang.String,java.lang.String)>
<sun.security.x509.AlgorithmId: java.lang.String getEncAlgFromSigAlg(java.lang.String)>
<sun.security.x509.DNSName: int hashCode()>
<javax.crypto.Cipher: javax.crypto.Cipher$Transform getTransform(java.security.Provider$Service,java.util.List)>
<java.util.Locale: sun.util.locale.LocaleExtensions access$800(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.Locale$Builder: java.util.Locale$Builder setLocale(java.util.Locale)>
<java.text.MessageFormat: int findKeyword(java.lang.String,java.lang.String[])>
<sun.util.resources.LocaleData$SupplementaryResourceBundleControl: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)>
<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean)>
<java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>
<java.util.Locale$Cache: java.util.Locale createObject(java.util.Locale$LocaleKey)>
<java.util.Locale$Cache: java.lang.Object createObject(java.lang.Object)>
<sun.security.x509.RFC822Name: int constrains(sun.security.x509.GeneralNameInterface)>
<sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<sun.security.x509.RFC822Name: int hashCode()>
<sun.util.locale.provider.FallbackLocaleProviderAdapter: void <init>()>
<sun.security.x509.DNSName: int constrains(sun.security.x509.GeneralNameInterface)>
<sun.security.x509.URIName: int constrains(sun.security.x509.GeneralNameInterface)>
<sun.security.util.KnownOIDs: void register(sun.security.util.KnownOIDs)>
<sun.security.util.KnownOIDs: void access$100(sun.security.util.KnownOIDs)>
<sun.security.util.KnownOIDs$10: void accept(sun.security.util.KnownOIDs)>
<sun.security.util.KnownOIDs$10: void accept(java.lang.Object)>
<java.util.Arrays$ArrayList: void forEach(java.util.function.Consumer)>
<sun.security.util.KnownOIDs: void <clinit>()>
<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>
<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)>
<java.util.Formatter$FormatSpecifier: int precision(java.lang.String)>
<java.util.Formatter$FormatSpecifier: void <init>(java.util.Formatter,java.util.regex.Matcher)>
<java.util.IdentityHashMap: int capacity(int)>
<java.util.IdentityHashMap: void <init>(int)>
<jdk.internal.misc.TerminatingThreadLocal$1: java.util.Collection initialValue()>
<jdk.internal.misc.TerminatingThreadLocal$1: java.lang.Object initialValue()>
<java.lang.Integer: void getChars(int,int,char[])>
<java.lang.Integer: java.lang.String toString(int)>
<java.lang.String: java.lang.String valueOf(int)>
<java.lang.AssertionError: void <init>(int)>
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void dtoa(int,long,int,boolean)>
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void access$100(sun.misc.FloatingDecimal$BinaryToASCIIBuffer,int,long,int,boolean)>
<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfMulPow52(long,int,int)>
<sun.misc.FloatingDecimal$ASCIIToBinaryBuffer: double doubleValue()>
<sun.misc.FloatingDecimal: double parseDouble(java.lang.String)>
<java.lang.Double: double parseDouble(java.lang.String)>
<java.lang.Double: java.lang.Double valueOf(java.lang.String)>
<java.text.ChoiceFormat: void applyPattern(java.lang.String)>
<java.text.ChoiceFormat: void <init>(java.lang.String)>
<sun.misc.FDBigInteger: int quoRemIteration(sun.misc.FDBigInteger)>
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: int getChars(char[])>
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: java.lang.String toJavaFormatString()>
<sun.nio.cs.StreamEncoder: void writeBytes()>
<sun.nio.cs.StreamEncoder: void implFlushBuffer()>
<sun.nio.cs.StreamEncoder: void flushBuffer()>
<java.io.OutputStreamWriter: void flushBuffer()>
<sun.misc.FDBigInteger: sun.misc.FDBigInteger big5pow(int)>
<sun.misc.FDBigInteger: sun.misc.FDBigInteger multByPow52(int,int)>
<sun.misc.FDBigInteger: int cmpPow52(int,int)>
<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfPow52(int,int)>
<java.lang.StringBuffer: void <init>(int)>
<java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>
<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>
<java.lang.StringBuffer: void <init>()>
<java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
<java.security.Timestamp: java.lang.String toString()>
<sun.text.normalizer.Utility: java.lang.String escape(java.lang.String)>
<java.text.MergeCollation: void <init>(java.lang.String)>
<sun.text.normalizer.UnicodeSet: java.lang.String mungeCharName(java.lang.String)>
<java.text.DecimalFormat: java.lang.String toPattern(boolean)>
<java.text.DecimalFormat: java.lang.String toPattern()>
<java.text.SimpleDateFormat: void checkNegativeNumberExpression()>
<java.text.PatternEntry: java.lang.String toString()>
<java.text.PatternEntry$Parser: void <init>(java.lang.String)>
<java.text.MergeCollation: void addPattern(java.lang.String)>
<java.text.MergeCollation: void setPattern(java.lang.String)>
<java.text.DecimalFormat: void expandAffixes()>
<java.security.CodeSigner: java.lang.String toString()>
<java.io.StringWriter: void <init>()>
<sun.text.normalizer.Utility: java.lang.String hex(int,int)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add_unchecked(int)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add(int)>
<sun.text.normalizer.UCharacterProperty: void upropsvec_addPropertyStarts(sun.text.normalizer.UnicodeSet)>
<sun.text.normalizer.UnicodeSet: boolean contains(int)>
<sun.text.normalizer.NormalizerImpl: boolean nx_contains(sun.text.normalizer.UnicodeSet,char,char)>
<sun.text.normalizer.NormalizerImpl: boolean nx_contains(sun.text.normalizer.UnicodeSet,int)>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet complement(int,int)>
<sun.text.normalizer.UnicodeSet: void <init>(int,int)>
<java.io.UnixFileSystem: java.lang.String normalize(java.lang.String,int,int)>
<java.io.UnixFileSystem: java.lang.String normalize(java.lang.String)>
<java.net.URLStreamHandler: java.lang.String toExternalForm(java.net.URL)>
<java.net.URL: java.lang.String toExternalForm()>
<java.net.URL: java.lang.String toString()>
<java.text.DigitList: java.lang.StringBuffer getStringBuffer()>
<sun.security.util.ManifestEntryVerifier: java.lang.String toHex(byte[])>
<sun.security.pkcs.PKCS9Attributes: java.lang.String toString()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>
<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>
<java.text.DateFormatSymbols: java.lang.String[] getMonths()>
<java.util.Calendar: java.lang.String[] getFieldStrings(int,int,java.text.DateFormatSymbols)>
<java.util.Vector: void grow(int)>
<java.util.Vector: void ensureCapacityHelper(int)>
<java.util.Vector: void addElement(java.lang.Object)>
<java.text.AttributedString: void addAttributeRunData(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>
<java.text.AttributedString: void addAttributeImpl(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>
<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>
<java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>
<java.text.CharacterIteratorFieldDelegate: void formatted(int,java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>
<java.text.DecimalFormat: java.lang.StringBuffer subformat(java.lang.StringBuffer,java.text.Format$FieldDelegate,boolean,boolean,int,int,int,int)>
<java.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.Format$FieldDelegate)>
<java.text.DecimalFormat: java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition)>
<java.text.DecimalFormat: void append(java.lang.StringBuffer,java.lang.String,java.text.Format$FieldDelegate,java.text.FieldPosition[],java.text.Format$Field)>
<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>
<java.text.Format: java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.lang.String,java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>
<javax.crypto.CryptoPermissionCollection: void add(java.security.Permission)>
<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>
<javax.crypto.CryptoPolicyParser: boolean isConsistent(java.lang.String,java.lang.String,java.util.Hashtable)>
<sun.security.provider.PolicyParser: void add(sun.security.provider.PolicyParser$GrantEntry)>
<java.text.RBTableBuilder: int addExpansion(int,java.lang.String)>
<java.text.RBTableBuilder: void addExpandOrder(int,java.lang.String,int)>
<java.text.RBTableBuilder: void addComposedChars()>
<java.text.RBTableBuilder: void addExpandOrder(java.lang.String,java.lang.String,int)>
<javax.crypto.CryptoPolicyParser$GrantEntry: void add(javax.crypto.CryptoPolicyParser$CryptoPermissionEntry)>
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)>
<java.text.RBTableBuilder: void addContractOrder(java.lang.String,int,boolean)>
<java.text.RBTableBuilder: void addContractOrder(java.lang.String,int)>
<java.text.RBTableBuilder: void addOrder(int,int)>
<sun.security.provider.PolicyParser$GrantEntry: void add(sun.security.provider.PolicyParser$PermissionEntry)>
<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>
<java.util.Stack: java.lang.Object push(java.lang.Object)>
<sun.misc.URLClassPath: void push(java.net.URL[])>
<java.util.Vector: void setSize(int)>
<java.util.Vector: void insertElementAt(java.lang.Object,int)>
<java.util.Vector: void add(int,java.lang.Object)>
<java.util.AbstractList: boolean add(java.lang.Object)>
<sun.util.locale.LanguageTag: boolean parseExtlangs(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus)>
<sun.util.locale.LanguageTag: boolean parseExtensions(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus)>
<java.security.Provider$Service: void addAlias(java.lang.String)>
<java.security.Provider$Service: void access$500(java.security.Provider$Service,java.lang.String)>
<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<java.nio.file.Files: long copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption[])>
<sun.util.locale.LanguageTag: boolean parseVariants(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus)>
<java.util.Vector: boolean add(java.lang.Object)>
<javax.crypto.CryptoAllPermissionCollection: java.util.Enumeration elements()>
<java.security.PermissionsEnumerator: java.util.Enumeration getNextEnumWithMore()>
<java.security.PermissionsEnumerator: void <init>(java.util.Iterator)>
<java.security.Permissions: java.util.Enumeration elements()>
<java.security.PermissionsEnumerator: boolean hasMoreElements()>
<java.security.PermissionsEnumerator: java.security.Permission nextElement()>
<java.security.PermissionsEnumerator: java.lang.Object nextElement()>
<java.math.BigDecimal: java.math.BigInteger expandBigIntegerTenPowers(int)>
<java.util.ArrayList: void grow(int)>
<java.util.ArrayList: void ensureExplicitCapacity(int)>
<java.util.ArrayList: void ensureCapacityInternal(int)>
<java.util.ArrayList: boolean addAll(java.util.Collection)>
<java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>
<java.security.UnresolvedPermissionCollection: java.util.Enumeration elements()>
<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>
<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>
<java.util.ArrayList: void add(int,java.lang.Object)>
<java.net.SocketPermissionCollection: void add(java.security.Permission)>
<java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>
<java.util.ArrayList: boolean add(java.lang.Object)>
<sun.security.util.ManifestDigester$Entry: sun.security.util.ManifestDigester$Entry addSection(sun.security.util.ManifestDigester$Section)>
<sun.security.util.ManifestDigester$Entry: sun.security.util.ManifestDigester$Entry access$000(sun.security.util.ManifestDigester$Entry,sun.security.util.ManifestDigester$Section)>
<java.io.FileDescriptor: void attach(java.io.Closeable)>
<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>
<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>
<java.lang.UNIXProcess$DeferredCloseInputStream: void <init>(java.io.FileDescriptor)>
<java.time.format.DateTimeFormatterBuilder: int appendInternal(java.time.format.DateTimeFormatterBuilder$DateTimePrinterParser)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendZoneRegionId()>
<java.time.format.DateTimeFormatterBuilder: void parseField(char,int,java.time.temporal.TemporalField)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendZoneId()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendZoneText(java.time.format.TextStyle)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendInstant()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendLiteral(java.lang.String)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseLenient()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseCaseInsensitive()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendOffset(java.lang.String,java.lang.String)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendLocalizedOffset(java.time.format.TextStyle)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendText(java.time.temporal.TemporalField,java.time.format.TextStyle)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder append(java.time.format.DateTimeFormatter)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendFraction(java.time.temporal.TemporalField,int,int,boolean)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendOffsetId()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder optionalEnd()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValue(java.time.format.DateTimeFormatterBuilder$NumberPrinterParser)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValue(java.time.temporal.TemporalField)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValue(java.time.temporal.TemporalField,int,int,java.time.format.SignStyle)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValue(java.time.temporal.TemporalField,int)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendValueReduced(java.time.temporal.TemporalField,int,int,java.time.chrono.ChronoLocalDate)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder appendLiteral(char)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder parseCaseSensitive()>
<java.lang.String: java.lang.String[] split(java.lang.String,int)>
<java.lang.String: java.lang.String[] split(java.lang.String)>
<sun.security.x509.GeneralNames: sun.security.x509.GeneralNames add(sun.security.x509.GeneralName)>
<java.time.format.DateTimeParseContext: void <init>(java.time.format.DateTimeFormatter)>
<java.time.format.DateTimeParseContext: java.time.format.DateTimeParseContext copy()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.ClassTypeSignature[] parseSuperInterfaces()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.ClassSignature parseClassSignature()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.ClassSignature parseClassSig(java.lang.String)>
<sun.reflect.generics.repository.ClassRepository: sun.reflect.generics.tree.ClassSignature parse(java.lang.String)>
<sun.reflect.generics.repository.ClassRepository: sun.reflect.generics.tree.Tree parse(java.lang.String)>
<sun.reflect.generics.repository.AbstractRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
<sun.reflect.generics.repository.GenericDeclRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
<sun.reflect.generics.repository.ClassRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
<sun.reflect.generics.repository.ClassRepository: sun.reflect.generics.repository.ClassRepository make(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
<sun.reflect.generics.repository.ClassRepository: void <clinit>()>
<java.lang.Class: java.lang.Class$ClassRepositoryHolder getClassRepositoryHolder()>
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>
<sun.security.jca.ProviderList$ServiceList: void addService(java.security.Provider$Service)>
<java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>
<java.text.DecimalFormat: java.text.FieldPosition[] getNegativePrefixFieldPositions()>
<java.text.DecimalFormat: java.text.FieldPosition[] getPositiveSuffixFieldPositions()>
<java.text.DecimalFormat: java.text.FieldPosition[] getPositivePrefixFieldPositions()>
<java.text.DecimalFormat: java.text.FieldPosition[] getNegativeSuffixFieldPositions()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature[] parseBounds()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FormalTypeParameter parseFormalTypeParameter()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FormalTypeParameter[] parseFormalTypeParameters()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FormalTypeParameter[] parseZeroOrMoreFormalTypeParameters()>
<sun.security.provider.PolicyFile$PolicyEntry: void add(java.security.Permission)>
<sun.reflect.generics.parser.SignatureParser: void parseClassTypeSignatureSuffix(java.util.List)>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.ClassTypeSignature parseClassTypeSignature()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature parseFieldTypeSignature(boolean)>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature parseFieldTypeSignature()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeArgument parseTypeArgument()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeArgument[] parseTypeArguments()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.SimpleClassTypeSignature parseSimpleClassTypeSignature(boolean)>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.SimpleClassTypeSignature parsePackageNameAndSimpleClassTypeSignature()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature parseTypeSignature()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.ArrayTypeSignature parseArrayTypeSignature()>
<java.time.format.DateTimeParseContext: void addChronoChangedListener(java.util.function.Consumer)>
<java.lang.ProcessBuilder: void <init>(java.lang.String[])>
<java.io.FilePermissionCollection: void add(java.security.Permission)>
<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])>
<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>
<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>
<sun.security.util.AlgorithmDecomposer: java.util.Set decomposeImpl(java.lang.String)>
<sun.security.util.AlgorithmDecomposer: java.util.Set decompose(java.lang.String)>
<sun.security.util.AbstractAlgorithmConstraints: boolean checkAlgorithm(java.util.List,java.lang.String,sun.security.util.AlgorithmDecomposer)>
<sun.security.util.DisabledAlgorithmConstraints: boolean cachedCheckAlgorithm(java.lang.String)>
<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>
<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>
<java.text.DateFormatSymbols: void copyMembers(java.text.DateFormatSymbols,java.text.DateFormatSymbols)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.AbstractCollection: java.lang.Object[] finishToArray(java.lang.Object[],java.util.Iterator)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<sun.security.jca.ProviderList: java.security.Provider[] toArray()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>
<java.util.LinkedList: boolean addAll(int,java.util.Collection)>
<java.util.LinkedList: boolean addAll(java.util.Collection)>
<java.util.LinkedList: void <init>(java.util.Collection)>
<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,int,java.util.Set)>
<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray()>
<sun.security.x509.CRLExtensions: void encode(java.io.OutputStream,boolean)>
<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>
<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream)>
<java.util.ArrayList: void <init>(java.util.Collection)>
<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>
<java.util.ArrayList: java.lang.Object[] toArray()>
<java.util.Vector: java.lang.Object[] toArray()>
<java.util.Vector: void <init>(java.util.Collection)>
<java.text.AttributedString: int ensureRunBreak(int,boolean)>
<java.text.AttributedString: int ensureRunBreak(int)>
<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>
<java.text.DateFormatSymbols: java.lang.String[] getEras()>
<java.util.Arrays$ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: void <init>(java.util.List,boolean)>
<sun.misc.MetaIndex: void <init>(java.util.List,boolean)>
<java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class)>
<java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>
<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.TimSort: void <init>(java.lang.Object[],java.util.Comparator,java.lang.Object[],int,int)>
<java.util.TimSort: java.lang.Object[] ensureCapacity(int)>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.Type makeArrayType(java.lang.reflect.Type)>
<sun.reflect.Reflection: java.lang.reflect.Member[] filter(java.lang.reflect.Member[],java.lang.String[])>
<java.lang.StringBuilder: void <init>(int)>
<java.lang.StringBuilder: void <init>()>
<sun.security.util.DerInputStream: int getLength(int,java.io.InputStream)>
<sun.security.util.DerInputStream: int getLength(java.io.InputStream)>
<sun.security.util.DerInputStream: int getDefiniteLength(java.io.InputStream)>
<sun.security.util.DerInputStream: byte[] getOctetString()>
<sun.security.util.DerInputStream: java.math.BigInteger getBigInteger()>
<sun.security.util.DerInputStream: int getDefiniteLength()>
<sun.security.util.ObjectIdentifier: void <init>(sun.security.util.DerInputStream)>
<sun.security.util.DerInputStream: sun.security.util.ObjectIdentifier getOID()>
<sun.security.util.DerInputStream: int getInteger()>
<sun.security.util.DerInputStream: sun.security.util.BitArray getUnalignedBitString()>
<sun.util.calendar.CalendarDate: java.lang.String toString()>
<sun.util.calendar.ImmutableGregorianDate: java.lang.String toString()>
<sun.util.locale.LocaleExtensions: java.lang.String toID(java.util.SortedMap)>
<java.math.BigDecimal: long[] divRemNegativeLong(long,long)>
<java.time.LocalDate: java.time.LocalDate 'with'(java.time.temporal.TemporalField,long)>
<java.time.LocalDate: java.time.LocalDate plus(long,java.time.temporal.TemporalUnit)>
<java.time.LocalDate: java.time.LocalDate minus(long,java.time.temporal.TemporalUnit)>
<java.time.LocalDate: java.time.chrono.ChronoLocalDate minus(long,java.time.temporal.TemporalUnit)>
<java.time.LocalDate: java.time.chrono.ChronoLocalDate plus(long,java.time.temporal.TemporalUnit)>
<java.time.chrono.AbstractChronology: java.time.chrono.ChronoLocalDate resolveAligned(java.time.chrono.ChronoLocalDate,long,long,long)>
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.chrono.ChronoLocalDate ofWeekBasedYear(java.time.chrono.Chronology,int,int,int)>
<java.time.LocalDate: java.time.temporal.Temporal plus(long,java.time.temporal.TemporalUnit)>
<java.time.Period: java.time.temporal.Temporal addTo(java.time.temporal.Temporal)>
<java.time.LocalDate: java.time.LocalDate plus(java.time.temporal.TemporalAmount)>
<java.time.LocalDate: java.time.chrono.ChronoLocalDate plus(java.time.temporal.TemporalAmount)>
<java.time.format.Parsed: void resolvePeriod()>
<java.time.temporal.ChronoUnit: java.time.temporal.Temporal addTo(java.time.temporal.Temporal,long)>
<java.time.temporal.TemporalAdjusters: java.time.temporal.Temporal lambda$nextOrSame$10(int,java.time.temporal.Temporal)>
<java.time.temporal.TemporalAdjusters$lambda_nextOrSame_10__17: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal)>
<java.time.LocalDate: java.time.LocalDate 'with'(java.time.temporal.TemporalAdjuster)>
<java.time.LocalDate: java.time.chrono.ChronoLocalDate 'with'(java.time.temporal.TemporalAdjuster)>
<java.time.LocalDate: java.time.temporal.Temporal 'with'(java.time.temporal.TemporalField,long)>
<java.time.temporal.ChronoField: java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal,long)>
<java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>
<java.io.UnixFileSystem: java.lang.String resolve(java.io.File)>
<sun.util.calendar.BaseCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>
<java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: void <init>(java.time.temporal.TemporalField,int,int,boolean)>
<sun.security.util.DerValue: sun.security.util.BitArray getUnalignedBitString(boolean)>
<sun.security.x509.UniqueIdentity: void <init>(sun.security.util.DerValue)>
<java.util.ArrayList: void <init>(int)>
<java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.util.ArrayList$SubList: java.lang.String outOfBoundsMsg(int)>
<java.util.ArrayList$SubList: void rangeCheck(int)>
<java.util.ArrayList$SubList: java.lang.Object get(int)>
<java.util.AbstractList$Itr: java.lang.Object next()>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.Hashtable: void putAll(java.util.Map)>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>
<javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: void listAvailableProfiles()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.String,int,java.util.Map)>
<java.util.AbstractCollection: java.lang.String toString()>
<java.util.Vector: java.lang.String toString()>
<sun.security.x509.GeneralNames: java.lang.String toString()>
<java.security.Provider$Service: java.lang.String toString()>
<sun.security.jca.ProviderList: java.lang.String toString()>
<java.util.Collections$UnmodifiableList$1: java.lang.Object next()>
<java.util.ArrayList$SubList: void rangeCheckForAdd(int)>
<java.util.ArrayList$SubList: java.util.ListIterator listIterator(int)>
<java.util.AbstractList: java.util.ListIterator listIterator()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<java.util.ArrayList$SubList: java.util.Iterator iterator()>
<java.util.ServiceLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>
<java.util.ServiceLoader: void access$100(java.lang.Class,java.lang.String,java.lang.Throwable)>
<java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: java.lang.String toString()>
<sun.security.util.DerValue: byte[] getBitString()>
<sun.security.util.ObjectIdentifier: void checkOtherComponent(int,int)>
<java.io.ByteArrayOutputStream: void <init>(int)>
<java.io.ByteArrayOutputStream: void <init>()>
<sun.security.util.DerOutputStream: void <init>()>
<sun.security.x509.AVA: void derEncode(java.io.OutputStream)>
<sun.security.util.NamedCurve: void <init>(java.lang.String,java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>
<sun.security.x509.CertificateVersion: void encode(java.io.OutputStream)>
<sun.security.util.DerValue: byte[] toByteArray()>
<sun.security.x509.CertificateValidity: void encode(java.io.OutputStream)>
<sun.security.x509.Extension: void encode(sun.security.util.DerOutputStream)>
<java.util.jar.JarInputStream: byte[] getBytes(java.io.InputStream)>
<java.lang.ProcessEnvironment: void validateValue(java.lang.String)>
<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>
<sun.net.ApplicationProxy: void <init>(java.net.Proxy)>
<sun.net.ApplicationProxy: sun.net.ApplicationProxy create(java.net.Proxy)>
<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>
<java.util.Vector: java.lang.Object get(int)>
<java.text.AttributedString$AttributedStringIterator: java.util.Set getAllAttributeKeys()>
<sun.text.normalizer.UTF16: int charAt(char[],int,int,int)>
<sun.text.normalizer.RuleCharacterIterator: int _current()>
<sun.text.normalizer.RuleCharacterIterator: void skipIgnored(int)>
<sun.text.normalizer.RuleCharacterIterator: int next(int)>
<sun.text.normalizer.UnicodeSet: boolean resemblesPropertyPattern(sun.text.normalizer.RuleCharacterIterator,int)>
<java.util.Vector: void removeElementAt(int)>
<java.util.Stack: java.lang.Object pop()>
<java.util.Vector: java.lang.Object set(int,java.lang.Object)>
<java.util.Arrays: void rangeCheck(int,int,int)>
<java.util.Arrays: void fill(int[],int,int,int)>
<java.math.MutableBigInteger: void addDisjoint(java.math.MutableBigInteger,int)>
<sun.misc.FDBigInteger: sun.misc.FDBigInteger rightInplaceSub(sun.misc.FDBigInteger)>
<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftInplaceSub(sun.misc.FDBigInteger)>
<java.util.Arrays: void fill(char[],int,int,char)>
<sun.misc.FormattedFloatingDecimal: void fillCompatible(int,char[],int,int,boolean)>
<java.lang.StringBuilder: void setLength(int)>
<java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.text.SimpleDateFormat: char[] compile(java.lang.String)>
<java.text.SimpleDateFormat: void applyPatternImpl(java.lang.String)>
<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>
<sun.util.calendar.CalendarSystem: void initNames()>
<java.util.StringJoiner: java.lang.String toString()>
<sun.util.calendar.Era: java.lang.String toString()>
<java.util.regex.Pattern: int normalizeCharClass(java.lang.StringBuilder,int)>
<java.lang.StringBuffer: void setLength(int)>
<java.text.PatternEntry$Parser: java.text.PatternEntry next()>
<java.text.DecimalFormat: java.lang.String expandAffix(java.lang.String,java.lang.StringBuffer)>
<sun.misc.FormattedFloatingDecimal: int applyPrecision(int,char[],int,int)>
<sun.misc.FormattedFloatingDecimal: void fillDecimal(int,char[],int,int,boolean)>
<java.time.ZoneId: java.time.ZoneId ofOffset(java.lang.String,java.time.ZoneOffset)>
<sun.misc.MessageUtils: void err(java.lang.String)>
<java.lang.StringCoding: void warnUnsupportedCharset(java.lang.String)>
<java.util.Formatter$FormatSpecifier: java.lang.String justify(java.lang.String)>
<java.util.Vector: void <init>(int,int)>
<java.util.Vector: void <init>(int)>
<java.util.Vector: void <init>()>
<sun.security.provider.PolicyParser$GrantEntry: void <init>()>
<java.util.Stack: void <init>()>
<java.lang.ClassLoader: java.util.Enumeration findResources(java.lang.String)>
<sun.security.provider.PolicyParser: void <init>()>
<sun.security.provider.PolicyParser: void <init>(boolean)>
<javax.crypto.CryptoPolicyParser: void <init>()>
<javax.crypto.CryptoPolicyParser$GrantEntry: void <init>()>
<javax.crypto.CryptoPermissionCollection: void <init>()>
<javax.crypto.CryptoPermission: java.security.PermissionCollection newPermissionCollection()>
<java.time.LocalDate: java.time.LocalDate create(int,int,int)>
<java.time.LocalDate: java.time.LocalDate of(int,int,int)>
<java.time.LocalDate: java.time.LocalDate withDayOfMonth(int)>
<java.time.chrono.IsoChronology: java.time.LocalDate date(int,int,int)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate date(int,int,int)>
<java.time.temporal.IsoFields$Field: int getWeekRange(int)>
<java.time.temporal.IsoFields$Field: java.time.temporal.ValueRange getWeekRange(java.time.LocalDate)>
<java.time.temporal.IsoFields$Field: java.time.temporal.ValueRange access$400(java.time.LocalDate)>
<java.time.temporal.IsoFields$Field: int getWeek(java.time.LocalDate)>
<java.time.temporal.IsoFields$Field: int access$500(java.time.LocalDate)>
<java.time.temporal.IsoFields$Field$3: long getFrom(java.time.temporal.TemporalAccessor)>
<java.time.LocalDateTime: long getLong(java.time.temporal.TemporalField)>
<java.time.LocalDate: long getLong(java.time.temporal.TemporalField)>
<java.time.format.DateTimePrintContext$1: long getLong(java.time.temporal.TemporalField)>
<java.time.format.DateTimePrintContext: java.lang.Long getValue(java.time.temporal.TemporalField)>
<java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.time.LocalDate: void <clinit>()>
<java.time.chrono.IsoChronology: java.time.LocalDate dateEpochDay(long)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate dateEpochDay(long)>
<java.time.LocalDate: java.time.LocalDate withDayOfYear(int)>
<java.time.LocalDate: java.time.LocalDate plusDays(long)>
<java.time.LocalDateTime: java.time.LocalDateTime plusDays(long)>
<java.time.LocalDateTime: java.time.LocalDateTime plusWithOverflow(java.time.LocalDate,long,long,long,long,int)>
<java.time.LocalDateTime: java.time.LocalDateTime plusSeconds(long)>
<java.time.LocalDate: java.time.LocalDate plusWeeks(long)>
<java.time.LocalDate: java.time.LocalDate plusMonths(long)>
<java.time.zone.ZoneRules: int findYear(long,java.time.ZoneOffset)>
<java.time.zone.ZoneRules: java.time.ZoneOffset getOffset(java.time.Instant)>
<java.time.LocalDate: java.time.LocalDate now(java.time.Clock)>
<java.time.zone.ZoneRules: boolean isDaylightSavings(java.time.Instant)>
<java.time.chrono.IsoChronology: java.time.LocalDate dateYearDay(int,int)>
<java.time.chrono.IsoChronology: java.time.chrono.ChronoLocalDate dateYearDay(int,int)>
<java.time.LocalDate: java.time.LocalDate plusYears(long)>
<java.time.LocalDate: java.time.LocalDate minusYears(long)>
<java.time.LocalDate: java.time.LocalDate ofYearDay(int,int)>
<java.time.LocalDate: java.time.LocalDate withYear(int)>
<java.time.LocalDateTime: java.time.LocalDateTime ofEpochSecond(long,int,java.time.ZoneOffset)>
<java.time.LocalDate$from__3: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
<java.time.LocalDateTime: void <clinit>()>
<java.time.zone.ZoneRules: void <clinit>()>
<java.time.zone.ZoneRules: void <init>(java.time.ZoneOffset)>
<java.time.zone.ZoneRules: java.time.zone.ZoneRules of(java.time.ZoneOffset)>
<java.time.ZoneOffset: java.time.zone.ZoneRules getRules()>
<java.time.LocalDate: java.time.LocalDateTime atTime(java.time.LocalTime)>
<java.time.LocalDate: java.time.chrono.ChronoLocalDateTime atTime(java.time.LocalTime)>
<java.time.LocalDateTime: java.time.LocalDateTime of(java.time.LocalDate,java.time.LocalTime)>
<java.time.LocalDateTime: java.time.LocalDateTime 'with'(java.time.LocalDate,java.time.LocalTime)>
<java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)>
<java.time.LocalDate: java.time.LocalDate resolvePreviousValid(int,int,int)>
<java.time.LocalDate: java.time.LocalDate withMonth(int)>
<java.time.temporal.IsoFields$Field$4: long getFrom(java.time.temporal.TemporalAccessor)>
<java.time.LocalDate: java.time.LocalDate ofEpochDay(long)>
<java.net.SocketPermission: boolean authorizedIPv4(java.lang.String,byte[])>
<sun.security.x509.RFC822Name: java.lang.String toString()>
<java.io.FilePermission: int getMask(java.lang.String)>
<sun.net.util.IPAddressUtil: java.lang.String checkUserInfo(java.lang.String)>
<java.time.format.Parsed: void updateCheckConflict(java.time.chrono.ChronoLocalDate)>
<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<java.nio.charset.CharsetEncoder: void throwIllegalStateException(int,int)>
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult flush(java.nio.ByteBuffer)>
<java.util.ResourceBundle: void setExpirationTime(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control)>
<java.util.Vector: java.util.ListIterator listIterator(int)>
<java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()>
<java.util.BitSet: boolean get(int)>
<java.lang.ProcessEnvironment: void validateVariable(java.lang.String)>
<sun.security.x509.AVAKeyword: boolean isCompliant(int)>
<java.util.ServiceLoader: void fail(java.lang.Class,java.net.URL,int,java.lang.String)>
<java.util.ArrayList: void subListRangeCheck(int,int,int)>
<java.util.ArrayList: java.util.List subList(int,int)>
<javax.crypto.CryptoPolicyParser$ParsingException: void <init>(int,java.lang.String,java.lang.String)>
<java.util.SimpleTimeZone: void decodeEndRule()>
<java.util.SimpleTimeZone: void decodeRules()>
<java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int)>
<java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int)>
<sun.util.calendar.ZoneInfo: java.util.SimpleTimeZone getLastRuleInstance()>
<sun.util.calendar.ZoneInfo: java.util.SimpleTimeZone getLastRule()>
<java.lang.Class: java.lang.NoSuchMethodException newNoSuchMethodException(java.lang.String,java.lang.Class[])>
<java.lang.Class: java.lang.reflect.Method throwExceptionOrReturnNull(boolean,java.lang.String,java.lang.Class[])>
<javax.crypto.Cipher: java.lang.String[] tokenizeTransformation(java.lang.String)>
<sun.util.calendar.BaseCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>
<java.util.EnumSet: void typeCheck(java.lang.Enum)>
<java.util.RegularEnumSet: boolean add(java.lang.Enum)>
<java.util.RegularEnumSet: boolean add(java.lang.Object)>
<java.util.JumboEnumSet: boolean add(java.lang.Enum)>
<java.util.JumboEnumSet: boolean add(java.lang.Object)>
<java.time.Instant: int get(java.time.temporal.TemporalField)>
<java.time.temporal.WeekFields$ComputedDayOfField: int localizedDayOfWeek(java.time.temporal.TemporalAccessor)>
<java.time.temporal.WeekFields$ComputedDayOfField: long localizedWeekOfYear(java.time.temporal.TemporalAccessor)>
<java.time.temporal.WeekFields$ComputedDayOfField: int localizedWeekBasedYear(java.time.temporal.TemporalAccessor)>
<java.time.temporal.WeekFields$ComputedDayOfField: long localizedWeekOfMonth(java.time.temporal.TemporalAccessor)>
<java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: java.lang.String toString()>
<sun.security.x509.AlgorithmId: java.lang.String paramsToString()>
<sun.security.x509.EDIPartyName: java.lang.String toString()>
<java.time.ZoneOffset: java.lang.String buildId(int)>
<java.time.ZoneOffset: void <init>(int)>
<java.time.ZoneOffset: java.time.ZoneOffset ofTotalSeconds(int)>
<java.time.ZoneOffset: void <clinit>()>
<java.time.Clock: java.time.Clock systemUTC()>
<java.time.Instant: java.time.Instant now()>
<java.time.zone.ZoneOffsetTransition: java.util.List getValidOffsets()>
<java.time.zone.ZoneRules: java.util.List getValidOffsets(java.time.LocalDateTime)>
<java.time.ZoneOffset: java.time.ZoneOffset ofHoursMinutesSeconds(int,int,int)>
<java.time.ZoneOffset: java.time.ZoneOffset of(java.lang.String)>
<sun.util.locale.Extension: void setValue(java.lang.String)>
<sun.util.locale.UnicodeLocaleExtension: void <init>(java.util.SortedSet,java.util.SortedMap)>
<sun.util.locale.Extension: void <init>(char,java.lang.String)>
<sun.util.locale.UnicodeLocaleExtension: void <init>(java.lang.String,java.lang.String)>
<sun.util.locale.UnicodeLocaleExtension: void <clinit>()>
<sun.util.locale.InternalLocaleBuilder: void setUnicodeLocaleExtension(java.lang.String)>
<sun.util.locale.LocaleExtensions: void <clinit>()>
<java.util.Locale: sun.util.locale.LocaleExtensions getCompatibilityExtensions(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<sun.security.x509.CertificateVersion: java.lang.String toString()>
<java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String toString()>
<sun.security.x509.DNSName: java.lang.String toString()>
<java.net.URI$Parser: void failExpecting(java.lang.String,int)>
<java.net.URI$Parser: int parseHierarchical(int,int)>
<java.net.URI$Parser: void parse(boolean)>
<java.net.URI: void <init>(java.lang.String)>
<java.net.URI$Parser: int takeIPv4Address(int,int,java.lang.String)>
<java.net.URI$Parser: int scanHexPost(int,int)>
<java.net.URI$Parser: int parseIPv6Reference(int,int)>
<java.net.URI$Parser: int parseServer(int,int)>
<java.net.URI$Parser: int parseAuthority(int,int)>
<java.net.URI$Parser: int scanHexSeq(int,int)>
<java.net.URI$Parser: int parseHostname(int,int)>
<javax.crypto.CryptoPermission: java.lang.String toString()>
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.lang.String toString()>
<java.time.Period: void validateChrono(java.time.temporal.TemporalAccessor)>
<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$ASCIIToBinaryConverter readJavaFormatString(java.lang.String)>
<java.lang.Package: java.lang.String toString()>
<java.time.LocalDate: int get0(java.time.temporal.TemporalField)>
<java.time.LocalDate: int get(java.time.temporal.TemporalField)>
<java.time.LocalDateTime: int get(java.time.temporal.TemporalField)>
<java.time.ZonedDateTime: int get(java.time.temporal.TemporalField)>
<java.lang.UNIXProcess$Platform: java.lang.String helperPath(java.lang.String,java.lang.String)>
<java.lang.UNIXProcess$Platform: java.lang.String lambda$helperPath$0()>
<java.lang.UNIXProcess$Platform$lambda_helperPath_0__24: java.lang.Object run()>
<java.lang.UNIXProcess$Platform: java.lang.String helperPath()>
<java.net.Inet4Address: java.lang.String numericToTextFormat(byte[])>
<java.net.Inet4Address: java.lang.String getHostAddress()>
<java.net.InetAddress: java.lang.String toString()>
<sun.security.x509.IPAddressName: java.lang.String getName()>
<sun.security.util.DisabledAlgorithmConstraints$DisabledConstraint: void permits(sun.security.util.ConstraintsParameters)>
<java.net.SocketPermission: int getMask(java.lang.String)>
<java.math.BigInteger: void implSquareToLenChecks(int[],int,int[],int)>
<java.math.BigInteger: int[] squareToLen(int[],int,int[])>
<java.math.BigInteger: java.math.BigInteger square(boolean)>
<java.math.BigInteger: java.math.BigInteger square()>
<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
<java.math.BigInteger: java.math.BigInteger multiplyToomCook3(java.math.BigInteger,java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger multiplyKaratsuba(java.math.BigInteger,java.math.BigInteger)>
<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigInteger,java.math.BigInteger,int)>
<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>
<java.math.BigInteger: java.math.BigInteger multiply(long)>
<java.math.BigDecimal: java.math.BigDecimal multiply(long,java.math.BigInteger,int)>
<java.math.BigDecimal: java.math.BigDecimal multiply(long,long,int)>
<java.math.BigInteger: java.math.BigInteger squareKaratsuba()>
<java.math.BigInteger: java.math.BigInteger squareToomCook3()>
<java.lang.ThreadGroup: java.lang.String toString()>
<java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()>
<java.util.regex.Matcher: int end(int)>
<java.util.ArrayList: java.lang.String outOfBoundsMsg(int)>
<java.util.ArrayList: void rangeCheck(int)>
<java.util.ArrayList: java.lang.Object get(int)>
<sun.security.util.ManifestEntryVerifier: void update(byte)>
<java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
<java.util.ResourceBundle: boolean checkList(java.util.List)>
<sun.security.util.ManifestEntryVerifier: void update(byte[],int,int)>
<java.util.jar.JarVerifier: void update(int,byte[],int,int,sun.security.util.ManifestEntryVerifier)>
<java.time.format.DateTimeParseContext: java.time.format.Parsed currentParsed()>
<java.time.format.DateTimeParseContext: void setParsed(java.time.ZoneId)>
<java.time.format.DateTimeParseContext: int setParsedField(java.time.temporal.TemporalField,long,int,int)>
<java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: int setValue(java.time.format.DateTimeParseContext,long,int,int)>
<java.time.format.DateTimeParseContext: void setParsedLeapSecond()>
<java.time.format.DateTimeParseContext: java.time.chrono.Chronology getEffectiveChronology()>
<java.text.MergeCollation: java.text.PatternEntry getItemAt(int)>
<java.util.Collections: void swap(java.util.List,int,int)>
<java.util.Collections: void reverse(java.util.List)>
<sun.security.util.DerIndefLenConverter: void writeLengthAndValue()>
<java.text.MergeCollation: int findLastEntry(java.text.PatternEntry,java.lang.StringBuffer)>
<sun.security.util.DerIndefLenConverter: void parseTag()>
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
<java.util.ArrayList$ListItr: void set(java.lang.Object)>
<java.util.ArrayList: java.lang.Object remove(int)>
<java.time.format.DateTimeParseContext: void endOptional(boolean)>
<java.util.ArrayList$Itr: void remove()>
<java.util.ArrayList: void rangeCheckForAdd(int)>
<java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: java.lang.String toString()>
<java.time.ZoneOffset: int parseNumber(java.lang.CharSequence,int,boolean)>
<java.lang.StringIndexOutOfBoundsException: void <init>(int)>
<java.lang.StringBuffer: java.lang.String substring(int)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>
<java.math.BigDecimal: java.lang.String getValueString(int,java.lang.String,int)>
<java.lang.String: int codePointAt(int)>
<java.lang.String: int indexOf(int,int)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<sun.util.resources.LocaleData$SupplementaryResourceBundleControl: long getTimeToLive(java.lang.String,java.util.Locale)>
<sun.security.x509.DNSName: void <init>(java.lang.String)>
<java.util.ResourceBundle$Control: java.lang.String toResourceName0(java.lang.String,java.lang.String)>
<sun.nio.fs.DefaultFileSystemProvider: java.nio.file.spi.FileSystemProvider create()>
<java.lang.String: java.lang.String replace(char,char)>
<java.util.ResourceBundle$Control: java.lang.String toResourceName(java.lang.String,java.lang.String)>
<java.lang.String: int indexOf(int)>
<java.net.InetAddress: int checkNumericZone(java.lang.String)>
<java.net.URI: int hash(int,java.lang.String)>
<java.net.URI: int hashCode()>
<sun.security.x509.URIName: int hashCode()>
<java.util.StringTokenizer: int skipDelimiters(int)>
<java.util.StringTokenizer: boolean hasMoreTokens()>
<java.util.StringTokenizer: boolean hasMoreElements()>
<java.lang.SecurityManager: java.lang.String[] getPackages(java.lang.String)>
<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>
<sun.reflect.misc.ReflectUtil: void checkPackageAccess(java.lang.String)>
<java.lang.System: void setSecurityManager(java.lang.SecurityManager)>
<java.util.StringTokenizer: java.lang.String nextToken()>
<java.util.StringTokenizer: java.lang.String nextToken(java.lang.String)>
<java.util.StringTokenizer: java.lang.Object nextElement()>
<sun.net.www.MimeEntry: void setExtensions(java.lang.String)>
<java.util.StringTokenizer: int countTokens()>
<java.net.SocketPermission: java.lang.String getHost(java.lang.String)>
<java.util.StringTokenizer: int scanToken(int)>
<java.net.Parts: void <init>(java.lang.String)>
<java.net.SocketPermission: void getIP()>
<javax.crypto.Cipher: boolean passCryptoPermCheck(javax.crypto.CipherSpi,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<javax.crypto.Cipher: void checkCryptoPerm(javax.crypto.CipherSpi,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<java.io.UnixFileSystem: boolean isInvalid(java.io.File)>
<java.net.InetAddress: void validate(java.lang.String)>
<sun.security.x509.AVA: java.lang.Byte getEmbeddedHexPair(int,java.io.Reader)>
<java.net.SocketPermission: int[] parsePort(java.lang.String)>
<sun.security.x509.RFC822Name: void parseName(java.lang.String)>
<java.text.DecimalFormat: void appendAffix(java.lang.StringBuffer,java.lang.String,boolean)>
<java.text.DecimalFormat: void appendAffix(java.lang.StringBuffer,java.lang.String,java.lang.String,boolean)>
<sun.security.x509.IPAddressName: void parseIPv4(java.lang.String)>
<java.net.URI$Parser: int scan(int,int,java.lang.String,java.lang.String)>
<sun.security.x509.X509AttributeName: void <init>(java.lang.String)>
<java.lang.String: java.lang.String toUpperCaseCore(java.lang.String)>
<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
<java.lang.String: int indexOf(java.lang.String,int)>
<java.lang.String: int indexOf(java.lang.String)>
<sun.net.www.ParseUtil: java.lang.String canonizeString(java.lang.String)>
<sun.net.www.MimeLauncher: java.lang.String getTempFileName(java.net.URL,java.lang.String)>
<java.util.Currency: java.util.Currency getInstance(java.lang.String,int,int)>
<java.util.Currency: java.util.Currency getInstance(java.lang.String)>
<sun.util.locale.provider.NumberFormatProviderImpl: void adjustForCurrencyDefaultFractionDigits(java.text.DecimalFormat,java.text.DecimalFormatSymbols)>
<java.util.Currency: java.util.Currency getInstance(java.util.Locale)>
<sun.security.util.Debug: boolean isOn(java.lang.String)>
<java.security.MessageDigest: void <clinit>()>
<java.security.Signature: void <clinit>()>
<java.security.Signature: sun.security.util.Debug access$100()>
<java.security.Signature: java.security.Signature getInstance(sun.security.jca.GetInstance$Instance,java.lang.String)>
<java.security.Signature$Delegate: void <clinit>()>
<javax.crypto.Cipher: void <clinit>()>
<java.security.KeyStore: void <clinit>()>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<sun.security.x509.AlgorithmId: java.lang.String makeSigAlg(java.lang.String,java.lang.String)>
<java.text.RBTableBuilder: int getContractOrder(java.lang.String)>
<java.lang.String: int lastIndexOf(int,int)>
<sun.net.www.protocol.jar.Handler: int indexOfBangSlash(java.lang.String)>
<sun.net.www.protocol.jar.Handler: java.lang.String parseContextSpec(java.net.URL,java.lang.String)>
<java.lang.String: int lastIndexOf(java.lang.String,int)>
<java.lang.String: int lastIndexOf(java.lang.String)>
<java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>
<java.lang.String: int lastIndexOf(int)>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String getProvidersSimpleName(java.lang.String)>
<java.util.StringTokenizer: void setMaxDelimCodePoint()>
<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>
<java.util.StringTokenizer: void <init>(java.lang.String)>
<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>
<java.lang.String: java.lang.String toLowerCaseCore(java.lang.String)>
<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
<java.lang.String: char convertSigma(int)>
<java.lang.StringBuffer: char charAt(int)>
<java.util.regex.Pattern$Caret: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Loop: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$LastMatch: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Ques: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$SliceU: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$StartS: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$GroupCurly: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$SliceI: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$SliceIS: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$GroupCurly: boolean match1(java.util.regex.Matcher,int,int,java.lang.CharSequence)>
<java.util.regex.Pattern$NotBehindS: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Pos: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$End: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Begin: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$UnixDollar: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$NotBehind: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$BehindS: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$GroupCurly: boolean match0(java.util.regex.Matcher,int,int,java.lang.CharSequence)>
<java.util.regex.Pattern$LineEnding: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Matcher: boolean match(int,int)>
<java.util.regex.Matcher: boolean matches()>
<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$ASCIIToBinaryConverter parseHexString(java.lang.String)>
<java.util.regex.Pattern$GroupTail: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$SliceS: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Behind: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Bound: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Branch: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$BnM: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Start: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$LazyLoop: boolean matchInit(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Prolog: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Loop: boolean matchInit(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Dollar: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$BackRef: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Curly: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$LazyLoop: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Slice: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Curly: boolean match2(java.util.regex.Matcher,int,int,java.lang.CharSequence)>
<java.util.regex.Pattern$BranchConn: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Curly: boolean match1(java.util.regex.Matcher,int,int,java.lang.CharSequence)>
<java.util.regex.Pattern$GroupCurly: boolean match2(java.util.regex.Matcher,int,int,java.lang.CharSequence)>
<java.util.regex.Pattern$BnMS: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$Curly: boolean match0(java.util.regex.Matcher,int,int,java.lang.CharSequence)>
<java.util.regex.Pattern$CIBackRef: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$UnixCaret: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$GroupHead: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern$BmpCharProperty: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
<sun.text.normalizer.ReplaceableString: char charAt(int)>
<sun.text.normalizer.ReplaceableUCharacterIterator: int current()>
<sun.text.normalizer.ReplaceableUCharacterIterator: int previous()>
<sun.text.normalizer.UCharacterIterator: int nextCodePoint()>
<sun.text.normalizer.ReplaceableUCharacterIterator: int next()>
<java.util.regex.Pattern: int countChars(java.lang.CharSequence,int,int)>
<java.util.regex.Pattern: int access$300(java.lang.CharSequence,int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence,int,int)>
<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>
<java.lang.Character: int codePointBefore(java.lang.CharSequence,int)>
<java.util.regex.Pattern$Bound: int check(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>
<java.lang.Character: int codePointAt(java.lang.CharSequence,int)>
<java.util.regex.Pattern: boolean hasBaseCharacter(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.util.regex.Pattern: boolean access$400(java.util.regex.Matcher,int,java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,long)>
<java.lang.StringBuilder: char charAt(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.Appendable append(java.lang.CharSequence)>
<java.util.Formatter$FixedString: void print(java.lang.Object,java.util.Locale)>
<java.util.StringJoiner: java.util.StringJoiner add(java.lang.CharSequence)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>
<java.lang.String: java.lang.String substring(int)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree: boolean add0(java.lang.String,java.lang.String)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree: java.time.format.DateTimeFormatterBuilder$PrefixTree newTree(java.util.Set,java.time.format.DateTimeParseContext)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree: boolean add(java.lang.String,java.lang.String)>
<sun.text.normalizer.RuleCharacterIterator: java.lang.String lookahead()>
<sun.misc.FloatingDecimal: java.lang.String stripLeadingZeros(java.lang.String)>
<java.lang.Integer: java.lang.Integer decode(java.lang.String)>
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>
<sun.security.action.GetIntegerAction: java.lang.Integer run()>
<sun.security.action.GetIntegerAction: java.lang.Object run()>
<sun.reflect.generics.parser.SignatureParser: java.lang.String remainder()>
<sun.reflect.generics.parser.SignatureParser: java.lang.Error error(java.lang.String)>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeVariableSignature parseTypeVariableSignature()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.BaseType parseBaseType()>
<sun.reflect.generics.parser.SignatureParser: void progress(int)>
<java.lang.Class: java.lang.String toResourceName(java.lang.String)>
<java.time.LocalTime: java.lang.String toString()>
<java.time.LocalDateTime: java.lang.String toString()>
<java.time.ZonedDateTime: java.lang.String toString()>
<java.lang.StringBuilder: java.lang.String substring(int)>
<java.lang.String: int codePointBefore(int)>
<java.util.Arrays: int[] copyOfRange(int[],int,int)>
<java.math.MutableBigInteger: java.math.BigInteger getLower(int)>
<java.math.BigInteger: java.math.BigInteger multiplyByInt(int[],int,int)>
<java.math.BigInteger: int[] trustedStripLeadingZeroInts(int[])>
<java.math.BigInteger: java.math.BigInteger add(long)>
<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger exactDivideBy3()>
<java.math.BigInteger: java.math.BigInteger getToomSlice(int,int,int,int)>
<java.math.BigInteger: java.math.BigInteger getLower(int)>
<java.math.BigInteger: void <init>(int[])>
<java.math.BigInteger: java.math.BigInteger valueOf(int[])>
<java.math.BigInteger: java.math.BigInteger getUpper(int)>
<java.math.MutableBigInteger: java.math.MutableBigInteger getBlock(int,int,int)>
<java.math.MutableBigInteger: int[] getMagnitudeArray()>
<java.math.MutableBigInteger: java.math.BigDecimal toBigDecimal(int,int)>
<java.math.MutableBigInteger: java.math.BigInteger toBigInteger(int)>
<java.math.MutableBigInteger: java.math.BigInteger toBigInteger()>
<java.math.BigDecimal: java.math.BigInteger divideAndRound(java.math.BigInteger,long,int)>
<java.math.MutableBigInteger: long toCompactValue(int)>
<java.math.MutableBigInteger: void <init>(java.math.MutableBigInteger)>
<java.math.MutableBigInteger: void addLower(java.math.MutableBigInteger,int)>
<sun.security.x509.OtherName: java.lang.String toString()>
<sun.security.util.DerValue: sun.security.util.ObjectIdentifier getOID()>
<sun.security.x509.OIDName: void <init>(sun.security.util.DerValue)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: java.lang.String toString()>
<sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter: java.lang.Integer getObject(java.util.spi.CalendarDataProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
<sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter: java.lang.Object getObject(java.util.spi.LocaleServiceProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
<java.time.ZoneOffset: void validate(int,int,int)>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: void printProperty(java.lang.String,java.lang.String)>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: void printProfile(java.lang.String)>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: void listUsedProfile()>
<sun.net.util.IPAddressUtil: java.lang.String checkHostString(java.lang.String)>
<sun.net.util.IPAddressUtil: java.lang.String checkExternalForm(java.net.URL)>
<java.util.StringJoiner: java.lang.StringBuilder prepareBuilder()>
<java.util.Formatter$Flags: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void checkText()>
<java.util.Formatter$FormatSpecifier: void failMismatch(java.util.Formatter$Flags,char)>
<java.util.Formatter$FormatSpecifier: void checkBadFlags(java.util.Formatter$Flags[])>
<java.util.Formatter$FormatSpecifier: void checkFloat()>
<java.util.Formatter$FormatSpecifier: void checkInteger()>
<java.util.Formatter$FormatSpecifier: void checkCharacter()>
<java.util.Formatter$FormatSpecifier: void checkGeneral()>
<java.util.Formatter$FormatSpecifier: void checkDateTime()>
<java.util.Formatter$FormatSpecifier: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void checkNumeric()>
<java.util.Formatter$Flags: java.util.Formatter$Flags parse(java.lang.String)>
<java.util.Formatter$FormatSpecifier: java.util.Formatter$Flags flags(java.lang.String)>
<sun.security.provider.PolicyFile$SelfPermission: java.lang.String toString()>
<java.security.PrivilegedActionException: java.lang.String toString()>
<java.time.temporal.WeekFields: java.lang.String toString()>
<java.time.temporal.WeekFields$ComputedDayOfField: java.lang.String toString()>
<sun.security.util.JarConstraintsParameters: void setExtendedExceptionMsg(java.lang.String,java.lang.String)>
<java.nio.charset.CharsetDecoder: void throwIllegalStateException(int,int)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult flush(java.nio.CharBuffer)>
<sun.text.normalizer.Utility: java.lang.StringBuffer appendNumber(java.lang.StringBuffer,int,int,int)>
<sun.text.normalizer.Utility: java.lang.StringBuffer hex(int,int,java.lang.StringBuffer)>
<java.security.Provider$Service: java.lang.Object newInstanceGeneric(java.lang.Object)>
<java.net.InetAddress: java.net.UnknownHostException invalidIPv6LiteralException(java.lang.String,boolean)>
<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>
<java.io.FilePermission: java.lang.String getActions(int)>
<sun.misc.ExtensionInfo: java.lang.String toString()>
<sun.security.jca.GetInstance: void checkSuperClass(java.security.Provider$Service,java.lang.Class,java.lang.Class)>
<java.lang.SecurityManager: void checkExit(int)>
<java.lang.Runtime: void exit(int)>
<java.lang.System: void exit(int)>
<sun.security.util.Debug: void Help()>
<java.lang.TypeNotPresentException: void <init>(java.lang.String,java.lang.Throwable)>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.Type makeNamedType(java.lang.String)>
<sun.reflect.generics.visitor.Reifier: void visitSimpleClassTypeSignature(sun.reflect.generics.tree.SimpleClassTypeSignature)>
<sun.reflect.generics.tree.SimpleClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.security.Security: java.lang.String getProperty(java.lang.String)>
<sun.security.provider.SunEntries$1: java.lang.String run()>
<sun.security.provider.SunEntries$1: java.lang.Object run()>
<sun.security.util.AbstractAlgorithmConstraints$1: java.lang.String run()>
<sun.security.util.AbstractAlgorithmConstraints$1: java.lang.Object run()>
<java.security.KeyStore$1: java.lang.String run()>
<java.security.KeyStore$1: java.lang.Object run()>
<java.security.KeyStore: java.lang.String getDefaultType()>
<java.security.Policy$1: java.lang.String run()>
<java.security.Policy$1: java.lang.Object run()>
<java.lang.SecurityManager$1: java.lang.String run()>
<java.lang.SecurityManager$1: java.lang.Object run()>
<sun.security.provider.PolicyFile$1: java.lang.String run()>
<sun.security.provider.PolicyFile$1: java.lang.Object run()>
<java.util.BitSet: void set(int)>
<sun.net.www.ParseUtil: void <clinit>()>
<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String toString()>
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: java.lang.String getCallerInfo()>
<java.util.BitSet: void <init>(int)>
<sun.security.util.DerValue: java.math.BigInteger getBigInteger()>
<sun.security.x509.SerialNumber: void construct(sun.security.util.DerValue)>
<sun.security.x509.SerialNumber: void <init>(sun.security.util.DerValue)>
<sun.security.x509.CertificateSerialNumber: void <init>(sun.security.util.DerValue)>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<sun.security.action.GetPropertyAction: java.lang.String privilegedGetProperty(java.lang.String,java.lang.String)>
<sun.net.util.IPAddressUtil: void <clinit>()>
<sun.net.util.IPAddressUtil: int parseAsciiHexDigit(char)>
<sun.net.util.IPAddressUtil: boolean isBsdParsableV4(java.lang.String)>
<sun.net.util.IPAddressUtil: int parseAsciiDigit(char,int)>
<sun.net.util.IPAddressUtil: long parseV4FieldBsd(int,java.nio.CharBuffer,int)>
<sun.net.util.IPAddressUtil: byte[] convertFromIPv4MappedAddress(byte[])>
<java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])>
<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>
<sun.net.util.IPAddressUtil: boolean checkPrefix(java.nio.CharBuffer,int)>
<sun.net.util.IPAddressUtil: java.lang.String checkAuth(java.lang.String)>
<sun.net.util.IPAddressUtil: int scan(java.lang.String,long,long)>
<sun.net.util.IPAddressUtil: int scan(java.lang.String,long,long,char[])>
<sun.net.www.MimeTable$1: java.lang.Void run()>
<sun.net.www.MimeTable$1: java.lang.Object run()>
<sun.net.www.MimeTable: void <clinit>()>
<sun.net.www.MimeTable: java.net.FileNameMap loadTable()>
<java.net.URLConnection: java.net.FileNameMap getFileNameMap()>
<sun.net.www.MimeTable: java.lang.String access$002(java.lang.String)>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<java.lang.Boolean: boolean getBoolean(java.lang.String)>
<sun.security.action.GetBooleanAction: java.lang.Boolean run()>
<sun.security.action.GetBooleanAction: java.lang.Object run()>
<java.net.SocketPermission: void <clinit>()>
<java.net.SocketPermission: sun.security.util.Debug getDebug()>
<java.net.SocketPermission: java.lang.String getActions()>
<java.net.SocketPermission: boolean inRange(int,int,int,int)>
<java.util.Arrays$LegacyMergeSort: void <clinit>()>
<java.util.Arrays$LegacyMergeSort: boolean access$000()>
<sun.util.logging.PlatformLogger$1: java.lang.Boolean run()>
<sun.util.logging.PlatformLogger$1: java.lang.Object run()>
<sun.util.logging.PlatformLogger: void <clinit>()>
<sun.util.logging.PlatformLogger: void <init>(java.lang.String)>
<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>
<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger$Level access$000()>
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: sun.util.logging.PlatformLogger$Level deriveEffectiveLevel(sun.util.logging.PlatformLogger$Level)>
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: void <init>(java.lang.String)>
<openj9.internal.security.RestrictedSecurity$1: java.lang.String[] run()>
<openj9.internal.security.RestrictedSecurity$1: java.lang.Object run()>
<sun.security.action.GetPropertyAction: java.lang.String run()>
<sun.security.action.GetPropertyAction: java.lang.Object run()>
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>
<java.io.BufferedWriter: void <init>(java.io.Writer,int)>
<java.io.BufferedWriter: void <init>(java.io.Writer)>
<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>
<java.io.PrintWriter: void <init>(java.io.Writer)>
<sun.security.action.GetPropertyAction: java.lang.String privilegedGetProperty(java.lang.String)>
<java.io.UnixFileSystem: void <init>()>
<java.io.DefaultFileSystem: java.io.FileSystem getFileSystem()>
<sun.misc.JarIndex: void <clinit>()>
<java.net.InetAddress: java.net.InetAddressImpl loadImpl(java.lang.String)>
<java.net.InetAddressImplFactory: java.net.InetAddressImpl create()>
<java.lang.UNIXProcess$Platform: java.lang.String lambda$get$2()>
<jdk.internal.util.StaticProperty: void <clinit>()>
<jdk.internal.util.StaticProperty: java.lang.String jdkSerialFilter()>
<sun.util.logging.LoggingSupport$2: java.lang.String run()>
<sun.util.logging.LoggingSupport$2: java.lang.Object run()>
<sun.util.logging.LoggingSupport: java.lang.String getSimpleFormat(boolean)>
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: void <clinit>()>
<sun.security.util.DerInputBuffer: int toDigit(byte,java.lang.String)>
<java.util.TreeMap$Entry: java.lang.String toString()>
<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: sun.reflect.generics.reflectiveObjects.TypeVariableImpl make(java.lang.reflect.GenericDeclaration,java.lang.String,sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.factory.GenericsFactory)>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.TypeVariable makeTypeVariable(java.lang.String,sun.reflect.generics.tree.FieldTypeSignature[])>
<sun.reflect.generics.visitor.Reifier: void visitFormalTypeParameter(sun.reflect.generics.tree.FormalTypeParameter)>
<sun.reflect.generics.tree.FormalTypeParameter: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>
<java.util.Arrays: char[] copyOfRange(char[],int,int)>
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>
<java.math.BigInteger: void implMulAddCheck(int[],int[],int,int,int)>
<java.math.BigInteger: int mulAdd(int[],int[],int,int,int)>
<java.math.BigInteger: int[] implSquareToLen(int[],int,int[],int)>
<java.util.Collections$EmptyList: java.lang.Object get(int)>
<java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: java.lang.String toString()>
<java.util.IllformedLocaleException: void <init>(java.lang.String,int)>
<java.lang.Thread: java.lang.String toString()>
<java.util.HashMap$Node: java.lang.String toString()>
<java.io.ObjectStreamField: java.lang.String getClassSignature(java.lang.Class)>
<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class,boolean)>
<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>
<java.lang.StringBuffer: void <clinit>()>
<java.lang.StringBuffer: void ensureCapacityImpl(int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.io.StringWriter: void write(java.lang.String)>
<java.io.PrintWriter: void newLine()>
<java.io.PrintWriter: void println()>
<java.text.ChoiceFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>
<java.text.ChoiceFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>
<java.text.PatternEntry: void appendQuoted(java.lang.String,java.lang.StringBuffer)>
<java.text.PatternEntry: void addToBuffer(java.lang.StringBuffer,boolean,boolean,java.text.PatternEntry)>
<java.text.PatternEntry: void appendQuotedExtension(java.lang.StringBuffer)>
<java.lang.StringBuffer: java.lang.StringBuffer append(long)>
<sun.util.calendar.CalendarUtils: java.lang.StringBuffer sprintf0d(java.lang.StringBuffer,int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>
<java.io.StringWriter: void write(java.lang.String,int,int)>
<java.io.PrintWriter: void write(java.lang.String,int,int)>
<java.io.PrintWriter: void write(java.lang.String)>
<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>
<java.io.PrintWriter: java.lang.Appendable append(java.lang.CharSequence)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int,boolean)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<java.net.URI: void appendEscape(java.lang.StringBuffer,byte)>
<sun.text.normalizer.Utility: void recursiveAppendNumber(java.lang.StringBuffer,int,int,int)>
<java.text.MessageFormat: void append(java.lang.StringBuffer,java.text.CharacterIterator)>
<java.text.AttributedString: void appendContents(java.lang.StringBuffer,java.text.CharacterIterator)>
<sun.text.normalizer.UnicodeSet: void _appendToPat(java.lang.StringBuffer,int,boolean)>
<sun.security.x509.X509CertImpl: void byte2hex(byte,java.lang.StringBuffer)>
<sun.text.normalizer.UTF16: java.lang.StringBuffer append(java.lang.StringBuffer,int)>
<sun.text.normalizer.Utility: boolean escapeUnprintable(java.lang.StringBuffer,int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>
<java.lang.StringBuffer: java.lang.StringBuffer reverse()>
<java.lang.StringBuffer: java.lang.String toString()>
<java.text.PatternEntry: void <init>(int,java.lang.StringBuffer,java.lang.StringBuffer)>
<java.io.StringWriter: java.lang.String toString()>
<sun.text.normalizer.ReplaceableString: void <init>(java.lang.String)>
<sun.text.normalizer.ReplaceableUCharacterIterator: void <init>(java.lang.String)>
<sun.text.normalizer.UCharacterIterator: sun.text.normalizer.UCharacterIterator getInstance(java.lang.String)>
<sun.text.normalizer.NormalizerBase: void setText(java.lang.String)>
<java.text.CollationElementIterator: void setText(java.lang.String)>
<sun.text.normalizer.NormalizerBase: void <init>(java.lang.String,sun.text.normalizer.NormalizerBase$Mode,int)>
<sun.text.normalizer.NormalizerBase: void <init>(java.lang.String,sun.text.normalizer.NormalizerBase$Mode)>
<java.lang.StringBuffer: void initFromSystemProperties(java.util.Properties)>
<java.util.BitSet: void <clinit>()>
<java.util.BitSet: void initWords(int)>
<java.util.BitSet: void checkInvariants()>
<java.math.BigInteger: void <clinit>()>
<java.math.BigInteger: java.math.BigInteger shiftRightImpl(int)>
<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>
<java.math.BigInteger: java.math.BigInteger shiftRight(int)>
<java.math.BigInteger: int compareMagnitude(long)>
<java.math.BigInteger: void <init>(int,byte[])>
<sun.security.util.DerInputBuffer: java.math.BigInteger getBigInteger(int,boolean)>
<sun.security.util.DerInputBuffer: int getInteger(int)>
<java.math.BigDecimal: java.math.BigDecimal zeroValueOf(int)>
<java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>
<java.math.BigDecimal: java.math.BigDecimal divideAndRound(long,long,int,int,int)>
<java.math.BigDecimal: java.math.BigDecimal createAndStripZerosToMatchScale(long,int,long)>
<java.math.BigDecimal: java.math.BigDecimal valueOf(long,int,int)>
<java.math.BigDecimal: java.math.BigDecimal negate()>
<java.math.BigDecimal: java.math.BigDecimal valueOf(java.math.BigInteger,int,int)>
<java.math.BigInteger: void checkRange()>
<java.math.BigInteger: void <init>(int[],int)>
<java.math.BigInteger: java.math.BigInteger negate()>
<java.math.BigInteger: java.math.BigInteger abs()>
<java.math.BigInteger: double doubleValue()>
<java.math.BigInteger: void <init>(byte[])>
<java.math.BigDecimal$LongOverflow: void <clinit>()>
<java.math.BigDecimal$LongOverflow: void check(java.math.BigDecimal)>
<java.math.BigInteger: int bitLength(int[],int)>
<java.math.BigDecimal: void <clinit>()>
<java.math.BigDecimal: boolean needIncrement(java.math.MutableBigInteger,int,int,java.math.MutableBigInteger,java.math.MutableBigInteger)>
<java.math.BigDecimal: long divideAndRound(long,long,int)>
<java.math.BigDecimal: int compareMagnitudeNormalized(long,int,long,int)>
<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>
<java.math.BigDecimal: long longMultiplyPowerTen(long,int)>
<java.math.BigDecimal: java.math.BigDecimal valueOf(long)>
<java.text.DecimalFormat: java.math.BigDecimal getBigDecimalMultiplier()>
<java.math.BigDecimal: long mulsub(long,long,long,long,long)>
<java.math.BigDecimal: boolean needIncrement(long,int,int,long,long)>
<java.math.BigDecimal: int longDigitLength(long)>
<java.math.BigDecimal: boolean equals(java.lang.Object)>
<java.math.BigDecimal: boolean needIncrement(long,int,int,java.math.MutableBigInteger,long)>
<java.math.BigDecimal: boolean commonNeedIncrement(int,int,int,boolean)>
<java.time.Duration: void <clinit>()>
<java.time.Duration: java.time.Duration create(long,int)>
<java.time.Duration: java.time.Duration ofSeconds(long)>
<java.time.zone.ZoneOffsetTransition: java.time.Duration getDuration()>
<sun.security.util.ObjectIdentifier: void checkSecondComponent(int,java.math.BigInteger)>
<sun.security.util.CurveDB: java.math.BigInteger bi(java.lang.String)>
<java.math.BigInteger: java.math.BigInteger valueOf(long)>
<sun.security.util.ObjectIdentifier: void checkFirstComponent(java.math.BigInteger)>
<java.math.BigDecimal: java.math.BigInteger inflated()>
<java.math.BigDecimal: java.math.BigInteger unscaledValue()>
<java.math.BigDecimal: java.math.BigInteger access$000(java.math.BigDecimal)>
<java.text.DecimalFormat: java.math.BigInteger getBigIntegerMultiplier()>
<java.math.MutableBigInteger: void leftShift(int)>
<java.math.MutableBigInteger: void safeLeftShift(int)>
<java.math.MutableBigInteger: java.math.MutableBigInteger divideLongMagnitude(long,java.math.MutableBigInteger)>
<java.math.MutableBigInteger: long divide(long,java.math.MutableBigInteger)>
<java.math.MutableBigInteger: void rightShift(int)>
<java.math.MutableBigInteger: void safeRightShift(int)>
<java.net.Inet6Address: void <clinit>()>
<java.net.Inet6Address: int access$000(byte[],java.net.NetworkInterface)>
<java.net.Inet6Address$Inet6AddressHolder: void init(byte[],java.net.NetworkInterface)>
<java.net.Inet6Address: void initif(java.lang.String,byte[],java.net.NetworkInterface)>
<java.net.Inet6Address: void <init>(java.lang.String,byte[])>
<java.net.Inet6Address: boolean isDifferentLocalAddressType(byte[],byte[])>
<java.net.Inet6Address: int deriveNumericScope(byte[],java.net.NetworkInterface)>
<java.net.Inet6Address$Inet6AddressHolder: java.lang.String getHostAddress()>
<java.net.Inet6Address: java.lang.String getHostAddress()>
<java.util.concurrent.ConcurrentHashMap: void <clinit>()>
<sun.util.locale.provider.LocaleResources: void <init>(sun.util.locale.provider.ResourceBundleBasedAdapter,java.util.Locale)>
<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.locale.provider.LocaleResources getLocaleResources(java.util.Locale)>
<java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<java.util.Calendar: void <clinit>()>
<java.util.GregorianCalendar: long getCurrentFixedDate()>
<java.util.Calendar: int selectFields()>
<java.util.GregorianCalendar: int getMinimum(int)>
<java.util.Calendar: boolean checkDisplayNameParams(int,int,int,int,java.util.Locale,int)>
<java.util.GregorianCalendar: int getWeekNumber(long,long)>
<java.util.Calendar: java.lang.String getFieldName(int)>
<java.util.GregorianCalendar: boolean isCutoverYear(int)>
<java.util.GregorianCalendar: void <clinit>()>
<java.util.JapaneseImperialCalendar: int monthLength(int,int)>
<java.text.SimpleDateFormat: void <clinit>()>
<java.text.DateFormatSymbols: void <clinit>()>
<javax.crypto.CryptoPermissions: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Node[] initTable()>
<sun.util.locale.provider.JRELocaleProviderAdapter: void <init>()>
<java.util.concurrent.ConcurrentHashMap$Traverser: java.util.concurrent.ConcurrentHashMap$Node advance()>
<java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object nextElement()>
<java.util.concurrent.ConcurrentHashMap$BaseIterator: void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap)>
<java.util.concurrent.ConcurrentHashMap$KeyIterator: void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap)>
<java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.util.Enumeration keys()>
<java.util.concurrent.ConcurrentHashMap$ValueIterator: void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap)>
<java.util.concurrent.ConcurrentHashMap$ValuesView: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<javax.crypto.Cipher$Transform: void <clinit>()>
<java.time.chrono.AbstractChronology: void <clinit>()>
<java.time.LocalDate: boolean isLeapYear()>
<java.time.LocalDate: int getDayOfYear()>
<java.time.temporal.IsoFields$Field: int getWeekBasedYear(java.time.LocalDate)>
<java.time.temporal.IsoFields$Field: int access$600(java.time.LocalDate)>
<java.time.LocalDate: int lengthOfYear()>
<java.time.LocalDate: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.LocalDateTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.ZonedDateTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
<java.time.temporal.ChronoField: java.time.temporal.ValueRange rangeRefinedBy(java.time.temporal.TemporalAccessor)>
<java.time.LocalDate: int lengthOfMonth()>
<java.time.LocalDate: long toEpochDay()>
<java.time.LocalDate: java.time.DayOfWeek getDayOfWeek()>
<java.time.LocalDate: java.time.chrono.IsoChronology getChronology()>
<java.time.LocalDate: java.time.chrono.Chronology getChronology()>
<sun.util.locale.provider.AuxLocaleProviderAdapter: void <init>()>
<sun.util.locale.provider.HostLocaleProviderAdapter: void <init>()>
<sun.util.locale.provider.SPILocaleProviderAdapter: void <init>()>
<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>
<java.time.format.DateTimeTextProvider: void <clinit>()>
<java.time.format.DateTimeTextProvider: java.util.Comparator access$100()>
<java.time.format.DateTimeTextProvider: java.util.Map$Entry access$000(java.lang.Object,java.lang.Object)>
<java.time.format.DateTimeTextProvider: java.time.format.DateTimeTextProvider getInstance()>
<sun.util.locale.LocaleObjectCache: void <init>(int,float,int)>
<sun.util.locale.LocaleObjectCache: void <init>()>
<sun.util.locale.BaseLocale$Cache: void <init>()>
<sun.util.locale.BaseLocale: void <clinit>()>
<sun.util.locale.BaseLocale: sun.util.locale.BaseLocale createInstance(java.lang.String,java.lang.String)>
<sun.util.locale.BaseLocale$Cache: sun.util.locale.BaseLocale createObject(sun.util.locale.BaseLocale$Key)>
<sun.util.locale.BaseLocale$Cache: java.lang.Object createObject(java.lang.Object)>
<java.util.Locale$Cache: void <init>()>
<java.util.Locale$Cache: void <init>(java.util.Locale$1)>
<java.util.ResourceBundle$Control$CandidateListCache: void <init>()>
<java.util.ResourceBundle$Control$CandidateListCache: void <init>(java.util.ResourceBundle$1)>
<java.util.ResourceBundle$Control: void <clinit>()>
<java.util.ResourceBundle$NoFallbackControl: java.util.ResourceBundle$Control access$1100()>
<sun.util.resources.LocaleData$SupplementaryResourceBundleControl: void <clinit>()>
<sun.util.resources.LocaleData$SupplementaryResourceBundleControl: sun.util.resources.LocaleData$SupplementaryResourceBundleControl access$100()>
<java.util.ResourceBundle: java.util.ResourceBundle$Control getDefaultControl(java.lang.String)>
<java.util.ResourceBundle$Control: java.util.List getFormats(java.lang.String)>
<java.util.ResourceBundle$Control: java.util.ResourceBundle$Control access$300()>
<java.util.ResourceBundle$SingleFormatControl: void <clinit>()>
<java.util.ResourceBundle$NoFallbackControl: java.util.ResourceBundle$Control access$1000()>
<java.util.ResourceBundle$SingleFormatControl: java.util.ResourceBundle$Control access$800()>
<java.util.ResourceBundle$NoFallbackControl: void <clinit>()>
<java.util.ResourceBundle$NoFallbackControl: java.util.ResourceBundle$Control access$1200()>
<java.util.ResourceBundle$SingleFormatControl: java.util.ResourceBundle$Control access$900()>
<sun.util.resources.LocaleData$LocaleDataResourceBundleControl: sun.util.resources.LocaleData$LocaleDataResourceBundleControl access$000()>
<sun.util.resources.LocaleData$LocaleDataResourceBundleControl: void <clinit>()>
<java.util.concurrent.ConcurrentHashMap: boolean casTabAt(java.util.concurrent.ConcurrentHashMap$Node[],int,java.util.concurrent.ConcurrentHashMap$Node,java.util.concurrent.ConcurrentHashMap$Node)>
<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Node tabAt(java.util.concurrent.ConcurrentHashMap$Node[],int)>
<java.util.concurrent.ConcurrentHashMap: void setTabAt(java.util.concurrent.ConcurrentHashMap$Node[],int,java.util.concurrent.ConcurrentHashMap$Node)>
<sun.security.util.ObjectIdentifier: void <clinit>()>
<sun.security.util.ObjectIdentifier: int pack7Oid(byte[],int,int,byte[],int)>
<sun.security.util.ObjectIdentifier: int pack7Oid(int,byte[],int)>
<sun.security.util.ObjectIdentifier: void <init>(sun.security.util.DerInputBuffer)>
<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>
<java.text.Collator: void <clinit>()>
<sun.util.locale.provider.TimeZoneNameUtility: void <clinit>()>
<java.util.concurrent.ConcurrentHashMap: int resizeStamp(int)>
<java.security.Security: void <clinit>()>
<java.security.Security: void initializeStatic()>
<java.security.Security: java.lang.Class getSpiClass(java.lang.String)>
<java.lang.reflect.WeakCache: void <init>(java.util.function.BiFunction,java.util.function.BiFunction)>
<java.lang.reflect.Proxy: void <clinit>()>
<sun.reflect.misc.ReflectUtil: boolean isNonPublicProxyClass(java.lang.Class)>
<javax.security.auth.Subject$SecureSet: void <clinit>()>
<java.util.LinkedList: java.lang.String outOfBoundsMsg(int)>
<java.util.LinkedList: void checkElementIndex(int)>
<java.util.LinkedList: java.lang.Object get(int)>
<java.util.LinkedList: void checkPositionIndex(int)>
<java.util.LinkedList: void add(int,java.lang.Object)>
<java.util.LinkedList: java.util.ListIterator listIterator(int)>
<javax.security.auth.Subject$SecureSet$1: void <init>(javax.security.auth.Subject$SecureSet,java.util.LinkedList)>
<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>
<java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<java.lang.SecurityManager: void checkLink(java.lang.String)>
<sun.security.util.Debug: void println(java.lang.String)>
<java.nio.Buffer: void <init>(int,int,int,int)>
<java.nio.CharBuffer: void <init>(int,int,int,int,char[],int)>
<java.nio.CharBuffer: void <init>(int,int,int,int)>
<java.nio.StringCharBuffer: void <init>(java.lang.CharSequence,int,int)>
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence,int,int)>
<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>
<java.nio.HeapCharBuffer: void <init>(char[],int,int,int,int,int)>
<java.nio.HeapCharBuffer: java.nio.CharBuffer slice()>
<java.nio.HeapCharBuffer: void <init>(char[],int,int)>
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>
<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>
<sun.security.util.Password: byte[] convertToBytes(char[])>
<java.nio.HeapCharBuffer: void <init>(int,int)>
<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>
<java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: void <init>(java.time.format.TextStyle,java.util.Set)>
<java.time.LocalTime: int get0(java.time.temporal.TemporalField)>
<java.time.LocalTime: int get(java.time.temporal.TemporalField)>
<java.time.format.Parsed: void updateCheckConflict(java.time.temporal.TemporalField,java.time.temporal.TemporalField,java.lang.Long)>
<java.util.PropertyPermission: java.lang.String getActions(int)>
<java.util.PropertyPermission: java.lang.String getActions()>
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.lang.String toString()>
<java.time.format.DateTimePrintContext: java.lang.Object getValue(java.time.temporal.TemporalQuery)>
<java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<sun.net.www.MimeEntry: java.lang.String getExtensionsAsList()>
<sun.net.www.MimeEntry: java.lang.String toString()>
<java.net.SocketPermission: java.lang.String getActions(int)>
<java.util.WeakHashMap: void <init>(int,float)>
<java.util.WeakHashMap: void <init>()>
<java.security.ProtectionDomain$2$1: void <init>(java.security.ProtectionDomain$2)>
<java.security.ProtectionDomain$2: sun.misc.JavaSecurityProtectionDomainAccess$ProtectionDomainCache getProtectionDomainCache()>
<java.util.ServiceLoader: void fail(java.lang.Class,java.lang.String)>
<java.util.ServiceLoader: void access$300(java.lang.Class,java.lang.String)>
<sun.security.x509.UniqueIdentity: java.lang.String toString()>
<java.util.regex.Pattern: java.lang.String groupname(int)>
<sun.security.pkcs.PKCS9Attributes: java.lang.Object getAttributeValue(sun.security.util.ObjectIdentifier)>
<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>
<sun.misc.Version: void init()>
<sun.misc.Version: void <clinit>()>
<java.util.TimeZone$1: java.lang.Void run()>
<java.util.TimeZone$1: java.lang.Object run()>
<java.util.Collections$SingletonList: java.lang.Object get(int)>
<sun.security.rsa.RSAUtil: java.security.spec.AlgorithmParameterSpec getParamSpec(java.security.AlgorithmParameters)>
<java.text.SimpleDateFormat: void encode(int,int,java.lang.StringBuilder)>
<sun.security.util.DerValue: boolean getBoolean()>
<java.lang.ProcessEnvironment$StringEntry: java.lang.String toString()>
<java.util.PropertyPermission: int getMask(java.lang.String)>
<java.util.PropertyPermission: void <init>(java.lang.String,java.lang.String)>
<java.lang.SecurityManager: void checkPropertyAccess(java.lang.String)>
<java.lang.SecurityManager: void checkPropertiesAccess()>
<java.lang.System: java.util.Properties getProperties()>
<java.time.format.Parsed: void updateCheckConflict(java.time.LocalTime,java.time.Period)>
<java.time.format.Parsed: void resolveTime(long,long,long,long)>
<java.security.Provider$Service: java.lang.Class getImplClass()>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: void throwAccessCheckException(java.lang.Object)>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: void accessCheck(java.lang.Object)>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>
<java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<java.util.ResourceBundle: void throwMissingResourceException(java.lang.String,java.util.Locale,java.lang.Throwable)>
<java.time.ZoneRegion: void checkName(java.lang.String)>
<java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<java.util.StringJoiner: void <init>(java.lang.CharSequence)>
<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String getDisplayName(boolean)>
<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String getDisplayName()>
<java.lang.Class: java.lang.String toStringImpl()>
<java.lang.Class: java.lang.String toString()>
<java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<sun.misc.Launcher$Factory: java.net.URLStreamHandler createURLStreamHandler(java.lang.String)>
<sun.security.util.NamedCurve: java.lang.String toString()>
<java.util.ArrayList: java.util.ListIterator listIterator(int)>
<java.util.Collections$UnmodifiableList$1: void <init>(java.util.Collections$UnmodifiableList,int)>
<java.util.Collections$UnmodifiableList: java.util.ListIterator listIterator(int)>
<java.util.Collections$UnmodifiableList: java.util.ListIterator listIterator()>
<javax.crypto.CryptoPolicyParser$ParsingException: void <init>(int,java.lang.String)>
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>
<java.lang.String: java.lang.String substring(int,int)>
<java.util.Formatter$FormatSpecifier: int index(java.lang.String)>
<sun.util.locale.StringTokenIterator: sun.util.locale.StringTokenIterator setStart(int)>
<sun.util.locale.StringTokenIterator: void <init>(java.lang.String,java.lang.String)>
<sun.util.locale.InternalLocaleBuilder: java.lang.String removePrivateuseVariant(java.lang.String)>
<sun.util.locale.InternalLocaleBuilder: int checkVariants(java.lang.String,java.lang.String)>
<sun.reflect.generics.parser.SignatureParser: java.lang.String markToCurrent()>
<sun.reflect.generics.parser.SignatureParser: java.lang.String parseIdentifier()>
<java.io.UnixFileSystem: java.lang.String fromURIPath(java.lang.String)>
<java.lang.String: java.lang.CharSequence subSequence(int,int)>
<java.util.regex.Matcher: java.lang.CharSequence getSubSequence(int,int)>
<java.util.regex.Matcher: java.lang.String group(int)>
<java.util.regex.Matcher: java.lang.String group()>
<java.net.URI$Parser: java.lang.String substring(int,int)>
<java.net.URI$Parser: int parseIPv4Address(int,int)>
<java.net.URI$Parser: int scanByte(int,int)>
<java.net.URI$Parser: int scanIPv4Address(int,int,boolean)>
<sun.net.www.ParseUtil: byte unescape(java.lang.String,int)>
<com.ibm.oti.shared.SharedClassAbstractHelper: java.lang.String recursiveJarTrim(java.lang.String)>
<sun.util.locale.StringTokenIterator: java.lang.String next()>
<sun.util.locale.LanguageTag: boolean parseRegion(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus)>
<sun.util.locale.LanguageTag: boolean parseLanguage(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus)>
<sun.util.locale.LanguageTag: boolean parsePrivateuse(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus)>
<sun.util.locale.LanguageTag: boolean parseScript(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus)>
<java.security.BasicPermission: void init(java.lang.String)>
<java.security.BasicPermission: void <init>(java.lang.String,java.lang.String)>
<java.net.NetPermission: void <init>(java.lang.String,java.lang.String)>
<java.lang.RuntimePermission: void <init>(java.lang.String,java.lang.String)>
<java.security.BasicPermission: void <init>(java.lang.String)>
<java.lang.RuntimePermission: void <init>(java.lang.String)>
<sun.reflect.ReflectionFactory: void <clinit>()>
<sun.reflect.ReflectionFactory: sun.reflect.ReflectionFactory getReflectionFactory()>
<sun.reflect.ReflectionFactory$GetReflectionFactoryAction: sun.reflect.ReflectionFactory run()>
<sun.reflect.ReflectionFactory$GetReflectionFactoryAction: java.lang.Object run()>
<java.lang.reflect.Modifier: void <clinit>()>
<java.lang.Class: java.lang.reflect.Method getMostSpecificInterfaceMethod(java.lang.String,java.lang.Class[],java.lang.reflect.Method,java.lang.reflect.Method)>
<sun.reflect.ReflectionFactory: void setLangReflectAccess(sun.reflect.LangReflectAccess)>
<java.lang.SecurityManager: void checkRead(java.io.FileDescriptor)>
<sun.misc.Perf: sun.misc.Perf getPerf()>
<sun.misc.Perf$GetPerfAction: sun.misc.Perf run()>
<sun.misc.Perf$GetPerfAction: java.lang.Object run()>
<sun.misc.PerfCounter: void <clinit>()>
<java.lang.SecurityManager: void checkWrite(java.io.FileDescriptor)>
<java.nio.charset.spi.CharsetProvider: void <init>()>
<sun.nio.cs.FastCharsetProvider: void <init>(java.lang.String,java.util.Map,java.util.Map,java.util.Map)>
<sun.nio.cs.StandardCharsets: void <init>()>
<java.nio.charset.Charset: void <clinit>()>
<java.lang.System: java.lang.String getCharsetName(java.lang.String,java.nio.charset.Charset)>
<java.io.PrintStream: java.nio.charset.Charset toCharset(java.lang.String)>
<com.ibm.oti.util.Util: void <clinit>()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<java.lang.StringCoding: java.nio.charset.Charset lookupCharset(java.lang.String)>
<java.nio.charset.Charset: void cache(java.lang.String,java.nio.charset.Charset)>
<java.util.concurrent.ThreadPoolExecutor: void <clinit>()>
<java.util.concurrent.ThreadPoolExecutor: void advanceRunState(int)>
<java.lang.SecurityManager: void checkSetFactory()>
<java.net.URLConnection: void setFileNameMap(java.net.FileNameMap)>
<java.lang.SecurityManager: void <init>()>
<javax.crypto.JceSecurityManager: void <init>()>
<javax.crypto.JceSecurityManager: void <init>(javax.crypto.JceSecurityManager$1)>
<javax.crypto.JceSecurityManager$1: javax.crypto.JceSecurityManager run()>
<javax.crypto.JceSecurityManager$1: java.lang.Object run()>
<java.security.SecurityPermission: void <init>(java.lang.String)>
<java.lang.SecurityManager: void checkSecurityAccess(java.lang.String)>
<java.security.Provider: void check(java.lang.String)>
<sun.net.util.IPAddressUtil: java.lang.String describeChar(char)>
<sun.security.util.ObjectIdentifier: void checkOtherComponent(int,java.math.BigInteger)>
<java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: java.lang.String toString()>
<java.security.UnresolvedPermission: java.lang.String toString()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder padNext(int,char)>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder padNext(int)>
<java.time.Month: java.time.Month of(int)>
<java.time.LocalDate: java.time.Month getMonth()>
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: void <init>(java.time.temporal.TemporalField,int,int,int,java.time.chrono.ChronoLocalDate)>
<java.time.temporal.ValueRange: java.lang.String genInvalidFieldMessage(java.time.temporal.TemporalField,long)>
<java.time.temporal.ValueRange: long checkValidValue(long,java.time.temporal.TemporalField)>
<java.time.temporal.ChronoField: long checkValidValue(long)>
<java.time.LocalTime: java.time.LocalTime of(int,int,int,int)>
<java.time.LocalTime: java.time.LocalTime ofNanoOfDay(long)>
<java.time.temporal.ValueRange: int checkValidIntValue(long,java.time.temporal.TemporalField)>
<java.time.temporal.ChronoField: int checkValidIntValue(long)>
<sun.security.jca.GetInstance: java.security.Provider$Service getService(java.lang.String,java.lang.String,java.security.Provider)>
<sun.misc.FloatingDecimal: int getHexDigit(java.lang.String,int)>
<java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: int checkPattern(java.lang.String)>
<java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: void <init>(java.lang.String,java.lang.String)>
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.time.Period: java.lang.String toString()>
<java.security.BasicPermissionCollection: void add(java.security.Permission)>
<java.security.CodeSource: java.lang.String toString()>
<java.security.AllPermissionCollection: void add(java.security.Permission)>
<sun.security.provider.PolicyFile: java.lang.String printPD(java.security.ProtectionDomain)>
<java.time.temporal.ValueRange: java.lang.String toString()>
<java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: java.lang.String toString()>
<java.time.DayOfWeek: java.time.DayOfWeek of(int)>
<java.util.Vector: java.lang.Object elementAt(int)>
<java.text.RBCollationTables: java.util.Vector getContractValuesImpl(int)>
<java.text.RBCollationTables: java.util.Vector getContractValues(int)>
<java.util.Stack: java.lang.Object peek()>
<java.text.RBCollationTables: int getEntry(java.util.Vector,java.lang.String,boolean)>
<java.text.RBTableBuilder: java.util.Vector getContractValuesImpl(int)>
<java.text.RBTableBuilder: int getCharOrder(int)>
<java.text.RBTableBuilder: void commit()>
<java.text.RBTableBuilder: java.util.Vector getContractValues(int)>
<java.text.RBCollationTables: int[] getExpandValueList(int)>
<java.text.AttributedString: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute,int)>
<java.text.AttributedString: java.lang.Object access$100(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute,int)>
<sun.security.util.ObjectIdentifier: void checkOidSize(int)>
<java.util.AbstractList: java.lang.String outOfBoundsMsg(int)>
<java.util.AbstractList: void rangeCheckForAdd(int)>
<java.util.AbstractList: java.util.ListIterator listIterator(int)>
<sun.security.util.Debug: void println()>
<java.net.URI$Parser: void checkChars(int,int,long,long,java.lang.String)>
<java.net.URI$Parser: void checkChar(int,long,long,java.lang.String)>
<java.util.HashMap: void <init>(int,float)>
<java.util.HashMap: void <init>(int)>
<sun.security.util.ManifestEntryVerifier: void <init>(java.util.jar.Manifest,java.lang.String)>
<java.security.PermissionsHash: void <init>()>
<java.util.regex.Pattern: java.util.Map namedGroups()>
<java.lang.Character$UnicodeScript: void <clinit>()>
<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript of(int)>
<java.util.regex.Pattern$Script: boolean isSatisfiedBy(int)>
<java.util.regex.Pattern$6: boolean isSatisfiedBy(int)>
<java.util.jar.Attributes: void <init>(int)>
<java.util.jar.Attributes: void <init>()>
<java.util.jar.Manifest: void <init>()>
<sun.util.locale.provider.LocaleDataMetaInfo: void <clinit>()>
<java.util.HashSet: void <init>(int)>
<java.security.Permissions: void <init>()>
<java.security.SecureClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>
<java.security.Policy$UnsupportedEmptyCollection: void <init>()>
<java.security.Policy: void <clinit>()>
<sun.security.provider.PolicyFile: void <clinit>()>
<sun.security.provider.PolicyFile: sun.security.util.Debug access$600()>
<java.security.Policy: boolean isSet()>
<java.security.ProtectionDomain: boolean seeAllp()>
<java.security.Policy: sun.security.util.Debug access$000()>
<java.security.Policy: java.security.Policy getPolicy()>
<java.util.PropertyPermissionCollection: void <init>()>
<java.util.PropertyPermission: java.security.PermissionCollection newPermissionCollection()>
<java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)>
<java.time.ZoneId: void <clinit>()>
<java.lang.ProcessEnvironment: java.util.Map emptyEnvironment(int)>
<java.security.UnresolvedPermissionCollection: void <init>()>
<java.security.UnresolvedPermission: java.security.PermissionCollection newPermissionCollection()>
<java.security.BasicPermissionCollection: void <init>(java.lang.Class)>
<java.security.BasicPermission: java.security.PermissionCollection newPermissionCollection()>
<java.lang.Package: void <clinit>()>
<java.lang.ClassLoader: void <clinit>()>
<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()>
<java.lang.ClassLoader: java.lang.Class findLoadedClass(java.lang.String)>
<java.lang.Class: java.lang.reflect.Constructor cacheConstructor(java.lang.reflect.Constructor)>
<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<com.ibm.oti.vm.AbstractClassLoader: void <clinit>()>
<com.ibm.oti.vm.AbstractClassLoader: void setParsedPathElement(int,java.lang.String)>
<com.ibm.oti.vm.BootstrapClassLoader: java.lang.ClassLoader singleton()>
<com.ibm.oti.vm.AbstractClassLoader: void setBootstrapClassLoader(java.lang.ClassLoader)>
<com.ibm.oti.vm.AbstractClassLoader: void setCacheElement(int,java.lang.Object)>
<com.ibm.oti.vm.AbstractClassLoader: void setPermissionElement(int,java.io.FilePermission)>
<com.ibm.oti.vm.BootstrapClassLoader: void <clinit>()>
<com.ibm.oti.vm.AbstractClassLoader: void setTypeElement(int,int)>
<java.lang.ClassLoader: java.security.ProtectionDomain getDefaultProtectionDomainHelper()>
<java.lang.ClassLoader: java.security.ProtectionDomain getDefaultProtectionDomain()>
<java.lang.ClassLoader: void <init>()>
<com.ibm.oti.vm.AbstractClassLoader: void <init>()>
<com.ibm.oti.vm.BootstrapClassLoader: void <init>()>
<java.util.ResourceBundle$RBClassLoader: void <init>()>
<java.util.ResourceBundle$RBClassLoader: void <init>(java.util.ResourceBundle$1)>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.ClassLoader getDeclsLoader()>
<java.security.Provider$Service: java.lang.Class getKeyClass(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<java.lang.Class: java.lang.reflect.Method getAccessibleMethod(java.lang.Class,java.lang.String)>
<java.lang.Class: void doInitCacheIds()>
<java.lang.Class$5: java.lang.Void run()>
<java.lang.Class$5: java.lang.Object run()>
<java.lang.Class: void initCacheIds(boolean,boolean)>
<java.lang.Thread$1: java.lang.Boolean run()>
<java.lang.Thread$1: java.lang.Object run()>
<java.lang.Class: java.lang.Class forName(java.lang.String)>
<sun.nio.fs.DefaultFileSystemProvider: java.nio.file.spi.FileSystemProvider createProvider(java.lang.String)>
<java.security.Provider$EngineDescription: java.lang.Class getConstructorParameterClass()>
<java.nio.charset.Charset$ExtendedProviderHolder$1: java.nio.charset.spi.CharsetProvider run()>
<java.nio.charset.Charset$ExtendedProviderHolder$1: java.lang.Object run()>
<javax.crypto.CryptoPolicyParser: java.security.spec.AlgorithmParameterSpec getInstance(java.lang.String,java.lang.Integer[])>
<java.lang.ClassLoader: java.lang.ClassLoader getParent()>
<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>
<sun.util.logging.LoggingSupport$1: sun.util.logging.LoggingProxy run()>
<sun.util.logging.LoggingSupport$1: java.lang.Object run()>
<sun.util.logging.LoggingSupport: void <clinit>()>
<sun.util.logging.PlatformLogger$JavaLoggerProxy: void <init>(java.lang.String,sun.util.logging.PlatformLogger$Level)>
<sun.util.logging.PlatformLogger$JavaLoggerProxy: void <init>(java.lang.String)>
<sun.util.logging.PlatformLogger$JavaLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Throwable)>
<sun.util.logging.LoggingSupport: void setLevel(java.lang.Object,java.lang.Object)>
<sun.util.logging.LoggingSupport: void log(java.lang.Object,java.lang.Object,java.lang.String,java.lang.Throwable)>
<sun.util.logging.LoggingSupport: void log(java.lang.Object,java.lang.Object,java.lang.String)>
<sun.util.logging.PlatformLogger$JavaLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String)>
<sun.util.logging.LoggingSupport: java.lang.Object getLogger(java.lang.String)>
<sun.util.logging.LoggingSupport: boolean isLoggable(java.lang.Object,java.lang.Object)>
<sun.util.logging.PlatformLogger$JavaLoggerProxy: boolean isLoggable(sun.util.logging.PlatformLogger$Level)>
<sun.util.logging.PlatformLogger: boolean isLoggable(sun.util.logging.PlatformLogger$Level)>
<sun.util.logging.LoggingSupport: void ensureAvailable()>
<java.lang.Class: java.lang.reflect.Field cacheField(java.lang.reflect.Field)>
<java.lang.ClassLoader: java.lang.ClassLoader callerClassLoader()>
<java.lang.Class: java.lang.reflect.Method[] cacheMethods(java.lang.reflect.Method[],java.lang.Class$CacheKey)>
<java.lang.Package: java.util.Map access$400()>
<java.lang.Package: java.util.Map access$200()>
<java.lang.Package: java.util.Map access$000()>
<java.util.LinkedHashMap: void <init>(int,float)>
<java.util.HashSet: void <init>(int,float,boolean)>
<java.util.LinkedHashSet: void <init>()>
<java.util.regex.Matcher: int start(int)>
<sun.security.util.DerValue: int getInteger()>
<sun.security.util.DerValue: sun.security.util.DerInputStream toDerInputStream()>
<java.text.FieldPosition: java.lang.String toString()>
<java.lang.Integer: int parseInt(java.lang.String,int)>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
<java.lang.Integer: int parseInt(java.lang.String)>
<java.util.Formatter$FormatSpecifier: int width(java.lang.String)>
<java.util.AbstractMap: java.lang.String toString()>
<java.util.Formatter: java.lang.Appendable nonNullAppendable(java.lang.Appendable)>
<sun.reflect.Reflection: java.util.Map registerFilter(java.util.Map,java.lang.Class,java.lang.String[])>
<sun.reflect.Reflection: void registerMethodsToFilter(java.lang.Class,java.lang.String[])>
<sun.misc.Unsafe: void <clinit>()>
<sun.misc.SharedSecrets: void <clinit>()>
<sun.misc.SharedSecrets: void setJavaIOFileDescriptorAccess(sun.misc.JavaIOFileDescriptorAccess)>
<java.io.FileDescriptor: void <clinit>()>
<java.io.FileDescriptor$1: void set(java.io.FileDescriptor,int)>
<java.io.FileDescriptor$1: int get(java.io.FileDescriptor)>
<java.lang.ref.Reference: void <clinit>()>
<java.lang.Class$ReflectRef: void <init>(java.lang.Class$ReflectCache,java.lang.Class$CacheKey,java.lang.Object)>
<java.lang.Class$ReflectCache: void insert(java.lang.Class$CacheKey,java.lang.Object)>
<java.lang.ClassLoader: java.lang.Object getClassLoadingLock(java.lang.String)>
<java.lang.ClassLoader$ClassNameLockRef: void <init>(java.lang.Object,java.lang.String,java.util.Hashtable)>
<sun.misc.SharedSecrets: sun.misc.JavaIOFileDescriptorAccess getJavaIOFileDescriptorAccess()>
<java.lang.ProcessImpl: void <clinit>()>
<sun.misc.SharedSecrets: sun.misc.JavaSecuritySignatureAccess getJavaSecuritySignatureAccess()>
<sun.misc.SharedSecrets: void setJavaSecuritySignatureAccess(sun.misc.JavaSecuritySignatureAccess)>
<sun.misc.SharedSecrets: sun.misc.JavaLangAccess getJavaLangAccess()>
<sun.misc.SharedSecrets: sun.misc.JavaNetAccess getJavaNetAccess()>
<sun.misc.SharedSecrets: void setJavaUtilZipFileAccess(sun.misc.JavaUtilZipFileAccess)>
<java.security.ProtectionDomain: void <clinit>()>
<java.security.AccessController: java.security.ProtectionDomain[] toArrayOfProtectionDomains(java.lang.Object[],java.security.AccessControlContext,int)>
<java.lang.Class: void forNameAccessCheck(java.lang.SecurityManager,java.lang.Class,java.lang.Class)>
<java.security.AccessControlContext: java.lang.Object[] combineObjs(boolean,java.lang.Object[],java.lang.Object[],int,int,boolean)>
<java.security.AccessControlContext: java.security.Permission[] combinePermObjs(java.security.Permission[],java.security.Permission[],int,int,boolean)>
<java.security.AccessControlContext: boolean checkPermWithCachedPermImplied(java.security.Permission,java.security.Permission[],java.security.AccessControlContext$AccessCache)>
<java.security.AccessControlContext: java.security.ProtectionDomain[] combinePDObjs(java.security.ProtectionDomain[],java.lang.Object[])>
<java.security.AccessControlContext: int checkPermWithCachedPDsImplied(java.security.Permission,java.lang.Object[],java.security.AccessControlContext$AccessCache)>
<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>
<sun.misc.SharedSecrets: sun.misc.JavaSecurityProtectionDomainAccess getJavaSecurityProtectionDomainAccess()>
<sun.misc.SharedSecrets: sun.misc.JavaIOAccess getJavaIOAccess()>
<java.lang.System: java.io.Console console()>
<sun.misc.SharedSecrets: void setJavaSecurityProtectionDomainAccess(sun.misc.JavaSecurityProtectionDomainAccess)>
<sun.misc.SharedSecrets: void setJavaSecurityAccess(sun.misc.JavaSecurityAccess)>
<sun.misc.SharedSecrets: void setJavaNetAccess(sun.misc.JavaNetAccess)>
<sun.misc.SharedSecrets: sun.misc.JavaUtilJarAccess javaUtilJarAccess()>
<sun.misc.URLClassPath$JarLoader: void <clinit>()>
<sun.misc.URLClassPath$JarLoader$2: java.io.InputStream getInputStream()>
<sun.misc.URLClassPath$JarLoader$2: java.net.URL getCodeSourceURL()>
<sun.misc.SharedSecrets: void setJavaLangAccess(sun.misc.JavaLangAccess)>
<sun.misc.SharedSecrets: void setJavaLangRefAccess(sun.misc.JavaLangRefAccess)>
<sun.misc.SharedSecrets: void setJavaNioAccess(sun.misc.JavaNioAccess)>
<sun.misc.SharedSecrets: sun.misc.JavaUtilZipFileAccess getJavaUtilZipFileAccess()>
<sun.misc.SharedSecrets: void setJavaUtilJarAccess(sun.misc.JavaUtilJarAccess)>
<com.ibm.jit.JITHelpers: void <clinit>()>
<com.ibm.jit.JITHelpers: int getIntFromObject(java.lang.Object,long)>
<java.lang.J9VMInternals: int fastIdentityHashCode(java.lang.Object)>
<java.lang.Object: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<com.ibm.oti.shared.SharedClassHelperFactoryImpl: com.ibm.oti.shared.SharedClassHelper findHelperForClassLoader(java.lang.ClassLoader)>
<java.util.WeakHashMap: java.util.WeakHashMap$Entry getEntry(java.lang.Object)>
<java.util.WeakHashMap: boolean containsKey(java.lang.Object)>
<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>
<java.util.WeakHashMap$HashIterator: void remove()>
<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.text.AttributedCharacterIterator$Attribute: int hashCode()>
<java.lang.Character$Subset: int hashCode()>
<java.time.chrono.AbstractChronology: int hashCode()>
<java.lang.Class$CacheKey: int hashCombine(int,java.lang.Object)>
<java.lang.Class$CacheKey: void <init>(java.lang.String,java.lang.Class[],java.lang.Class)>
<java.lang.Class$CacheKey: java.lang.Class$CacheKey newFieldKey(java.lang.String,java.lang.Class)>
<java.lang.Class$CacheKey: void <clinit>()>
<java.lang.Class$CacheKey: java.lang.Class$CacheKey newConstructorKey(java.lang.Class[])>
<java.lang.Class: java.lang.reflect.Constructor lookupCachedConstructor(java.lang.Class[])>
<java.lang.Class: java.lang.reflect.Method lookupCachedMethod(java.lang.String,java.lang.Class[])>
<java.lang.Class$CacheKey: java.lang.Class$CacheKey newMethodKey(java.lang.String,java.lang.Class[],java.lang.Class)>
<java.lang.Class: java.lang.reflect.Field lookupCachedField(java.lang.String)>
<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>
<sun.nio.cs.FastCharsetProvider: java.lang.String canonicalize(java.lang.String)>
<java.lang.Enum: int hashCode()>
<java.lang.System: int identityHashCode(java.lang.Object)>
<java.util.HashMap$TreeNode: int tieBreakOrder(java.lang.Object,java.lang.Object)>
<java.util.IdentityHashMap: int hash(java.lang.Object,int)>
<java.util.IdentityHashMap: boolean resize(int)>
<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Collections$SetFromMap: boolean add(java.lang.Object)>
<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>
<java.util.Collections$SetFromMap: boolean contains(java.lang.Object)>
<java.util.IdentityHashMap: void closeDeletion(int)>
<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>
<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: int tieBreakOrder(java.lang.Object,java.lang.Object)>
<sun.security.util.DerValue: boolean equals(java.lang.Object)>
<java.lang.reflect.WeakCache$LookupValue: int hashCode()>
<com.ibm.jit.JITHelpers: com.ibm.jit.JITHelpers getHelpers()>
<java.lang.StringBuilder: void <clinit>()>
<java.util.Locale: java.lang.String toString()>
<sun.security.provider.PolicyParser$KeyStoreEntry: java.lang.String toString()>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: java.lang.StringBuilder appendHMS(java.lang.StringBuilder,int)>
<sun.util.calendar.CalendarUtils: java.lang.StringBuilder sprintf0d(java.lang.StringBuilder,int,int)>
<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder trailingSign(java.lang.StringBuilder,boolean)>
<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>
<java.lang.Class: void reflectCacheDebugHelper(java.lang.Class[],int,java.lang.String[])>
<java.lang.Class: java.lang.reflect.Method[] lookupCachedMethods(java.lang.Class$CacheKey)>
<java.time.LocalDate: java.lang.String toString()>
<sun.security.x509.X500Name: java.lang.String generateRFC2253DN(java.util.Map)>
<sun.security.x509.X500Name: java.lang.String getRFC2253Name(java.util.Map)>
<sun.security.x509.X500Name: java.lang.String getRFC2253Name()>
<java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.lang.StringBuilder: java.lang.Appendable append(char)>
<sun.security.provider.PolicyParser$DomainEntry: java.lang.String toString()>
<java.time.format.Parsed: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: java.lang.StringBuilder leadingSign(java.lang.StringBuilder,boolean)>
<java.util.Date: java.lang.StringBuilder convertToAbbr(java.lang.StringBuilder,java.lang.String)>
<java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<java.lang.StringBuilder: void ensureCapacityImpl(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: java.lang.String toString()>
<java.util.SimpleTimeZone: void decodeStartRule()>
<java.nio.charset.CoderResult: java.lang.String toString()>
<sun.security.util.BitArray: void <init>(int,byte[],int)>
<sun.security.util.BitArray: void <init>(int,byte[])>
<sun.security.x509.X509Key: sun.security.util.BitArray getKey()>
<sun.security.util.DerInputBuffer: sun.security.util.BitArray getUnalignedBitString(int)>
<sun.security.util.BitArray: sun.security.util.BitArray truncate()>
<sun.security.util.DerOutputStream: void putTruncatedUnalignedBitString(sun.security.util.BitArray)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int,boolean)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>
<java.lang.StringBuilder: java.lang.String toString()>
<java.net.Inet6Address: java.lang.String numericToTextFormat(byte[])>
<java.util.Formatter: java.lang.String toString()>
<sun.security.jca.ProviderConfig: java.lang.String toString()>
<javax.security.auth.PrivateCredentialPermission: boolean impliesCredentialClass(java.lang.String,java.lang.String)>
<javax.security.auth.PrivateCredentialPermission: boolean implies(java.security.Permission)>
<javax.security.auth.PrivateCredentialPermission: boolean equals(java.lang.Object)>
<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType lookup(java.lang.String)>
<java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>
<sun.security.x509.OIDName: java.lang.String toString()>
<java.lang.StringBuilder: void initFromSystemProperties(java.util.Properties)>
<java.lang.J9VMInternals: void <clinit>()>
<java.lang.Class: java.lang.Class getSuperclass()>
<java.util.RegularEnumSet: boolean contains(java.lang.Object)>
<java.util.JumboEnumSet: boolean contains(java.lang.Object)>
<java.lang.Class: boolean isEnum()>
<java.lang.Enum: java.lang.Class getDeclaringClass()>
<java.lang.Enum: int compareTo(java.lang.Enum)>
<java.lang.Enum: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>
<java.lang.J9VMInternals: void prepare(java.lang.Class)>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.Object: java.lang.Object clone()>
<sun.security.provider.PolicyFile$SelfPermission: java.security.cert.Certificate[] getCerts()>
<sun.security.util.DerValue: void <init>(byte,byte[],boolean)>
<sun.security.util.DerValue: void <init>(byte,byte[])>
<java.time.format.TextStyle: java.time.format.TextStyle[] values()>
<java.text.Collator: java.lang.Object clone()>
<java.text.RuleBasedCollator: java.lang.Object clone()>
<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>
<sun.security.util.BitArray: java.lang.Object clone()>
<sun.security.x509.X509Key: void setKey(sun.security.util.BitArray)>
<java.time.DayOfWeek: java.time.DayOfWeek[] values()>
<java.time.DayOfWeek: void <clinit>()>
<java.time.DayOfWeek: java.time.DayOfWeek plus(long)>
<java.util.regex.Pattern$CharPropertyNames$CloneableProperty: java.util.regex.Pattern$CharPropertyNames$CloneableProperty clone()>
<java.util.regex.Pattern$CharPropertyNames$4: java.util.regex.Pattern$CharProperty make()>
<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>
<sun.security.util.BitArray: byte[] toByteArray()>
<sun.security.util.DerOutputStream: void putUnalignedBitString(sun.security.util.BitArray)>
<java.time.Month: java.time.Month[] values()>
<java.time.Month: void <clinit>()>
<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>
<sun.security.util.DerInputBuffer: sun.security.util.DerInputBuffer dup()>
<sun.security.util.DerInputStream: sun.security.util.DerInputStream subStream(int,boolean)>
<java.util.Calendar: java.lang.Object clone()>
<java.util.JapaneseImperialCalendar: java.lang.Object clone()>
<java.util.Calendar: void invalidateWeekFields()>
<java.util.Calendar: void setMinimalDaysInFirstWeek(int)>
<java.util.Calendar: void setFirstDayOfWeek(int)>
<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>
<java.util.Arrays$ArrayList: java.lang.Object[] toArray()>
<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>
<sun.security.x509.CRLReasonCodeExtension: void <clinit>()>
<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>
<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>
<java.util.TreeSet: java.lang.Object clone()>
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet set(sun.text.normalizer.UnicodeSet)>
<java.net.Inet6Address: byte[] getAddress()>
<sun.text.normalizer.NormalizerBase: java.lang.Object clone()>
<java.text.DecimalFormatSymbols: java.lang.Object clone()>
<java.util.TimeZone: java.lang.Object clone()>
<sun.util.calendar.ZoneInfo: java.lang.Object clone()>
<java.util.Calendar: java.util.TimeZone getTimeZone()>
<java.util.JapaneseImperialCalendar: java.util.TimeZone getTimeZone()>
<java.text.DateFormat: boolean equals(java.lang.Object)>
<java.text.DateFormat: java.util.TimeZone getTimeZone()>
<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>
<sun.text.normalizer.UCharacterIterator: java.lang.Object clone()>
<sun.text.normalizer.ReplaceableUCharacterIterator: java.lang.Object clone()>
<java.security.spec.EncodedKeySpec: void <init>(byte[])>
<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>
<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>
<java.text.Format: java.lang.Object clone()>
<java.text.NumberFormat: java.lang.Object clone()>
<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>
<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>
<java.security.cert.X509CRLEntry: int hashCode()>
<java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<sun.security.x509.X509CertImpl: byte[] getEncoded()>
<sun.security.x509.X509CertImpl: byte[] getEncodedInternal(java.security.cert.Certificate)>
<java.security.cert.Certificate: int hashCode()>
<java.security.cert.Certificate: boolean equals(java.lang.Object)>
<java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>
<java.security.CodeSource: boolean matchCerts(java.security.CodeSource,boolean)>
<java.lang.Throwable: java.lang.StackTraceElement[] getInternalStackTrace()>
<java.lang.Access: int getStackTraceDepth(java.lang.Throwable)>
<java.lang.Access: java.lang.StackTraceElement getStackTraceElement(java.lang.Throwable,int)>
<java.lang.J9VMInternals: void initialize(java.lang.Class)>
<java.lang.String: void <clinit>()>
<java.lang.String: void getCharsNoBoundChecks(int,int,char[],int)>
<java.lang.StringBuilder: void <init>(java.lang.String)>
<java.lang.StringBuffer: void <init>(java.lang.String)>
<java.lang.String: int hashCodeImplCompressed(char[],int,int)>
<java.lang.String: int hashCode()>
<sun.util.locale.BaseLocale: int hashCode()>
<java.util.Locale: int hashCode()>
<java.util.ResourceBundle$CacheKey: void calculateHashCode()>
<java.util.ResourceBundle$CacheKey: void <init>(java.lang.String,java.util.Locale,java.lang.ClassLoader)>
<java.util.ResourceBundle$CacheKey: java.util.ResourceBundle$CacheKey setLocale(java.util.Locale)>
<java.util.Locale$LocaleKey: void <init>(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>
<java.util.Locale$LocaleKey: void <init>(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions,java.util.Locale$1)>
<java.lang.Package: int hashCode()>
<java.security.Provider$ServiceKey: int hashCode()>
<sun.security.jca.ProviderConfig: int hashCode()>
<java.security.Provider$UString: int hashCode()>
<java.text.AttributedString$AttributedStringIterator: int hashCode()>
<java.text.ChoiceFormat: int hashCode()>
<java.text.SimpleDateFormat: int hashCode()>
<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>
<sun.util.PreHashedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.security.BasicPermission: int hashCode()>
<com.ibm.oti.shared.SharedClassPermission: int hashCode()>
<java.text.PatternEntry: int hashCode()>
<java.io.UnixFileSystem: int hashCode(java.io.File)>
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String getName(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,int,java.lang.String)>
<sun.util.locale.LocaleExtensions: int hashCode()>
<sun.security.x509.EDIPartyName: int hashCode()>
<javax.crypto.CryptoPermission: int hashCode()>
<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: int hashCode()>
<sun.security.provider.PolicyParser$PrincipalEntry: int hashCode()>
<sun.security.provider.PolicyParser$PermissionEntry: int hashCode()>
<sun.util.calendar.Era: int hashCode()>
<sun.util.calendar.CalendarDate: int hashCode()>
<sun.util.calendar.ImmutableGregorianDate: int hashCode()>
<java.time.ZoneId: int hashCode()>
<java.time.ZonedDateTime: int hashCode()>
<sun.security.x509.AVA: int hashCode()>
<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String)>
<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,sun.util.locale.BaseLocale$1)>
<java.security.UnresolvedPermission: int hashCode()>
<javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: int hashCode()>
<java.text.DecimalFormat: int hashCode()>
<sun.security.provider.PolicyFile$SelfPermission: int hashCode()>
<java.util.PropertyPermission: int hashCode()>
<sun.security.x509.RDN: int hashCode()>
<java.lang.String: void initCompressionFlag()>
<java.lang.String: void <init>(char[],int,int,boolean)>
<java.lang.String: java.lang.String valueOf(char)>
<sun.util.locale.LanguageTag: boolean isPrivateusePrefixChar(char)>
<java.util.Formatter$Flags: java.util.Formatter$Flags parse(char)>
<java.lang.Character: java.lang.String toString(char)>
<java.util.Formatter: void checkText(java.lang.String,int,int)>
<java.lang.Character: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: char conversion(java.lang.String)>
<java.lang.String: java.lang.String trim()>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String parseProperty(java.lang.String)>
<openj9.internal.security.RestrictedSecurity: boolean isNullOrBlank(java.lang.String)>
<java.lang.String: java.lang.String concat(java.lang.String)>
<java.lang.String: void <init>(char[],int,int)>
<java.lang.String: java.lang.String copyValueOf(char[],int,int)>
<java.text.DecimalFormat: java.lang.String fastFormat(double)>
<java.nio.HeapCharBuffer: java.lang.String toString(int,int)>
<java.nio.CharBuffer: java.lang.String toString()>
<java.lang.Long: java.lang.String toString(long,int)>
<java.lang.String: void <init>(char[])>
<sun.nio.cs.FastCharsetProvider: java.lang.String toLower(java.lang.String)>
<sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)>
<sun.util.locale.LanguageTag: java.lang.String canonicalizeExtension(java.lang.String)>
<java.util.Locale: java.lang.String convertOldISOCodes(java.lang.String)>
<sun.util.locale.LanguageTag: void <clinit>()>
<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: void <init>(java.lang.String)>
<sun.util.locale.LanguageTag: java.lang.String canonicalizeLanguage(java.lang.String)>
<sun.util.locale.BaseLocale$Key: sun.util.locale.BaseLocale$Key normalize(sun.util.locale.BaseLocale$Key)>
<sun.util.locale.BaseLocale$Cache: sun.util.locale.BaseLocale$Key normalizeKey(sun.util.locale.BaseLocale$Key)>
<sun.util.locale.BaseLocale$Cache: java.lang.Object normalizeKey(java.lang.Object)>
<sun.util.locale.BaseLocale: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<sun.util.locale.BaseLocale: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,sun.util.locale.BaseLocale$1)>
<sun.util.calendar.ZoneInfoFile: java.lang.String toCustomID(int)>
<sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)>
<sun.util.locale.LanguageTag: java.lang.String canonicalizeRegion(java.lang.String)>
<java.time.format.DecimalStyle: java.lang.String convertNumberToI18N(java.lang.String)>
<sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)>
<sun.util.locale.LanguageTag: java.lang.String canonicalizeScript(java.lang.String)>
<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>
<java.lang.Integer: java.lang.String toString(int,int)>
<java.lang.String: void <init>(char[],boolean)>
<java.lang.Long: java.lang.String toString(long)>
<java.lang.String: java.lang.String valueOf(long)>
<java.lang.AssertionError: void <init>(long)>
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void developLongDigits(int,long,int)>
<java.lang.Long: java.lang.String toString()>
<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>
<java.lang.Integer: java.lang.String toHexString(int)>
<java.lang.Long: java.lang.String toUnsignedString0(long,int)>
<java.lang.Long: java.lang.String toOctalString(long)>
<java.lang.Long: java.lang.String toHexString(long)>
<java.lang.String: void <init>(char[],int,int,boolean,boolean)>
<java.lang.StringBuffer: java.lang.String substring(int,int)>
<java.lang.StringBuffer: java.lang.CharSequence subSequence(int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>
<java.lang.StringBuilder: void decompress(int,int)>
<java.lang.StringBuffer: void decompress(int,int)>
<java.lang.String: void <init>(byte[],int,int,int)>
<java.lang.String: void <init>(int[],int,int)>
<java.nio.charset.UnsupportedCharsetException: void <init>(java.lang.String)>
<java.lang.String: int compareToIgnoreCase(java.lang.String)>
<sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: boolean permitsImpl(java.security.Key)>
<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>
<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>
<java.net.SocketPermission: boolean compareHostnames(java.net.SocketPermission)>
<java.text.SimpleDateFormat: int matchZoneString(java.lang.String,int,java.lang.String[])>
<sun.net.www.protocol.jar.Handler: java.lang.String checkNestedProtocol(java.lang.String)>
<java.text.SimpleDateFormat: int matchString(java.lang.String,int,int,java.lang.String[],java.text.CalendarBuilder)>
<java.lang.String: boolean startsWith(java.lang.String,int)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree: boolean prefixOf(java.lang.CharSequence,int,int)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree: java.lang.String match(java.lang.CharSequence,java.text.ParsePosition)>
<java.lang.String: boolean startsWith(java.lang.String)>
<java.security.BasicPermission: boolean implies(java.security.Permission)>
<java.util.PropertyPermission: boolean implies(java.security.Permission)>
<com.ibm.oti.shared.SharedClassPermission: boolean implies(java.security.Permission)>
<sun.util.locale.provider.CalendarDataUtility: java.lang.String normalizeCalendarType(java.lang.String)>
<sun.misc.MetaIndex: boolean mayContain(java.lang.String)>
<java.security.Provider: boolean checkLegacy(java.lang.Object)>
<java.security.Provider: java.lang.Object implPut(java.lang.Object,java.lang.Object)>
<java.lang.String: boolean endsWith(java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean isBlockOrSF(java.lang.String)>
<sun.net.www.MimeEntry: boolean isStarred(java.lang.String)>
<java.util.zip.ZipEntry: boolean isDirectory()>
<java.lang.String: void getChars(int,int,char[],int)>
<java.text.DigitList: void set(boolean,java.lang.String,boolean,boolean,int,boolean)>
<java.text.DigitList: void set(boolean,java.math.BigDecimal,int,boolean)>
<java.lang.String: void deduplicateStrings(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object)>
<java.lang.String: boolean equals(java.lang.Object)>
<java.security.Provider$UString: boolean equals(java.lang.Object)>
<sun.util.calendar.Era: boolean equals(java.lang.Object)>
<sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<sun.security.provider.PolicyParser$PrincipalEntry: boolean isReplaceName()>
<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String getDisplayClass()>
<javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<sun.nio.cs.ThreadLocalCoders$2: boolean hasName(java.lang.Object,java.lang.Object)>
<javax.crypto.CryptoPolicyParser: boolean peek(java.lang.String)>
<sun.security.util.KeyUtil: int getKeySize(java.security.Key)>
<java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<sun.net.www.protocol.file.Handler: boolean hostsEqual(java.net.URL,java.net.URL)>
<java.net.URLStreamHandler: boolean sameFile(java.net.URL,java.net.URL)>
<sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<sun.nio.cs.ThreadLocalCoders$1: boolean hasName(java.lang.Object,java.lang.Object)>
<java.security.BasicPermission: boolean equals(java.lang.Object)>
<com.ibm.oti.shared.SharedClassPermission: boolean equals(java.lang.Object)>
<java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<javax.security.auth.PrivateCredentialPermission$CredOwner: boolean implies(java.lang.Object)>
<javax.security.auth.PrivateCredentialPermission: boolean impliesPrincipalSet(javax.security.auth.PrivateCredentialPermission$CredOwner[],javax.security.auth.PrivateCredentialPermission$CredOwner[])>
<java.util.zip.ZipCoder: void <init>(java.nio.charset.Charset)>
<java.util.zip.ZipCoder: java.util.zip.ZipCoder get(java.nio.charset.Charset)>
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream,java.nio.charset.Charset)>
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>
<sun.security.x509.RDN: boolean equals(java.lang.Object)>
<sun.security.x509.X500Name: boolean isWithinSubtree(sun.security.x509.X500Name)>
<sun.security.x509.X500Name: int constrains(sun.security.x509.GeneralNameInterface)>
<java.security.Provider$Service: boolean supportsKeyFormat(java.security.Key)>
<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>
<javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<sun.security.provider.PolicyFile: boolean wildcardPrincipalNameImplies(java.lang.String,java.security.Principal[])>
<sun.misc.URLClassPath$JarLoader: boolean isOptimizable(java.net.URL)>
<java.util.LinkedList: int indexOf(java.lang.Object)>
<java.util.LinkedList: boolean contains(java.lang.Object)>
<sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>
<java.util.Vector: boolean contains(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object)>
<java.nio.charset.Charset: boolean equals(java.lang.Object)>
<java.time.ZoneId: boolean equals(java.lang.Object)>
<java.io.FilePermission: boolean equals(java.lang.Object)>
<sun.security.provider.PolicyParser$PrincipalEntry: boolean isWildcardClass()>
<java.text.DecimalFormat: boolean equals(java.lang.Object)>
<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<sun.net.www.protocol.jar.URLJarFile: boolean isFileURL(java.net.URL)>
<javax.crypto.CryptoPermission: boolean impliesExemptionMechanism(java.lang.String)>
<javax.crypto.CryptoPermission: boolean implies(java.security.Permission)>
<javax.crypto.CryptoPermissionCollection: boolean implies(java.security.Permission)>
<sun.security.x509.X500Name: boolean equals(java.lang.Object)>
<java.text.PatternEntry: boolean equals(java.lang.Object)>
<java.util.ArrayList: int lastIndexOf(java.lang.Object)>
<sun.util.locale.LocaleExtensions: boolean equals(java.lang.Object)>
<java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<java.util.Locale: boolean equals(java.lang.Object)>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: boolean isAsterisk(java.lang.String)>
<java.lang.Class$CacheKey: boolean equals(java.lang.Object)>
<sun.security.jca.ProviderList: int getIndex(java.lang.String)>
<sun.security.jca.ProviderList: sun.security.jca.ProviderConfig getProviderConfig(java.lang.String)>
<java.util.PropertyPermission: boolean equals(java.lang.Object)>
<sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<sun.security.provider.PolicyParser$PrincipalEntry: boolean isWildcardName()>
<java.nio.charset.IllegalCharsetNameException: void <init>(java.lang.String)>
<java.lang.String: int upperIndex(int)>
<java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<java.lang.String: char charAt(int)>
<sun.util.locale.LocaleUtils: boolean caseIgnoreMatch(java.lang.String,java.lang.String)>
<sun.util.locale.LanguageTag: boolean isPrivateusePrefix(java.lang.String)>
<sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<sun.util.locale.LanguageTag: boolean isExtensionSingleton(java.lang.String)>
<java.net.URI: int normalizedHash(int,java.lang.String)>
<sun.reflect.generics.parser.SignatureParser: char current()>
<sun.reflect.generics.parser.SignatureParser: void skipIdentifier()>
<java.net.URI: long highMask(java.lang.String)>
<java.net.URI: void <clinit>()>
<java.net.URI$Parser: void <init>(java.net.URI,java.lang.String)>
<java.net.URI: long access$500()>
<java.net.URI: long access$2600()>
<java.net.URI: long access$2800()>
<java.net.URI: long access$1800()>
<java.net.URI: long access$1600()>
<java.net.URI: long access$2100()>
<java.net.URI: long access$200()>
<java.net.URI$Parser: int scanEscape(int,int,char)>
<java.net.URI$Parser: int scan(int,int,long,long)>
<java.net.URI: long access$1200()>
<java.net.URI: long access$400()>
<java.net.URI: long access$600()>
<java.net.URI: int decode(char)>
<java.net.URI: byte decode(char,char)>
<java.net.URI: long access$3000()>
<java.net.URI: long access$3400()>
<java.net.URI: long access$1300()>
<java.net.URI: long access$3100()>
<java.net.URI: int hashIgnoringCase(int,java.lang.String)>
<java.net.URI: boolean access$300(char,long,long)>
<java.net.URI: long access$1900()>
<java.net.URI: long access$1700()>
<java.net.URI: long access$900()>
<java.net.URI: long access$3300()>
<java.net.URI: long access$100()>
<java.net.URI: long access$3200()>
<java.net.URI: long access$2700()>
<java.net.URI: long access$2900()>
<java.net.URI: long access$2000()>
<java.net.URI: long access$800()>
<java.util.jar.Attributes$Name: boolean isValid(java.lang.String)>
<java.util.jar.Attributes$Name: void <init>(java.lang.String)>
<java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)>
<java.util.jar.Attributes$Name: void <clinit>()>
<java.util.jar.Attributes$Name: boolean isValid(char)>
<com.ibm.oti.util.Util: boolean startsWithDriveLetter(java.lang.String)>
<sun.text.normalizer.UTF16: int _charAt(java.lang.String,int,char)>
<sun.text.normalizer.UTF16: int charAt(java.lang.String,int)>
<sun.text.normalizer.Utility: int unescapeAt(java.lang.String,int[])>
<sun.text.normalizer.UnicodeSet: int getSingleCP(java.lang.String)>
<sun.text.normalizer.Utility: int skipWhitespace(java.lang.String,int)>
<sun.util.locale.LocaleUtils: boolean isAlphaNumericString(java.lang.String)>
<sun.util.locale.UnicodeLocaleExtension: boolean isKey(java.lang.String)>
<sun.util.locale.UnicodeLocaleExtension: boolean isAttribute(java.lang.String)>
<sun.util.locale.LanguageTag: boolean isPrivateuseSubtag(java.lang.String)>
<sun.util.locale.LanguageTag: boolean isExtensionSubtag(java.lang.String)>
<sun.util.locale.LanguageTag: boolean isVariant(java.lang.String)>
<java.util.Locale: boolean isUnicodeExtensionKey(java.lang.String)>
<sun.util.locale.LocaleUtils: boolean isAlphaString(java.lang.String)>
<sun.util.locale.LanguageTag: boolean isScript(java.lang.String)>
<sun.util.locale.LanguageTag: boolean isExtlang(java.lang.String)>
<sun.util.locale.LanguageTag: boolean isLanguage(java.lang.String)>
<sun.util.locale.LanguageTag: boolean isRegion(java.lang.String)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree: int prefixLength(java.lang.String)>
<java.text.AttributedString: char charAt(int)>
<java.text.AttributedString: char access$000(java.text.AttributedString,int)>
<java.text.AttributedString$AttributedStringIterator: char internalSetIndex(int)>
<java.text.AttributedString$AttributedStringIterator: char setIndex(int)>
<java.text.AttributedString$AttributedStringIterator: char first()>
<java.text.AttributedString$AttributedStringIterator: char next()>
<java.text.AttributedString$AttributedStringIterator: char current()>
<java.time.format.DateTimeFormatterBuilder$PrefixTree: void <init>(java.lang.String,java.lang.String,java.time.format.DateTimeFormatterBuilder$PrefixTree)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree: java.time.format.DateTimeFormatterBuilder$PrefixTree newTree(java.time.format.DateTimeParseContext)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree: java.time.format.DateTimeFormatterBuilder$PrefixTree newNode(java.lang.String,java.lang.String,java.time.format.DateTimeFormatterBuilder$PrefixTree)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree: void <init>(java.lang.String,java.lang.String,java.time.format.DateTimeFormatterBuilder$PrefixTree,java.time.format.DateTimeFormatterBuilder$1)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree$CI: void <init>(java.lang.String,java.lang.String,java.time.format.DateTimeFormatterBuilder$PrefixTree)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree$CI: java.time.format.DateTimeFormatterBuilder$PrefixTree$CI newNode(java.lang.String,java.lang.String,java.time.format.DateTimeFormatterBuilder$PrefixTree)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree$CI: java.time.format.DateTimeFormatterBuilder$PrefixTree newNode(java.lang.String,java.lang.String,java.time.format.DateTimeFormatterBuilder$PrefixTree)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree$CI: void <init>(java.lang.String,java.lang.String,java.time.format.DateTimeFormatterBuilder$PrefixTree,java.time.format.DateTimeFormatterBuilder$1)>
<java.net.URI$Parser: char charAt(int)>
<java.net.URI$Parser: boolean at(int,int,java.lang.String)>
<java.net.URI$Parser: int scan(int,int,char)>
<java.net.URI$Parser: boolean at(int,int,char)>
<sun.net.www.ParseUtil: long highMask(java.lang.String)>
<java.text.SimpleDateFormat: int subParseNumericZone(java.lang.String,int,int,int,boolean,java.text.CalendarBuilder)>
<java.io.UnixFileSystem: int prefixLength(java.lang.String)>
<sun.security.x509.X500Name: int countQuotes(java.lang.String,int,int)>
<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String,int,int)>
<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String)>
<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: void <init>(java.lang.String)>
<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: void <init>(java.lang.String,sun.util.locale.InternalLocaleBuilder$1)>
<sun.util.locale.InternalLocaleBuilder: void <clinit>()>
<java.util.Locale$Builder: void <init>()>
<java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: boolean parseNumber(int[],int,java.lang.CharSequence,boolean)>
<java.io.StringReader: int read()>
<sun.security.x509.AVA: boolean trailingSpace(java.io.Reader)>
<sun.security.x509.AVA: int readChar(java.io.Reader,java.lang.String)>
<java.util.regex.Pattern: int countCodePoints(java.lang.CharSequence)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree$CI: boolean prefixOf(java.lang.CharSequence,int,int)>
<java.nio.StringCharBuffer: char get()>
<sun.net.util.IPAddressUtil: boolean isOctalFieldStart(java.nio.CharBuffer)>
<sun.net.util.IPAddressUtil: boolean isHexFieldStart(java.nio.CharBuffer)>
<sun.security.x509.X500Name: boolean escaped(int,int,java.lang.String)>
<java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: int getDigit(java.lang.CharSequence,int)>
<java.net.URL: boolean isValidProtocol(java.lang.String)>
<sun.util.locale.LocaleUtils: boolean isNumericString(java.lang.String)>
<sun.util.locale.StringTokenIterator: int nextDelimiter(int)>
<sun.nio.cs.US_ASCII$Decoder: void implReplaceWith(java.lang.String)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder replaceWith(java.lang.String)>
<java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<java.net.URI: long lowMask(java.lang.String)>
<java.text.RBTableBuilder: void addContractFlags(java.lang.String)>
<sun.net.www.ParseUtil: long lowMask(java.lang.String)>
<sun.misc.ASCIICaseInsensitiveComparator: int compare(java.lang.String,java.lang.String)>
<sun.misc.ASCIICaseInsensitiveComparator: int compare(java.lang.Object,java.lang.Object)>
<java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<java.net.URI: void checkPath(java.lang.String,java.lang.String,java.lang.String)>
<java.time.format.DateTimeParseContext: boolean subSequenceEquals(java.lang.CharSequence,int,java.lang.CharSequence,int,int)>
<java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<sun.misc.ASCIICaseInsensitiveComparator: int lowerCaseHashCode(java.lang.String)>
<java.util.jar.Attributes$Name: int hashCode()>
<java.text.ChoiceFormat: java.lang.String[] doubleArraySize(java.lang.String[])>
<java.lang.String: boolean hasMetaChars(java.lang.String)>
<java.lang.String: boolean isSingleEscapeLiteral(java.lang.String)>
<java.lang.StringBuilder: void getChars(int,int,char[],int)>
<java.util.Formatter$FormatSpecifier$BigDecimalLayout: char[] toCharArray(java.lang.StringBuilder)>
<java.util.Formatter$FormatSpecifier$BigDecimalLayout: char[] mantissa()>
<java.util.Formatter$FormatSpecifier$BigDecimalLayout: char[] exponent()>
<java.lang.StringBuilder: int lengthInternal()>
<java.lang.StringBuilder: void move(int,int)>
<java.lang.StringBuilder: int length()>
<java.text.MessageFormat: void <clinit>()>
<java.lang.String: boolean charValuesEqualIgnoreCase(char,char)>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>
<sun.net.www.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>
<sun.net.www.protocol.jar.JarURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>
<sun.security.provider.PolicyParser: boolean peek(java.lang.String)>
<sun.security.x509.CertificateAlgorithmId: sun.security.x509.AlgorithmId get(java.lang.String)>
<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Object run()>
<sun.security.x509.KeyUsageExtension: java.lang.Boolean get(java.lang.String)>
<java.lang.Boolean: boolean parseBoolean(java.lang.String)>
<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean needSignatureFile(java.lang.String)>
<java.net.URLStreamHandler: boolean hostsEqual(java.net.URL,java.net.URL)>
<sun.security.x509.CertificateX509Key: java.security.PublicKey get(java.lang.String)>
<sun.security.x509.CertificateVersion: java.lang.Integer get(java.lang.String)>
<sun.security.x509.CertificateValidity: java.util.Date get(java.lang.String)>
<java.net.SocketPermission: boolean equals(java.lang.Object)>
<sun.security.x509.CertificateSerialNumber: sun.security.x509.SerialNumber get(java.lang.String)>
<sun.net.www.MimeTable: int getActionCode(java.lang.String)>
<java.lang.String: int compareTo(java.lang.String)>
<java.io.UnixFileSystem: int compare(java.io.File,java.io.File)>
<java.lang.String: int compareTo(java.lang.Object)>
<java.util.Arrays: int binarySearch0(java.lang.Object[],int,int,java.lang.Object)>
<java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>
<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>
<java.time.zone.ZoneRules: java.time.zone.ZoneOffsetTransition getTransition(java.time.LocalDateTime)>
<java.time.chrono.AbstractChronology: int compareTo(java.time.chrono.Chronology)>
<java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<java.lang.String: boolean isWordPart(int)>
<java.lang.String: boolean isCombiningAbove(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Date: void <clinit>()>
<java.util.Date: sun.util.calendar.BaseCalendar getCalendarSystem(sun.util.calendar.BaseCalendar$Date)>
<sun.security.x509.CertificateValidity: java.util.Date getNotAfter()>
<java.security.Timestamp: java.util.Date getTimestamp()>
<java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
<sun.security.x509.CertificateValidity: java.util.Date getNotBefore()>
<java.security.Timestamp: void <init>(java.util.Date,java.security.cert.CertPath)>
<java.util.Calendar: java.util.Date getTime()>
<java.text.DateFormatSymbols: java.lang.String[] toOneBasedArray(java.lang.String[])>
<java.lang.StringBuffer: boolean isCompressed()>
<java.lang.String: void compressedArrayCopy(char[],int,char[],int,int)>
<java.lang.String: void getBytes(int,int,char[],int)>
<sun.net.www.MessageHeader: void grow()>
<sun.net.www.MessageHeader: void <init>()>
<sun.net.www.URLConnection: void <init>(java.net.URL)>
<sun.net.www.protocol.file.FileURLConnection: void <init>(java.net.URL,java.io.File)>
<sun.net.www.protocol.file.Handler: java.net.URLConnection createFileURLConnection(java.net.URL,java.io.File)>
<sun.net.www.MessageHeader: void add(java.lang.String,java.lang.String)>
<java.lang.String: int lengthInternal()>
<java.lang.String: boolean isEmpty()>
<java.net.URL: java.net.InetAddress getHostAddress()>
<java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)>
<java.lang.String: char[] toCharArray()>
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: boolean areBracketsBalanced(java.lang.String)>
<java.util.Currency: int countOccurrences(java.lang.String,char)>
<java.text.DecimalFormat: void resetFastPathData(boolean)>
<java.text.DecimalFormat: boolean checkAndSetFastPathStatus()>
<java.text.DigitList: void <clinit>()>
<java.text.DigitList: boolean shouldRoundUp(int,boolean,boolean)>
<java.text.DigitList: void round(int,boolean,boolean)>
<java.text.DigitList: void set(boolean,long,int)>
<java.text.DigitList: void set(boolean,long)>
<java.text.DigitList: boolean isLongMIN_VALUE()>
<java.text.DigitList: boolean fitsIntoLong(boolean,boolean)>
<java.lang.String: int length()>
<sun.misc.FloatingDecimal: void <clinit>()>
<sun.reflect.generics.parser.SignatureParser: void advance()>
<sun.text.normalizer.RuleCharacterIterator: void jumpahead(int)>
<java.time.format.DateTimeTextProvider$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>
<java.time.format.DateTimeTextProvider$1: int compare(java.lang.Object,java.lang.Object)>
<java.util.regex.Pattern: void <init>(java.lang.String,int)>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>
<java.time.Period: void <clinit>()>
<java.time.Period: java.time.Period ofDays(int)>
<java.time.Period: boolean isZero()>
<java.time.format.Parsed: void <init>()>
<java.time.Period: java.time.Period create(int,int,int)>
<sun.security.util.AlgorithmDecomposer: void <clinit>()>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<sun.misc.FloatingDecimal$HexFloatPattern: void <clinit>()>
<sun.misc.FloatingDecimal$HexFloatPattern: java.util.regex.Pattern access$200()>
<sun.security.util.CurveDB$Holder: void <clinit>()>
<sun.security.util.CurveDB$Holder: java.util.regex.Pattern access$000()>
<java.util.Formatter: void <clinit>()>
<java.util.Formatter: double access$202(double)>
<java.util.Formatter: double access$200()>
<java.text.AttributedString: int length()>
<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)>
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>
<java.text.Format: java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.lang.String)>
<sun.security.jca.ProviderConfig: boolean hasArgument()>
<sun.security.jca.ProviderConfig: boolean access$200(sun.security.jca.ProviderConfig)>
<sun.text.normalizer.RuleCharacterIterator: void _advance(int)>
<java.util.regex.Matcher: int getTextLength()>
<java.util.regex.Matcher: java.util.regex.Matcher reset()>
<java.util.regex.Matcher: void <init>(java.util.regex.Pattern,java.lang.CharSequence)>
<sun.text.normalizer.RuleCharacterIterator: void <init>(java.lang.String,sun.text.normalizer.SymbolTable,java.text.ParsePosition)>
<sun.util.locale.StringTokenIterator: boolean hasNext()>
<sun.text.normalizer.RuleCharacterIterator: boolean atEnd()>
<java.util.zip.ZipEntry: void <init>(java.lang.String)>
<java.util.jar.JarEntry: void <init>(java.lang.String)>
<java.io.StringReader: void <init>(java.lang.String)>
<java.lang.String: boolean regionMatchesInternal(java.lang.String,java.lang.String,char[],char[],int,int,int)>
<java.lang.String: void compress(char[],int,char[],int,int)>
<sun.security.util.KnownOIDs: void <init>(java.lang.String,int,java.lang.String)>
<sun.util.calendar.CalendarSystem: void <clinit>()>
<sun.util.calendar.ZoneInfo: void <clinit>()>
<sun.util.calendar.BaseCalendar: void <clinit>()>
<sun.util.calendar.BaseCalendar: int getDayOfWeek(sun.util.calendar.CalendarDate)>
<sun.util.calendar.BaseCalendar: long getDayOfYear(int,int,int)>
<sun.util.calendar.BaseCalendar: long getDayOfYear(sun.util.calendar.CalendarDate)>
<sun.util.calendar.BaseCalendar: long getFixedDate(int,int,int,sun.util.calendar.BaseCalendar$Date)>
<sun.util.calendar.BaseCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>
<sun.util.calendar.BaseCalendar: int getMonthLength(int,int)>
<sun.util.calendar.CalendarSystem: sun.util.calendar.Gregorian getGregorianCalendar()>
<java.lang.String: char charAtInternal(int)>
<java.lang.String: char compareValue(byte)>
<sun.reflect.Reflection: void <clinit>()>
<java.lang.String: void compressedArrayCopy(byte[],int,char[],int,int)>
<java.lang.AssertionError: void <init>(java.lang.Object)>
<java.math.MutableBigInteger: long toLong()>
<java.time.ZoneId: void <init>()>
<java.time.ZoneRegion: void <init>(java.lang.String,java.time.zone.ZoneRules)>
<java.nio.charset.CoderResult: void <clinit>()>
<java.nio.charset.CoderResult$1: java.nio.charset.CoderResult create(int)>
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult implFlush(java.nio.CharBuffer)>
<java.nio.charset.CoderResult: void throwException()>
<sun.nio.cs.Surrogate$Parser: void <init>()>
<java.nio.charset.CoderResult$2: java.nio.charset.CoderResult create(int)>
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer)>
<java.lang.String: char charAtInternal(int,char[])>
<java.lang.StringBuffer: int lengthInternalUnsynchronized()>
<java.lang.StringBuffer: int length()>
<sun.text.normalizer.ReplaceableString: int length()>
<sun.text.normalizer.ReplaceableUCharacterIterator: void setIndex(int)>
<sun.text.normalizer.UCharacterIterator: int moveIndex(int)>
<sun.text.normalizer.NormalizerBase: void reset()>
<sun.text.normalizer.ReplaceableUCharacterIterator: int getLength()>
<java.lang.String: void decompress(char[],int,char[],int,int)>
<java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<java.lang.String: boolean isCompressed()>
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.ibm.jit.JITHelpers: long readBits(long,int,int,int)>
<com.ibm.jit.JITHelpers: byte getByteFromArrayByIndex(java.lang.Object,int)>
<com.ibm.jit.JITHelpers: int intrinsicIndexOfLatin1(java.lang.Object,byte,int,int)>
<com.ibm.jit.JITHelpers: int intrinsicIndexOfStringLatin1(java.lang.Object,int,java.lang.Object,int,int)>
<com.ibm.jit.JITHelpers: char getCharFromArrayByIndex(java.lang.Object,int)>
<com.ibm.jit.JITHelpers: int intrinsicIndexOfStringUTF16(java.lang.Object,int,java.lang.Object,int,int)>
<com.ibm.jit.JITHelpers: int intrinsicIndexOfUTF16(java.lang.Object,char,int,int)>
<com.ibm.jit.JITHelpers: long storeBits(long,int,long,int,int)>
<com.ibm.jit.JITHelpers: void putCharInArrayByIndex(java.lang.Object,int,char)>
<com.ibm.jit.JITHelpers: void putByteInArrayByIndex(java.lang.Object,int,byte)>
<com.ibm.jit.JITHelpers: long getLongFromObject(java.lang.Object,long)>
<com.ibm.jit.JITHelpers: void putObjectInObject(java.lang.Object,long,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: void <clinit>()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: boolean checkInvariants(java.util.concurrent.ConcurrentHashMap$TreeNode)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode balanceInsertion(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode)>
<java.util.concurrent.ConcurrentSkipListMap: void <clinit>()>
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListMap: boolean remove(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListSet: boolean remove(java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$Node findNode(java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListSet: void <init>()>
<java.util.concurrent.ConcurrentSkipListMap: void initialize()>
<java.util.concurrent.ConcurrentSkipListMap: void <init>()>
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$Node findPredecessor(java.lang.Object,java.util.Comparator)>
<java.util.concurrent.ConcurrentSkipListMap: boolean casHead(java.util.concurrent.ConcurrentSkipListMap$HeadIndex,java.util.concurrent.ConcurrentSkipListMap$HeadIndex)>
<java.util.concurrent.ConcurrentSkipListMap: void tryReduceLevel()>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: void <clinit>()>
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: void valueCheck(java.lang.Object)>
<java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<java.lang.Integer: java.lang.String toString()>
<java.lang.Byte: java.lang.String toString()>
<sun.security.util.BitArray: boolean get(int)>
<java.lang.Integer: int stringSize(int)>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.Type makeInt()>
<sun.reflect.generics.visitor.Reifier: void visitIntSignature(sun.reflect.generics.tree.IntSignature)>
<sun.reflect.generics.tree.IntSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.lang.Integer: int formatUnsignedInt(int,int,char[],int,int)>
<sun.misc.FDBigInteger: int getNormalizationBias()>
<java.lang.Long: int formatUnsignedLong(long,int,char[],int,int)>
<java.math.BigInteger: int bitLengthForInt(int)>
<java.math.BigInteger: int bitCount()>
<java.math.MutableBigInteger: long bitLength()>
<java.time.Period: int hashCode()>
<java.math.BigInteger: int getLowestSetBit()>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<java.time.zone.ZoneRules: java.time.zone.ZoneOffsetTransition[] findTransitionArray(int)>
<java.lang.Integer: int hashCode()>
<java.lang.Integer: int compareTo(java.lang.Integer)>
<java.lang.Integer: int compareTo(java.lang.Object)>
<java.math.MutableBigInteger: int divideOneWord(int,java.math.MutableBigInteger)>
<java.lang.Long: void getChars(long,int,char[])>
<java.time.LocalTime: int compareTo(java.time.LocalTime)>
<java.time.LocalDateTime: int compareTo0(java.time.LocalDateTime)>
<java.time.LocalDateTime: boolean isAfter(java.time.chrono.ChronoLocalDateTime)>
<java.time.LocalDateTime: boolean isBefore(java.time.chrono.ChronoLocalDateTime)>
<java.time.zone.ZoneRules: java.lang.Object findOffsetInfo(java.time.LocalDateTime,java.time.zone.ZoneOffsetTransition)>
<java.lang.Class: sun.misc.Unsafe getUnsafe()>
<java.lang.Class: void writeFieldValue(java.lang.Object,long,java.lang.Object)>
<java.lang.Class: void writeFieldValue(long,java.lang.Object)>
<java.lang.Class: java.lang.Class$MetadataCache getMetadataCache()>
<java.lang.Class: java.lang.Class$ReflectCache acquireReflectCache()>
<java.lang.Class: java.lang.Class$EnumVars getEnumVars()>
<java.lang.Class: long getReflectCacheOffset()>
<java.lang.Boolean: void <clinit>()>
<java.util.ServiceLoader$LazyIterator$1: java.lang.Boolean run()>
<java.util.ServiceLoader$LazyIterator$1: java.lang.Object run()>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.Type makeBool()>
<sun.reflect.generics.visitor.Reifier: void visitBooleanSignature(sun.reflect.generics.tree.BooleanSignature)>
<sun.reflect.generics.tree.BooleanSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.lang.ClassLoader: void setClassAssertionStatusHelper(java.lang.String,boolean)>
<java.lang.ClassLoader: void setClassAssertionStatusImpl(java.lang.String,boolean)>
<java.lang.ClassLoader: void setPackageAssertionStatusHelper(java.lang.String,boolean)>
<java.lang.ClassLoader: void setPackageAssertionStatusImpl(java.lang.String,boolean)>
<java.lang.Boolean: int hashCode()>
<java.lang.Boolean: int compareTo(java.lang.Boolean)>
<java.lang.Boolean: int compareTo(java.lang.Object)>
<java.lang.Class: java.lang.Class[] getParameterTypes(java.lang.reflect.Method)>
<java.lang.Class$MethodInfo: void initializeTypes()>
<java.lang.Class$MethodInfo: boolean equals(java.lang.Object)>
<java.lang.Class: java.lang.Class[] getParameterTypes(java.lang.reflect.Constructor)>
<java.lang.Class: java.lang.reflect.Constructor checkParameterTypes(java.lang.reflect.Constructor,java.lang.Class[])>
<java.lang.Float: void <clinit>()>
<java.lang.Math: void <clinit>()>
<java.util.Hashtable: void rehash()>
<java.time.Instant: java.time.Instant ofEpochSecond(long,long)>
<java.time.Instant: void <clinit>()>
<java.time.Instant: java.time.Instant create(long,int)>
<java.time.Instant: java.time.Instant ofEpochSecond(long)>
<java.time.Instant: java.time.Instant ofEpochMilli(long)>
<java.util.Date: java.time.Instant toInstant()>
<java.time.Clock$SystemClock: java.time.Instant instant()>
<java.util.BitSet: void ensureCapacity(int)>
<java.util.BitSet: void expandTo(int)>
<java.lang.Math: int floorMod(int,int)>
<java.time.temporal.WeekFields$ComputedDayOfField: int startOfWeekOffset(int,int)>
<java.time.temporal.WeekFields$ComputedDayOfField: int localizedDayOfWeek(int)>
<sun.misc.FDBigInteger: void <init>(long,char[],int,int)>
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>
<sun.security.util.DerInputBuffer: void <init>(byte[],int,int,boolean)>
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: long adjust(long,int,int)>
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: long previousOrSame(long,int)>
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: long getTransitionEpochSecond(int)>
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: long nextOrSame(long,int)>
<java.util.Arrays: byte[] copyOf(byte[],int)>
<java.io.ByteArrayOutputStream: void grow(int)>
<java.io.ByteArrayOutputStream: void ensureCapacity(int)>
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>
<sun.security.util.DerOutputStream: void write(byte,byte[])>
<sun.security.util.DerOutputStream: void putOctetString(byte[])>
<sun.security.util.ObjectIdentifier: void encode(sun.security.util.DerOutputStream)>
<sun.security.util.DerOutputStream: void putOID(sun.security.util.ObjectIdentifier)>
<java.io.PrintStream: void write(byte[],int,int)>
<java.io.OutputStream: void write(byte[])>
<sun.security.util.DerOutputStream: void derEncode(java.io.OutputStream)>
<sun.security.util.DerValue: void encode(sun.security.util.DerOutputStream)>
<sun.security.util.DerOutputStream: void putDerValue(sun.security.util.DerValue)>
<sun.security.x509.UniqueIdentity: void encode(sun.security.util.DerOutputStream,byte)>
<sun.security.pkcs.PKCS9Attributes: void encode(byte,java.io.OutputStream)>
<sun.security.util.DerOutputStream: void write(byte,sun.security.util.DerOutputStream)>
<java.io.BufferedOutputStream: void write(byte[],int,int)>
<java.io.BufferedOutputStream: void flushBuffer()>
<java.io.BufferedOutputStream: void flush()>
<java.io.PrintStream: void write(int)>
<sun.misc.HexDumpEncoder: void hexDigit(java.io.PrintStream,byte)>
<java.io.BufferedOutputStream: void write(int)>
<java.io.ByteArrayOutputStream: void write(int)>
<sun.security.util.DerOutputStream: void putBoolean(boolean)>
<sun.security.util.DerOutputStream: void putIntegerContents(int)>
<sun.security.util.DerOutputStream: void putInteger(int)>
<sun.security.util.DerOutputStream: void putLength(int)>
<sun.security.util.DerOutputStream: void putNull()>
<java.lang.StringCoding: byte[] safeTrim(byte[],int,java.nio.charset.Charset,boolean)>
<java.lang.StringCoding: byte[] access$300(byte[],int,java.nio.charset.Charset,boolean)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<java.lang.Math: long multiplyExact(long,long)>
<sun.net.www.ParseUtil: long lowMask(char,char)>
<java.text.DecimalFormat: void setMinimumIntegerDigits(int)>
<java.util.ComparableTimSort: java.lang.Object[] ensureCapacity(int)>
<java.lang.Integer: int max(int,int)>
<java.text.NumberFormat: void setMinimumIntegerDigits(int)>
<java.text.DecimalFormat: void setMaximumIntegerDigits(int)>
<java.math.BigInteger: int[] stripLeadingZeroBytes(byte[])>
<java.text.DecimalFormat: void setMaximumFractionDigits(int)>
<sun.net.www.ParseUtil: long highMask(char,char)>
<java.util.ArrayList: int calculateCapacity(java.lang.Object[],int)>
<java.net.URI: long highMask(char,char)>
<java.lang.Math: float min(float,float)>
<sun.misc.FormattedFloatingDecimal: void fillScientific(int,char[],int,int,boolean)>
<java.math.BigDecimal: long multiply(long,long)>
<sun.nio.cs.US_ASCII$Encoder: int encode(char[],int,int,byte[])>
<java.text.DecimalFormat: void setMinimumFractionDigits(int)>
<sun.security.provider.PolicyFile$PolicyInfo: sun.misc.JavaSecurityProtectionDomainAccess$ProtectionDomainCache getPdMapping()>
<java.util.Arrays: int[] copyOf(int[],int)>
<java.math.MutableBigInteger: void <init>(java.math.BigInteger)>
<java.util.regex.Pattern: void RemoveQEQuoting()>
<sun.misc.FDBigInteger: sun.misc.FDBigInteger multBy10()>
<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftShift(int)>
<java.net.URI: long lowMask(char,char)>
<java.util.Arrays: char[] copyOf(char[],int)>
<java.lang.StringCoding: char[] safeTrim(char[],int,java.nio.charset.Charset,boolean)>
<java.lang.StringCoding: char[] access$100(char[],int,java.nio.charset.Charset,boolean)>
<java.util.Arrays: long[] copyOf(long[],int)>
<java.text.NumberFormat: void setMinimumFractionDigits(int)>
<java.lang.StrictMath: double floorOrCeil(double,double,double,double)>
<java.lang.StrictMath: double ceil(double)>
<java.lang.Math: double ceil(double)>
<sun.util.calendar.ZoneInfoFile: int getYear(long,int)>
<java.util.zip.ZipInputStream: long skip(long)>
<java.util.jar.JarFile: boolean match(char[],byte[],int[],int[])>
<java.text.DecimalFormat: boolean exactRoundUp(double,int)>
<java.text.DecimalFormat: void fastDoubleFormat(double,boolean)>
<java.lang.Double: boolean isFinite(double)>
<sun.nio.cs.US_ASCII$Decoder: int decode(byte[],int,int,char[])>
<java.text.NumberFormat: void setMaximumIntegerDigits(int)>
<java.lang.Math: double scalb(double,int)>
<java.math.BigInteger: int[] makePositive(byte[])>
<java.util.regex.Pattern$Branch: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$Node: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$Ques: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$Curly: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$LineEnding: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$UnixDollar: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$CharProperty: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$BackRef: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$SliceNode: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$Start: void <init>(java.util.regex.Pattern$Node)>
<java.util.regex.Pattern$StartS: void <init>(java.util.regex.Pattern$Node)>
<java.util.regex.Pattern$CIBackRef: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$BnM: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$Start: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$GroupCurly: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.util.regex.Pattern$Dollar: boolean study(java.util.regex.Pattern$TreeInfo)>
<java.text.NumberFormat: void setMaximumFractionDigits(int)>
<java.util.zip.InflaterInputStream: long skip(long)>
<java.lang.Math: long floorMod(long,long)>
<java.lang.Math: double powerOfTwoD(int)>
<java.lang.Float: int floatToIntBits(float)>
<java.util.Arrays: boolean equals(float[],float[])>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.Type makeFloat()>
<sun.reflect.generics.visitor.Reifier: void visitFloatSignature(sun.reflect.generics.tree.FloatSignature)>
<sun.reflect.generics.tree.FloatSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.lang.Class: java.lang.String getPackageName()>
<java.lang.Class: java.lang.Package getPackage()>
<java.lang.Class: java.lang.reflect.Method[] copyMethods(java.lang.reflect.Method[])>
<java.lang.Class$4: java.lang.reflect.Method run()>
<java.lang.Class$4: java.lang.Object run()>
<java.lang.Long: void <clinit>()>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.Type makeLong()>
<sun.reflect.generics.visitor.Reifier: void visitLongSignature(sun.reflect.generics.tree.LongSignature)>
<sun.reflect.generics.tree.LongSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.util.RegularEnumSet$EnumSetIterator: java.lang.Enum next()>
<java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.JumboEnumSet$EnumSetIterator: java.lang.Enum next()>
<java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<java.lang.Long: int compareTo(java.lang.Long)>
<java.lang.Long: int compareTo(java.lang.Object)>
<java.util.RegularEnumSet: int size()>
<java.lang.Long: int hashCode()>
<java.net.InetAddress$CachedAddresses: int compareTo(java.net.InetAddress$CachedAddresses)>
<java.net.InetAddress$CachedAddresses: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentSkipListMap: int cpr(java.util.Comparator,java.lang.Object,java.lang.Object)>
<java.math.BigDecimal: int signum()>
<java.lang.Long: java.lang.Long valueOf(long)>
<java.lang.Byte: void <clinit>()>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.Type makeByte()>
<sun.reflect.generics.visitor.Reifier: void visitByteSignature(sun.reflect.generics.tree.ByteSignature)>
<sun.reflect.generics.tree.ByteSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.lang.Byte: int compareTo(java.lang.Byte)>
<java.lang.Byte: int compareTo(java.lang.Object)>
<java.util.zip.ZipEntry: void setExtra0(byte[],boolean)>
<java.util.zip.ZipUtils: int get16(byte[],int)>
<java.util.zip.ZipUtils: long get32(byte[],int)>
<java.util.zip.ZipUtils: long get64(byte[],int)>
<java.lang.Byte: int hashCode()>
<sun.security.jca.ProviderConfig: void <clinit>()>
<sun.security.jca.ProviderConfig: java.lang.Class[] access$300()>
<sun.security.jca.ProviderConfig: sun.security.util.Debug access$000()>
<sun.security.x509.CertificateExtensions: void <clinit>()>
<java.lang.System: java.lang.Class getCallerClass()>
<java.security.Provider$Service: void <clinit>()>
<java.lang.Short: void <clinit>()>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.Type makeShort()>
<sun.reflect.generics.visitor.Reifier: void visitShortSignature(sun.reflect.generics.tree.ShortSignature)>
<sun.reflect.generics.tree.ShortSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.lang.Double: void <clinit>()>
<java.lang.Double: int compare(double,double)>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.Type makeDouble()>
<sun.reflect.generics.visitor.Reifier: void visitDoubleSignature(sun.reflect.generics.tree.DoubleSignature)>
<sun.reflect.generics.tree.DoubleSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.lang.Double: long doubleToLongBits(double)>
<java.util.Arrays: boolean equals(double[],double[])>
<java.text.ChoiceFormat: double nextDouble(double,boolean)>
<java.text.ChoiceFormat: double nextDouble(double)>
<java.lang.Math: int getExponent(double)>
<java.lang.Math: long round(double)>
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: int estimateDecExp(long,int)>
<java.lang.Math: double copySign(double,double)>
<sun.misc.VM: long maxDirectMemory()>
<java.net.URLConnection: void <clinit>()>
<java.net.URLConnection: java.net.FileNameMap access$000()>
<java.net.URLConnection$1: void <init>()>
<sun.net.www.URLConnection: void <clinit>()>
<java.net.URLConnection: void <init>(java.net.URL)>
<sun.net.www.protocol.jar.JarURLConnection: void <clinit>()>
<java.text.AttributedString$AttributedStringIterator: java.util.Map getAttributes()>
<java.util.Properties: java.util.Enumeration propertyNames()>
<sun.misc.MetaIndex: sun.misc.MetaIndex forJar(java.io.File)>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<java.util.HashMap: boolean remove(java.lang.Object,java.lang.Object)>
<java.nio.file.Files: long copy(java.io.InputStream,java.io.OutputStream)>
<java.io.FilterInputStream: int read(byte[])>
<sun.util.locale.provider.LocaleServiceProviderPool: boolean hasProviders()>
<javax.crypto.CryptoPermissions: java.security.PermissionCollection getPermissionCollection(java.lang.String)>
<javax.crypto.JceSecurityManager: javax.crypto.CryptoPermission getDefaultPermission(java.lang.String)>
<javax.crypto.CryptoPermissions: boolean implies(java.security.Permission)>
<sun.security.x509.GeneralNames: int hashCode()>
<java.util.Collections$SynchronizedMap: int hashCode()>
<sun.security.x509.CertificateExtensions: int hashCode()>
<java.util.jar.Attributes: int hashCode()>
<java.lang.ProcessEnvironment$StringEntry: int hashCode()>
<java.util.WeakHashMap$Entry: int hashCode()>
<java.util.Hashtable$Entry: int hashCode()>
<java.util.Hashtable: int hashCode()>
<sun.security.x509.RDN: java.lang.String toRFC2253String(java.util.Map)>
<java.lang.Character: char[] toChars(int)>
<java.util.regex.Pattern$Bound: boolean isWord(int)>
<java.lang.Character: boolean isAlphabetic(int)>
<java.util.regex.UnicodeProp$1: boolean is(int)>
<java.util.regex.UnicodeProp$18: boolean is(int)>
<java.util.regex.Pattern$Utype: boolean isSatisfiedBy(int)>
<java.util.regex.Pattern: java.util.regex.Pattern$Node newSlice(int[],int,boolean)>
<java.util.regex.Pattern$SliceUS: int toLower(int)>
<java.lang.String: int toUpperCase(int)>
<java.util.regex.UnicodeProp$7: boolean is(int)>
<java.util.regex.Pattern: boolean isSupplementary(int)>
<java.util.regex.Pattern: boolean findSupplementary(int,int)>
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty newSingle(int)>
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty bitsOrSingle(java.util.regex.Pattern$BitClass,int)>
<java.util.regex.Pattern: int u()>
<java.lang.Character: boolean isLetterOrDigit(int)>
<java.lang.Character: boolean isLetterOrDigit(char)>
<java.lang.Character: boolean isLetter(char)>
<java.lang.Character: boolean isDigit(char)>
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.Type makeChar()>
<sun.reflect.generics.visitor.Reifier: void visitCharSignature(sun.reflect.generics.tree.CharSignature)>
<sun.reflect.generics.tree.CharSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.util.regex.Pattern$SingleU: boolean isSatisfiedBy(int)>
<java.lang.Character: java.lang.Character valueOf(char)>
<java.time.format.DateTimeFormatterBuilder: void <clinit>()>
<java.time.format.DateTimeFormatterBuilder: java.time.format.DateTimeFormatterBuilder optionalStart()>
<java.util.regex.Pattern$Category: boolean isSatisfiedBy(int)>
<sun.net.www.ParseUtil: int escape(char[],char,int)>
<java.lang.Character: int hashCode()>
<java.lang.Character: boolean isISOControl(char)>
<java.lang.Character: boolean isDigit(int)>
<java.util.regex.UnicodeProp$13: boolean is(int)>
<java.lang.String: int toLowerCase(int)>
<java.util.regex.Pattern$2: boolean isSatisfiedBy(int)>
<java.lang.String: boolean isWordStart(int)>
<java.lang.String: char compareValue(char)>
<java.lang.Character: boolean isUpperCase(char)>
<java.lang.Character: int toChars(int,char[],int)>
<java.lang.Character: boolean isWhitespace(char)>
<java.lang.Character: char toUpperCase(char)>
<java.time.format.DateTimeParseContext: boolean charEqualsIgnoreCase(char,char)>
<java.time.format.DateTimeFormatterBuilder$PrefixTree$CI: boolean isEqual(char,char)>
<java.time.format.DateTimeParseContext: boolean charEquals(char,char)>
<java.lang.Character: char toLowerCase(char)>
<java.lang.Character: void toSurrogates(int,char[],int)>
<java.lang.Character: boolean isUpperCase(int)>
<java.lang.Character: boolean isLetter(int)>
<java.lang.Character: boolean isSpaceChar(char)>
<java.util.regex.Pattern$BnMS: void <init>(int[],int[],int[],java.util.regex.Pattern$Node)>
<java.util.regex.Pattern$BnM: java.util.regex.Pattern$Node optimize(java.util.regex.Pattern$Node)>
<java.util.regex.Pattern$BitClass: java.util.regex.Pattern$BitClass add(int,int)>
<java.lang.Character: boolean isSpaceChar(int)>
<java.lang.Character: int compareTo(java.lang.Character)>
<java.lang.Character: int compareTo(java.lang.Object)>
<java.lang.Character: int getNumericValue(char)>
<java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock of(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<sun.util.locale.LocaleObjectCache: void cleanStaleEntries()>
<sun.util.locale.provider.LocaleResources: void removeEmptyReferences()>
<java.util.concurrent.ConcurrentHashMap: boolean remove(java.lang.Object,java.lang.Object)>
<sun.security.jca.ProviderList$3: java.security.Provider get(int)>
<sun.security.jca.ProviderList$3: java.lang.Object get(int)>
<sun.security.jca.ProviderList$3: int size()>
<java.util.AbstractList$Itr: boolean hasNext()>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<java.util.Collections$UnmodifiableList$1: boolean hasNext()>
<sun.net.www.MimeTable: void add(sun.net.www.MimeEntry)>
<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<java.util.Properties: void enumerate(java.util.Hashtable)>
<java.util.jar.Attributes: boolean containsKey(java.lang.Object)>
<java.util.HashMap$KeySet: boolean contains(java.lang.Object)>
<sun.util.ResourceBundleEnumeration: boolean hasMoreElements()>
<sun.util.ResourceBundleEnumeration: java.lang.String nextElement()>
<sun.util.ResourceBundleEnumeration: java.lang.Object nextElement()>
<java.time.format.Parsed: boolean isSupported(java.time.temporal.TemporalField)>
<java.util.LinkedHashMap$LinkedKeySet: boolean contains(java.lang.Object)>
<java.text.AttributedString$AttributeMap: java.lang.Object get(java.lang.Object)>
<java.text.AttributedString$AttributedStringIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>
<java.security.KeyFactory: void <clinit>()>
<sun.security.provider.PolicyParser: void <clinit>()>
<sun.security.util.Debug: sun.security.util.Debug getInstance(java.lang.String)>
<sun.security.util.DisabledAlgorithmConstraints: void <clinit>()>
<sun.security.util.DisabledAlgorithmConstraints: sun.security.util.Debug access$000()>
<sun.security.pkcs.SignerInfo: void <clinit>()>
<java.util.jar.JarVerifier: void <clinit>()>
<sun.security.util.ManifestEntryVerifier: void <clinit>()>
<java.util.HashSet: boolean add(java.lang.Object)>
<sun.security.util.JarConstraintsParameters: void addToCertsAndKeys(java.util.List)>
<sun.security.util.JarConstraintsParameters: void addToCertsAndKeys(java.security.cert.CertPath)>
<java.util.regex.UnicodeProp: void <clinit>()>
<java.util.regex.Pattern$CharPropertyNames: void <clinit>()>
<java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>
<java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>
<java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>
<java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>
<java.security.PermissionsHash: void add(java.security.Permission)>
<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.jar.Attributes: void putAll(java.util.Map)>
<java.util.Collections$SingletonSet: boolean contains(java.lang.Object)>
<java.util.Vector: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean contains(java.security.CodeSigner[],java.security.CodeSigner)>
<java.util.Date: int hashCode()>
<java.security.Timestamp: int hashCode()>
<java.security.CodeSigner: int hashCode()>
<sun.misc.URLClassPath$JarLoader: sun.misc.JarIndex getIndex()>
<java.lang.Class: java.lang.InternalError newInternalError(java.lang.Exception)>
<java.io.InputStreamReader: void <init>(java.io.InputStream)>
<java.nio.charset.CoderMalfunctionError: void <init>(java.lang.Exception)>
<java.lang.Exception: void <init>(java.lang.Throwable)>
<java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<java.security.ProviderException: void <init>(java.lang.Throwable)>
<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>
<java.security.GeneralSecurityException: void <init>(java.lang.Throwable)>
<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.Throwable)>
<java.security.SignatureException: void <init>(java.lang.Throwable)>
<java.security.KeyException: void <init>(java.lang.Throwable)>
<java.security.InvalidKeyException: void <init>(java.lang.Throwable)>
<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>
<java.security.cert.CertificateParsingException: void <init>(java.lang.Throwable)>
<java.security.NoSuchAlgorithmException: void <init>(java.lang.Throwable)>
<java.lang.ReflectiveOperationException: void <init>(java.lang.Throwable)>
<java.lang.ClassNotFoundException: void <init>()>
<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>
<java.io.IOException: void <init>(java.lang.Throwable)>
<java.time.temporal.IsoFields$Field$3: boolean isSupportedBy(java.time.temporal.TemporalAccessor)>
<java.time.temporal.IsoFields$Field: void ensureIso(java.time.temporal.TemporalAccessor)>
<java.time.temporal.IsoFields$Field: void access$300(java.time.temporal.TemporalAccessor)>
<java.time.temporal.TemporalQueries: java.time.ZoneId lambda$static$0(java.time.temporal.TemporalAccessor)>
<java.time.temporal.TemporalQueries$lambda_static_0__8: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
<java.time.temporal.TemporalQueries: java.time.ZoneId lambda$static$4(java.time.temporal.TemporalAccessor)>
<java.time.temporal.TemporalQueries$lambda_static_4__12: java.lang.Object queryFrom(java.time.temporal.TemporalAccessor)>
<java.time.ZonedDateTime: boolean isSupported(java.time.temporal.TemporalField)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<sun.util.locale.LocaleObjectCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.security.CodeSource: int hashCode()>
<java.lang.UNIXProcess$DeferredCloseInputStream: void close()>
<java.util.ComparableTimSort: void mergeCollapse()>
<sun.security.util.DerOutputStream: void putUTCTime(java.util.Date)>
<java.text.DateFormatSymbols: java.lang.String[][] getZoneStrings()>
<sun.security.pkcs.PKCS9Attributes: sun.security.pkcs.PKCS9Attribute getAttribute(sun.security.util.ObjectIdentifier)>
<java.util.jar.JarVerifier: boolean isTrustedManifestEntry(java.lang.String)>
<java.util.jar.JarVerifier: java.security.CodeSigner[] getCodeSigners(java.lang.String)>
<sun.net.www.MimeTable: sun.net.www.MimeEntry findByExt(java.lang.String)>
<com.ibm.oti.util.Msg: java.lang.String getString(java.lang.String)>
<java.lang.Thread: void start()>
<java.lang.ThreadGroup: void destroyImpl()>
<java.lang.ThreadGroup: void destroy()>
<java.lang.ThreadGroup: void destroyIfEmptyDaemon()>
<java.lang.ThreadGroup: void remove(java.lang.ThreadGroup)>
<java.lang.ThreadGroup: void removeFromParent()>
<java.lang.ThreadGroup: void remove(java.lang.Thread)>
<java.lang.System$1: java.lang.Void run()>
<java.lang.System$1: java.lang.Object run()>
<com.ibm.oti.vm.VM: void setVMLangAccess(com.ibm.oti.vm.VMLangAccess)>
<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>
<java.lang.ExceptionInInitializerError: void <init>(java.lang.String)>
<java.lang.String: void checkLastChar(char)>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.security.Provider: java.lang.String getProperty(java.lang.String)>
<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>
<java.lang.ClassLoader: java.lang.Package getDefinedPackage(java.lang.String)>
<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean)>
<java.net.Inet4Address: void <clinit>()>
<java.net.InetAddress$2: java.lang.String getHostByAddr(byte[])>
<java.net.InetAddress: java.util.concurrent.ConcurrentMap access$000()>
<java.net.InetAddress: java.util.NavigableSet access$100()>
<java.nio.charset.Charset$1: boolean getNext()>
<java.nio.charset.Charset$1: boolean hasNext()>
<java.nio.charset.Charset$1: java.nio.charset.spi.CharsetProvider next()>
<java.nio.charset.Charset$1: java.lang.Object next()>
<java.util.ServiceLoader$LazyIterator: boolean access$600(java.util.ServiceLoader$LazyIterator)>
<java.lang.ClassLoader$CompoundEnumeration: java.lang.Object nextElement()>
<java.net.URLClassLoader$2: boolean hasMoreElements()>
<java.lang.ClassLoader$CompoundEnumeration: boolean hasMoreElements()>
<sun.misc.URLClassPath$1: java.net.URL nextElement()>
<sun.misc.URLClassPath$1: java.lang.Object nextElement()>
<java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
<java.util.ResourceBundle: java.lang.ref.ReferenceQueue access$200()>
<java.util.ResourceBundle: boolean isValidBundle(java.util.ResourceBundle)>
<java.util.ResourceBundle: void setParent(java.util.ResourceBundle)>
<sun.misc.URLClassPath: int[] access$000(sun.misc.URLClassPath,java.lang.String)>
<sun.misc.Launcher: java.net.URLStreamHandlerFactory access$200()>
<sun.text.normalizer.NormalizerBase$NFKDMode: java.lang.String normalize(java.lang.String,int)>
<sun.text.normalizer.UnicodeSet: void <init>(java.lang.String)>
<sun.text.normalizer.UCharacter: int getProperty(int)>
<sun.text.normalizer.UCharacter: int digit(int,int)>
<sun.text.normalizer.ICUData: java.io.InputStream getRequiredStream(java.lang.String)>
<sun.text.normalizer.ICUData$1: java.io.InputStream run()>
<sun.text.normalizer.ICUData$1: java.lang.Object run()>
<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>
<java.lang.System: void setOut(java.io.PrintStream)>
<java.lang.SecurityManager: void checkAccess(java.lang.Thread)>
<java.lang.Thread: void checkAccess()>
<java.lang.Thread: void setDaemon(boolean)>
<java.lang.Thread: void setPriority(int)>
<java.lang.Thread: void interrupt()>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void selfInterrupt()>
<java.lang.System: void setErr(java.io.PrintStream)>
<java.net.URL: void checkSpecifyHandler(java.lang.SecurityManager)>
<java.lang.SecurityManager: void checkAccess(java.lang.ThreadGroup)>
<java.lang.ThreadGroup: void checkAccess()>
<java.lang.ThreadGroup: void setMaxPriority(int)>
<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>
<java.lang.ThreadGroup: void setDaemon(boolean)>
<java.net.URLClassLoader$3: java.lang.Void run()>
<java.net.URLClassLoader$3: java.lang.Object run()>
<java.lang.SecurityManager: void checkCreateClassLoader()>
<java.lang.ClassLoader: java.lang.Void checkSecurityPermission()>
<java.util.Currency: int[] access$000(java.io.DataInputStream,int)>
<java.util.Currency: int getMainTableEntry(char,char)>
<java.util.Currency: void setMainTableEntry(char,char,int)>
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: void <init>(java.io.DataInput)>
<sun.text.normalizer.NormalizerDataReader: int[] readIndexes(int)>
<java.util.Currency: int[] readIntArray(java.io.DataInputStream,int)>
<javax.crypto.JceSecurity: void verifyProviderJar(java.net.URL)>
<sun.util.locale.provider.AuxLocaleProviderAdapter: sun.util.spi.CalendarProvider getCalendarProvider()>
<sun.util.locale.provider.AuxLocaleProviderAdapter: java.text.spi.DecimalFormatSymbolsProvider getDecimalFormatSymbolsProvider()>
<sun.util.locale.provider.AuxLocaleProviderAdapter: java.text.spi.CollatorProvider getCollatorProvider()>
<sun.util.locale.provider.AuxLocaleProviderAdapter: java.text.spi.DateFormatProvider getDateFormatProvider()>
<sun.util.locale.provider.AuxLocaleProviderAdapter: java.text.spi.DateFormatSymbolsProvider getDateFormatSymbolsProvider()>
<sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.spi.TimeZoneNameProvider getTimeZoneNameProvider()>
<sun.util.locale.provider.AuxLocaleProviderAdapter: java.text.spi.NumberFormatProvider getNumberFormatProvider()>
<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>
<java.nio.HeapByteBuffer: void <init>(int,int)>
<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<sun.nio.cs.StreamDecoder: void <init>(java.io.InputStream,java.lang.Object,java.nio.charset.CharsetDecoder)>
<sun.nio.cs.StreamEncoder: void <init>(java.io.OutputStream,java.lang.Object,java.nio.charset.CharsetEncoder)>
Counter value: 5533
SCC 9333 : 1
<java.nio.Bits$1: void <init>()>
Counter value: 1
SCC 9334 : 1
<java.nio.ByteOrder: void <clinit>()>
Counter value: 1
SCC 9335 : 1
<java.nio.ByteOrder: void <init>(java.lang.String)>
Counter value: 1
SCC 9336 : 1
<sun.misc.Unsafe: void <init>()>
Counter value: 1
SCC 9337 : 1
<java.lang.String$CaseInsensitiveComparator: void <init>(java.lang.String$1)>
Counter value: 1
SCC 9338 : 1
<java.lang.String$CaseInsensitiveComparator: void <init>()>
Counter value: 1
SCC 9339 : 1
<com.ibm.jit.JITHelpers: void <init>()>
Counter value: 1
SCC 9340 : 1
<com.ibm.jit.JITHelpers: int classIsInterfaceFlag()>
Counter value: 1
SCC 9341 : 1
<java.util.Dictionary: void <init>()>
Counter value: 1
SCC 9342 : 1
<com.ibm.oti.util.PriviAction: java.security.PrivilegedAction loadMessages(java.lang.String)>
Counter value: 1
SCC 9343 : 1
<com.ibm.oti.util.PriviAction: void <init>(int,java.lang.String)>
Counter value: 1
SCC 9344 : 1
<sun.net.www.MimeEntry: java.lang.String[] getExtensions()>
Counter value: 1
SCC 9345 : 1
<sun.net.www.MimeEntry: void setCommand(java.lang.String)>
Counter value: 1
SCC 9346 : 1
<sun.net.www.MimeEntry: void setAction(int)>
Counter value: 1
SCC 9347 : 1
<sun.net.www.MimeEntry: void setDescription(java.lang.String)>
Counter value: 1
SCC 9348 : 1
<sun.net.PortConfig$1: void <init>()>
Counter value: 1
SCC 9349 : 1
<sun.util.resources.LocaleData$LocaleDataResourceBundleControl: java.util.Locale getFallbackLocale(java.lang.String,java.util.Locale)>
Counter value: 1
SCC 9350 : 1
<java.util.ResourceBundle: boolean hasValidParentChain(java.util.ResourceBundle)>
Counter value: 1
SCC 9351 : 1
<java.util.ResourceBundle$CacheKey: long access$700(java.util.ResourceBundle$CacheKey)>
Counter value: 1
SCC 9352 : 1
<java.util.ResourceBundle$Control$1: void <init>(java.util.ResourceBundle$Control,boolean,java.lang.ClassLoader,java.lang.String)>
Counter value: 1
SCC 9353 : 1
<java.util.ResourceBundle$CacheKey: void setFormat(java.lang.String)>
Counter value: 1
SCC 9354 : 1
<java.util.ResourceBundle$CacheKey: java.lang.ClassLoader getLoader()>
Counter value: 1
SCC 9355 : 1
<java.util.ResourceBundle$CacheKey: void access$500(java.util.ResourceBundle$CacheKey,java.lang.Throwable)>
Counter value: 1
SCC 9356 : 1
<java.util.ResourceBundle$CacheKey: void setCause(java.lang.Throwable)>
Counter value: 1
SCC 9357 : 1
<java.util.ResourceBundle$LoaderReference: void <init>(java.lang.ClassLoader,java.lang.ref.ReferenceQueue,java.util.ResourceBundle$CacheKey)>
Counter value: 1
SCC 9358 : 1
<java.util.ResourceBundle$BundleReference: void <init>(java.util.ResourceBundle,java.lang.ref.ReferenceQueue,java.util.ResourceBundle$CacheKey)>
Counter value: 1
SCC 9359 : 1
<java.util.ResourceBundle$Control: long getTimeToLive(java.lang.String,java.util.Locale)>
Counter value: 1
SCC 9360 : 1
<java.util.ResourceBundle$CacheKey: java.util.Locale getLocale()>
Counter value: 1
SCC 9361 : 1
<java.util.ResourceBundle$CacheKey: java.lang.String getName()>
Counter value: 1
SCC 9362 : 1
<java.util.ResourceBundle$CacheKey: long access$702(java.util.ResourceBundle$CacheKey,long)>
Counter value: 1
SCC 9363 : 1
<java.util.ResourceBundle$CacheKey: long access$602(java.util.ResourceBundle$CacheKey,long)>
Counter value: 1
SCC 9364 : 1
<java.util.ResourceBundle$CacheKey: long access$600(java.util.ResourceBundle$CacheKey)>
Counter value: 1
SCC 9365 : 1
<java.util.ResourceBundle$CacheKey: java.lang.Throwable access$400(java.util.ResourceBundle$CacheKey)>
Counter value: 1
SCC 9366 : 1
<java.util.ResourceBundle$CacheKey: java.lang.Throwable getCause()>
Counter value: 1
SCC 9367 : 1
<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 9368 : 1
<java.util.ResourceBundle: void keepAlive(java.lang.ClassLoader)>
Counter value: 1
SCC 9369 : 1
<java.util.ResourceBundle$1: void <init>()>
Counter value: 1
SCC 9370 : 1
<java.util.ResourceBundle: void <init>()>
Counter value: 1
SCC 9371 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void roundup()>
Counter value: 1
SCC 9372 : 1
<sun.misc.FDBigInteger: int addAndCmp(sun.misc.FDBigInteger,sun.misc.FDBigInteger)>
Counter value: 1
SCC 9373 : 1
<sun.misc.FDBigInteger: sun.misc.FDBigInteger add(sun.misc.FDBigInteger)>
Counter value: 1
SCC 9374 : 1
<sun.misc.FDBigInteger: long multDiffMe(long,sun.misc.FDBigInteger)>
Counter value: 1
SCC 9375 : 1
<java.time.ZoneId: java.lang.String toString()>
Counter value: 1
SCC 9376 : 1
<java.time.temporal.IsoFields$Unit: java.lang.String toString()>
Counter value: 1
SCC 9377 : 1
<java.time.LocalDateTime: int getSecond()>
Counter value: 1
SCC 9378 : 1
<java.time.LocalTime: int getSecond()>
Counter value: 1
SCC 9379 : 1
<java.time.format.DateTimeFormatterBuilder$SettingsParser: boolean format(java.time.format.DateTimePrintContext,java.lang.StringBuilder)>
Counter value: 1
SCC 9380 : 1
<java.time.format.TextStyle: int zoneNameStyleIndex()>
Counter value: 1
SCC 9381 : 1
<java.time.zone.ZoneRules: java.time.ZoneOffset getStandardOffset(java.time.Instant)>
Counter value: 1
SCC 9382 : 1
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: long getValue(java.time.format.DateTimePrintContext,long)>
Counter value: 1
SCC 9383 : 1
<java.time.format.DateTimePrintContext: java.time.temporal.TemporalAccessor getTemporal()>
Counter value: 1
SCC 9384 : 1
<java.time.format.DecimalStyle: char getZeroDigit()>
Counter value: 1
SCC 9385 : 1
<java.time.format.DateTimePrintContext: java.time.format.DecimalStyle getDecimalStyle()>
Counter value: 1
SCC 9386 : 1
<java.time.format.DateTimePrintContext: java.util.Locale getLocale()>
Counter value: 1
SCC 9387 : 1
<java.time.format.DateTimePrintContext: void endOptional()>
Counter value: 1
SCC 9388 : 1
<java.time.format.DateTimePrintContext: void startOptional()>
Counter value: 1
SCC 9389 : 1
<java.time.format.DateTimePrintContext$1: void <init>(java.time.chrono.ChronoLocalDate,java.time.temporal.TemporalAccessor,java.time.chrono.Chronology,java.time.ZoneId)>
Counter value: 1
SCC 9390 : 1
<java.time.chrono.AbstractChronology: java.lang.String toString()>
Counter value: 1
SCC 9391 : 1
<java.net.InetAddress$InetAddressHolder: java.lang.String getHostName()>
Counter value: 1
SCC 9392 : 1
<java.net.InetAddress$1: void <init>()>
Counter value: 1
SCC 9393 : 1
<java.net.InetAddress$2: void <init>()>
Counter value: 1
SCC 9394 : 1
<java.net.InetAddress$3: void <init>(java.lang.String)>
Counter value: 1
SCC 9395 : 1
<java.util.ResourceBundle$Control$1: java.lang.Object run()>
Counter value: 1
SCC 9396 : 1
<java.util.ResourceBundle$Control$1: java.io.InputStream run()>
Counter value: 1
SCC 9397 : 1
<sun.reflect.misc.ReflectUtil: boolean needsPackageAccessCheck(java.lang.ClassLoader,java.lang.ClassLoader)>
Counter value: 1
SCC 9398 : 1
<sun.reflect.misc.ReflectUtil: boolean isAncestor(java.lang.ClassLoader,java.lang.ClassLoader)>
Counter value: 1
SCC 9399 : 1
<java.lang.reflect.WeakCache: void expungeStaleEntries()>
Counter value: 1
SCC 9400 : 1
<java.lang.reflect.WeakCache$LookupValue: void <init>(java.lang.Object)>
Counter value: 1
SCC 9401 : 1
<java.lang.reflect.Proxy$KeyFactory: void <init>(java.lang.reflect.Proxy$1)>
Counter value: 1
SCC 9402 : 1
<java.lang.reflect.Proxy$KeyFactory: void <init>()>
Counter value: 1
SCC 9403 : 1
<java.lang.reflect.Proxy$ProxyClassFactory: void <init>(java.lang.reflect.Proxy$1)>
Counter value: 1
SCC 9404 : 1
<java.lang.reflect.Proxy$ProxyClassFactory: void <init>()>
Counter value: 1
SCC 9405 : 1
<java.util.Collections$UnmodifiableCollection$1: void remove()>
Counter value: 1
SCC 9406 : 1
<java.util.LinkedList$ListItr: void remove()>
Counter value: 1
SCC 9407 : 1
<java.util.LinkedList: java.lang.Object unlink(java.util.LinkedList$Node)>
Counter value: 1
SCC 9408 : 1
<javax.security.auth.Subject: boolean isReadOnly()>
Counter value: 1
SCC 9409 : 1
<java.util.Collections$EmptyIterator: void remove()>
Counter value: 1
SCC 9410 : 1
<java.util.Hashtable$Enumerator: void remove()>
Counter value: 1
SCC 9411 : 1
<java.util.Hashtable: int access$508(java.util.Hashtable)>
Counter value: 1
SCC 9412 : 1
<java.util.Hashtable: int access$210(java.util.Hashtable)>
Counter value: 1
SCC 9413 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties$Constraint: void <init>(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 9414 : 1
<java.util.LinkedList: void addFirst(java.lang.Object)>
Counter value: 1
SCC 9415 : 1
<java.util.LinkedList: void linkFirst(java.lang.Object)>
Counter value: 1
SCC 9416 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String access$1000(openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties)>
Counter value: 1
SCC 9417 : 1
<java.time.LocalDate: boolean isBefore(java.time.chrono.ChronoLocalDate)>
Counter value: 1
SCC 9418 : 1
<java.lang.String: java.lang.String valueOf(boolean)>
Counter value: 1
SCC 9419 : 1
<java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: void <init>(java.time.format.TextStyle)>
Counter value: 1
SCC 9420 : 1
<java.time.temporal.IsoFields$Field$2: java.time.temporal.ValueRange range()>
Counter value: 1
SCC 9421 : 1
<java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: void <init>(char,int)>
Counter value: 1
SCC 9422 : 1
<java.time.format.DateTimeParseException: void <init>(java.lang.String,java.lang.CharSequence,int,java.lang.Throwable)>
Counter value: 1
SCC 9423 : 1
<java.util.Collections$EmptyList: boolean contains(java.lang.Object)>
Counter value: 1
SCC 9424 : 1
<java.util.Arrays$ArrayList: boolean contains(java.lang.Object)>
Counter value: 1
SCC 9425 : 1
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>
Counter value: 1
SCC 9426 : 1
<java.util.Collections$SingletonList: int size()>
Counter value: 1
SCC 9427 : 1
<java.time.Duration: long getSeconds()>
Counter value: 1
SCC 9428 : 1
<java.time.zone.ZoneOffsetTransition: int getDurationSeconds()>
Counter value: 1
SCC 9429 : 1
<java.time.Duration: void <init>(long,int)>
Counter value: 1
SCC 9430 : 1
<java.time.zone.ZoneOffsetTransition: boolean isGap()>
Counter value: 1
SCC 9431 : 1
<java.time.zone.ZoneOffsetTransition: java.time.ZoneOffset getOffsetBefore()>
Counter value: 1
SCC 9432 : 1
<java.time.zone.ZoneOffsetTransition: java.time.ZoneOffset getOffsetAfter()>
Counter value: 1
SCC 9433 : 1
<java.time.LocalDateTime: int getYear()>
Counter value: 1
SCC 9434 : 1
<java.time.zone.ZoneOffsetTransition: void <init>(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneOffset)>
Counter value: 1
SCC 9435 : 1
<java.time.Period: int getDays()>
Counter value: 1
SCC 9436 : 1
<java.time.Period: long toTotalMonths()>
Counter value: 1
SCC 9437 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.ValueRange range()>
Counter value: 1
SCC 9438 : 1
<java.lang.Math: int toIntExact(long)>
Counter value: 1
SCC 9439 : 1
<java.time.temporal.WeekFields: java.time.temporal.TemporalField access$200(java.time.temporal.WeekFields)>
Counter value: 1
SCC 9440 : 1
<java.time.temporal.WeekFields: java.time.temporal.TemporalField access$100(java.time.temporal.WeekFields)>
Counter value: 1
SCC 9441 : 1
<java.time.temporal.IsoFields$Field$3: java.time.temporal.ValueRange range()>
Counter value: 1
SCC 9442 : 1
<java.time.temporal.IsoFields$Field$4: java.time.temporal.ValueRange range()>
Counter value: 1
SCC 9443 : 1
<java.time.LocalTime: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9444 : 1
<java.time.Period: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9445 : 1
<java.time.temporal.TemporalAdjusters: java.time.temporal.TemporalAdjuster nextOrSame(java.time.DayOfWeek)>
Counter value: 1
SCC 9446 : 1
<java.time.temporal.TemporalAdjusters$lambda_nextOrSame_10__17: java.time.temporal.TemporalAdjuster bootstrap$(int)>
Counter value: 1
SCC 9447 : 1
<java.time.temporal.TemporalAdjusters$lambda_nextOrSame_10__17: void <init>(int)>
Counter value: 1
SCC 9448 : 1
<java.time.chrono.IsoChronology: java.time.temporal.ValueRange range(java.time.temporal.ChronoField)>
Counter value: 1
SCC 9449 : 1
<java.time.Month: int length(boolean)>
Counter value: 1
SCC 9450 : 1
<java.time.Year: boolean isLeap(long)>
Counter value: 1
SCC 9451 : 1
<java.lang.Math: long subtractExact(long,long)>
Counter value: 1
SCC 9452 : 1
<java.time.ZonedDateTime: java.time.LocalTime toLocalTime()>
Counter value: 1
SCC 9453 : 1
<java.time.ZonedDateTime: java.time.chrono.ChronoLocalDate toLocalDate()>
Counter value: 1
SCC 9454 : 1
<java.time.Instant: int getNano()>
Counter value: 1
SCC 9455 : 1
<java.time.ZonedDateTime: void <init>(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)>
Counter value: 1
SCC 9456 : 1
<java.time.LocalDate: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9457 : 1
<java.time.LocalDate: int compareTo0(java.time.LocalDate)>
Counter value: 1
SCC 9458 : 1
<java.time.format.DateTimeFormatter: java.time.ZoneId getZone()>
Counter value: 1
SCC 9459 : 1
<java.time.format.DateTimeFormatterBuilder$SettingsParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>
Counter value: 1
SCC 9460 : 1
<java.time.format.DateTimeParseContext: void setStrict(boolean)>
Counter value: 1
SCC 9461 : 1
<java.time.format.DateTimeParseContext: void setCaseSensitive(boolean)>
Counter value: 1
SCC 9462 : 1
<java.math.BigDecimal: long add(long,long)>
Counter value: 1
SCC 9463 : 1
<java.math.BigInteger: int[] add(int[],long)>
Counter value: 1
SCC 9464 : 1
<java.math.BigInteger: int[] subtract(int[],long)>
Counter value: 1
SCC 9465 : 1
<java.math.BigInteger: int[] subtract(long,int[])>
Counter value: 1
SCC 9466 : 1
<java.time.format.DecimalStyle: char getDecimalSeparator()>
Counter value: 1
SCC 9467 : 1
<java.time.format.TextStyle: int toCalendarStyle()>
Counter value: 1
SCC 9468 : 1
<java.time.chrono.IsoChronology: java.lang.String getCalendarType()>
Counter value: 1
SCC 9469 : 1
<java.time.format.DateTimeTextProvider: int toWeekDay(int)>
Counter value: 1
SCC 9470 : 1
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: java.time.format.DateTimeFormatterBuilder$NumberPrinterParser numberPrinterParser()>
Counter value: 1
SCC 9471 : 1
<java.time.format.DateTimeFormatterBuilder$PrefixTree: boolean isEqual(char,char)>
Counter value: 1
SCC 9472 : 1
<java.time.format.DateTimeFormatterBuilder$PrefixTree: java.lang.String toKey(java.lang.String)>
Counter value: 1
SCC 9473 : 1
<java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>
Counter value: 1
SCC 9474 : 1
<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$KeySetView keySet()>
Counter value: 1
SCC 9475 : 1
<java.util.concurrent.ConcurrentHashMap$KeySetView: void <init>(java.util.concurrent.ConcurrentHashMap,java.lang.Object)>
Counter value: 1
SCC 9476 : 1
<java.time.ZoneOffset: int totalSeconds(int,int,int)>
Counter value: 1
SCC 9477 : 1
<java.util.concurrent.CopyOnWriteArrayList: void <init>()>
Counter value: 1
SCC 9478 : 1
<java.time.zone.ZoneRulesProvider: void <init>()>
Counter value: 1
SCC 9479 : 1
<java.time.zone.ZoneRulesException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 9480 : 1
<java.time.zone.ZoneRulesProvider$1: void <init>(java.util.List)>
Counter value: 1
SCC 9481 : 1
<java.util.concurrent.CopyOnWriteArrayList: void setArray(java.lang.Object[])>
Counter value: 1
SCC 9482 : 1
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] getArray()>
Counter value: 1
SCC 9483 : 1
<java.time.zone.ZoneRulesException: void <init>(java.lang.String)>
Counter value: 1
SCC 9484 : 1
<java.time.format.DateTimeParseContext: boolean isCaseSensitive()>
Counter value: 1
SCC 9485 : 1
<java.time.format.SignStyle: boolean parse(boolean,boolean,boolean)>
Counter value: 1
SCC 9486 : 1
<java.time.format.DateTimeFormatter: java.time.chrono.Chronology getChronology()>
Counter value: 1
SCC 9487 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser$lambda_setValue_0__18: java.util.function.Consumer bootstrap$(java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser,java.time.format.DateTimeParseContext,long,int,int)>
Counter value: 1
SCC 9488 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser$lambda_setValue_0__18: void <init>(java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser,java.time.format.DateTimeParseContext,long,int,int)>
Counter value: 1
SCC 9489 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: boolean isFixedWidth(java.time.format.DateTimeParseContext)>
Counter value: 1
SCC 9490 : 1
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: boolean isFixedWidth(java.time.format.DateTimeParseContext)>
Counter value: 1
SCC 9491 : 1
<java.time.format.DecimalStyle: char getPositiveSign()>
Counter value: 1
SCC 9492 : 1
<java.time.format.DecimalStyle: char getNegativeSign()>
Counter value: 1
SCC 9493 : 1
<java.time.format.DecimalStyle: int convertToDigit(char)>
Counter value: 1
SCC 9494 : 1
<java.time.format.DateTimeParseContext: boolean isStrict()>
Counter value: 1
SCC 9495 : 1
<java.time.format.DateTimeParseContext: java.time.format.DecimalStyle getDecimalStyle()>
Counter value: 1
SCC 9496 : 1
<java.time.format.DateTimeFormatter: java.time.format.DecimalStyle getDecimalStyle()>
Counter value: 1
SCC 9497 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: void <init>(java.time.temporal.TemporalField,int,int,int,java.time.chrono.ChronoLocalDate,int,java.time.format.DateTimeFormatterBuilder$1)>
Counter value: 1
SCC 9498 : 1
<java.time.temporal.WeekFields: java.time.temporal.TemporalField weekOfMonth()>
Counter value: 1
SCC 9499 : 1
<java.time.temporal.WeekFields: java.time.temporal.TemporalField weekOfWeekBasedYear()>
Counter value: 1
SCC 9500 : 1
<java.time.temporal.WeekFields: java.time.temporal.TemporalField dayOfWeek()>
Counter value: 1
SCC 9501 : 1
<java.time.temporal.WeekFields: java.time.temporal.TemporalField weekBasedYear()>
Counter value: 1
SCC 9502 : 1
<java.time.format.DateTimeParseContext: java.util.Locale getLocale()>
Counter value: 1
SCC 9503 : 1
<java.time.format.DateTimeFormatter: java.util.Locale getLocale()>
Counter value: 1
SCC 9504 : 1
<java.text.ParsePosition: void setErrorIndex(int)>
Counter value: 1
SCC 9505 : 1
<java.time.Period: void <init>(int,int,int)>
Counter value: 1
SCC 9506 : 1
<java.text.ParsePosition: int getErrorIndex()>
Counter value: 1
SCC 9507 : 1
<java.time.format.DateTimeParseException: void <init>(java.lang.String,java.lang.CharSequence,int)>
Counter value: 1
SCC 9508 : 1
<java.time.LocalDate$from__3: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 9509 : 1
<java.time.LocalDate$from__3: void <init>()>
Counter value: 1
SCC 9510 : 1
<java.util.Arrays: int binarySearch(long[],long)>
Counter value: 1
SCC 9511 : 1
<java.util.Arrays: int binarySearch0(long[],int,int,long)>
Counter value: 1
SCC 9512 : 1
<java.time.Instant: long getEpochSecond()>
Counter value: 1
SCC 9513 : 1
<java.time.Clock$SystemClock: java.time.ZoneId getZone()>
Counter value: 1
SCC 9514 : 1
<java.time.temporal.ValueRange: boolean isFixed()>
Counter value: 1
SCC 9515 : 1
<java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: void <init>(java.time.temporal.TemporalQuery,java.lang.String)>
Counter value: 1
SCC 9516 : 1
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatterBuilder$CompositePrinterParser toPrinterParser(boolean)>
Counter value: 1
SCC 9517 : 1
<java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: java.time.format.DateTimeFormatterBuilder$CompositePrinterParser withOptional(boolean)>
Counter value: 1
SCC 9518 : 1
<java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: void <init>(int)>
Counter value: 1
SCC 9519 : 1
<java.time.format.DateTimeFormatter: void <init>(java.time.format.DateTimeFormatterBuilder$CompositePrinterParser,java.util.Locale,java.time.format.DecimalStyle,java.time.format.ResolverStyle,java.util.Set,java.time.chrono.Chronology,java.time.ZoneId)>
Counter value: 1
SCC 9520 : 1
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.time.format.DateTimeFormatterBuilder$NumberPrinterParser withSubsequentWidth(int)>
Counter value: 1
SCC 9521 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.time.format.DateTimeFormatterBuilder$NumberPrinterParser withSubsequentWidth(int)>
Counter value: 1
SCC 9522 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser withSubsequentWidth(int)>
Counter value: 1
SCC 9523 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.time.format.DateTimeFormatterBuilder$NumberPrinterParser withFixedWidth()>
Counter value: 1
SCC 9524 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser withFixedWidth()>
Counter value: 1
SCC 9525 : 1
<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: void <init>(java.time.temporal.TemporalField,int,int,int,java.time.chrono.ChronoLocalDate,int)>
Counter value: 1
SCC 9526 : 1
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.time.format.DateTimeFormatterBuilder$NumberPrinterParser withFixedWidth()>
Counter value: 1
SCC 9527 : 1
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: void <init>(java.time.temporal.TemporalField,int,int,java.time.format.SignStyle,int)>
Counter value: 1
SCC 9528 : 1
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.time.format.SignStyle access$000(java.time.format.DateTimeFormatterBuilder$NumberPrinterParser)>
Counter value: 1
SCC 9529 : 1
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: void <init>(java.time.temporal.TemporalField,int,int,java.time.format.SignStyle)>
Counter value: 1
SCC 9530 : 1
<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: void <clinit>()>
Counter value: 1
SCC 9531 : 1
<java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: void <init>(java.time.format.DateTimeFormatterBuilder$DateTimePrinterParser[],boolean)>
Counter value: 1
SCC 9532 : 1
<java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: void <init>(char)>
Counter value: 1
SCC 9533 : 1
<java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: void <init>(java.lang.String)>
Counter value: 1
SCC 9534 : 1
<java.util.Collections$SingletonMap: java.util.Set entrySet()>
Counter value: 1
SCC 9535 : 1
<java.time.format.DateTimeTextProvider: java.util.Map$Entry createEntry(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 9536 : 1
<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 9537 : 1
<java.time.format.DateTimeTextProvider$1: void <init>()>
Counter value: 1
SCC 9538 : 1
<java.time.format.DateTimeFormatterBuilder$1: void <init>(java.time.format.DateTimeFormatterBuilder,java.time.format.DateTimeTextProvider$LocaleStore)>
Counter value: 1
SCC 9539 : 1
<java.time.format.DateTimeTextProvider: void <init>()>
Counter value: 1
SCC 9540 : 1
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: void <init>(java.time.temporal.TemporalField,java.time.format.TextStyle,java.time.format.DateTimeTextProvider)>
Counter value: 1
SCC 9541 : 1
<java.time.format.DateTimeFormatterBuilder: void <init>(java.time.format.DateTimeFormatterBuilder,boolean)>
Counter value: 1
SCC 9542 : 1
<java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: void <init>(java.time.format.DateTimeFormatterBuilder$DateTimePrinterParser,int,char)>
Counter value: 1
SCC 9543 : 1
<java.time.format.DateTimeFormatterBuilder: void <init>()>
Counter value: 1
SCC 9544 : 1
<java.time.format.DateTimeFormatter$lambda_static_0__1: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 9545 : 1
<java.time.format.DateTimeFormatter$lambda_static_0__1: void <init>()>
Counter value: 1
SCC 9546 : 1
<java.time.format.DateTimeFormatter$lambda_static_1__2: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 9547 : 1
<java.time.format.DateTimeFormatter$lambda_static_1__2: void <init>()>
Counter value: 1
SCC 9548 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.util.List access$100(openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties)>
Counter value: 1
SCC 9549 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String access$200(openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties)>
Counter value: 1
SCC 9550 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String access$300(openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties)>
Counter value: 1
SCC 9551 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String access$400(openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties)>
Counter value: 1
SCC 9552 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String access$500(openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties)>
Counter value: 1
SCC 9553 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String access$600(openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties)>
Counter value: 1
SCC 9554 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String access$700(openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties)>
Counter value: 1
SCC 9555 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String access$800(openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties)>
Counter value: 1
SCC 9556 : 1
<openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties: java.lang.String access$900(openj9.internal.security.RestrictedSecurity$RestrictedSecurityProperties)>
Counter value: 1
SCC 9557 : 1
<java.security.Security$1: void <init>()>
Counter value: 1
SCC 9558 : 1
<java.security.AccessControlContext$AccessCache: void <init>()>
Counter value: 1
SCC 9559 : 1
<java.security.AccessControlException: void <init>(java.lang.String,java.security.Permission)>
Counter value: 1
SCC 9560 : 1
<java.util.Random: int nextInt()>
Counter value: 1
SCC 9561 : 1
<javax.crypto.CryptoAllPermissionCollection: boolean implies(java.security.Permission)>
Counter value: 1
SCC 9562 : 1
<java.security.UnresolvedPermissionCollection: boolean implies(java.security.Permission)>
Counter value: 1
SCC 9563 : 1
<java.security.AllPermissionCollection: boolean implies(java.security.Permission)>
Counter value: 1
SCC 9564 : 1
<java.net.SocketPermission: int getMask()>
Counter value: 1
SCC 9565 : 1
<java.io.FilePermission: int getMask()>
Counter value: 1
SCC 9566 : 1
<sun.security.provider.PolicyFile$SelfPermission: boolean implies(java.security.Permission)>
Counter value: 1
SCC 9567 : 1
<java.security.UnresolvedPermission: boolean implies(java.security.Permission)>
Counter value: 1
SCC 9568 : 1
<java.security.AllPermission: boolean implies(java.security.Permission)>
Counter value: 1
SCC 9569 : 1
<sun.net.www.ParseUtil: void <init>()>
Counter value: 1
SCC 9570 : 1
<java.lang.Class$1: void <init>(java.lang.Class,java.lang.SecurityManager,java.lang.Class)>
Counter value: 1
SCC 9571 : 1
<java.util.concurrent.ThreadPoolExecutor: void onShutdown()>
Counter value: 1
SCC 9572 : 1
<java.net.URLClassLoader$6: void <init>()>
Counter value: 1
SCC 9573 : 1
<sun.util.locale.BaseLocale: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 9574 : 1
<sun.util.locale.LocaleObjectCache: java.lang.Object normalizeKey(java.lang.Object)>
Counter value: 1
SCC 9575 : 1
<java.util.Locale: void <init>(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions,java.util.Locale$1)>
Counter value: 1
SCC 9576 : 1
<java.util.Locale: void <init>(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>
Counter value: 1
SCC 9577 : 1
<java.util.Locale$LocaleKey: sun.util.locale.BaseLocale access$200(java.util.Locale$LocaleKey)>
Counter value: 1
SCC 9578 : 1
<java.util.Locale$LocaleKey: sun.util.locale.LocaleExtensions access$300(java.util.Locale$LocaleKey)>
Counter value: 1
SCC 9579 : 1
<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference access$100(sun.util.locale.BaseLocale$Key)>
Counter value: 1
SCC 9580 : 1
<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference access$200(sun.util.locale.BaseLocale$Key)>
Counter value: 1
SCC 9581 : 1
<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference access$300(sun.util.locale.BaseLocale$Key)>
Counter value: 1
SCC 9582 : 1
<sun.util.locale.BaseLocale$Key: java.lang.ref.SoftReference access$400(sun.util.locale.BaseLocale$Key)>
Counter value: 1
SCC 9583 : 1
<java.util.concurrent.ConcurrentHashMap$CounterCell: void <init>(long)>
Counter value: 1
SCC 9584 : 1
<sun.security.provider.SeedGenerator$URLSeedGenerator$1: void <init>(sun.security.provider.SeedGenerator$URLSeedGenerator,java.net.URL)>
Counter value: 1
SCC 9585 : 1
<sun.security.provider.SeedGenerator: void <init>()>
Counter value: 1
SCC 9586 : 1
<java.lang.ThreadGroup: void setParent(java.lang.ThreadGroup)>
Counter value: 1
SCC 9587 : 1
<java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>
Counter value: 1
SCC 9588 : 1
<java.lang.ThreadGroup: boolean isDestroyed()>
Counter value: 1
SCC 9589 : 1
<java.lang.ThreadGroup: boolean isDaemon()>
Counter value: 1
SCC 9590 : 1
<java.lang.ThreadGroup$ChildrenGroupsLock: void <init>()>
Counter value: 1
SCC 9591 : 1
<java.lang.ThreadGroup$ChildrenThreadsLock: void <init>()>
Counter value: 1
SCC 9592 : 1
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: void <init>(sun.security.provider.SeedGenerator$ThreadedSeedGenerator,java.lang.ThreadGroup[])>
Counter value: 1
SCC 9593 : 1
<java.util.concurrent.ForkJoinWorkerThread: void run()>
Counter value: 1
SCC 9594 : 1
<java.util.concurrent.ForkJoinWorkerThread: void onTermination(java.lang.Throwable)>
Counter value: 1
SCC 9595 : 1
<java.util.concurrent.ForkJoinWorkerThread: void onStart()>
Counter value: 1
SCC 9596 : 1
<java.io.FileInputStream: java.io.FileDescriptor getFD()>
Counter value: 1
SCC 9597 : 1
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>
Counter value: 1
SCC 9598 : 1
<java.io.FileDescriptor: int access$000(java.io.FileDescriptor)>
Counter value: 1
SCC 9599 : 1
<java.io.FileOutputStream: void open(java.lang.String,boolean)>
Counter value: 1
SCC 9600 : 1
<java.lang.Process: void <init>()>
Counter value: 1
SCC 9601 : 1
<java.util.concurrent.ThreadPoolExecutor$Worker: boolean isLocked()>
Counter value: 1
SCC 9602 : 1
<java.util.concurrent.ThreadPoolExecutor$Worker: boolean isHeldExclusively()>
Counter value: 1
SCC 9603 : 1
<java.util.concurrent.SynchronousQueue: int size()>
Counter value: 1
SCC 9604 : 1
<java.util.concurrent.RejectedExecutionException: void <init>(java.lang.String)>
Counter value: 1
SCC 9605 : 1
<java.util.concurrent.SynchronousQueue: boolean remove(java.lang.Object)>
Counter value: 1
SCC 9606 : 1
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread: void run()>
Counter value: 1
SCC 9607 : 1
<java.lang.Thread: void sleep(long)>
Counter value: 1
SCC 9608 : 1
<java.lang.Thread: void sleep(long,int)>
Counter value: 1
SCC 9609 : 1
<java.util.concurrent.ThreadPoolExecutor: void afterExecute(java.lang.Runnable,java.lang.Throwable)>
Counter value: 1
SCC 9610 : 1
<java.util.concurrent.ThreadPoolExecutor: void beforeExecute(java.lang.Thread,java.lang.Runnable)>
Counter value: 1
SCC 9611 : 1
<java.util.concurrent.ThreadPoolExecutor: boolean runStateLessThan(int,int)>
Counter value: 1
SCC 9612 : 1
<java.util.concurrent.TimeUnit$1: long toNanos(long)>
Counter value: 1
SCC 9613 : 1
<java.util.concurrent.SynchronousQueue$TransferStack$SNode: void tryCancel()>
Counter value: 1
SCC 9614 : 1
<java.util.concurrent.SynchronousQueue$TransferStack$SNode: boolean casNext(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.util.concurrent.SynchronousQueue$TransferStack$SNode)>
Counter value: 1
SCC 9615 : 1
<java.util.concurrent.SynchronousQueue$TransferStack: boolean isFulfilling(int)>
Counter value: 1
SCC 9616 : 1
<java.util.concurrent.SynchronousQueue$TransferStack: java.util.concurrent.SynchronousQueue$TransferStack$SNode snode(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.lang.Object,java.util.concurrent.SynchronousQueue$TransferStack$SNode,int)>
Counter value: 1
SCC 9617 : 1
<java.util.concurrent.SynchronousQueue$TransferStack$SNode: void <init>(java.lang.Object)>
Counter value: 1
SCC 9618 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue$QNode: boolean casItem(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 9619 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue: void clean(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode)>
Counter value: 1
SCC 9620 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue$QNode: boolean isCancelled()>
Counter value: 1
SCC 9621 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue$QNode: boolean casNext(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode)>
Counter value: 1
SCC 9622 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue: boolean casCleanMe(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode)>
Counter value: 1
SCC 9623 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue: void advanceHead(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode)>
Counter value: 1
SCC 9624 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue$QNode: void tryCancel(java.lang.Object)>
Counter value: 1
SCC 9625 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue: void advanceTail(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode)>
Counter value: 1
SCC 9626 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue$QNode: boolean isOffList()>
Counter value: 1
SCC 9627 : 1
<java.lang.InterruptedException: void <init>()>
Counter value: 1
SCC 9628 : 1
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread: void <init>(sun.security.provider.SeedGenerator$1)>
Counter value: 1
SCC 9629 : 1
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread: void <init>()>
Counter value: 1
SCC 9630 : 1
<java.util.concurrent.locks.ReentrantLock$Sync: boolean isHeldExclusively()>
Counter value: 1
SCC 9631 : 1
<java.util.concurrent.SynchronousQueue: boolean isEmpty()>
Counter value: 1
SCC 9632 : 1
<java.util.concurrent.atomic.AtomicInteger: void set(int)>
Counter value: 1
SCC 9633 : 1
<java.util.concurrent.ThreadPoolExecutor: void terminated()>
Counter value: 1
SCC 9634 : 1
<java.lang.Thread: boolean isInterrupted()>
Counter value: 1
SCC 9635 : 1
<java.util.concurrent.ThreadPoolExecutor: boolean runStateAtLeast(int,int)>
Counter value: 1
SCC 9636 : 1
<java.util.concurrent.ThreadPoolExecutor: void decrementWorkerCount()>
Counter value: 1
SCC 9637 : 1
<java.util.concurrent.atomic.AtomicInteger: int get()>
Counter value: 1
SCC 9638 : 1
<java.util.concurrent.ThreadPoolExecutor: boolean compareAndDecrementWorkerCount(int)>
Counter value: 1
SCC 9639 : 1
<java.util.concurrent.ThreadPoolExecutor: boolean compareAndIncrementWorkerCount(int)>
Counter value: 1
SCC 9640 : 1
<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>
Counter value: 1
SCC 9641 : 1
<java.lang.SecurityManager: java.lang.ThreadGroup getThreadGroup()>
Counter value: 1
SCC 9642 : 1
<java.lang.ThreadGroup: void checkNewThread(java.lang.Thread)>
Counter value: 1
SCC 9643 : 1
<java.lang.Thread$1: void <init>(java.lang.Thread,java.lang.Class,java.lang.Class)>
Counter value: 1
SCC 9644 : 1
<java.lang.VMAccess: void <init>()>
Counter value: 1
SCC 9645 : 1
<java.lang.Access: void <init>()>
Counter value: 1
SCC 9646 : 1
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>
Counter value: 1
SCC 9647 : 1
<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>
Counter value: 1
SCC 9648 : 1
<java.lang.ThreadLocal: java.lang.ThreadLocal$ThreadLocalMap createInheritedMap(java.lang.ThreadLocal$ThreadLocalMap)>
Counter value: 1
SCC 9649 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal$1)>
Counter value: 1
SCC 9650 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)>
Counter value: 1
SCC 9651 : 1
<sun.net.www.protocol.jar.Handler: void <init>()>
Counter value: 1
SCC 9652 : 1
<sun.net.www.protocol.file.Handler: void <init>()>
Counter value: 1
SCC 9653 : 1
<java.net.URLStreamHandler: void <init>()>
Counter value: 1
SCC 9654 : 1
<java.lang.Class$5: void <init>()>
Counter value: 1
SCC 9655 : 1
<java.lang.Thread$ThreadLock: void <init>(java.lang.Thread$1)>
Counter value: 1
SCC 9656 : 1
<java.lang.Thread$ThreadLock: void <init>()>
Counter value: 1
SCC 9657 : 1
<java.lang.Thread: boolean isDaemon()>
Counter value: 1
SCC 9658 : 1
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.ThreadFactory getThreadFactory()>
Counter value: 1
SCC 9659 : 1
<java.util.concurrent.ThreadPoolExecutor: int runStateOf(int)>
Counter value: 1
SCC 9660 : 1
<java.util.concurrent.ThreadPoolExecutor: boolean isRunning(int)>
Counter value: 1
SCC 9661 : 1
<java.util.concurrent.ThreadPoolExecutor: int workerCountOf(int)>
Counter value: 1
SCC 9662 : 1
<java.lang.UNIXProcess$lambda_initStreams_4__29: void run()>
Counter value: 1
SCC 9663 : 1
<java.lang.UNIXProcess: void lambda$initStreams$4()>
Counter value: 1
SCC 9664 : 1
<java.io.InputStream: void close()>
Counter value: 1
SCC 9665 : 1
<java.lang.ProcessBuilder$NullInputStream: int read()>
Counter value: 1
SCC 9666 : 1
<java.lang.ProcessBuilder$NullInputStream: int available()>
Counter value: 1
SCC 9667 : 1
<java.io.OutputStream: void close()>
Counter value: 1
SCC 9668 : 1
<java.io.ByteArrayOutputStream: void close()>
Counter value: 1
SCC 9669 : 1
<java.lang.UNIXProcess$lambda_initStreams_3__28: java.lang.Runnable bootstrap$(java.lang.UNIXProcess)>
Counter value: 1
SCC 9670 : 1
<java.lang.UNIXProcess$lambda_initStreams_3__28: void <init>(java.lang.UNIXProcess)>
Counter value: 1
SCC 9671 : 1
<java.io.FileDescriptor: int access$002(java.io.FileDescriptor,int)>
Counter value: 1
SCC 9672 : 1
<java.lang.UNIXProcess$lambda_initStreams_4__29: java.lang.Runnable bootstrap$(java.lang.UNIXProcess)>
Counter value: 1
SCC 9673 : 1
<java.lang.UNIXProcess$lambda_initStreams_4__29: void <init>(java.lang.UNIXProcess)>
Counter value: 1
SCC 9674 : 1
<java.lang.UNIXProcess$lambda_initStreams_5__27: java.lang.Runnable bootstrap$(java.lang.UNIXProcess)>
Counter value: 1
SCC 9675 : 1
<java.lang.UNIXProcess$lambda_initStreams_5__27: void <init>(java.lang.UNIXProcess)>
Counter value: 1
SCC 9676 : 1
<java.lang.UNIXProcess$lambda_new_2__26: java.security.PrivilegedExceptionAction bootstrap$(java.lang.UNIXProcess,int[])>
Counter value: 1
SCC 9677 : 1
<java.lang.UNIXProcess$lambda_new_2__26: void <init>(java.lang.UNIXProcess,int[])>
Counter value: 1
SCC 9678 : 1
<java.lang.UNIXProcess$Platform$lambda_launchMechanism_1__25: java.security.PrivilegedAction bootstrap$(java.lang.UNIXProcess$Platform)>
Counter value: 1
SCC 9679 : 1
<java.lang.UNIXProcess$Platform$lambda_launchMechanism_1__25: void <init>(java.lang.UNIXProcess$Platform)>
Counter value: 1
SCC 9680 : 1
<java.lang.UNIXProcess$Platform$lambda_helperPath_0__24: java.security.PrivilegedAction bootstrap$(java.lang.UNIXProcess$Platform)>
Counter value: 1
SCC 9681 : 1
<java.lang.UNIXProcess$Platform$lambda_helperPath_0__24: void <init>(java.lang.UNIXProcess$Platform)>
Counter value: 1
SCC 9682 : 1
<java.lang.UNIXProcess$lambda_null_0__22: java.util.concurrent.ThreadFactory bootstrap$(java.lang.ThreadGroup)>
Counter value: 1
SCC 9683 : 1
<java.lang.UNIXProcess$lambda_null_0__22: void <init>(java.lang.ThreadGroup)>
Counter value: 1
SCC 9684 : 1
<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>
Counter value: 1
SCC 9685 : 1
<java.util.concurrent.locks.ReentrantLock$Sync: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject newCondition()>
Counter value: 1
SCC 9686 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: void <init>(java.util.concurrent.locks.AbstractQueuedSynchronizer)>
Counter value: 1
SCC 9687 : 1
<java.util.concurrent.AbstractExecutorService: void <init>()>
Counter value: 1
SCC 9688 : 1
<java.util.concurrent.TimeUnit$4: long toNanos(long)>
Counter value: 1
SCC 9689 : 1
<java.util.concurrent.TimeUnit: long x(long,long,long)>
Counter value: 1
SCC 9690 : 1
<java.util.concurrent.locks.ReentrantLock: void <init>()>
Counter value: 1
SCC 9691 : 1
<java.util.concurrent.locks.ReentrantLock$NonfairSync: void <init>()>
Counter value: 1
SCC 9692 : 1
<java.util.concurrent.locks.ReentrantLock$Sync: void <init>()>
Counter value: 1
SCC 9693 : 1
<java.util.concurrent.ThreadPoolExecutor: int ctlOf(int,int)>
Counter value: 1
SCC 9694 : 1
<java.util.AbstractQueue: void <init>()>
Counter value: 1
SCC 9695 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue: void <init>()>
Counter value: 1
SCC 9696 : 1
<java.util.concurrent.SynchronousQueue$TransferQueue$QNode: void <init>(java.lang.Object,boolean)>
Counter value: 1
SCC 9697 : 1
<java.util.concurrent.SynchronousQueue$TransferStack: void <init>()>
Counter value: 1
SCC 9698 : 1
<java.util.concurrent.SynchronousQueue$Transferer: void <init>()>
Counter value: 1
SCC 9699 : 1
<java.util.concurrent.ThreadPoolExecutor$AbortPolicy: void <init>()>
Counter value: 1
SCC 9700 : 1
<java.util.concurrent.AbstractExecutorService: void <clinit>()>
Counter value: 1
SCC 9701 : 1
<java.lang.UNIXProcess$LaunchMechanism: void <clinit>()>
Counter value: 1
SCC 9702 : 1
<java.lang.UNIXProcess$LaunchMechanism: void <init>(java.lang.String,int)>
Counter value: 1
SCC 9703 : 1
<java.lang.UNIXProcess$Platform$lambda_get_2__21: java.security.PrivilegedAction bootstrap$()>
Counter value: 1
SCC 9704 : 1
<java.lang.UNIXProcess$Platform$lambda_get_2__21: void <init>()>
Counter value: 1
SCC 9705 : 1
<java.lang.UNIXProcess$lambda_static_1__20: java.security.PrivilegedAction bootstrap$()>
Counter value: 1
SCC 9706 : 1
<java.lang.UNIXProcess$lambda_static_1__20: void <init>()>
Counter value: 1
SCC 9707 : 1
<java.lang.ProcessEnvironment: byte[] toEnvironmentBlock(java.util.Map,int[])>
Counter value: 1
SCC 9708 : 1
<java.lang.ProcessEnvironment$StringEnvironment: byte[] toEnvironmentBlock(int[])>
Counter value: 1
SCC 9709 : 1
<java.lang.ProcessBuilder: java.lang.ProcessBuilder directory(java.io.File)>
Counter value: 1
SCC 9710 : 1
<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOfQueryOnly(java.lang.String)>
Counter value: 1
SCC 9711 : 1
<java.lang.ThreadGroup: void add(java.lang.Thread)>
Counter value: 1
SCC 9712 : 1
<java.lang.IllegalThreadStateException: void <init>()>
Counter value: 1
SCC 9713 : 1
<java.lang.IllegalThreadStateException: void <init>(java.lang.String)>
Counter value: 1
SCC 9714 : 1
<sun.security.provider.SunEntries$1: void <init>()>
Counter value: 1
SCC 9715 : 1
<java.lang.UnsatisfiedLinkError: void <init>(java.lang.String)>
Counter value: 1
SCC 9716 : 1
<sun.util.PreHashedMap: java.lang.Object toV(java.lang.Object)>
Counter value: 1
SCC 9717 : 1
<java.nio.charset.Charset: java.nio.charset.Charset lookupExtendedCharset(java.lang.String)>
Counter value: 1
SCC 9718 : 1
<java.util.ServiceLoader$LazyIterator$2: void <init>(java.util.ServiceLoader$LazyIterator)>
Counter value: 1
SCC 9719 : 1
<sun.security.jca.ProviderConfig: java.lang.String access$400(sun.security.jca.ProviderConfig)>
Counter value: 1
SCC 9720 : 1
<sun.security.jca.ProviderConfig: java.lang.String access$100(sun.security.jca.ProviderConfig)>
Counter value: 1
SCC 9721 : 1
<sun.security.jca.ProviderConfig: void access$500(sun.security.jca.ProviderConfig)>
Counter value: 1
SCC 9722 : 1
<sun.security.jca.ProviderConfig: void disableLoad()>
Counter value: 1
SCC 9723 : 1
<sun.security.jca.ProviderConfig$2: void <init>(sun.security.jca.ProviderConfig)>
Counter value: 1
SCC 9724 : 1
<sun.security.jca.ProviderConfig: boolean shouldLoad()>
Counter value: 1
SCC 9725 : 1
<openj9.internal.security.RestrictedSecurity$1: void <init>()>
Counter value: 1
SCC 9726 : 1
<java.lang.ExceptionInInitializerError: java.lang.Throwable getCause()>
Counter value: 1
SCC 9727 : 1
<java.lang.ClassNotFoundException: java.lang.Throwable getCause()>
Counter value: 1
SCC 9728 : 1
<java.lang.Throwable: java.lang.Throwable getCause()>
Counter value: 1
SCC 9729 : 1
<java.lang.Throwable: int countDuplicates(java.lang.StackTraceElement[],java.lang.StackTraceElement[])>
Counter value: 1
SCC 9730 : 1
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
Counter value: 1
SCC 9731 : 1
<java.nio.HeapByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>
Counter value: 1
SCC 9732 : 1
<sun.nio.cs.Surrogate$Parser: java.nio.charset.CoderResult error()>
Counter value: 1
SCC 9733 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: long toEpochDay(int,int,int)>
Counter value: 1
SCC 9734 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int lengthOfMonth(int,int)>
Counter value: 1
SCC 9735 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: boolean isLeapYear(int)>
Counter value: 1
SCC 9736 : 1
<java.time.LocalDateTime: java.time.LocalTime toLocalTime()>
Counter value: 1
SCC 9737 : 1
<java.time.LocalDateTime: int getDayOfMonth()>
Counter value: 1
SCC 9738 : 1
<java.time.LocalDate: int getDayOfMonth()>
Counter value: 1
SCC 9739 : 1
<java.time.LocalDateTime: int getMonthValue()>
Counter value: 1
SCC 9740 : 1
<java.time.LocalDate: int getMonthValue()>
Counter value: 1
SCC 9741 : 1
<sun.util.calendar.ZoneInfoFile$Checksum: void <init>(sun.util.calendar.ZoneInfoFile$1)>
Counter value: 1
SCC 9742 : 1
<sun.util.calendar.ZoneInfoFile$Checksum: void <init>()>
Counter value: 1
SCC 9743 : 1
<sun.util.calendar.ZoneInfoFile$Checksum: void update(int)>
Counter value: 1
SCC 9744 : 1
<sun.util.calendar.ZoneInfoFile$Checksum: void update(long)>
Counter value: 1
SCC 9745 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int access$200(sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule)>
Counter value: 1
SCC 9746 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int access$400(sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule)>
Counter value: 1
SCC 9747 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: byte access$500(sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule)>
Counter value: 1
SCC 9748 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int access$600(sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule)>
Counter value: 1
SCC 9749 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int access$700(sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule)>
Counter value: 1
SCC 9750 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int access$800(sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule)>
Counter value: 1
SCC 9751 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int access$100(sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule)>
Counter value: 1
SCC 9752 : 1
<sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule: int access$300(sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule)>
Counter value: 1
SCC 9753 : 1
<sun.util.calendar.ZoneInfoFile: int indexOf(int[],int,int,int)>
Counter value: 1
SCC 9754 : 1
<sun.util.calendar.ZoneInfoFile: int getStandardOffset(long[],int[],long)>
Counter value: 1
SCC 9755 : 1
<java.time.LocalDateTime: void <init>(java.time.LocalDate,java.time.LocalTime)>
Counter value: 1
SCC 9756 : 1
<java.time.LocalTime: java.time.LocalTime create(int,int,int,int)>
Counter value: 1
SCC 9757 : 1
<java.time.LocalTime: void <clinit>()>
Counter value: 1
SCC 9758 : 1
<java.time.LocalTime: void <init>(int,int,int,int)>
Counter value: 1
SCC 9759 : 1
<java.io.StreamCorruptedException: void <init>(java.lang.String)>
Counter value: 1
SCC 9760 : 1
<java.io.ObjectStreamException: void <init>(java.lang.String)>
Counter value: 1
SCC 9761 : 1
<sun.util.calendar.BaseCalendar$Date: sun.util.calendar.BaseCalendar$Date setNormalizedDate(int,int,int)>
Counter value: 1
SCC 9762 : 1
<sun.util.calendar.LocalGregorianCalendar: void <init>(java.lang.String,sun.util.calendar.Era[])>
Counter value: 1
SCC 9763 : 1
<sun.util.calendar.AbstractCalendar: void setEras(sun.util.calendar.Era[])>
Counter value: 1
SCC 9764 : 1
<java.util.Properties$LineReader: void <init>(java.util.Properties,java.io.InputStream)>
Counter value: 1
SCC 9765 : 1
<java.io.FileOutputStream$1: void <init>(java.io.FileOutputStream)>
Counter value: 1
SCC 9766 : 1
<java.util.WeakHashMap: void clear()>
Counter value: 1
SCC 9767 : 1
<java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>
Counter value: 1
SCC 9768 : 1
<java.util.LinkedHashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>
Counter value: 1
SCC 9769 : 1
<java.util.HashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>
Counter value: 1
SCC 9770 : 1
<java.io.ExpiringCache$1: boolean removeEldestEntry(java.util.Map$Entry)>
Counter value: 1
SCC 9771 : 1
<java.io.ExpiringCache: int access$000(java.io.ExpiringCache)>
Counter value: 1
SCC 9772 : 1
<java.net.Inet6Address: void <init>(java.lang.String,byte[],int)>
Counter value: 1
SCC 9773 : 1
<java.net.Inet6Address$Inet6AddressHolder: void init(byte[],int)>
Counter value: 1
SCC 9774 : 1
<sun.net.util.IPAddressUtil: boolean isDecimalFieldStart(java.nio.CharBuffer)>
Counter value: 1
SCC 9775 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeyIterator: java.lang.Object next()>
Counter value: 1
SCC 9776 : 1
<java.util.concurrent.ConcurrentSkipListMap$Iter: void advance()>
Counter value: 1
SCC 9777 : 1
<java.util.concurrent.ConcurrentSkipListMap$Iter: boolean hasNext()>
Counter value: 1
SCC 9778 : 1
<java.util.concurrent.ConcurrentSkipListSet: java.util.Iterator iterator()>
Counter value: 1
SCC 9779 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: java.util.Iterator iterator()>
Counter value: 1
SCC 9780 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.Iterator keyIterator()>
Counter value: 1
SCC 9781 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeyIterator: void <init>(java.util.concurrent.ConcurrentSkipListMap)>
Counter value: 1
SCC 9782 : 1
<java.util.concurrent.ConcurrentSkipListMap$Iter: void <init>(java.util.concurrent.ConcurrentSkipListMap)>
Counter value: 1
SCC 9783 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap$Node findFirst()>
Counter value: 1
SCC 9784 : 1
<java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableSet navigableKeySet()>
Counter value: 1
SCC 9785 : 1
<java.util.concurrent.ConcurrentSkipListMap$KeySet: void <init>(java.util.concurrent.ConcurrentNavigableMap)>
Counter value: 1
SCC 9786 : 1
<java.util.Vector: java.util.ListIterator listIterator()>
Counter value: 1
SCC 9787 : 1
<java.util.Collections$EmptyList: java.util.ListIterator listIterator()>
Counter value: 1
SCC 9788 : 1
<java.util.Collections: java.util.ListIterator emptyListIterator()>
Counter value: 1
SCC 9789 : 1
<java.util.zip.Inflater: int inflate(byte[],int,int)>
Counter value: 1
SCC 9790 : 1
<java.util.zip.Inflater: boolean finished()>
Counter value: 1
SCC 9791 : 1
<java.util.zip.Inflater: boolean needsDictionary()>
Counter value: 1
SCC 9792 : 1
<java.util.zip.Inflater: boolean needsInput()>
Counter value: 1
SCC 9793 : 1
<java.util.zip.CRC32: void update(byte[],int,int)>
Counter value: 1
SCC 9794 : 1
<java.util.zip.Inflater: int getRemaining()>
Counter value: 1
SCC 9795 : 1
<java.io.PushbackInputStream: void unread(byte[],int,int)>
Counter value: 1
SCC 9796 : 1
<java.util.zip.Inflater: long getBytesRead()>
Counter value: 1
SCC 9797 : 1
<sun.security.util.ManifestEntryVerifier: java.util.jar.JarEntry getEntry()>
Counter value: 1
SCC 9798 : 1
<sun.security.util.ManifestDigester: boolean isNameAttr(byte[],int)>
Counter value: 1
SCC 9799 : 1
<sun.security.util.ManifestDigester: boolean findSection(int,sun.security.util.ManifestDigester$Position)>
Counter value: 1
SCC 9800 : 1
<sun.security.util.ManifestDigester$Position: void <init>()>
Counter value: 1
SCC 9801 : 1
<sun.security.util.ManifestDigester$Entry: void <init>()>
Counter value: 1
SCC 9802 : 1
<sun.security.util.ManifestDigester$Section: void <init>(int,int,int,byte[])>
Counter value: 1
SCC 9803 : 1
<sun.security.util.ManifestDigester$Entry: byte[] digestWorkaround(java.security.MessageDigest)>
Counter value: 1
SCC 9804 : 1
<sun.security.pkcs.PKCS7: boolean isOldStyle()>
Counter value: 1
SCC 9805 : 1
<sun.security.util.ManifestDigester$Entry: byte[] digest(java.security.MessageDigest)>
Counter value: 1
SCC 9806 : 1
<sun.security.util.ManifestDigester$Section: void access$100(java.security.MessageDigest,byte[],int,int)>
Counter value: 1
SCC 9807 : 1
<sun.security.util.ManifestDigester$Section: void doOldStyle(java.security.MessageDigest,byte[],int,int)>
Counter value: 1
SCC 9808 : 1
<java.security.MessageDigest: java.lang.String getAlgorithm()>
Counter value: 1
SCC 9809 : 1
<sun.security.util.ManifestDigester: byte[] manifestDigest(java.security.MessageDigest)>
Counter value: 1
SCC 9810 : 1
<sun.security.x509.CertificateExtensions: boolean hasUnsupportedCriticalExtension()>
Counter value: 1
SCC 9811 : 1
<sun.security.pkcs.SignerInfo: sun.security.x509.AlgorithmId getDigestEncryptionAlgorithmId()>
Counter value: 1
SCC 9812 : 1
<sun.security.x509.Extension: void <init>()>
Counter value: 1
SCC 9813 : 1
<sun.security.x509.KeyUsageExtension: boolean isSet(int)>
Counter value: 1
SCC 9814 : 1
<java.security.SignatureException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 9815 : 1
<javax.crypto.Cipher: void checkCipherState()>
Counter value: 1
SCC 9816 : 1
<sun.security.x509.AlgorithmId: void <init>(sun.security.util.ObjectIdentifier)>
Counter value: 1
SCC 9817 : 1
<sun.security.jca.ProviderConfig: boolean isLoaded()>
Counter value: 1
SCC 9818 : 1
<java.security.AlgorithmParameters: byte[] getEncoded()>
Counter value: 1
SCC 9819 : 1
<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 9820 : 1
<java.security.Signature: java.lang.String getAlgorithm()>
Counter value: 1
SCC 9821 : 1
<java.security.Signature$Delegate: void <init>(java.security.Provider$Service,java.util.Iterator,java.lang.String)>
Counter value: 1
SCC 9822 : 1
<sun.security.jca.ProviderList: java.util.List getServices(java.util.List)>
Counter value: 1
SCC 9823 : 1
<sun.security.jca.ProviderList$ServiceList: void <init>(sun.security.jca.ProviderList,java.util.List)>
Counter value: 1
SCC 9824 : 1
<java.security.Signature$Delegate: void <init>(java.security.SignatureSpi,java.lang.String)>
Counter value: 1
SCC 9825 : 1
<java.security.Signature: void <init>(java.lang.String)>
Counter value: 1
SCC 9826 : 1
<java.security.ProviderException: void <init>(java.lang.String)>
Counter value: 1
SCC 9827 : 1
<sun.security.rsa.RSAUtil$KeyType: void <clinit>()>
Counter value: 1
SCC 9828 : 1
<sun.security.rsa.RSAUtil$KeyType: void <init>(java.lang.String,int,java.lang.String)>
Counter value: 1
SCC 9829 : 1
<java.security.Signature: java.lang.String getProviderName()>
Counter value: 1
SCC 9830 : 1
<java.security.Provider$Service: boolean supportsKeyClass(java.security.Key)>
Counter value: 1
SCC 9831 : 1
<sun.security.x509.X509Key: java.lang.String getFormat()>
Counter value: 1
SCC 9832 : 1
<java.security.SignatureSpi: void engineSetParameter(java.security.spec.AlgorithmParameterSpec)>
Counter value: 1
SCC 9833 : 1
<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>
Counter value: 1
SCC 9834 : 1
<javax.crypto.CryptoPermission: boolean impliesParameterSpec(boolean,java.security.spec.AlgorithmParameterSpec)>
Counter value: 1
SCC 9835 : 1
<javax.crypto.CryptoAllPermission: boolean implies(java.security.Permission)>
Counter value: 1
SCC 9836 : 1
<javax.crypto.ExemptionMechanism: boolean isCryptoAllowed(java.security.Key)>
Counter value: 1
SCC 9837 : 1
<javax.crypto.ExemptionMechanism: java.lang.String getName()>
Counter value: 1
SCC 9838 : 1
<javax.crypto.Cipher: void checkOpmode(int)>
Counter value: 1
SCC 9839 : 1
<javax.crypto.Cipher: java.lang.String getOpmodeString(int)>
Counter value: 1
SCC 9840 : 1
<java.security.Signature$CipherAdapter: void <init>(javax.crypto.Cipher)>
Counter value: 1
SCC 9841 : 1
<java.security.SignatureSpi: void <init>()>
Counter value: 1
SCC 9842 : 1
<javax.crypto.Cipher$Transform: void setModePadding(javax.crypto.CipherSpi)>
Counter value: 1
SCC 9843 : 1
<javax.crypto.Cipher: void <init>(javax.crypto.CipherSpi,java.lang.String)>
Counter value: 1
SCC 9844 : 1
<javax.crypto.CryptoPermission: java.lang.String getExemptionMechanism()>
Counter value: 1
SCC 9845 : 1
<javax.crypto.JarVerifier: javax.crypto.CryptoPermissions getPermissions()>
Counter value: 1
SCC 9846 : 1
<javax.crypto.ExemptionMechanism: void <init>(javax.crypto.ExemptionMechanismSpi,java.security.Provider,java.lang.String)>
Counter value: 1
SCC 9847 : 1
<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>
Counter value: 1
SCC 9848 : 1
<java.util.Collections$SingletonList: java.util.Iterator iterator()>
Counter value: 1
SCC 9849 : 1
<java.util.Collections: java.util.List singletonList(java.lang.Object)>
Counter value: 1
SCC 9850 : 1
<java.util.Collections$SingletonList: void <init>(java.lang.Object)>
Counter value: 1
SCC 9851 : 1
<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>
Counter value: 1
SCC 9852 : 1
<javax.crypto.JceSecurity$2: void <init>(java.lang.Class)>
Counter value: 1
SCC 9853 : 1
<javax.crypto.JarVerifier: void <init>(java.net.URL,boolean)>
Counter value: 1
SCC 9854 : 1
<javax.crypto.JarVerifier$1: void <init>(javax.crypto.JarVerifier,java.net.URL)>
Counter value: 1
SCC 9855 : 1
<java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasMoreElements()>
Counter value: 1
SCC 9856 : 1
<javax.crypto.CryptoPermissions: boolean isEmpty()>
Counter value: 1
SCC 9857 : 1
<java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>
Counter value: 1
SCC 9858 : 1
<javax.crypto.CryptoPermission: java.lang.String getAlgorithm()>
Counter value: 1
SCC 9859 : 1
<javax.crypto.CryptoPolicyParser$GrantEntry: java.util.Enumeration permissionElements()>
Counter value: 1
SCC 9860 : 1
<javax.crypto.CryptoPermission: void <init>(java.lang.String,int,java.security.spec.AlgorithmParameterSpec,java.lang.String)>
Counter value: 1
SCC 9861 : 1
<javax.crypto.CryptoPermission: void <init>(java.lang.String,int,java.lang.String)>
Counter value: 1
SCC 9862 : 1
<javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: void <init>()>
Counter value: 1
SCC 9863 : 1
<javax.crypto.CryptoPolicyParser$ParsingException: void <init>(java.lang.String)>
Counter value: 1
SCC 9864 : 1
<javax.crypto.JarVerifier: void verifyPolicySigned(java.security.cert.Certificate[])>
Counter value: 1
SCC 9865 : 1
<javax.crypto.JceSecurity$1: void <init>()>
Counter value: 1
SCC 9866 : 1
<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 9867 : 1
<java.security.Signature$1: void <init>()>
Counter value: 1
SCC 9868 : 1
<sun.security.jca.ServiceId: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 9869 : 1
<java.util.Vector: boolean isEmpty()>
Counter value: 1
SCC 9870 : 1
<sun.security.pkcs.PKCS7: sun.security.pkcs.ContentInfo getContentInfo()>
Counter value: 1
SCC 9871 : 1
<sun.security.timestamp.TimestampToken: java.math.BigInteger getSerialNumber()>
Counter value: 1
SCC 9872 : 1
<sun.security.timestamp.TimestampToken: byte[] getHashedMessage()>
Counter value: 1
SCC 9873 : 1
<sun.security.timestamp.TimestampToken: sun.security.x509.AlgorithmId getHashAlgorithm()>
Counter value: 1
SCC 9874 : 1
<sun.security.pkcs.SignerInfo$AlgorithmInfo: void <init>(sun.security.pkcs.SignerInfo,java.lang.String,boolean,sun.security.pkcs.SignerInfo$1)>
Counter value: 1
SCC 9875 : 1
<sun.security.pkcs.SignerInfo$AlgorithmInfo: void <init>(sun.security.pkcs.SignerInfo,java.lang.String,boolean)>
Counter value: 1
SCC 9876 : 1
<java.security.MessageDigest: boolean isEqual(byte[],byte[])>
Counter value: 1
SCC 9877 : 1
<sun.security.pkcs.PKCS9Attribute: java.lang.Object getValue()>
Counter value: 1
SCC 9878 : 1
<sun.security.pkcs.ContentInfo: sun.security.util.DerValue getContent()>
Counter value: 1
SCC 9879 : 1
<sun.security.util.DerValue: byte getTag()>
Counter value: 1
SCC 9880 : 1
<java.security.cert.CertificateFactory: java.security.cert.CRL generateCRL(java.io.InputStream)>
Counter value: 1
SCC 9881 : 1
<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>
Counter value: 1
SCC 9882 : 1
<java.security.cert.X509Certificate: void <init>()>
Counter value: 1
SCC 9883 : 1
<java.security.cert.Certificate: void <init>(java.lang.String)>
Counter value: 1
SCC 9884 : 1
<java.security.cert.X509CRLEntry: void <init>()>
Counter value: 1
SCC 9885 : 1
<sun.security.x509.X509CRLEntryImpl: java.math.BigInteger getSerialNumber()>
Counter value: 1
SCC 9886 : 1
<sun.security.x509.X509CRLEntryImpl: void setCertificateIssuer(javax.security.auth.x500.X500Principal,javax.security.auth.x500.X500Principal)>
Counter value: 1
SCC 9887 : 1
<sun.security.x509.X509CRLImpl$X509IssuerSerial: void <init>(javax.security.auth.x500.X500Principal,java.math.BigInteger)>
Counter value: 1
SCC 9888 : 1
<java.security.cert.X509CRL: void <init>()>
Counter value: 1
SCC 9889 : 1
<java.security.cert.CRL: void <init>(java.lang.String)>
Counter value: 1
SCC 9890 : 1
<sun.security.util.DerInputStream: int peekByte()>
Counter value: 1
SCC 9891 : 1
<sun.security.util.DerInputBuffer: int peek()>
Counter value: 1
SCC 9892 : 1
<sun.security.pkcs.PKCS9Attributes: sun.security.util.DerEncoder[] castToDerEncoder(java.lang.Object[])>
Counter value: 1
SCC 9893 : 1
<sun.security.x509.GeneralNames: void <init>()>
Counter value: 1
SCC 9894 : 1
<sun.security.util.DerValue: sun.security.util.DerInputStream getData()>
Counter value: 1
SCC 9895 : 1
<sun.security.util.DerValue: void resetTag(byte)>
Counter value: 1
SCC 9896 : 1
<java.net.URI: java.lang.String getHost()>
Counter value: 1
SCC 9897 : 1
<sun.security.x509.IPAddressName: void <init>(byte[])>
Counter value: 1
SCC 9898 : 1
<sun.security.x509.URIName: void <init>(java.net.URI,java.lang.String,sun.security.x509.DNSName)>
Counter value: 1
SCC 9899 : 1
<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>
Counter value: 1
SCC 9900 : 1
<sun.security.pkcs.PKCS9Attribute: sun.security.util.ObjectIdentifier getOID()>
Counter value: 1
SCC 9901 : 1
<sun.security.pkcs.ParsingException: void <init>(java.lang.String)>
Counter value: 1
SCC 9902 : 1
<java.security.SignatureException: void <init>(java.lang.String)>
Counter value: 1
SCC 9903 : 1
<sun.security.timestamp.TimestampToken: java.util.Date getDate()>
Counter value: 1
SCC 9904 : 1
<java.security.cert.CertificateFactory: void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String)>
Counter value: 1
SCC 9905 : 1
<sun.security.x509.SerialNumber: java.math.BigInteger getNumber()>
Counter value: 1
SCC 9906 : 1
<java.util.Collections$EmptyList: java.lang.Object[] toArray()>
Counter value: 1
SCC 9907 : 1
<sun.security.util.DerValue: byte createTag(byte,boolean,byte)>
Counter value: 1
SCC 9908 : 1
<sun.security.util.DerValue: boolean isContextSpecific(byte)>
Counter value: 1
SCC 9909 : 1
<sun.security.x509.CertificateVersion: int compare(int)>
Counter value: 1
SCC 9910 : 1
<sun.security.x509.X500Name: boolean isEmpty()>
Counter value: 1
SCC 9911 : 1
<sun.security.util.DerValue: boolean isContextSpecific()>
Counter value: 1
SCC 9912 : 1
<sun.security.util.DerInputStream: byte[] toByteArray()>
Counter value: 1
SCC 9913 : 1
<sun.security.util.DerInputBuffer: byte[] toByteArray()>
Counter value: 1
SCC 9914 : 1
<sun.security.util.DerInputBuffer: int checkPaddedBits(int,byte[],int,int,boolean)>
Counter value: 1
SCC 9915 : 1
<sun.security.util.BitArray: void <init>(int)>
Counter value: 1
SCC 9916 : 1
<java.security.InvalidKeyException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 9917 : 1
<java.security.KeyException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 9918 : 1
<java.lang.InstantiationException: void <init>()>
Counter value: 1
SCC 9919 : 1
<java.lang.ReflectiveOperationException: void <init>()>
Counter value: 1
SCC 9920 : 1
<java.security.InvalidKeyException: void <init>(java.lang.String)>
Counter value: 1
SCC 9921 : 1
<java.security.KeyException: void <init>(java.lang.String)>
Counter value: 1
SCC 9922 : 1
<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 9923 : 1
<sun.security.util.ObjectIdentifier: boolean equals(sun.security.util.ObjectIdentifier)>
Counter value: 1
SCC 9924 : 1
<sun.security.util.BitArray: int length()>
Counter value: 1
SCC 9925 : 1
<sun.security.x509.Extension: boolean isCritical()>
Counter value: 1
SCC 9926 : 1
<sun.security.x509.Extension: void <init>(sun.security.x509.Extension)>
Counter value: 1
SCC 9927 : 1
<sun.security.util.DerValue: byte[] append(byte[],byte[])>
Counter value: 1
SCC 9928 : 1
<sun.security.util.DerValue: boolean isConstructed(byte)>
Counter value: 1
SCC 9929 : 1
<sun.security.util.DerValue: boolean isConstructed()>
Counter value: 1
SCC 9930 : 1
<sun.security.x509.CertificateVersion: void <init>()>
Counter value: 1
SCC 9931 : 1
<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.util.List)>
Counter value: 1
SCC 9932 : 1
<java.security.CodeSigner: void <init>(java.security.cert.CertPath,java.security.Timestamp)>
Counter value: 1
SCC 9933 : 1
<sun.security.x509.AlgorithmId: java.security.AlgorithmParameters getParameters()>
Counter value: 1
SCC 9934 : 1
<sun.security.pkcs.SignerInfo$AlgorithmInfo: boolean checkKey()>
Counter value: 1
SCC 9935 : 1
<sun.security.pkcs.SignerInfo$AlgorithmInfo: java.lang.String field()>
Counter value: 1
SCC 9936 : 1
<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>
Counter value: 1
SCC 9937 : 1
<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>
Counter value: 1
SCC 9938 : 1
<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>
Counter value: 1
SCC 9939 : 1
<sun.security.util.JarConstraintsParameters: java.util.Date getDate()>
Counter value: 1
SCC 9940 : 1
<java.time.Clock$SystemClock: long millis()>
Counter value: 1
SCC 9941 : 1
<java.time.Clock$SystemClock: void <init>(java.time.ZoneId)>
Counter value: 1
SCC 9942 : 1
<java.time.Clock: void <init>()>
Counter value: 1
SCC 9943 : 1
<java.util.AbstractCollection: boolean add(java.lang.Object)>
Counter value: 1
SCC 9944 : 1
<java.security.KeyStore: java.util.Enumeration aliases()>
Counter value: 1
SCC 9945 : 1
<sun.security.util.AnchorCertificates$1: void <init>()>
Counter value: 1
SCC 9946 : 1
<sun.security.util.JarConstraintsParameters: java.lang.String extendedExceptionMsg()>
Counter value: 1
SCC 9947 : 1
<sun.security.util.JarConstraintsParameters: java.util.Set getKeys()>
Counter value: 1
SCC 9948 : 1
<sun.security.util.JarConstraintsParameters: java.lang.String getVariant()>
Counter value: 1
SCC 9949 : 1
<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int,java.security.cert.CertPathValidatorException$Reason)>
Counter value: 1
SCC 9950 : 1
<sun.security.util.NamedCurve: java.lang.String getObjectId()>
Counter value: 1
SCC 9951 : 1
<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>
Counter value: 1
SCC 9952 : 1
<sun.security.util.ECUtil: boolean equals(java.security.spec.ECParameterSpec,java.security.spec.ECParameterSpec)>
Counter value: 1
SCC 9953 : 1
<java.security.spec.ECPoint: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9954 : 1
<java.security.spec.EllipticCurve: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9955 : 1
<java.security.spec.ECFieldF2m: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9956 : 1
<java.security.spec.ECFieldFp: boolean equals(java.lang.Object)>
Counter value: 1
SCC 9957 : 1
<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>
Counter value: 1
SCC 9958 : 1
<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>
Counter value: 1
SCC 9959 : 1
<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>
Counter value: 1
SCC 9960 : 1
<java.security.spec.ECParameterSpec: int getCofactor()>
Counter value: 1
SCC 9961 : 1
<sun.security.util.NamedCurve: java.lang.String getName()>
Counter value: 1
SCC 9962 : 1
<java.util.regex.Pattern: void append(int,int)>
Counter value: 1
SCC 9963 : 1
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty caseInsensitiveRangeFor(int,int)>
Counter value: 1
SCC 9964 : 1
<java.util.regex.Pattern$2: void <init>(java.util.regex.Pattern,int,int)>
Counter value: 1
SCC 9965 : 1
<java.util.regex.Pattern$3: void <init>(java.util.regex.Pattern,int,int)>
Counter value: 1
SCC 9966 : 1
<java.util.regex.Pattern$SingleU: void <init>(int)>
Counter value: 1
SCC 9967 : 1
<java.util.regex.Pattern$SingleI: void <init>(int,int)>
Counter value: 1
SCC 9968 : 1
<java.util.regex.Pattern$SingleS: void <init>(int)>
Counter value: 1
SCC 9969 : 1
<java.util.regex.Pattern$Single: void <init>(int)>
Counter value: 1
SCC 9970 : 1
<java.util.regex.Pattern: int flags()>
Counter value: 1
SCC 9971 : 1
<java.util.regex.Pattern: int x()>
Counter value: 1
SCC 9972 : 1
<java.util.regex.Pattern: void setcursor(int)>
Counter value: 1
SCC 9973 : 1
<java.util.regex.Pattern: int cursor()>
Counter value: 1
SCC 9974 : 1
<java.util.regex.Pattern: int uxxxx()>
Counter value: 1
SCC 9975 : 1
<java.util.regex.ASCII: boolean isHexDigit(int)>
Counter value: 1
SCC 9976 : 1
<java.util.regex.ASCII: int toDigit(int)>
Counter value: 1
SCC 9977 : 1
<java.util.regex.Pattern: int c()>
Counter value: 1
SCC 9978 : 1
<java.util.regex.Pattern: java.util.regex.Pattern$Node ref(int)>
Counter value: 1
SCC 9979 : 1
<java.util.regex.Pattern: int o()>
Counter value: 1
SCC 9980 : 1
<java.util.regex.Pattern$LastMatch: void <init>()>
Counter value: 1
SCC 9981 : 1
<java.util.regex.Pattern$LineEnding: void <init>()>
Counter value: 1
SCC 9982 : 1
<java.util.regex.Pattern$Bound: void <init>(int,boolean)>
Counter value: 1
SCC 9983 : 1
<java.util.regex.Pattern$HorizWS: void <init>()>
Counter value: 1
SCC 9984 : 1
<java.util.regex.Pattern$CIBackRef: void <init>(int,boolean)>
Counter value: 1
SCC 9985 : 1
<java.util.regex.Pattern$BackRef: void <init>(int)>
Counter value: 1
SCC 9986 : 1
<java.util.regex.Pattern$VertWS: void <init>()>
Counter value: 1
SCC 9987 : 1
<java.util.regex.Pattern$End: void <init>()>
Counter value: 1
SCC 9988 : 1
<java.util.regex.Pattern$Block: void <init>(java.lang.Character$UnicodeBlock)>
Counter value: 1
SCC 9989 : 1
<java.util.regex.Pattern$Script: void <init>(java.lang.Character$UnicodeScript)>
Counter value: 1
SCC 9990 : 1
<java.util.regex.Pattern: void mark(int)>
Counter value: 1
SCC 9991 : 1
<java.util.regex.Pattern$Utype: void <init>(java.util.regex.UnicodeProp)>
Counter value: 1
SCC 9992 : 1
<java.util.regex.Pattern$CharPropertyNames$1: java.util.regex.Pattern$CharProperty make()>
Counter value: 1
SCC 9993 : 1
<java.util.regex.Pattern$Category: void <init>(int)>
Counter value: 1
SCC 9994 : 1
<java.util.regex.Pattern$CharPropertyNames$2: java.util.regex.Pattern$CharProperty make()>
Counter value: 1
SCC 9995 : 1
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty access$600(int,int)>
Counter value: 1
SCC 9996 : 1
<java.util.regex.Pattern$CharPropertyNames$3: java.util.regex.Pattern$CharProperty make()>
Counter value: 1
SCC 9997 : 1
<java.util.regex.Pattern$Ctype: void <init>(int)>
Counter value: 1
SCC 9998 : 1
<java.util.regex.Pattern$CharPropertyNames$5: java.util.regex.Pattern$CharProperty make()>
Counter value: 1
SCC 9999 : 1
<java.util.regex.Pattern$CharPropertyNames$5: void <init>()>
Counter value: 1
SCC 10000 : 1
<java.util.regex.Pattern$CharPropertyNames$6: void <init>()>
Counter value: 1
SCC 10001 : 1
<java.util.regex.Pattern$CharPropertyNames$7: void <init>()>
Counter value: 1
SCC 10002 : 1
<java.util.regex.Pattern$CharPropertyNames$8: void <init>()>
Counter value: 1
SCC 10003 : 1
<java.util.regex.Pattern$CharPropertyNames$9: void <init>()>
Counter value: 1
SCC 10004 : 1
<java.util.regex.Pattern$CharPropertyNames$10: void <init>()>
Counter value: 1
SCC 10005 : 1
<java.util.regex.Pattern$CharPropertyNames$11: void <init>()>
Counter value: 1
SCC 10006 : 1
<java.util.regex.Pattern$CharPropertyNames$12: void <init>()>
Counter value: 1
SCC 10007 : 1
<java.util.regex.Pattern$CharPropertyNames$13: void <init>()>
Counter value: 1
SCC 10008 : 1
<java.util.regex.Pattern$CharPropertyNames$14: void <init>()>
Counter value: 1
SCC 10009 : 1
<java.util.regex.Pattern$CharPropertyNames$15: void <init>()>
Counter value: 1
SCC 10010 : 1
<java.util.regex.Pattern$CharPropertyNames$16: void <init>()>
Counter value: 1
SCC 10011 : 1
<java.util.regex.Pattern$CharPropertyNames$17: void <init>()>
Counter value: 1
SCC 10012 : 1
<java.util.regex.Pattern$CharPropertyNames$18: void <init>()>
Counter value: 1
SCC 10013 : 1
<java.util.regex.Pattern$CharPropertyNames$19: void <init>()>
Counter value: 1
SCC 10014 : 1
<java.util.regex.Pattern$CharPropertyNames$20: void <init>()>
Counter value: 1
SCC 10015 : 1
<java.util.regex.Pattern$CharPropertyNames$21: void <init>()>
Counter value: 1
SCC 10016 : 1
<java.util.regex.Pattern$CharPropertyNames$22: void <init>()>
Counter value: 1
SCC 10017 : 1
<java.util.regex.Pattern$CharPropertyNames$23: void <init>()>
Counter value: 1
SCC 10018 : 1
<java.util.regex.Pattern$CharPropertyNames$CloneableProperty: void <init>(java.util.regex.Pattern$1)>
Counter value: 1
SCC 10019 : 1
<java.util.regex.Pattern$CharPropertyNames$CloneableProperty: void <init>()>
Counter value: 1
SCC 10020 : 1
<java.util.regex.Pattern$CharPropertyNames$1: void <init>(int)>
Counter value: 1
SCC 10021 : 1
<java.util.regex.Pattern$CharPropertyNames$2: void <init>(int,int)>
Counter value: 1
SCC 10022 : 1
<java.util.regex.Pattern$CharPropertyNames$3: void <init>(int)>
Counter value: 1
SCC 10023 : 1
<java.util.regex.Pattern$CharPropertyNames$4: void <init>(java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>
Counter value: 1
SCC 10024 : 1
<java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory: void <init>(java.util.regex.Pattern$1)>
Counter value: 1
SCC 10025 : 1
<java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory: void <init>()>
Counter value: 1
SCC 10026 : 1
<java.util.regex.Pattern: int nextEscaped()>
Counter value: 1
SCC 10027 : 1
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty rangeFor(int,int)>
Counter value: 1
SCC 10028 : 1
<java.util.regex.Pattern$1: void <init>(int,int)>
Counter value: 1
SCC 10029 : 1
<java.util.regex.Pattern$CharProperty: java.util.regex.Pattern$CharProperty complement()>
Counter value: 1
SCC 10030 : 1
<java.util.regex.Pattern$CharProperty$1: void <init>(java.util.regex.Pattern$CharProperty)>
Counter value: 1
SCC 10031 : 1
<java.util.regex.Pattern$BitClass: void <init>()>
Counter value: 1
SCC 10032 : 1
<java.util.regex.Pattern$BmpCharProperty: void <init>(java.util.regex.Pattern$1)>
Counter value: 1
SCC 10033 : 1
<java.util.regex.Pattern$BmpCharProperty: void <init>()>
Counter value: 1
SCC 10034 : 1
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty intersection(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)>
Counter value: 1
SCC 10035 : 1
<java.util.regex.Pattern$6: void <init>(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)>
Counter value: 1
SCC 10036 : 1
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty union(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)>
Counter value: 1
SCC 10037 : 1
<java.util.regex.Pattern$5: void <init>(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)>
Counter value: 1
SCC 10038 : 1
<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty setDifference(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)>
Counter value: 1
SCC 10039 : 1
<java.util.regex.Pattern$7: void <init>(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)>
Counter value: 1
SCC 10040 : 1
<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)>
Counter value: 1
SCC 10041 : 1
<java.util.regex.Pattern$Curly: void <init>(java.util.regex.Pattern$Node,int,int,int)>
Counter value: 1
SCC 10042 : 1
<java.util.regex.Pattern: void accept(int,java.lang.String)>
Counter value: 1
SCC 10043 : 1
<java.util.regex.Pattern: void addFlag()>
Counter value: 1
SCC 10044 : 1
<java.util.regex.Pattern: void subFlag()>
Counter value: 1
SCC 10045 : 1
<java.util.regex.Pattern: void unread()>
Counter value: 1
SCC 10046 : 1
<java.util.regex.Pattern: int read()>
Counter value: 1
SCC 10047 : 1
<java.util.regex.Pattern: int parsePastWhitespace(int)>
Counter value: 1
SCC 10048 : 1
<java.util.regex.Pattern: int parsePastLine()>
Counter value: 1
SCC 10049 : 1
<java.util.regex.Pattern: java.util.regex.Pattern$Node createGroup(boolean)>
Counter value: 1
SCC 10050 : 1
<java.util.regex.Pattern$GroupHead: void <init>(int)>
Counter value: 1
SCC 10051 : 1
<java.util.regex.Pattern$GroupTail: void <init>(int,int)>
Counter value: 1
SCC 10052 : 1
<java.util.regex.Pattern: int skip()>
Counter value: 1
SCC 10053 : 1
<java.util.regex.Pattern: int next()>
Counter value: 1
SCC 10054 : 1
<java.util.regex.Pattern$Pos: void <init>(java.util.regex.Pattern$Node)>
Counter value: 1
SCC 10055 : 1
<java.util.regex.Pattern$Neg: void <init>(java.util.regex.Pattern$Node)>
Counter value: 1
SCC 10056 : 1
<java.util.regex.Pattern$Ques: void <init>(java.util.regex.Pattern$Node,int)>
Counter value: 1
SCC 10057 : 1
<java.util.regex.Pattern$BehindS: void <init>(java.util.regex.Pattern$Node,int,int)>
Counter value: 1
SCC 10058 : 1
<java.util.regex.Pattern$Behind: void <init>(java.util.regex.Pattern$Node,int,int)>
Counter value: 1
SCC 10059 : 1
<java.util.regex.Pattern$NotBehindS: void <init>(java.util.regex.Pattern$Node,int,int)>
Counter value: 1
SCC 10060 : 1
<java.util.regex.Pattern$NotBehind: void <init>(java.util.regex.Pattern$Node,int,int)>
Counter value: 1
SCC 10061 : 1
<java.util.regex.Pattern$GroupCurly: void <init>(java.util.regex.Pattern$Node,int,int,int,int,int,boolean)>
Counter value: 1
SCC 10062 : 1
<java.util.regex.Pattern$LazyLoop: void <init>(int,int)>
Counter value: 1
SCC 10063 : 1
<java.util.regex.Pattern$Loop: void <init>(int,int)>
Counter value: 1
SCC 10064 : 1
<java.util.regex.Pattern$Prolog: void <init>(java.util.regex.Pattern$Loop)>
Counter value: 1
SCC 10065 : 1
<java.util.regex.Pattern: int peek()>
Counter value: 1
SCC 10066 : 1
<java.util.regex.Pattern: int peekPastWhitespace(int)>
Counter value: 1
SCC 10067 : 1
<java.util.regex.Pattern: int peekPastLine()>
Counter value: 1
SCC 10068 : 1
<java.util.regex.Pattern: boolean isLineSeparator(int)>
Counter value: 1
SCC 10069 : 1
<java.util.regex.ASCII: boolean isSpace(int)>
Counter value: 1
SCC 10070 : 1
<java.util.regex.Pattern$UnixCaret: void <init>()>
Counter value: 1
SCC 10071 : 1
<java.util.regex.Pattern$Caret: void <init>()>
Counter value: 1
SCC 10072 : 1
<java.util.regex.Pattern$Begin: void <init>()>
Counter value: 1
SCC 10073 : 1
<java.util.regex.Pattern$UnixDollar: void <init>(boolean)>
Counter value: 1
SCC 10074 : 1
<java.util.regex.Pattern$Dollar: void <init>(boolean)>
Counter value: 1
SCC 10075 : 1
<java.util.regex.Pattern$All: void <init>()>
Counter value: 1
SCC 10076 : 1
<java.util.regex.Pattern$UnixDot: void <init>()>
Counter value: 1
SCC 10077 : 1
<java.util.regex.Pattern$Dot: void <init>()>
Counter value: 1
SCC 10078 : 1
<java.util.regex.Pattern$CharProperty: void <init>(java.util.regex.Pattern$1)>
Counter value: 1
SCC 10079 : 1
<java.util.regex.Pattern$CharProperty: void <init>()>
Counter value: 1
SCC 10080 : 1
<java.util.regex.Pattern$Branch: void add(java.util.regex.Pattern$Node)>
Counter value: 1
SCC 10081 : 1
<java.util.regex.Pattern$BranchConn: void <init>()>
Counter value: 1
SCC 10082 : 1
<java.util.regex.Pattern$Branch: void <init>(java.util.regex.Pattern$Node,java.util.regex.Pattern$Node,java.util.regex.Pattern$Node)>
Counter value: 1
SCC 10083 : 1
<java.util.regex.Pattern$SliceUS: void <init>(int[])>
Counter value: 1
SCC 10084 : 1
<java.util.regex.Pattern$SliceU: void <init>(int[])>
Counter value: 1
SCC 10085 : 1
<java.util.regex.Pattern$SliceIS: void <init>(int[])>
Counter value: 1
SCC 10086 : 1
<java.util.regex.Pattern$SliceI: void <init>(int[])>
Counter value: 1
SCC 10087 : 1
<java.util.regex.Pattern$SliceS: void <init>(int[])>
Counter value: 1
SCC 10088 : 1
<java.util.regex.Pattern$Slice: void <init>(int[])>
Counter value: 1
SCC 10089 : 1
<java.util.regex.Pattern$SliceNode: void <init>(int[])>
Counter value: 1
SCC 10090 : 1
<java.util.regex.ASCII: boolean isAlpha(int)>
Counter value: 1
SCC 10091 : 1
<sun.text.normalizer.NormalizerDataReader: byte[] getUnicodeVersion()>
Counter value: 1
SCC 10092 : 1
<sun.text.normalizer.NormalizerDataReader: byte[] getDataFormatVersion()>
Counter value: 1
SCC 10093 : 1
<sun.text.normalizer.NormalizerImpl$FCDTrieImpl: void <init>()>
Counter value: 1
SCC 10094 : 1
<sun.text.normalizer.NormalizerImpl$NormTrieImpl: void <init>()>
Counter value: 1
SCC 10095 : 1
<sun.text.normalizer.NormalizerImpl$AuxTrieImpl: void <init>()>
Counter value: 1
SCC 10096 : 1
<sun.text.normalizer.Trie: boolean isIntTrie()>
Counter value: 1
SCC 10097 : 1
<java.lang.Class: java.lang.String getNonArrayClassPackageName(java.lang.Class)>
Counter value: 1
SCC 10098 : 1
<java.lang.ClassLoader: java.net.URL findResource(java.lang.String)>
Counter value: 1
SCC 10099 : 1
<java.net.URLClassLoader$1: void <init>(java.net.URLClassLoader,java.lang.String)>
Counter value: 1
SCC 10100 : 1
<com.ibm.oti.vm.AbstractClassLoader$1: void <init>(com.ibm.oti.vm.AbstractClassLoader,java.lang.String)>
Counter value: 1
SCC 10101 : 1
<java.security.MessageDigest: void reset()>
Counter value: 1
SCC 10102 : 1
<java.security.MessageDigest$Delegate: void engineReset()>
Counter value: 1
SCC 10103 : 1
<java.util.Base64$Decoder: int outLength(byte[],int,int)>
Counter value: 1
SCC 10104 : 1
<java.io.FileInputStream: int read(byte[])>
Counter value: 1
SCC 10105 : 1
<java.util.Properties$LineReader: void <init>(java.util.Properties,java.io.Reader)>
Counter value: 1
SCC 10106 : 1
<java.io.UTFDataFormatException: void <init>(java.lang.String)>
Counter value: 1
SCC 10107 : 1
<java.lang.Long: int intValue()>
Counter value: 1
SCC 10108 : 1
<java.lang.Double: int intValue()>
Counter value: 1
SCC 10109 : 1
<java.math.BigDecimal: boolean unsignedLongCompare(long,long)>
Counter value: 1
SCC 10110 : 1
<java.math.BigDecimal: long make64(long,long)>
Counter value: 1
SCC 10111 : 1
<java.math.BigDecimal: int saturateLong(long)>
Counter value: 1
SCC 10112 : 1
<java.math.BigDecimal: int adjustScale(int,long)>
Counter value: 1
SCC 10113 : 1
<java.lang.NumberFormatException: void <init>()>
Counter value: 1
SCC 10114 : 1
<java.text.DecimalFormat: boolean isParseBigDecimal()>
Counter value: 1
SCC 10115 : 1
<java.text.DigitList: void append(char)>
Counter value: 1
SCC 10116 : 1
<java.text.NumberFormat: boolean isParseIntegerOnly()>
Counter value: 1
SCC 10117 : 1
<java.text.CalendarBuilder: java.text.CalendarBuilder clear(int)>
Counter value: 1
SCC 10118 : 1
<java.text.SimpleDateFormat: boolean isDigit(char)>
Counter value: 1
SCC 10119 : 1
<java.text.DateFormat: boolean isLenient()>
Counter value: 1
SCC 10120 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter: sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter access$200()>
Counter value: 1
SCC 10121 : 1
<java.text.CalendarBuilder: void <init>()>
Counter value: 1
SCC 10122 : 1
<java.text.CalendarBuilder: java.text.CalendarBuilder addYear(int)>
Counter value: 1
SCC 10123 : 1
<java.text.CalendarBuilder: java.text.CalendarBuilder set(int,int)>
Counter value: 1
SCC 10124 : 1
<java.text.CalendarBuilder: boolean isSet(int)>
Counter value: 1
SCC 10125 : 1
<java.text.CalendarBuilder: int toCalendarDayOfWeek(int)>
Counter value: 1
SCC 10126 : 1
<java.text.CalendarBuilder: boolean isValidDayOfWeek(int)>
Counter value: 1
SCC 10127 : 1
<java.text.DateFormat: void setLenient(boolean)>
Counter value: 1
SCC 10128 : 1
<sun.util.logging.PlatformLogger$LoggerProxy: void <init>(java.lang.String)>
Counter value: 1
SCC 10129 : 1
<sun.util.logging.LoggingSupport$2: void <init>()>
Counter value: 1
SCC 10130 : 1
<java.util.Date: void <init>()>
Counter value: 1
SCC 10131 : 1
<java.util.Formatter: java.lang.Appendable out()>
Counter value: 1
SCC 10132 : 1
<java.lang.Boolean: java.lang.String toString(boolean)>
Counter value: 1
SCC 10133 : 1
<java.util.IllegalFormatCodePointException: void <init>(int)>
Counter value: 1
SCC 10134 : 1
<java.util.Formatter$FormatSpecifier: char[] trailingZeros(char[],int)>
Counter value: 1
SCC 10135 : 1
<java.math.BigDecimal: int checkScale(long)>
Counter value: 1
SCC 10136 : 1
<java.lang.Long: int signum(long)>
Counter value: 1
SCC 10137 : 1
<java.math.BigDecimal: int checkScale(long,long)>
Counter value: 1
SCC 10138 : 1
<java.math.BigDecimal: int checkScale(java.math.BigInteger,long)>
Counter value: 1
SCC 10139 : 1
<java.math.BigDecimal: int scale()>
Counter value: 1
SCC 10140 : 1
<java.util.Formatter$FormatSpecifier$BigDecimalLayout: boolean hasDot()>
Counter value: 1
SCC 10141 : 1
<java.math.MutableBigInteger: int divaddLong(int,int,int[],int)>
Counter value: 1
SCC 10142 : 1
<java.math.MutableBigInteger: int mulsubLong(int[],int,int,int,int)>
Counter value: 1
SCC 10143 : 1
<java.math.MutableBigInteger: int compareHalf(java.math.MutableBigInteger)>
Counter value: 1
SCC 10144 : 1
<java.math.MutableBigInteger: boolean isOdd()>
Counter value: 1
SCC 10145 : 1
<java.math.BigDecimal: long compactValFor(java.math.BigInteger)>
Counter value: 1
SCC 10146 : 1
<java.math.BigDecimal: int checkScaleNonZero(long)>
Counter value: 1
SCC 10147 : 1
<java.math.BigDecimal: int longCompareMagnitude(long,long)>
Counter value: 1
SCC 10148 : 1
<java.math.RoundingMode: java.math.RoundingMode valueOf(int)>
Counter value: 1
SCC 10149 : 1
<java.math.MathContext: void <init>(int)>
Counter value: 1
SCC 10150 : 1
<java.math.MathContext: void <init>(int,java.math.RoundingMode)>
Counter value: 1
SCC 10151 : 1
<java.util.Formatter$FormatSpecifier$BigDecimalLayout: int scale()>
Counter value: 1
SCC 10152 : 1
<java.util.Formatter$FormatSpecifier: char[] addDot(char[])>
Counter value: 1
SCC 10153 : 1
<java.util.Formatter$FormatSpecifier: char[] addZeros(char[],int)>
Counter value: 1
SCC 10154 : 1
<sun.misc.FormattedFloatingDecimal: int getExponentRounded()>
Counter value: 1
SCC 10155 : 1
<sun.misc.FormattedFloatingDecimal: char[] getExponent()>
Counter value: 1
SCC 10156 : 1
<sun.misc.FormattedFloatingDecimal: char[] getMantissa()>
Counter value: 1
SCC 10157 : 1
<sun.misc.FormattedFloatingDecimal: char[] create(boolean,int)>
Counter value: 1
SCC 10158 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: boolean isNegative()>
Counter value: 1
SCC 10159 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: int getDecimalExponent()>
Counter value: 1
SCC 10160 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: int getDigits(char[])>
Counter value: 1
SCC 10161 : 1
<sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer: boolean isNegative()>
Counter value: 1
SCC 10162 : 1
<sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer: int getDecimalExponent()>
Counter value: 1
SCC 10163 : 1
<sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer: int getDigits(char[])>
Counter value: 1
SCC 10164 : 1
<sun.misc.FormattedFloatingDecimal: void <clinit>()>
Counter value: 1
SCC 10165 : 1
<sun.misc.FormattedFloatingDecimal$1: void <init>()>
Counter value: 1
SCC 10166 : 1
<java.util.Formatter$FormatSpecifier: int adjustWidth(int,java.util.Formatter$Flags,boolean)>
Counter value: 1
SCC 10167 : 1
<java.util.Formatter$FormatSpecifier: void failConversion(char,java.lang.Object)>
Counter value: 1
SCC 10168 : 1
<java.util.Formatter: java.util.Locale locale()>
Counter value: 1
SCC 10169 : 1
<java.util.Formatter: char access$300(java.util.Formatter)>
Counter value: 1
SCC 10170 : 1
<java.text.DecimalFormat: int getGroupingSize()>
Counter value: 1
SCC 10171 : 1
<java.text.DecimalFormatSymbols: char getGroupingSeparator()>
Counter value: 1
SCC 10172 : 1
<java.text.DecimalFormatSymbols: char getDecimalSeparator()>
Counter value: 1
SCC 10173 : 1
<java.util.IllegalFormatConversionException: void <init>(char,java.lang.Class)>
Counter value: 1
SCC 10174 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: boolean isDateBased()>
Counter value: 1
SCC 10175 : 1
<java.time.temporal.IsoFields$Field: boolean isDateBased()>
Counter value: 1
SCC 10176 : 1
<java.time.LocalTime: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 10177 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: int computeWeek(int,int)>
Counter value: 1
SCC 10178 : 1
<java.time.temporal.WeekFields: int getMinimalDaysInFirstWeek()>
Counter value: 1
SCC 10179 : 1
<java.time.DayOfWeek: int getValue()>
Counter value: 1
SCC 10180 : 1
<java.time.temporal.WeekFields: java.time.DayOfWeek getFirstDayOfWeek()>
Counter value: 1
SCC 10181 : 1
<java.lang.Math: int floorDiv(int,int)>
Counter value: 1
SCC 10182 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: boolean isTimeBased()>
Counter value: 1
SCC 10183 : 1
<java.time.temporal.WeekFields: void <init>(java.time.DayOfWeek,int)>
Counter value: 1
SCC 10184 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.WeekFields$ComputedDayOfField ofDayOfWeekField(java.time.temporal.WeekFields)>
Counter value: 1
SCC 10185 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.WeekFields$ComputedDayOfField ofWeekOfMonthField(java.time.temporal.WeekFields)>
Counter value: 1
SCC 10186 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.WeekFields$ComputedDayOfField ofWeekOfYearField(java.time.temporal.WeekFields)>
Counter value: 1
SCC 10187 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.WeekFields$ComputedDayOfField ofWeekOfWeekBasedYearField(java.time.temporal.WeekFields)>
Counter value: 1
SCC 10188 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: java.time.temporal.WeekFields$ComputedDayOfField ofWeekBasedYearField(java.time.temporal.WeekFields)>
Counter value: 1
SCC 10189 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: void <init>(java.lang.String,java.time.temporal.WeekFields,java.time.temporal.TemporalUnit,java.time.temporal.TemporalUnit,java.time.temporal.ValueRange)>
Counter value: 1
SCC 10190 : 1
<java.time.temporal.WeekFields$ComputedDayOfField: void <clinit>()>
Counter value: 1
SCC 10191 : 1
<java.time.temporal.ValueRange: java.time.temporal.ValueRange of(long,long,long)>
Counter value: 1
SCC 10192 : 1
<java.time.temporal.ValueRange: java.time.temporal.ValueRange of(long,long,long,long)>
Counter value: 1
SCC 10193 : 1
<java.time.Instant: java.time.temporal.ValueRange range(java.time.temporal.TemporalField)>
Counter value: 1
SCC 10194 : 1
<java.time.LocalDate: boolean isSupported(java.time.temporal.TemporalField)>
Counter value: 1
SCC 10195 : 1
<java.time.temporal.ChronoField: boolean isDateBased()>
Counter value: 1
SCC 10196 : 1
<java.lang.Math: int abs(int)>
Counter value: 1
SCC 10197 : 1
<java.time.format.DateTimeFormatterBuilder$2: void <init>()>
Counter value: 1
SCC 10198 : 1
<java.time.format.DateTimeFormatterBuilder$lambda_static_0__4: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 10199 : 1
<java.time.format.DateTimeFormatterBuilder$lambda_static_0__4: void <init>()>
Counter value: 1
SCC 10200 : 1
<java.time.LocalDateTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 10201 : 1
<java.time.ZonedDateTime: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 10202 : 1
<java.time.ZonedDateTime: java.time.LocalDate toLocalDate()>
Counter value: 1
SCC 10203 : 1
<java.time.LocalDateTime: java.time.LocalDate toLocalDate()>
Counter value: 1
SCC 10204 : 1
<java.time.temporal.IsoFields$Field: boolean isTimeBased()>
Counter value: 1
SCC 10205 : 1
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery zoneId()>
Counter value: 1
SCC 10206 : 1
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery chronology()>
Counter value: 1
SCC 10207 : 1
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery localTime()>
Counter value: 1
SCC 10208 : 1
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery zone()>
Counter value: 1
SCC 10209 : 1
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery offset()>
Counter value: 1
SCC 10210 : 1
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery precision()>
Counter value: 1
SCC 10211 : 1
<java.time.LocalDate: java.lang.Object query(java.time.temporal.TemporalQuery)>
Counter value: 1
SCC 10212 : 1
<java.time.temporal.TemporalQueries: java.time.temporal.TemporalQuery localDate()>
Counter value: 1
SCC 10213 : 1
<java.time.temporal.TemporalQueries: void <clinit>()>
Counter value: 1
SCC 10214 : 1
<java.time.temporal.TemporalQueries$lambda_static_0__8: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 10215 : 1
<java.time.temporal.TemporalQueries$lambda_static_0__8: void <init>()>
Counter value: 1
SCC 10216 : 1
<java.time.temporal.TemporalQueries$lambda_static_1__9: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 10217 : 1
<java.time.temporal.TemporalQueries$lambda_static_1__9: void <init>()>
Counter value: 1
SCC 10218 : 1
<java.time.temporal.TemporalQueries$lambda_static_2__10: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 10219 : 1
<java.time.temporal.TemporalQueries$lambda_static_2__10: void <init>()>
Counter value: 1
SCC 10220 : 1
<java.time.temporal.TemporalQueries$lambda_static_3__11: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 10221 : 1
<java.time.temporal.TemporalQueries$lambda_static_3__11: void <init>()>
Counter value: 1
SCC 10222 : 1
<java.time.temporal.TemporalQueries$lambda_static_4__12: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 10223 : 1
<java.time.temporal.TemporalQueries$lambda_static_4__12: void <init>()>
Counter value: 1
SCC 10224 : 1
<java.time.temporal.TemporalQueries$lambda_static_5__13: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 10225 : 1
<java.time.temporal.TemporalQueries$lambda_static_5__13: void <init>()>
Counter value: 1
SCC 10226 : 1
<java.time.temporal.TemporalQueries$lambda_static_6__14: java.time.temporal.TemporalQuery bootstrap$()>
Counter value: 1
SCC 10227 : 1
<java.time.temporal.TemporalQueries$lambda_static_6__14: void <init>()>
Counter value: 1
SCC 10228 : 1
<java.time.temporal.ValueRange: boolean isValidIntValue(long)>
Counter value: 1
SCC 10229 : 1
<java.time.temporal.ValueRange: boolean isIntValue()>
Counter value: 1
SCC 10230 : 1
<java.time.LocalDate: int getYear()>
Counter value: 1
SCC 10231 : 1
<java.time.temporal.ValueRange: java.time.temporal.ValueRange of(long,long)>
Counter value: 1
SCC 10232 : 1
<java.time.temporal.ValueRange: void <init>(long,long,long,long)>
Counter value: 1
SCC 10233 : 1
<java.time.temporal.IsoFields$Field: void <clinit>()>
Counter value: 1
SCC 10234 : 1
<java.time.temporal.IsoFields$Field$1: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10235 : 1
<java.time.temporal.IsoFields$Field$2: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10236 : 1
<java.time.temporal.IsoFields$Field$3: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10237 : 1
<java.time.temporal.IsoFields$Field$4: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10238 : 1
<java.time.temporal.IsoFields$Field: void <init>(java.lang.String,int,java.time.temporal.IsoFields$1)>
Counter value: 1
SCC 10239 : 1
<java.time.temporal.IsoFields$Field: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10240 : 1
<java.time.temporal.ValueRange: boolean isValidValue(long)>
Counter value: 1
SCC 10241 : 1
<java.time.temporal.ValueRange: long getMaximum()>
Counter value: 1
SCC 10242 : 1
<java.time.temporal.ValueRange: long getMinimum()>
Counter value: 1
SCC 10243 : 1
<java.time.temporal.ChronoField: java.time.temporal.ValueRange range()>
Counter value: 1
SCC 10244 : 1
<java.time.LocalDate: void <init>(int,int,int)>
Counter value: 1
SCC 10245 : 1
<java.time.LocalTime: int toSecondOfDay()>
Counter value: 1
SCC 10246 : 1
<java.time.temporal.ChronoField: boolean isTimeBased()>
Counter value: 1
SCC 10247 : 1
<java.time.ZoneOffset: int getTotalSeconds()>
Counter value: 1
SCC 10248 : 1
<java.time.ZonedDateTime: java.time.ZoneOffset getOffset()>
Counter value: 1
SCC 10249 : 1
<java.time.Month: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10250 : 1
<java.time.DayOfWeek: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10251 : 1
<java.time.LocalDate: long getProlepticMonth()>
Counter value: 1
SCC 10252 : 1
<java.time.chrono.IsoChronology: boolean isLeapYear(long)>
Counter value: 1
SCC 10253 : 1
<java.time.chrono.AbstractChronology$lambda_static_7f2d2d5b_1__5: java.util.Comparator bootstrap$()>
Counter value: 1
SCC 10254 : 1
<java.time.chrono.AbstractChronology$lambda_static_7f2d2d5b_1__5: void <init>()>
Counter value: 1
SCC 10255 : 1
<java.time.chrono.AbstractChronology$lambda_static_b5a61975_1__6: java.util.Comparator bootstrap$()>
Counter value: 1
SCC 10256 : 1
<java.time.chrono.AbstractChronology$lambda_static_b5a61975_1__6: void <init>()>
Counter value: 1
SCC 10257 : 1
<java.time.chrono.AbstractChronology$lambda_static_2241c452_1__7: java.util.Comparator bootstrap$()>
Counter value: 1
SCC 10258 : 1
<java.time.chrono.AbstractChronology$lambda_static_2241c452_1__7: void <init>()>
Counter value: 1
SCC 10259 : 1
<java.time.temporal.UnsupportedTemporalTypeException: void <init>(java.lang.String)>
Counter value: 1
SCC 10260 : 1
<java.time.DateTimeException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 10261 : 1
<java.lang.Math: long addExact(long,long)>
Counter value: 1
SCC 10262 : 1
<java.lang.Math: long floorDiv(long,long)>
Counter value: 1
SCC 10263 : 1
<java.time.DateTimeException: void <init>(java.lang.String)>
Counter value: 1
SCC 10264 : 1
<java.time.Instant: void <init>(long,int)>
Counter value: 1
SCC 10265 : 1
<java.lang.System: java.lang.String lineSeparator()>
Counter value: 1
SCC 10266 : 1
<java.util.Formatter$FormatSpecifier: int index()>
Counter value: 1
SCC 10267 : 1
<java.util.Formatter: java.lang.Appendable access$000(java.util.Formatter)>
Counter value: 1
SCC 10268 : 1
<java.util.Formatter$FixedString: int index()>
Counter value: 1
SCC 10269 : 1
<java.util.regex.Matcher: int end()>
Counter value: 1
SCC 10270 : 1
<java.util.regex.Matcher: int start()>
Counter value: 1
SCC 10271 : 1
<java.util.IllegalFormatFlagsException: void <init>(java.lang.String)>
Counter value: 1
SCC 10272 : 1
<java.util.FormatFlagsConversionMismatchException: void <init>(java.lang.String,char)>
Counter value: 1
SCC 10273 : 1
<java.util.MissingFormatWidthException: void <init>(java.lang.String)>
Counter value: 1
SCC 10274 : 1
<java.util.Formatter$DateTime: boolean isValid(char)>
Counter value: 1
SCC 10275 : 1
<java.util.Formatter$Conversion: boolean isValid(char)>
Counter value: 1
SCC 10276 : 1
<java.lang.CharacterDataLatin1: boolean isOtherUppercase(int)>
Counter value: 1
SCC 10277 : 1
<java.lang.CharacterData00: boolean isOtherUppercase(int)>
Counter value: 1
SCC 10278 : 1
<java.lang.CharacterData01: boolean isOtherUppercase(int)>
Counter value: 1
SCC 10279 : 1
<java.lang.CharacterData02: boolean isOtherUppercase(int)>
Counter value: 1
SCC 10280 : 1
<java.lang.CharacterData0E: boolean isOtherUppercase(int)>
Counter value: 1
SCC 10281 : 1
<java.lang.CharacterData: boolean isOtherUppercase(int)>
Counter value: 1
SCC 10282 : 1
<java.util.IllegalFormatPrecisionException: void <init>(int)>
Counter value: 1
SCC 10283 : 1
<java.util.IllegalFormatWidthException: void <init>(int)>
Counter value: 1
SCC 10284 : 1
<java.util.DuplicateFormatFlagsException: void <init>(java.lang.String)>
Counter value: 1
SCC 10285 : 1
<java.util.UnknownFormatFlagsException: void <init>(java.lang.String)>
Counter value: 1
SCC 10286 : 1
<java.util.Formatter$Flags: java.util.Formatter$Flags access$100(java.util.Formatter$Flags,java.util.Formatter$Flags)>
Counter value: 1
SCC 10287 : 1
<java.util.Formatter$Flags: java.util.Formatter$Flags add(java.util.Formatter$Flags)>
Counter value: 1
SCC 10288 : 1
<java.util.Formatter$Conversion: boolean isGeneral(char)>
Counter value: 1
SCC 10289 : 1
<java.util.Formatter$Conversion: boolean isCharacter(char)>
Counter value: 1
SCC 10290 : 1
<java.util.Formatter$Conversion: boolean isInteger(char)>
Counter value: 1
SCC 10291 : 1
<java.util.Formatter$Conversion: boolean isFloat(char)>
Counter value: 1
SCC 10292 : 1
<java.util.Formatter$Conversion: boolean isText(char)>
Counter value: 1
SCC 10293 : 1
<java.util.Formatter$FixedString: void <init>(java.util.Formatter,java.lang.String)>
Counter value: 1
SCC 10294 : 1
<java.util.UnknownFormatConversionException: void <init>(java.lang.String)>
Counter value: 1
SCC 10295 : 1
<java.util.Formatter: void ensureOpen()>
Counter value: 1
SCC 10296 : 1
<java.util.FormatterClosedException: void <init>()>
Counter value: 1
SCC 10297 : 1
<java.util.MissingFormatArgumentException: void <init>(java.lang.String)>
Counter value: 1
SCC 10298 : 1
<java.util.IllegalFormatException: void <init>()>
Counter value: 1
SCC 10299 : 1
<java.text.DecimalFormatSymbols: char getZeroDigit()>
Counter value: 1
SCC 10300 : 1
<java.util.Currency: java.lang.String getCurrencyCode()>
Counter value: 1
SCC 10301 : 1
<java.util.Currency$CurrencyNameGetter: java.util.Currency$CurrencyNameGetter access$500()>
Counter value: 1
SCC 10302 : 1
<sun.util.locale.LocaleUtils: boolean isEmpty(java.util.List)>
Counter value: 1
SCC 10303 : 1
<sun.util.locale.UnicodeLocaleExtension: boolean isSingletonChar(char)>
Counter value: 1
SCC 10304 : 1
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder clear()>
Counter value: 1
SCC 10305 : 1
<sun.util.locale.LanguageTag: java.util.List getExtlangs()>
Counter value: 1
SCC 10306 : 1
<sun.util.locale.ParseStatus: void <init>()>
Counter value: 1
SCC 10307 : 1
<sun.util.locale.ParseStatus: void reset()>
Counter value: 1
SCC 10308 : 1
<sun.util.locale.StringTokenIterator: int currentEnd()>
Counter value: 1
SCC 10309 : 1
<sun.util.locale.ParseStatus: boolean isError()>
Counter value: 1
SCC 10310 : 1
<sun.util.locale.LanguageTag: java.lang.String getPrivateuse()>
Counter value: 1
SCC 10311 : 1
<sun.util.locale.LanguageTag: java.util.List getExtensions()>
Counter value: 1
SCC 10312 : 1
<sun.util.locale.LanguageTag: java.util.List getVariants()>
Counter value: 1
SCC 10313 : 1
<sun.util.locale.LanguageTag: java.lang.String getRegion()>
Counter value: 1
SCC 10314 : 1
<sun.util.locale.LanguageTag: java.lang.String getScript()>
Counter value: 1
SCC 10315 : 1
<sun.util.locale.LanguageTag: java.lang.String getLanguage()>
Counter value: 1
SCC 10316 : 1
<sun.util.locale.UnicodeLocaleExtension: java.lang.String getValue()>
Counter value: 1
SCC 10317 : 1
<sun.util.locale.Extension: java.lang.String getValue()>
Counter value: 1
SCC 10318 : 1
<sun.util.locale.LocaleExtensions: java.util.Set getKeys()>
Counter value: 1
SCC 10319 : 1
<java.util.Collections$EmptyMap: java.util.Set keySet()>
Counter value: 1
SCC 10320 : 1
<java.util.TreeMap: java.util.Set keySet()>
Counter value: 1
SCC 10321 : 1
<java.util.Collections$SingletonMap: boolean isEmpty()>
Counter value: 1
SCC 10322 : 1
<java.util.Collections$SingletonMap: java.util.Set keySet()>
Counter value: 1
SCC 10323 : 1
<java.util.Collections: java.util.Set singleton(java.lang.Object)>
Counter value: 1
SCC 10324 : 1
<java.util.Collections$SingletonSet: void <init>(java.lang.Object)>
Counter value: 1
SCC 10325 : 1
<sun.util.locale.LanguageTag: void <init>()>
Counter value: 1
SCC 10326 : 1
<sun.util.locale.LocaleUtils: char toUpper(char)>
Counter value: 1
SCC 10327 : 1
<sun.util.locale.LocaleUtils: boolean isLower(char)>
Counter value: 1
SCC 10328 : 1
<java.util.Collections$EmptySet: boolean contains(java.lang.Object)>
Counter value: 1
SCC 10329 : 1
<sun.util.locale.provider.CalendarProviderImpl: boolean isSupportedLocale(java.util.Locale)>
Counter value: 1
SCC 10330 : 1
<java.util.ServiceLoader$LazyIterator$1: void <init>(java.util.ServiceLoader$LazyIterator)>
Counter value: 1
SCC 10331 : 1
<java.util.LinkedList: java.lang.Object peek()>
Counter value: 1
SCC 10332 : 1
<java.util.LinkedList: java.lang.Object remove()>
Counter value: 1
SCC 10333 : 1
<java.util.LinkedList: java.lang.Object removeFirst()>
Counter value: 1
SCC 10334 : 1
<java.util.LinkedList: java.lang.Object unlinkFirst(java.util.LinkedList$Node)>
Counter value: 1
SCC 10335 : 1
<sun.misc.URLClassPath$JarLoader$2: java.net.URL getURL()>
Counter value: 1
SCC 10336 : 1
<sun.misc.URLClassPath$FileLoader$1: java.net.URL getURL()>
Counter value: 1
SCC 10337 : 1
<java.net.URLClassLoader$2$1: void <init>(java.net.URLClassLoader$2)>
Counter value: 1
SCC 10338 : 1
<java.net.URLClassLoader: java.security.AccessControlContext access$200(java.net.URLClassLoader)>
Counter value: 1
SCC 10339 : 1
<java.util.Stack: boolean empty()>
Counter value: 1
SCC 10340 : 1
<java.util.EmptyStackException: void <init>()>
Counter value: 1
SCC 10341 : 1
<sun.misc.ExtensionDependency: void <init>()>
Counter value: 1
SCC 10342 : 1
<sun.misc.Launcher: java.lang.ClassLoader getClassLoader()>
Counter value: 1
SCC 10343 : 1
<sun.misc.JarFilter: void <init>()>
Counter value: 1
SCC 10344 : 1
<sun.misc.ExtensionDependency$3: void <init>(sun.misc.ExtensionDependency)>
Counter value: 1
SCC 10345 : 1
<sun.misc.ExtensionDependency$4: void <init>(sun.misc.ExtensionDependency,java.io.File)>
Counter value: 1
SCC 10346 : 1
<sun.misc.Launcher$Factory: void <init>(sun.misc.Launcher$1)>
Counter value: 1
SCC 10347 : 1
<sun.misc.Launcher$Factory: void <init>()>
Counter value: 1
SCC 10348 : 1
<java.net.URLClassLoader$SharedClassMetaData: java.util.jar.Manifest getManifest()>
Counter value: 1
SCC 10349 : 1
<java.net.URLClassLoader$SharedClassMetaData: java.security.CodeSource getCodeSource()>
Counter value: 1
SCC 10350 : 1
<com.ibm.oti.shared.SharedClassAbstractHelper: com.ibm.oti.shared.SharedClassFilter getSharingFilter()>
Counter value: 1
SCC 10351 : 1
<java.net.URLClassLoader$SharedClassIndexHolder: void setIndex(int)>
Counter value: 1
SCC 10352 : 1
<java.net.URLClassLoader$SharedClassIndexHolder: void <init>(java.net.URLClassLoader,java.net.URLClassLoader$1)>
Counter value: 1
SCC 10353 : 1
<java.net.URLClassLoader$SharedClassIndexHolder: void <init>(java.net.URLClassLoader)>
Counter value: 1
SCC 10354 : 1
<java.net.URLClassLoader$ClassFinder: void <init>(java.net.URLClassLoader,java.lang.String,java.lang.ClassLoader)>
Counter value: 1
SCC 10355 : 1
<java.lang.ClassNotFoundException: void <init>(java.lang.String)>
Counter value: 1
SCC 10356 : 1
<java.lang.ClassLoader: void resolveClass(java.lang.Class)>
Counter value: 1
SCC 10357 : 1
<java.lang.ClassLoader$ClassNameBasedLock: void <init>()>
Counter value: 1
SCC 10358 : 1
<com.ibm.oti.vm.BootstrapClassLoader: java.lang.Class loadClass(java.lang.String)>
Counter value: 1
SCC 10359 : 1
<java.lang.VMAccess: java.lang.Class findClassOrNullHelper(java.lang.String,java.lang.ClassLoader)>
Counter value: 1
SCC 10360 : 1
<java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread: void setContextClassLoader(java.lang.ClassLoader)>
Counter value: 1
SCC 10361 : 1
<sun.misc.InnocuousThread: void setContextClassLoader(java.lang.ClassLoader)>
Counter value: 1
SCC 10362 : 1
<java.util.Vector: void copyInto(java.lang.Object[])>
Counter value: 1
SCC 10363 : 1
<sun.misc.Launcher$ExtClassLoader$1: void <init>()>
Counter value: 1
SCC 10364 : 1
<java.net.URLClassLoader$SharedClassMetaDataCache: void <init>(java.net.URLClassLoader,int)>
Counter value: 1
SCC 10365 : 1
<com.ibm.oti.shared.HelperAlreadyDefinedException: void <init>(java.lang.String)>
Counter value: 1
SCC 10366 : 1
<com.ibm.oti.shared.SharedClassAbstractHelper: void initializeShareableClassloader(java.lang.ClassLoader)>
Counter value: 1
SCC 10367 : 1
<com.ibm.oti.shared.SharedClassAbstractHelper: void <init>()>
Counter value: 1
SCC 10368 : 1
<com.ibm.oti.shared.SharedAbstractHelper: void <init>()>
Counter value: 1
SCC 10369 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>
Counter value: 1
SCC 10370 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>(boolean)>
Counter value: 1
SCC 10371 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$FairSync: void <init>()>
Counter value: 1
SCC 10372 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync: void <init>()>
Counter value: 1
SCC 10373 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: void <init>()>
Counter value: 1
SCC 10374 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void <init>()>
Counter value: 1
SCC 10375 : 1
<java.util.concurrent.locks.AbstractOwnableSynchronizer: void <init>()>
Counter value: 1
SCC 10376 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter: void <init>()>
Counter value: 1
SCC 10377 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void <init>(java.util.concurrent.locks.ReentrantReadWriteLock)>
Counter value: 1
SCC 10378 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void <init>(java.util.concurrent.locks.ReentrantReadWriteLock)>
Counter value: 1
SCC 10379 : 1
<com.ibm.oti.shared.SharedAbstractHelperFactory: int getNewID()>
Counter value: 1
SCC 10380 : 1
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
Counter value: 1
SCC 10381 : 1
<java.lang.VMAccess: java.util.Properties internalGetProperties()>
Counter value: 1
SCC 10382 : 1
<java.lang.System: java.util.Properties internalGetProperties()>
Counter value: 1
SCC 10383 : 1
<com.ibm.oti.shared.Shared: com.ibm.oti.shared.SharedClassHelperFactory getSharedClassHelperFactory()>
Counter value: 1
SCC 10384 : 1
<com.ibm.oti.shared.SharedClassHelperFactoryImpl: void <init>()>
Counter value: 1
SCC 10385 : 1
<com.ibm.oti.shared.SharedAbstractHelperFactory: void <init>()>
Counter value: 1
SCC 10386 : 1
<com.ibm.oti.shared.SharedAbstractHelperFactory: void <clinit>()>
Counter value: 1
SCC 10387 : 1
<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
Counter value: 1
SCC 10388 : 1
<com.ibm.oti.shared.Shared: boolean isSharingEnabled()>
Counter value: 1
SCC 10389 : 1
<com.ibm.oti.shared.Shared: void <clinit>()>
Counter value: 1
SCC 10390 : 1
<com.ibm.oti.shared.Shared$Monitor: void <init>()>
Counter value: 1
SCC 10391 : 1
<sun.misc.Launcher$AppClassLoader$1: void <init>(java.lang.String,java.io.File[],java.lang.ClassLoader)>
Counter value: 1
SCC 10392 : 1
<java.lang.Class: java.security.ProtectionDomain getPDImpl()>
Counter value: 1
SCC 10393 : 1
<java.lang.System$1: void <init>(java.lang.SecurityManager,java.lang.SecurityManager)>
Counter value: 1
SCC 10394 : 1
<sun.misc.ExtensionDependency$1: void <init>(sun.misc.ExtensionDependency,java.io.File)>
Counter value: 1
SCC 10395 : 1
<java.text.DecimalFormat: void addAffixes(char[],char[],char[])>
Counter value: 1
SCC 10396 : 1
<java.text.DecimalFormat: void appendSuffix(char[],int,char[])>
Counter value: 1
SCC 10397 : 1
<java.text.DecimalFormat: void prependPrefix(char[],int,char[])>
Counter value: 1
SCC 10398 : 1
<java.text.DecimalFormat: void localizeDigits(char[])>
Counter value: 1
SCC 10399 : 1
<java.text.DecimalFormat: void collectIntegralDigits(int,char[],int)>
Counter value: 1
SCC 10400 : 1
<java.text.DecimalFormat: void collectFractionalDigits(int,char[],int)>
Counter value: 1
SCC 10401 : 1
<java.text.DecimalFormat$FastPathData: void <init>(java.text.DecimalFormat$1)>
Counter value: 1
SCC 10402 : 1
<java.text.DecimalFormat$FastPathData: void <init>()>
Counter value: 1
SCC 10403 : 1
<java.lang.Math: double abs(double)>
Counter value: 1
SCC 10404 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasQueuedThreads()>
Counter value: 1
SCC 10405 : 1
<java.lang.ThreadGroup: int getMaxPriority()>
Counter value: 1
SCC 10406 : 1
<sun.security.util.BitArray: int subscript(int)>
Counter value: 1
SCC 10407 : 1
<sun.security.util.BitArray: int position(int)>
Counter value: 1
SCC 10408 : 1
<sun.security.util.BitArray: void <clinit>()>
Counter value: 1
SCC 10409 : 1
<java.time.ZoneOffset: java.lang.String toString()>
Counter value: 1
SCC 10410 : 1
<java.time.temporal.IsoFields$Field$4: java.lang.String toString()>
Counter value: 1
SCC 10411 : 1
<java.time.temporal.IsoFields$Field$3: java.lang.String toString()>
Counter value: 1
SCC 10412 : 1
<sun.security.x509.CRLExtensions: java.util.Collection getAllExtensions()>
Counter value: 1
SCC 10413 : 1
<sun.security.x509.Extension: byte[] getExtensionValue()>
Counter value: 1
SCC 10414 : 1
<sun.security.x509.Extension: sun.security.util.ObjectIdentifier getExtensionId()>
Counter value: 1
SCC 10415 : 1
<sun.security.x509.AlgorithmId: sun.security.util.ObjectIdentifier getOID()>
Counter value: 1
SCC 10416 : 1
<sun.util.calendar.CalendarDate: boolean isDaylightTime()>
Counter value: 1
SCC 10417 : 1
<java.util.Collections$EmptySet: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 10418 : 1
<java.util.Collections$EmptyList: java.lang.Object[] toArray(java.lang.Object[])>
Counter value: 1
SCC 10419 : 1
<sun.security.x509.CertificateExtensions: java.util.Collection getAllExtensions()>
Counter value: 1
SCC 10420 : 1
<java.util.Collections$SynchronizedMap: java.util.Collection values()>
Counter value: 1
SCC 10421 : 1
<java.util.WeakHashMap: java.util.Collection values()>
Counter value: 1
SCC 10422 : 1
<java.util.WeakHashMap$Values: void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1)>
Counter value: 1
SCC 10423 : 1
<java.util.WeakHashMap$Values: void <init>(java.util.WeakHashMap)>
Counter value: 1
SCC 10424 : 1
<java.security.Provider: java.util.Collection values()>
Counter value: 1
SCC 10425 : 1
<java.util.Hashtable: java.util.Collection values()>
Counter value: 1
SCC 10426 : 1
<java.util.Hashtable$ValueCollection: void <init>(java.util.Hashtable,java.util.Hashtable$1)>
Counter value: 1
SCC 10427 : 1
<java.util.Hashtable$ValueCollection: void <init>(java.util.Hashtable)>
Counter value: 1
SCC 10428 : 1
<java.util.Collections: java.util.Collection synchronizedCollection(java.util.Collection,java.lang.Object)>
Counter value: 1
SCC 10429 : 1
<java.util.TreeMap: java.util.Collection values()>
Counter value: 1
SCC 10430 : 1
<java.util.TreeMap$Values: void <init>(java.util.TreeMap)>
Counter value: 1
SCC 10431 : 1
<java.util.Collections$EmptyMap: java.util.Collection values()>
Counter value: 1
SCC 10432 : 1
<java.security.cert.CRLReason: void <clinit>()>
Counter value: 1
SCC 10433 : 1
<java.security.cert.CRLReason: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10434 : 1
<java.security.cert.CertificateException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 10435 : 1
<sun.security.x509.OIDMap$OIDInfo: void <init>(java.lang.String,sun.security.util.ObjectIdentifier,java.lang.String)>
Counter value: 1
SCC 10436 : 1
<java.security.AlgorithmParameters: java.lang.String toString()>
Counter value: 1
SCC 10437 : 1
<sun.security.util.DerValue: int length()>
Counter value: 1
SCC 10438 : 1
<sun.security.util.DerInputStream: int available()>
Counter value: 1
SCC 10439 : 1
<sun.security.util.DerInputStream: int getByte()>
Counter value: 1
SCC 10440 : 1
<sun.security.util.ObjectIdentifier: void check(byte[])>
Counter value: 1
SCC 10441 : 1
<java.security.AlgorithmParameters: void init(byte[])>
Counter value: 1
SCC 10442 : 1
<java.security.AlgorithmParameters: void <init>(java.security.AlgorithmParametersSpi,java.security.Provider,java.lang.String)>
Counter value: 1
SCC 10443 : 1
<java.util.Formatter$Flags: java.util.Formatter$Flags remove(java.util.Formatter$Flags)>
Counter value: 1
SCC 10444 : 1
<java.util.Formatter$Flags: java.util.Formatter$Flags dup()>
Counter value: 1
SCC 10445 : 1
<java.util.Formatter$Flags: boolean contains(java.util.Formatter$Flags)>
Counter value: 1
SCC 10446 : 1
<java.util.Formatter$Flags: int valueOf()>
Counter value: 1
SCC 10447 : 1
<java.util.Formatter$Flags: void <clinit>()>
Counter value: 1
SCC 10448 : 1
<java.util.Formatter$Flags: void <init>(int)>
Counter value: 1
SCC 10449 : 1
<java.util.Formatter$FixedString: java.lang.String toString()>
Counter value: 1
SCC 10450 : 1
<java.security.Provider$UString: java.lang.String toString()>
Counter value: 1
SCC 10451 : 1
<java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()>
Counter value: 1
SCC 10452 : 1
<sun.security.provider.PolicyFile: boolean checkForTrustedIdentity(java.security.cert.Certificate,sun.security.provider.PolicyFile$PolicyInfo)>
Counter value: 1
SCC 10453 : 1
<sun.security.provider.PolicyFile$PolicyEntry: java.util.List getPrincipals()>
Counter value: 1
SCC 10454 : 1
<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfActions()>
Counter value: 1
SCC 10455 : 1
<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfName()>
Counter value: 1
SCC 10456 : 1
<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getSelfType()>
Counter value: 1
SCC 10457 : 1
<java.net.Inet6Address: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10458 : 1
<java.net.Inet6Address$Inet6AddressHolder: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10459 : 1
<java.net.Inet4Address: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10460 : 1
<java.net.Inet4Address: byte[] getAddress()>
Counter value: 1
SCC 10461 : 1
<java.util.Optional: java.lang.Object orElse(java.lang.Object)>
Counter value: 1
SCC 10462 : 1
<java.util.Optional: java.util.Optional map(java.util.function.Function)>
Counter value: 1
SCC 10463 : 1
<java.net.SocketPermission$name__16: java.lang.Object apply(java.lang.Object)>
Counter value: 1
SCC 10464 : 1
<java.util.Optional: boolean isPresent()>
Counter value: 1
SCC 10465 : 1
<java.net.SocketPermission$name__15: java.lang.Object apply(java.lang.Object)>
Counter value: 1
SCC 10466 : 1
<sun.net.RegisteredDomain$1: java.lang.String name()>
Counter value: 1
SCC 10467 : 1
<java.net.SocketPermission$name__16: java.util.function.Function bootstrap$()>
Counter value: 1
SCC 10468 : 1
<java.net.SocketPermission$name__16: void <init>()>
Counter value: 1
SCC 10469 : 1
<java.net.SocketPermission$name__15: java.util.function.Function bootstrap$()>
Counter value: 1
SCC 10470 : 1
<java.net.SocketPermission$name__15: void <init>()>
Counter value: 1
SCC 10471 : 1
<sun.net.RegisteredDomain$1: void <init>(java.lang.String)>
Counter value: 1
SCC 10472 : 1
<java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
Counter value: 1
SCC 10473 : 1
<java.util.Optional: java.util.Optional empty()>
Counter value: 1
SCC 10474 : 1
<java.util.Optional: java.util.Optional of(java.lang.Object)>
Counter value: 1
SCC 10475 : 1
<java.util.Optional: void <init>(java.lang.Object)>
Counter value: 1
SCC 10476 : 1
<java.util.Optional: void <clinit>()>
Counter value: 1
SCC 10477 : 1
<java.util.Optional: void <init>()>
Counter value: 1
SCC 10478 : 1
<java.net.SocketPermission: boolean includesEphemerals()>
Counter value: 1
SCC 10479 : 1
<sun.security.provider.PolicyFile$PolicyEntry: java.security.CodeSource getCodeSource()>
Counter value: 1
SCC 10480 : 1
<sun.security.provider.PolicyFile$7: void <init>(sun.security.provider.PolicyFile,sun.security.provider.PolicyFile$PolicyEntry,java.security.CodeSource)>
Counter value: 1
SCC 10481 : 1
<java.util.JumboEnumSet: int size()>
Counter value: 1
SCC 10482 : 1
<java.lang.Long: int bitCount(long)>
Counter value: 1
SCC 10483 : 1
<java.util.concurrent.ConcurrentHashMap$CollectionView: int size()>
Counter value: 1
SCC 10484 : 1
<java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>
Counter value: 1
SCC 10485 : 1
<java.util.Collections$SynchronizedSet: void <init>(java.util.Set)>
Counter value: 1
SCC 10486 : 1
<java.security.ProtectionDomain: java.lang.ClassLoader getClassLoader()>
Counter value: 1
SCC 10487 : 1
<sun.security.provider.PolicyFile$5: void <init>(sun.security.provider.PolicyFile,java.security.CodeSource)>
Counter value: 1
SCC 10488 : 1
<java.security.ProtectionDomain$1: void <init>(java.security.ProtectionDomain)>
Counter value: 1
SCC 10489 : 1
<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>
Counter value: 1
SCC 10490 : 1
<java.security.Policy$1: void <init>()>
Counter value: 1
SCC 10491 : 1
<java.nio.charset.CharsetEncoder: float averageBytesPerChar()>
Counter value: 1
SCC 10492 : 1
<java.nio.HeapByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>
Counter value: 1
SCC 10493 : 1
<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>
Counter value: 1
SCC 10494 : 1
<java.nio.HeapByteBuffer: boolean isReadOnly()>
Counter value: 1
SCC 10495 : 1
<java.nio.HeapByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
Counter value: 1
SCC 10496 : 1
<java.nio.HeapByteBuffer: boolean isDirect()>
Counter value: 1
SCC 10497 : 1
<sun.security.provider.PolicyFile: boolean access$200(sun.security.provider.PolicyFile)>
Counter value: 1
SCC 10498 : 1
<sun.security.provider.PolicyFile$3: void <init>(sun.security.provider.PolicyFile,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo,java.lang.String)>
Counter value: 1
SCC 10499 : 1
<sun.security.provider.PolicyParser$ParsingException: java.lang.String getLocalizedMessage()>
Counter value: 1
SCC 10500 : 1
<sun.security.provider.PolicyParser$GrantEntry: java.util.Enumeration permissionElements()>
Counter value: 1
SCC 10501 : 1
<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>
Counter value: 1
SCC 10502 : 1
<java.security.KeyStoreException: void <init>(java.lang.String)>
Counter value: 1
SCC 10503 : 1
<sun.security.x509.CertificateVersion: int getVersion()>
Counter value: 1
SCC 10504 : 1
<sun.security.x509.X509AttributeName: java.lang.String getSuffix()>
Counter value: 1
SCC 10505 : 1
<sun.security.x509.X509AttributeName: java.lang.String getPrefix()>
Counter value: 1
SCC 10506 : 1
<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>
Counter value: 1
SCC 10507 : 1
<sun.security.provider.PolicyParser: java.util.Enumeration grantElements()>
Counter value: 1
SCC 10508 : 1
<sun.security.provider.PolicyParser: java.lang.String getKeyStoreProvider()>
Counter value: 1
SCC 10509 : 1
<sun.security.provider.PolicyParser: java.lang.String getKeyStoreType()>
Counter value: 1
SCC 10510 : 1
<java.io.StreamTokenizer: void resetSyntax()>
Counter value: 1
SCC 10511 : 1
<java.io.StreamTokenizer: void lowerCaseMode(boolean)>
Counter value: 1
SCC 10512 : 1
<java.io.StreamTokenizer: void ordinaryChar(int)>
Counter value: 1
SCC 10513 : 1
<java.io.StreamTokenizer: void slashSlashComments(boolean)>
Counter value: 1
SCC 10514 : 1
<java.io.StreamTokenizer: void slashStarComments(boolean)>
Counter value: 1
SCC 10515 : 1
<sun.security.provider.PolicyParser$DomainEntry: java.lang.String getName()>
Counter value: 1
SCC 10516 : 1
<sun.security.provider.PolicyParser$DomainEntry: void <init>(java.lang.String,java.util.Map)>
Counter value: 1
SCC 10517 : 1
<sun.security.provider.PolicyParser$KeyStoreEntry: java.lang.String getName()>
Counter value: 1
SCC 10518 : 1
<sun.security.provider.PolicyParser$KeyStoreEntry: void <init>(java.lang.String,java.util.Map)>
Counter value: 1
SCC 10519 : 1
<sun.security.provider.PolicyParser$PermissionEntry: void <init>()>
Counter value: 1
SCC 10520 : 1
<java.io.StreamTokenizer: int lineno()>
Counter value: 1
SCC 10521 : 1
<java.util.Collections$EmptySet: java.lang.Object[] toArray()>
Counter value: 1
SCC 10522 : 1
<java.io.StringReader: void reset()>
Counter value: 1
SCC 10523 : 1
<java.io.StringReader: void mark(int)>
Counter value: 1
SCC 10524 : 1
<java.io.StringReader: boolean markSupported()>
Counter value: 1
SCC 10525 : 1
<sun.security.util.DerInputStream: void mark(int)>
Counter value: 1
SCC 10526 : 1
<java.io.StringReader: void ensureOpen()>
Counter value: 1
SCC 10527 : 1
<sun.security.util.DerInputBuffer: void <init>(byte[],boolean)>
Counter value: 1
SCC 10528 : 1
<sun.security.util.DerInputStream: void <init>(sun.security.util.DerInputBuffer)>
Counter value: 1
SCC 10529 : 1
<java.io.ByteArrayInputStream: void mark(int)>
Counter value: 1
SCC 10530 : 1
<sun.security.util.DerIndefLenConverter: void <init>()>
Counter value: 1
SCC 10531 : 1
<sun.security.util.DerIndefLenConverter: void writeValue(int)>
Counter value: 1
SCC 10532 : 1
<sun.security.util.DerIndefLenConverter: void writeLength(int)>
Counter value: 1
SCC 10533 : 1
<sun.security.util.DerIndefLenConverter: void writeTag()>
Counter value: 1
SCC 10534 : 1
<sun.security.util.DerIndefLenConverter: boolean isIndefinite(int)>
Counter value: 1
SCC 10535 : 1
<sun.security.util.DerIndefLenConverter: boolean isLongForm(int)>
Counter value: 1
SCC 10536 : 1
<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)>
Counter value: 1
SCC 10537 : 1
<sun.security.util.DerIndefLenConverter: boolean isEOC(byte[],int)>
Counter value: 1
SCC 10538 : 1
<sun.misc.IOUtils: int readNBytes(java.io.InputStream,byte[],int,int)>
Counter value: 1
SCC 10539 : 1
<sun.security.util.DerIndefLenConverter: void <clinit>()>
Counter value: 1
SCC 10540 : 1
<sun.security.x509.AVA: boolean isTerminator(int,int)>
Counter value: 1
SCC 10541 : 1
<java.io.Reader: void <init>()>
Counter value: 1
SCC 10542 : 1
<java.util.ArrayList$ListItr: java.lang.Object previous()>
Counter value: 1
SCC 10543 : 1
<java.util.ArrayList: java.util.ListIterator listIterator()>
Counter value: 1
SCC 10544 : 1
<java.io.StreamTokenizer: void <init>(java.io.Reader)>
Counter value: 1
SCC 10545 : 1
<java.io.StreamTokenizer: void <init>()>
Counter value: 1
SCC 10546 : 1
<java.io.StreamTokenizer: void parseNumbers()>
Counter value: 1
SCC 10547 : 1
<java.io.StreamTokenizer: void quoteChar(int)>
Counter value: 1
SCC 10548 : 1
<java.io.StreamTokenizer: void commentChar(int)>
Counter value: 1
SCC 10549 : 1
<java.io.StreamTokenizer: void whitespaceChars(int,int)>
Counter value: 1
SCC 10550 : 1
<java.io.StreamTokenizer: void wordChars(int,int)>
Counter value: 1
SCC 10551 : 1
<sun.security.provider.PolicyParser$ParsingException: void <init>(java.lang.String)>
Counter value: 1
SCC 10552 : 1
<java.security.KeyStore: void load(java.io.InputStream,char[])>
Counter value: 1
SCC 10553 : 1
<java.security.KeyStore$1: void <init>()>
Counter value: 1
SCC 10554 : 1
<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 10555 : 1
<java.io.PushbackInputStream: void <init>(java.io.InputStream)>
Counter value: 1
SCC 10556 : 1
<java.io.PushbackInputStream: void unread(int)>
Counter value: 1
SCC 10557 : 1
<java.util.Arrays: void fill(byte[],byte)>
Counter value: 1
SCC 10558 : 1
<java.util.Arrays: void fill(char[],char)>
Counter value: 1
SCC 10559 : 1
<sun.security.util.ResourcesMgr$1: void <init>()>
Counter value: 1
SCC 10560 : 1
<sun.security.provider.PolicyFile$PolicyEntry: void <init>(java.security.CodeSource)>
Counter value: 1
SCC 10561 : 1
<sun.security.provider.PolicyFile$PolicyEntry: void <init>(java.security.CodeSource,java.util.List)>
Counter value: 1
SCC 10562 : 1
<sun.security.provider.PolicyFile$4: void <init>(sun.security.provider.PolicyFile,sun.security.provider.PolicyFile$PolicyInfo)>
Counter value: 1
SCC 10563 : 1
<sun.security.provider.PolicyFile$2: void <init>(sun.security.provider.PolicyFile,java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>
Counter value: 1
SCC 10564 : 1
<sun.security.provider.PolicyFile: boolean access$002(sun.security.provider.PolicyFile,boolean)>
Counter value: 1
SCC 10565 : 1
<sun.security.provider.PolicyFile: boolean access$102(sun.security.provider.PolicyFile,boolean)>
Counter value: 1
SCC 10566 : 1
<sun.security.provider.PolicyFile: boolean access$202(sun.security.provider.PolicyFile,boolean)>
Counter value: 1
SCC 10567 : 1
<sun.security.provider.PolicyFile: boolean access$302(sun.security.provider.PolicyFile,boolean)>
Counter value: 1
SCC 10568 : 1
<sun.security.provider.PolicyFile$1: void <init>(sun.security.provider.PolicyFile)>
Counter value: 1
SCC 10569 : 1
<java.util.Collections: java.util.List synchronizedList(java.util.List)>
Counter value: 1
SCC 10570 : 1
<java.util.Collections$SynchronizedRandomAccessList: void <init>(java.util.List)>
Counter value: 1
SCC 10571 : 1
<java.util.Collections$SynchronizedList: void <init>(java.util.List)>
Counter value: 1
SCC 10572 : 1
<java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection)>
Counter value: 1
SCC 10573 : 1
<java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
Counter value: 1
SCC 10574 : 1
<java.util.Collections$SynchronizedMap: void <init>(java.util.Map)>
Counter value: 1
SCC 10575 : 1
<java.security.Policy: void <init>()>
Counter value: 1
SCC 10576 : 1
<java.security.Policy$2: void <init>(java.lang.String)>
Counter value: 1
SCC 10577 : 1
<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>
Counter value: 1
SCC 10578 : 1
<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>
Counter value: 1
SCC 10579 : 1
<java.security.Policy$PolicyInfo: void <init>(java.security.Policy,boolean)>
Counter value: 1
SCC 10580 : 1
<java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: java.lang.String toString()>
Counter value: 1
SCC 10581 : 1
<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>
Counter value: 1
SCC 10582 : 1
<java.time.format.TextStyle: void <clinit>()>
Counter value: 1
SCC 10583 : 1
<java.time.format.TextStyle: void <init>(java.lang.String,int,int,int)>
Counter value: 1
SCC 10584 : 1
<java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.lang.String toString()>
Counter value: 1
SCC 10585 : 1
<java.time.temporal.IsoFields$Field$2: java.lang.String toString()>
Counter value: 1
SCC 10586 : 1
<java.time.temporal.ChronoUnit: java.lang.String toString()>
Counter value: 1
SCC 10587 : 1
<java.time.temporal.ChronoField: java.lang.String toString()>
Counter value: 1
SCC 10588 : 1
<sun.misc.HexDumpEncoder: void <init>()>
Counter value: 1
SCC 10589 : 1
<sun.misc.CharacterEncoder: void <init>()>
Counter value: 1
SCC 10590 : 1
<sun.misc.CharacterEncoder: void encodeBufferSuffix(java.io.OutputStream)>
Counter value: 1
SCC 10591 : 1
<java.io.BufferedWriter: int min(int,int)>
Counter value: 1
SCC 10592 : 1
<sun.misc.HexDumpEncoder: int bytesPerAtom()>
Counter value: 1
SCC 10593 : 1
<java.io.FileOutputStream: void write(int)>
Counter value: 1
SCC 10594 : 1
<sun.misc.CharacterEncoder: int readFully(java.io.InputStream,byte[])>
Counter value: 1
SCC 10595 : 1
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>
Counter value: 1
SCC 10596 : 1
<java.io.PrintStream: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
Counter value: 1
SCC 10597 : 1
<sun.misc.HexDumpEncoder: int bytesPerLine()>
Counter value: 1
SCC 10598 : 1
<java.security.AllPermissionCollection$1: java.lang.Object nextElement()>
Counter value: 1
SCC 10599 : 1
<java.security.AllPermissionCollection$1: java.security.Permission nextElement()>
Counter value: 1
SCC 10600 : 1
<java.util.Collections$3: java.lang.Object nextElement()>
Counter value: 1
SCC 10601 : 1
<javax.crypto.CryptoPermissionCollection: java.util.Enumeration elements()>
Counter value: 1
SCC 10602 : 1
<com.ibm.oti.shared.SharedClassPermissionCollection: java.util.Enumeration elements()>
Counter value: 1
SCC 10603 : 1
<java.util.Hashtable: java.util.Enumeration elements()>
Counter value: 1
SCC 10604 : 1
<java.util.PropertyPermissionCollection: java.util.Enumeration elements()>
Counter value: 1
SCC 10605 : 1
<java.security.AllPermissionCollection: java.util.Enumeration elements()>
Counter value: 1
SCC 10606 : 1
<java.security.AllPermissionCollection$1: void <init>(java.security.AllPermissionCollection)>
Counter value: 1
SCC 10607 : 1
<java.security.AllPermissionCollection: boolean access$000(java.security.AllPermissionCollection)>
Counter value: 1
SCC 10608 : 1
<java.security.BasicPermissionCollection: java.util.Enumeration elements()>
Counter value: 1
SCC 10609 : 1
<java.net.SocketPermissionCollection: java.util.Enumeration elements()>
Counter value: 1
SCC 10610 : 1
<java.io.FilePermissionCollection: java.util.Enumeration elements()>
Counter value: 1
SCC 10611 : 1
<java.security.PermissionsHash: java.util.Enumeration elements()>
Counter value: 1
SCC 10612 : 1
<java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>
Counter value: 1
SCC 10613 : 1
<java.util.Collections$3: void <init>(java.util.Collection)>
Counter value: 1
SCC 10614 : 1
<java.security.AllPermissionCollection$1: boolean hasMoreElements()>
Counter value: 1
SCC 10615 : 1
<java.util.Collections$3: boolean hasMoreElements()>
Counter value: 1
SCC 10616 : 1
<java.util.WeakHashMap$Entry: java.lang.Object getValue()>
Counter value: 1
SCC 10617 : 1
<java.util.WeakHashMap$Entry: java.lang.Object getKey()>
Counter value: 1
SCC 10618 : 1
<java.util.WeakHashMap: java.lang.Object unmaskNull(java.lang.Object)>
Counter value: 1
SCC 10619 : 1
<sun.util.locale.LocaleExtensions: java.lang.String getID()>
Counter value: 1
SCC 10620 : 1
<java.lang.Character$Subset: java.lang.String toString()>
Counter value: 1
SCC 10621 : 1
<sun.util.locale.UnicodeLocaleExtension: java.lang.String toString()>
Counter value: 1
SCC 10622 : 1
<sun.util.locale.Extension: java.lang.String toString()>
Counter value: 1
SCC 10623 : 1
<sun.util.locale.UnicodeLocaleExtension: java.lang.String getID()>
Counter value: 1
SCC 10624 : 1
<sun.util.locale.Extension: java.lang.String getID()>
Counter value: 1
SCC 10625 : 1
<java.lang.Boolean: java.lang.String toString()>
Counter value: 1
SCC 10626 : 1
<java.util.regex.Pattern: java.lang.String toString()>
Counter value: 1
SCC 10627 : 1
<java.text.AttributedString$AttributedStringIterator: int getIndex()>
Counter value: 1
SCC 10628 : 1
<java.lang.Byte: double doubleValue()>
Counter value: 1
SCC 10629 : 1
<java.lang.Byte: long longValue()>
Counter value: 1
SCC 10630 : 1
<java.lang.Long: double doubleValue()>
Counter value: 1
SCC 10631 : 1
<java.lang.Integer: double doubleValue()>
Counter value: 1
SCC 10632 : 1
<java.lang.Integer: long longValue()>
Counter value: 1
SCC 10633 : 1
<java.math.BigDecimal: void <init>(int)>
Counter value: 1
SCC 10634 : 1
<java.math.BigDecimal$1: void <init>()>
Counter value: 1
SCC 10635 : 1
<java.math.BigDecimal: void <init>(java.math.BigInteger,long,int,int)>
Counter value: 1
SCC 10636 : 1
<java.text.DigitList: char[] getDataChars(int)>
Counter value: 1
SCC 10637 : 1
<java.text.DigitList: int parseInt(char[],int,int)>
Counter value: 1
SCC 10638 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: boolean isExceptional()>
Counter value: 1
SCC 10639 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: boolean decimalDigitsExact()>
Counter value: 1
SCC 10640 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: boolean digitsRoundedUp()>
Counter value: 1
SCC 10641 : 1
<sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer: boolean isExceptional()>
Counter value: 1
SCC 10642 : 1
<sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer: boolean decimalDigitsExact()>
Counter value: 1
SCC 10643 : 1
<sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer: boolean digitsRoundedUp()>
Counter value: 1
SCC 10644 : 1
<java.text.CharacterIteratorFieldDelegate: void <init>()>
Counter value: 1
SCC 10645 : 1
<java.text.AttributedString$AttributedStringIterator: int getRunLimit()>
Counter value: 1
SCC 10646 : 1
<java.text.AttributedString$AttributeMap: void <init>(java.text.AttributedString,int,int,int)>
Counter value: 1
SCC 10647 : 1
<java.text.AttributedString$AttributedStringIterator: int getEndIndex()>
Counter value: 1
SCC 10648 : 1
<java.text.AttributedString$AttributedStringIterator: int getBeginIndex()>
Counter value: 1
SCC 10649 : 1
<java.text.AttributedString$AttributedStringIterator: void updateRunInfo()>
Counter value: 1
SCC 10650 : 1
<java.text.DateFormat: java.util.Calendar getCalendar()>
Counter value: 1
SCC 10651 : 1
<sun.util.resources.LocaleData$SupplementaryResourceBundleControl: void <init>()>
Counter value: 1
SCC 10652 : 1
<sun.util.resources.LocaleData$LocaleDataResourceBundleControl: void <init>(sun.util.resources.LocaleData$1)>
Counter value: 1
SCC 10653 : 1
<sun.util.resources.LocaleData$2: void <init>(java.lang.String,java.util.Locale)>
Counter value: 1
SCC 10654 : 1
<java.lang.Double: double doubleValue()>
Counter value: 1
SCC 10655 : 1
<java.lang.Double: void <init>(double)>
Counter value: 1
SCC 10656 : 1
<sun.misc.FDBigInteger: void multAddMe(int,int)>
Counter value: 1
SCC 10657 : 1
<sun.misc.FDBigInteger: int 'cmp'(sun.misc.FDBigInteger)>
Counter value: 1
SCC 10658 : 1
<sun.misc.FDBigInteger: int checkZeroTail(int[],int)>
Counter value: 1
SCC 10659 : 1
<java.lang.Double: boolean isInfinite(double)>
Counter value: 1
SCC 10660 : 1
<sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer: double doubleValue()>
Counter value: 1
SCC 10661 : 1
<sun.misc.FloatingDecimal$ASCIIToBinaryBuffer: void <init>(boolean,int,char[],int)>
Counter value: 1
SCC 10662 : 1
<java.lang.Double: boolean isNaN(double)>
Counter value: 1
SCC 10663 : 1
<java.text.ChoiceFormat: double[] doubleArraySize(double[])>
Counter value: 1
SCC 10664 : 1
<java.text.FieldPosition: void <init>(int)>
Counter value: 1
SCC 10665 : 1
<java.lang.Character: int getNumericValue(int)>
Counter value: 1
SCC 10666 : 1
<java.lang.CharacterDataLatin1: int getNumericValue(int)>
Counter value: 1
SCC 10667 : 1
<java.lang.CharacterData00: int getNumericValue(int)>
Counter value: 1
SCC 10668 : 1
<java.lang.CharacterData01: int getNumericValue(int)>
Counter value: 1
SCC 10669 : 1
<java.lang.CharacterData02: int getNumericValue(int)>
Counter value: 1
SCC 10670 : 1
<java.lang.CharacterData0E: int getNumericValue(int)>
Counter value: 1
SCC 10671 : 1
<java.lang.CharacterDataPrivateUse: int getNumericValue(int)>
Counter value: 1
SCC 10672 : 1
<java.lang.CharacterDataUndefined: int getNumericValue(int)>
Counter value: 1
SCC 10673 : 1
<sun.misc.ExtensionDependency: void access$100(java.lang.String)>
Counter value: 1
SCC 10674 : 1
<sun.misc.ExtensionDependency: void access$200(sun.misc.ExtensionDependency,java.lang.Throwable)>
Counter value: 1
SCC 10675 : 1
<sun.misc.ExtensionDependency: void debugException(java.lang.Throwable)>
Counter value: 1
SCC 10676 : 1
<sun.misc.ExtensionDependency$2: void <init>(sun.misc.ExtensionDependency,java.lang.String[],java.lang.String)>
Counter value: 1
SCC 10677 : 1
<java.util.jar.Attributes$Name: java.lang.String toString()>
Counter value: 1
SCC 10678 : 1
<sun.misc.ExtensionDependency: void debug(java.lang.String)>
Counter value: 1
SCC 10679 : 1
<sun.misc.URLClassPath$Loader: java.net.URL[] getClassPath()>
Counter value: 1
SCC 10680 : 1
<sun.misc.URLClassPath$3: void <init>(sun.misc.URLClassPath,java.net.URL)>
Counter value: 1
SCC 10681 : 1
<sun.misc.URLClassPath: java.net.URLStreamHandler access$200(sun.misc.URLClassPath)>
Counter value: 1
SCC 10682 : 1
<sun.misc.URLClassPath: java.security.AccessControlContext access$300(sun.misc.URLClassPath)>
Counter value: 1
SCC 10683 : 1
<sun.misc.URLClassPath: boolean access$400(sun.misc.URLClassPath)>
Counter value: 1
SCC 10684 : 1
<sun.misc.URLClassPath$JarLoader$2: java.lang.Exception getDataError()>
Counter value: 1
SCC 10685 : 1
<sun.misc.Resource: java.lang.Exception getDataError()>
Counter value: 1
SCC 10686 : 1
<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 10687 : 1
<java.lang.ReflectiveOperationException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 10688 : 1
<sun.misc.Resource: void setClasspathLoadIndex(int)>
Counter value: 1
SCC 10689 : 1
<java.util.zip.ZipError: void <init>(java.lang.String)>
Counter value: 1
SCC 10690 : 1
<java.util.zip.ZipFile: boolean access$600(java.util.zip.ZipFile)>
Counter value: 1
SCC 10691 : 1
<java.util.zip.ZipFile: java.lang.String access$800(java.util.zip.ZipFile)>
Counter value: 1
SCC 10692 : 1
<java.util.zip.ZipFile: int access$300(java.util.zip.ZipFile)>
Counter value: 1
SCC 10693 : 1
<java.util.zip.ZipFile: void access$200(java.util.zip.ZipFile)>
Counter value: 1
SCC 10694 : 1
<sun.misc.URLClassPath$Loader: void <init>(java.net.URL)>
Counter value: 1
SCC 10695 : 1
<sun.misc.MetaIndex: java.util.Map getJarMap()>
Counter value: 1
SCC 10696 : 1
<sun.misc.MetaIndex: void <clinit>()>
Counter value: 1
SCC 10697 : 1
<sun.misc.URLClassPath$JarLoader: java.net.URLStreamHandler access$1500(sun.misc.URLClassPath$JarLoader)>
Counter value: 1
SCC 10698 : 1
<sun.misc.URLClassPath$JarLoader: java.security.AccessControlContext access$1600(sun.misc.URLClassPath$JarLoader)>
Counter value: 1
SCC 10699 : 1
<sun.misc.URLClassPath$JarLoader$3: void <init>(sun.misc.URLClassPath$JarLoader,java.net.URL)>
Counter value: 1
SCC 10700 : 1
<sun.misc.InvalidJarIndexException: void <init>(java.lang.String)>
Counter value: 1
SCC 10701 : 1
<sun.misc.URLClassPath$JarLoader$2: void <init>(sun.misc.URLClassPath$JarLoader,java.lang.String,java.net.URL,java.util.jar.JarEntry)>
Counter value: 1
SCC 10702 : 1
<sun.misc.JarIndex: java.lang.String[] getJarFiles()>
Counter value: 1
SCC 10703 : 1
<java.lang.IllegalAccessError: void <init>(java.lang.String)>
Counter value: 1
SCC 10704 : 1
<sun.misc.FileURLMapper: void <init>(java.net.URL)>
Counter value: 1
SCC 10705 : 1
<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile access$802(sun.misc.URLClassPath$JarLoader,java.util.jar.JarFile)>
Counter value: 1
SCC 10706 : 1
<sun.misc.URLClassPath$JarLoader: boolean access$1000(sun.misc.URLClassPath$JarLoader)>
Counter value: 1
SCC 10707 : 1
<sun.misc.URLClassPath$JarLoader: sun.misc.MetaIndex access$1200(sun.misc.URLClassPath$JarLoader)>
Counter value: 1
SCC 10708 : 1
<sun.misc.JarIndex: void <init>()>
Counter value: 1
SCC 10709 : 1
<sun.misc.URLClassPath$JarLoader: sun.misc.JarIndex access$1102(sun.misc.URLClassPath$JarLoader,sun.misc.JarIndex)>
Counter value: 1
SCC 10710 : 1
<sun.misc.URLClassPath$JarLoader: sun.misc.JarIndex access$1100(sun.misc.URLClassPath$JarLoader)>
Counter value: 1
SCC 10711 : 1
<sun.misc.URLClassPath$JarLoader: java.util.HashMap access$1300(sun.misc.URLClassPath$JarLoader)>
Counter value: 1
SCC 10712 : 1
<sun.misc.URLClassPath$JarLoader$1: void <init>(sun.misc.URLClassPath$JarLoader)>
Counter value: 1
SCC 10713 : 1
<sun.misc.URLClassPath$Loader$1: void <init>(sun.misc.URLClassPath$Loader,java.lang.String,java.net.URL,java.net.URLConnection)>
Counter value: 1
SCC 10714 : 1
<java.util.zip.ZipFile: boolean access$1500(java.util.zip.ZipFile)>
Counter value: 1
SCC 10715 : 1
<java.util.zip.ZipFile: boolean startsWithLocHeader()>
Counter value: 1
SCC 10716 : 1
<java.io.File: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10717 : 1
<java.io.UnixFileSystem: java.lang.String getDefaultParent()>
Counter value: 1
SCC 10718 : 1
<sun.misc.URLClassPath$FileLoader$1: void <init>(sun.misc.URLClassPath$FileLoader,java.lang.String,java.net.URL,java.io.File)>
Counter value: 1
SCC 10719 : 1
<sun.misc.Resource: void <init>()>
Counter value: 1
SCC 10720 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: boolean isHeldByCurrentThread()>
Counter value: 1
SCC 10721 : 1
<com.ibm.oti.shared.CannotSetClasspathException: void <init>(java.lang.String)>
Counter value: 1
SCC 10722 : 1
<sun.misc.URLClassPath: boolean usingSharedClasses()>
Counter value: 1
SCC 10723 : 1
<java.net.URLClassLoader: sun.misc.URLClassPath access$100(java.net.URLClassLoader)>
Counter value: 1
SCC 10724 : 1
<java.util.Vector$1: java.lang.Object nextElement()>
Counter value: 1
SCC 10725 : 1
<java.util.Vector$1: boolean hasMoreElements()>
Counter value: 1
SCC 10726 : 1
<java.net.URLClassLoader$SharedClassMetaDataCache: java.net.URLClassLoader$SharedClassMetaData getSharedClassMetaData(int)>
Counter value: 1
SCC 10727 : 1
<java.net.URLClassLoader$SharedClassMetaDataCache: void setSharedClassMetaData(int,java.net.URLClassLoader$SharedClassMetaData)>
Counter value: 1
SCC 10728 : 1
<java.net.URLClassLoader$SharedClassMetaDataCache: void ensureSize(int)>
Counter value: 1
SCC 10729 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync: boolean readerShouldBlock()>
Counter value: 1
SCC 10730 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean apparentlyFirstQueuedIsExclusive()>
Counter value: 1
SCC 10731 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: boolean isShared()>
Counter value: 1
SCC 10732 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$FairSync: boolean readerShouldBlock()>
Counter value: 1
SCC 10733 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int sharedCount(int)>
Counter value: 1
SCC 10734 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: java.lang.IllegalMonitorStateException unmatchedUnlockException()>
Counter value: 1
SCC 10735 : 1
<java.lang.IllegalMonitorStateException: void <init>(java.lang.String)>
Counter value: 1
SCC 10736 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>
Counter value: 1
SCC 10737 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync: boolean writerShouldBlock()>
Counter value: 1
SCC 10738 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$FairSync: boolean writerShouldBlock()>
Counter value: 1
SCC 10739 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: boolean hasQueuedPredecessors()>
Counter value: 1
SCC 10740 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void setHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
Counter value: 1
SCC 10741 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node predecessor()>
Counter value: 1
SCC 10742 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: void <init>()>
Counter value: 1
SCC 10743 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: void <init>(java.lang.Thread,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)>
Counter value: 1
SCC 10744 : 1
<java.util.concurrent.ThreadPoolExecutor$Worker: boolean tryRelease(int)>
Counter value: 1
SCC 10745 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: boolean tryRelease(int)>
Counter value: 1
SCC 10746 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: boolean isHeldExclusively()>
Counter value: 1
SCC 10747 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: int exclusiveCount(int)>
Counter value: 1
SCC 10748 : 1
<java.util.concurrent.locks.ReentrantLock$Sync: boolean tryRelease(int)>
Counter value: 1
SCC 10749 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void setState(int)>
Counter value: 1
SCC 10750 : 1
<java.util.concurrent.locks.AbstractOwnableSynchronizer: void setExclusiveOwnerThread(java.lang.Thread)>
Counter value: 1
SCC 10751 : 1
<java.util.concurrent.locks.AbstractOwnableSynchronizer: java.lang.Thread getExclusiveOwnerThread()>
Counter value: 1
SCC 10752 : 1
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getState()>
Counter value: 1
SCC 10753 : 1
<java.lang.IllegalMonitorStateException: void <init>()>
Counter value: 1
SCC 10754 : 1
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>
Counter value: 1
SCC 10755 : 1
<java.net.URI: java.lang.String getScheme()>
Counter value: 1
SCC 10756 : 1
<com.ibm.oti.shared.SharedClassAbstractHelper$1: void <init>(com.ibm.oti.shared.SharedClassAbstractHelper,java.net.URL)>
Counter value: 1
SCC 10757 : 1
<com.ibm.oti.shared.SharedAbstractHelper: java.lang.ClassLoader getClassLoader()>
Counter value: 1
SCC 10758 : 1
<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: java.lang.String getHelperType()>
Counter value: 1
SCC 10759 : 1
<com.ibm.oti.shared.SharedClassAbstractHelper: void <clinit>()>
Counter value: 1
SCC 10760 : 1
<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>
Counter value: 1
SCC 10761 : 1
<java.security.CodeSource: java.net.URL getLocation()>
Counter value: 1
SCC 10762 : 1
<java.security.Permission: java.security.PermissionCollection newPermissionCollection()>
Counter value: 1
SCC 10763 : 1
<javax.crypto.CryptoAllPermissionCollection: void add(java.security.Permission)>
Counter value: 1
SCC 10764 : 1
<javax.crypto.CryptoAllPermission: java.security.PermissionCollection newPermissionCollection()>
Counter value: 1
SCC 10765 : 1
<javax.crypto.CryptoAllPermissionCollection: void <init>()>
Counter value: 1
SCC 10766 : 1
<javax.security.auth.PrivateCredentialPermission: java.security.PermissionCollection newPermissionCollection()>
Counter value: 1
SCC 10767 : 1
<java.util.PropertyPermission: int getMask()>
Counter value: 1
SCC 10768 : 1
<java.security.AllPermission: java.security.PermissionCollection newPermissionCollection()>
Counter value: 1
SCC 10769 : 1
<java.security.AllPermissionCollection: void <init>()>
Counter value: 1
SCC 10770 : 1
<java.security.BasicPermission: java.lang.String getCanonicalName()>
Counter value: 1
SCC 10771 : 1
<java.lang.Class: java.lang.Object[] getSigners()>
Counter value: 1
SCC 10772 : 1
<java.net.SocketPermission: java.security.PermissionCollection newPermissionCollection()>
Counter value: 1
SCC 10773 : 1
<java.net.SocketPermissionCollection: void <init>()>
Counter value: 1
SCC 10774 : 1
<java.io.FilePermission: java.security.PermissionCollection newPermissionCollection()>
Counter value: 1
SCC 10775 : 1
<java.io.FilePermissionCollection: void <init>()>
Counter value: 1
SCC 10776 : 1
<java.security.PermissionCollection: boolean isReadOnly()>
Counter value: 1
SCC 10777 : 1
<java.security.SecureClassLoader: void check()>
Counter value: 1
SCC 10778 : 1
<java.security.PermissionCollection: void <init>()>
Counter value: 1
SCC 10779 : 1
<java.net.URLClassLoader$3: void <init>(java.net.URLClassLoader,java.lang.SecurityManager,java.security.Permission)>
Counter value: 1
SCC 10780 : 1
<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>
Counter value: 1
SCC 10781 : 1
<java.security.PermissionCollection: void setReadOnly()>
Counter value: 1
SCC 10782 : 1
<java.security.ProtectionDomain$Key: void <init>(java.security.ProtectionDomain)>
Counter value: 1
SCC 10783 : 1
<java.net.URLClassLoader: boolean usingSharedClasses()>
Counter value: 1
SCC 10784 : 1
<java.lang.Package: boolean isSealed()>
Counter value: 1
SCC 10785 : 1
<java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.lang.ClassLoader)>
Counter value: 1
SCC 10786 : 1
<java.util.zip.CRC32: void reset()>
Counter value: 1
SCC 10787 : 1
<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>
Counter value: 1
SCC 10788 : 1
<java.util.jar.JarInputStream: java.util.jar.Manifest getManifest()>
Counter value: 1
SCC 10789 : 1
<java.lang.Package$1: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 10790 : 1
<java.util.zip.ZipEntry: long getCrc()>
Counter value: 1
SCC 10791 : 1
<java.util.zip.CRC32: void <init>()>
Counter value: 1
SCC 10792 : 1
<java.util.zip.CRC32: long getValue()>
Counter value: 1
SCC 10793 : 1
<java.util.zip.CRC32: void update(byte[])>
Counter value: 1
SCC 10794 : 1
<java.util.zip.CRC32: void <clinit>()>
Counter value: 1
SCC 10795 : 1
<java.util.jar.JarFile: java.util.jar.JarVerifier access$300(java.util.jar.JarFile)>
Counter value: 1
SCC 10796 : 1
<java.util.jar.JarVerifier: boolean nothingToVerify()>
Counter value: 1
SCC 10797 : 1
<java.util.jar.JarException: void <init>(java.lang.String)>
Counter value: 1
SCC 10798 : 1
<java.util.jar.Attributes: java.util.Set entrySet()>
Counter value: 1
SCC 10799 : 1
<java.util.zip.ZipFile: int access$1600(java.util.zip.ZipFile)>
Counter value: 1
SCC 10800 : 1
<java.util.zip.ZipFile: int getManifestNum()>
Counter value: 1
SCC 10801 : 1
<java.util.zip.ZipEntry: java.lang.String getName()>
Counter value: 1
SCC 10802 : 1
<java.util.WeakHashMap: void resize(int)>
Counter value: 1
SCC 10803 : 1
<java.util.WeakHashMap: void transfer(java.util.WeakHashMap$Entry[],java.util.WeakHashMap$Entry[])>
Counter value: 1
SCC 10804 : 1
<java.util.WeakHashMap$Entry: void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue,int,java.util.WeakHashMap$Entry)>
Counter value: 1
SCC 10805 : 1
<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 10806 : 1
<java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>
Counter value: 1
SCC 10807 : 1
<java.util.ArrayDeque: java.lang.Object poll()>
Counter value: 1
SCC 10808 : 1
<java.util.ArrayDeque: java.lang.Object pollFirst()>
Counter value: 1
SCC 10809 : 1
<java.util.zip.Inflater: void <init>(boolean)>
Counter value: 1
SCC 10810 : 1
<java.util.zip.ZStreamRef: void <init>(long)>
Counter value: 1
SCC 10811 : 1
<java.util.zip.ZipFile$ZipFileInflaterInputStream: void <init>(java.util.zip.ZipFile,java.util.zip.ZipFile$ZipFileInputStream,java.util.zip.Inflater,int)>
Counter value: 1
SCC 10812 : 1
<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>
Counter value: 1
SCC 10813 : 1
<java.util.jar.JarVerifier$3: void <init>(java.util.jar.JarVerifier)>
Counter value: 1
SCC 10814 : 1
<java.util.jar.Manifest: int toLower(int)>
Counter value: 1
SCC 10815 : 1
<java.util.jar.Manifest$FastInputStream: void <init>(java.io.InputStream)>
Counter value: 1
SCC 10816 : 1
<java.util.jar.Manifest$FastInputStream: void <init>(java.io.InputStream,int)>
Counter value: 1
SCC 10817 : 1
<java.io.ByteArrayOutputStream: void reset()>
Counter value: 1
SCC 10818 : 1
<sun.misc.URLClassPath$JarLoader: java.net.URL access$700(sun.misc.URLClassPath$JarLoader)>
Counter value: 1
SCC 10819 : 1
<sun.misc.URLClassPath$Loader$1: java.net.URL getCodeSourceURL()>
Counter value: 1
SCC 10820 : 1
<sun.misc.URLClassPath$Loader: java.net.URL access$500(sun.misc.URLClassPath$Loader)>
Counter value: 1
SCC 10821 : 1
<sun.misc.Resource: int getClasspathLoadIndex()>
Counter value: 1
SCC 10822 : 1
<sun.misc.URLClassPath$JarLoader$2: int getContentLength()>
Counter value: 1
SCC 10823 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date addYear(int)>
Counter value: 1
SCC 10824 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate addYear(int)>
Counter value: 1
SCC 10825 : 1
<java.text.DecimalFormat: void setGroupingUsed(boolean)>
Counter value: 1
SCC 10826 : 1
<java.text.NumberFormat: void setGroupingUsed(boolean)>
Counter value: 1
SCC 10827 : 1
<java.text.NumberFormat: void <init>()>
Counter value: 1
SCC 10828 : 1
<java.text.DigitList: void <init>()>
Counter value: 1
SCC 10829 : 1
<java.text.NumberFormat: void setParseIntegerOnly(boolean)>
Counter value: 1
SCC 10830 : 1
<java.text.DecimalFormat: void setDecimalSeparatorAlwaysShown(boolean)>
Counter value: 1
SCC 10831 : 1
<java.text.DecimalFormatSymbols: java.lang.String getInternationalCurrencySymbol()>
Counter value: 1
SCC 10832 : 1
<java.text.DecimalFormatSymbols: java.util.Currency getCurrency()>
Counter value: 1
SCC 10833 : 1
<java.util.Currency: int getDefaultFractionDigits()>
Counter value: 1
SCC 10834 : 1
<java.util.Currency: void <init>(java.lang.String,int,int)>
Counter value: 1
SCC 10835 : 1
<java.text.AttributeEntry: void <init>(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>
Counter value: 1
SCC 10836 : 1
<java.lang.Byte: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10837 : 1
<java.lang.Byte: byte byteValue()>
Counter value: 1
SCC 10838 : 1
<sun.security.x509.OtherName: int constrains(sun.security.x509.GeneralNameInterface)>
Counter value: 1
SCC 10839 : 1
<sun.security.x509.DNSName: java.lang.String getName()>
Counter value: 1
SCC 10840 : 1
<sun.security.x509.URIName: java.lang.String getHost()>
Counter value: 1
SCC 10841 : 1
<sun.security.x509.URIName: java.lang.Object getHostObject()>
Counter value: 1
SCC 10842 : 1
<sun.security.x509.OIDName: int constrains(sun.security.x509.GeneralNameInterface)>
Counter value: 1
SCC 10843 : 1
<sun.security.x509.OIDName: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10844 : 1
<sun.security.x509.EDIPartyName: int constrains(sun.security.x509.GeneralNameInterface)>
Counter value: 1
SCC 10845 : 1
<sun.security.x509.RFC822Name: java.lang.String getName()>
Counter value: 1
SCC 10846 : 1
<sun.security.x509.IPAddressName: int constrains(sun.security.x509.GeneralNameInterface)>
Counter value: 1
SCC 10847 : 1
<sun.security.x509.IPAddressName: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10848 : 1
<sun.security.x509.DNSName: int getType()>
Counter value: 1
SCC 10849 : 1
<sun.security.x509.OtherName: int getType()>
Counter value: 1
SCC 10850 : 1
<sun.security.x509.URIName: int getType()>
Counter value: 1
SCC 10851 : 1
<sun.security.x509.OIDName: int getType()>
Counter value: 1
SCC 10852 : 1
<sun.security.x509.EDIPartyName: int getType()>
Counter value: 1
SCC 10853 : 1
<sun.security.x509.RFC822Name: int getType()>
Counter value: 1
SCC 10854 : 1
<sun.security.x509.X500Name: int getType()>
Counter value: 1
SCC 10855 : 1
<sun.security.x509.IPAddressName: int getType()>
Counter value: 1
SCC 10856 : 1
<sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10857 : 1
<sun.security.x509.X509CRLImpl$X509IssuerSerial: javax.security.auth.x500.X500Principal getIssuer()>
Counter value: 1
SCC 10858 : 1
<sun.security.x509.X509CRLImpl$X509IssuerSerial: java.math.BigInteger getSerial()>
Counter value: 1
SCC 10859 : 1
<sun.security.x509.AlgorithmId: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10860 : 1
<sun.security.x509.AlgorithmId: boolean equals(sun.security.util.ObjectIdentifier)>
Counter value: 1
SCC 10861 : 1
<sun.security.x509.AlgorithmId: boolean equals(sun.security.x509.AlgorithmId)>
Counter value: 1
SCC 10862 : 1
<sun.security.util.DerValue: boolean doEquals(sun.security.util.DerValue,sun.security.util.DerValue)>
Counter value: 1
SCC 10863 : 1
<sun.security.util.DerInputBuffer: boolean equals(sun.security.util.DerInputBuffer)>
Counter value: 1
SCC 10864 : 1
<java.time.ZoneOffset: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10865 : 1
<java.lang.ProcessEnvironment: boolean arrayEquals(byte[],byte[])>
Counter value: 1
SCC 10866 : 1
<java.util.Vector: java.util.Iterator iterator()>
Counter value: 1
SCC 10867 : 1
<java.util.jar.Manifest: java.util.Map getEntries()>
Counter value: 1
SCC 10868 : 1
<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>
Counter value: 1
SCC 10869 : 1
<javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10870 : 1
<java.security.Timestamp: java.security.cert.CertPath getSignerCertPath()>
Counter value: 1
SCC 10871 : 1
<java.security.CodeSigner: java.security.Timestamp getTimestamp()>
Counter value: 1
SCC 10872 : 1
<java.text.FieldPosition: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10873 : 1
<java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10874 : 1
<java.text.AttributedString$AttributedStringIterator: java.text.AttributedString getString()>
Counter value: 1
SCC 10875 : 1
<java.util.Arrays: boolean equals(short[],short[])>
Counter value: 1
SCC 10876 : 1
<java.util.Arrays: boolean equals(int[],int[])>
Counter value: 1
SCC 10877 : 1
<java.util.Arrays: boolean equals(long[],long[])>
Counter value: 1
SCC 10878 : 1
<java.util.Arrays: boolean equals(char[],char[])>
Counter value: 1
SCC 10879 : 1
<java.util.Arrays: boolean equals(boolean[],boolean[])>
Counter value: 1
SCC 10880 : 1
<java.text.NumberFormat: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10881 : 1
<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10882 : 1
<java.math.BigInteger: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10883 : 1
<java.util.jar.Attributes: int size()>
Counter value: 1
SCC 10884 : 1
<sun.security.x509.Extension: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10885 : 1
<sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
Counter value: 1
SCC 10886 : 1
<java.util.Locale: boolean hasExtensions()>
Counter value: 1
SCC 10887 : 1
<java.util.Calendar$Builder: boolean isSet(int)>
Counter value: 1
SCC 10888 : 1
<java.util.Calendar$Builder: boolean isInstantSet()>
Counter value: 1
SCC 10889 : 1
<java.util.Calendar$Builder: java.util.Calendar$Builder setWeekDefinition(int,int)>
Counter value: 1
SCC 10890 : 1
<java.util.Calendar$Builder: boolean isValidWeekParameter(int)>
Counter value: 1
SCC 10891 : 1
<java.util.Calendar: void setWeekDate(int,int,int)>
Counter value: 1
SCC 10892 : 1
<java.util.Calendar: void clear()>
Counter value: 1
SCC 10893 : 1
<java.util.Calendar: void setUnnormalized()>
Counter value: 1
SCC 10894 : 1
<java.util.Date: void <init>(long)>
Counter value: 1
SCC 10895 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter: sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter access$000()>
Counter value: 1
SCC 10896 : 1
<java.util.Calendar$Builder: java.util.Calendar$Builder setInstant(long)>
Counter value: 1
SCC 10897 : 1
<java.util.Calendar$Builder: java.util.Calendar$Builder setTimeZone(java.util.TimeZone)>
Counter value: 1
SCC 10898 : 1
<java.util.Calendar$Builder: java.util.Calendar$Builder setLocale(java.util.Locale)>
Counter value: 1
SCC 10899 : 1
<java.util.Calendar$Builder: void <init>()>
Counter value: 1
SCC 10900 : 1
<java.text.DateFormat: void <init>()>
Counter value: 1
SCC 10901 : 1
<java.text.Format: void <init>()>
Counter value: 1
SCC 10902 : 1
<java.util.Calendar: boolean isWeekDateSupported()>
Counter value: 1
SCC 10903 : 1
<java.util.GregorianCalendar: boolean isWeekDateSupported()>
Counter value: 1
SCC 10904 : 1
<java.util.Calendar: int getWeekYear()>
Counter value: 1
SCC 10905 : 1
<sun.util.calendar.BaseCalendar: int getYearLength(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 10906 : 1
<java.util.GregorianCalendar: long getYearOffsetInMillis()>
Counter value: 1
SCC 10907 : 1
<sun.util.calendar.ZoneInfo: boolean isDirty()>
Counter value: 1
SCC 10908 : 1
<java.util.Calendar: void adjustStamp()>
Counter value: 1
SCC 10909 : 1
<java.util.Calendar: void setLenient(boolean)>
Counter value: 1
SCC 10910 : 1
<java.util.Calendar: boolean isFullyNormalized()>
Counter value: 1
SCC 10911 : 1
<sun.util.calendar.Era: java.lang.String getName()>
Counter value: 1
SCC 10912 : 1
<sun.util.calendar.Era: java.lang.String getAbbreviation()>
Counter value: 1
SCC 10913 : 1
<java.util.GregorianCalendar: java.lang.String getCalendarType()>
Counter value: 1
SCC 10914 : 1
<java.util.JapaneseImperialCalendar: java.lang.String getCalendarType()>
Counter value: 1
SCC 10915 : 1
<java.util.Calendar: int toStandaloneStyle(int)>
Counter value: 1
SCC 10916 : 1
<java.util.Calendar: boolean isNarrowFormatStyle(int)>
Counter value: 1
SCC 10917 : 1
<java.util.Calendar: boolean isStandaloneStyle(int)>
Counter value: 1
SCC 10918 : 1
<sun.util.BuddhistCalendar: java.lang.String getCalendarType()>
Counter value: 1
SCC 10919 : 1
<java.util.Calendar: int getBaseStyle(int)>
Counter value: 1
SCC 10920 : 1
<java.text.DateFormatSymbols: void <init>(boolean)>
Counter value: 1
SCC 10921 : 1
<java.util.ResourceBundle: java.util.Locale getLocale()>
Counter value: 1
SCC 10922 : 1
<java.lang.InternalError: void <init>()>
Counter value: 1
SCC 10923 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter: sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter access$100()>
Counter value: 1
SCC 10924 : 1
<sun.util.locale.provider.LocaleProviderAdapter$Type: java.lang.String getUtilResourcesPackage()>
Counter value: 1
SCC 10925 : 1
<java.util.Collections$UnmodifiableMap: java.util.Set keySet()>
Counter value: 1
SCC 10926 : 1
<java.lang.ProcessEnvironment$StringEnvironment: java.util.Set keySet()>
Counter value: 1
SCC 10927 : 1
<java.lang.ProcessEnvironment$StringKeySet: void <init>(java.util.Set)>
Counter value: 1
SCC 10928 : 1
<java.security.Provider: java.util.Set keySet()>
Counter value: 1
SCC 10929 : 1
<java.util.Hashtable: java.util.Set keySet()>
Counter value: 1
SCC 10930 : 1
<java.util.Hashtable$KeySet: void <init>(java.util.Hashtable,java.util.Hashtable$1)>
Counter value: 1
SCC 10931 : 1
<java.util.Hashtable$KeySet: void <init>(java.util.Hashtable)>
Counter value: 1
SCC 10932 : 1
<java.text.DateFormatSymbols: boolean isSubclassObject()>
Counter value: 1
SCC 10933 : 1
<sun.util.calendar.ZoneInfo: int getDSTSavings()>
Counter value: 1
SCC 10934 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter: java.lang.Object getObject(java.util.spi.LocaleServiceProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 10935 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter: java.util.Map getObject(java.util.spi.CalendarNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 10936 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter: void <clinit>()>
Counter value: 1
SCC 10937 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter: void <init>()>
Counter value: 1
SCC 10938 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter: java.lang.Object getObject(java.util.spi.LocaleServiceProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 10939 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter: java.lang.String getObject(java.util.spi.CalendarNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 10940 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter: void <clinit>()>
Counter value: 1
SCC 10941 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter: void <init>()>
Counter value: 1
SCC 10942 : 1
<java.util.Currency$CurrencyNameGetter: java.lang.Object getObject(java.util.spi.LocaleServiceProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 10943 : 1
<java.util.Currency$CurrencyNameGetter: java.lang.String getObject(java.util.spi.CurrencyNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>
Counter value: 1
SCC 10944 : 1
<java.util.Currency$CurrencyNameGetter: void <clinit>()>
Counter value: 1
SCC 10945 : 1
<java.util.Currency$CurrencyNameGetter: void <init>()>
Counter value: 1
SCC 10946 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter: void <clinit>()>
Counter value: 1
SCC 10947 : 1
<sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter: void <init>()>
Counter value: 1
SCC 10948 : 1
<java.lang.ProcessEnvironment$StringEnvironment: java.lang.String toString(java.lang.ProcessEnvironment$Value)>
Counter value: 1
SCC 10949 : 1
<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>
Counter value: 1
SCC 10950 : 1
<java.util.concurrent.ConcurrentHashMap$ValuesView: void <init>(java.util.concurrent.ConcurrentHashMap)>
Counter value: 1
SCC 10951 : 1
<java.util.concurrent.ConcurrentHashMap$CollectionView: void <init>(java.util.concurrent.ConcurrentHashMap)>
Counter value: 1
SCC 10952 : 1
<sun.util.locale.InternalLocaleBuilder: void <init>()>
Counter value: 1
SCC 10953 : 1
<java.util.regex.Matcher: int groupCount()>
Counter value: 1
SCC 10954 : 1
<java.util.regex.ASCII: boolean isDigit(int)>
Counter value: 1
SCC 10955 : 1
<java.util.regex.UnicodeProp$1: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10956 : 1
<java.util.regex.UnicodeProp$2: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10957 : 1
<java.util.regex.UnicodeProp$3: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10958 : 1
<java.util.regex.UnicodeProp$4: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10959 : 1
<java.util.regex.UnicodeProp$5: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10960 : 1
<java.util.regex.UnicodeProp$6: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10961 : 1
<java.util.regex.UnicodeProp$7: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10962 : 1
<java.util.regex.UnicodeProp$8: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10963 : 1
<java.util.regex.UnicodeProp$9: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10964 : 1
<java.util.regex.UnicodeProp$10: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10965 : 1
<java.util.regex.UnicodeProp$11: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10966 : 1
<java.util.regex.UnicodeProp$12: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10967 : 1
<java.util.regex.UnicodeProp$13: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10968 : 1
<java.util.regex.UnicodeProp$14: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10969 : 1
<java.util.regex.UnicodeProp$15: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10970 : 1
<java.util.regex.UnicodeProp$16: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10971 : 1
<java.util.regex.UnicodeProp$17: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10972 : 1
<java.util.regex.UnicodeProp$18: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10973 : 1
<java.util.regex.UnicodeProp$19: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10974 : 1
<java.util.regex.UnicodeProp: void <init>(java.lang.String,int,java.util.regex.UnicodeProp$1)>
Counter value: 1
SCC 10975 : 1
<java.util.regex.UnicodeProp: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10976 : 1
<java.util.regex.Pattern$3: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 10977 : 1
<java.util.regex.ASCII: boolean isAscii(int)>
Counter value: 1
SCC 10978 : 1
<java.util.regex.ASCII: int toUpper(int)>
Counter value: 1
SCC 10979 : 1
<java.util.regex.ASCII: boolean isLower(int)>
Counter value: 1
SCC 10980 : 1
<java.util.regex.Pattern$1: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 10981 : 1
<java.util.regex.Pattern: boolean access$200(int,int,int)>
Counter value: 1
SCC 10982 : 1
<java.util.regex.Pattern: boolean inRange(int,int,int)>
Counter value: 1
SCC 10983 : 1
<java.util.Arrays: int binarySearch(int[],int)>
Counter value: 1
SCC 10984 : 1
<java.util.Arrays: int binarySearch0(int[],int,int,int)>
Counter value: 1
SCC 10985 : 1
<java.lang.Character$UnicodeScript: void <init>(java.lang.String,int)>
Counter value: 1
SCC 10986 : 1
<java.util.regex.Pattern$Single: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 10987 : 1
<java.util.regex.Pattern$SingleS: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 10988 : 1
<java.util.regex.Pattern$SingleI: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 10989 : 1
<java.util.regex.Pattern$VertWS: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 10990 : 1
<java.util.regex.Pattern$HorizWS: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 10991 : 1
<java.util.regex.Pattern$Ctype: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 10992 : 1
<java.util.regex.ASCII: boolean isType(int,int)>
Counter value: 1
SCC 10993 : 1
<java.util.regex.ASCII: int getType(int)>
Counter value: 1
SCC 10994 : 1
<java.lang.CharacterDataLatin1: boolean isOtherAlphabetic(int)>
Counter value: 1
SCC 10995 : 1
<java.lang.CharacterDataLatin1: int getPropertiesEx(int)>
Counter value: 1
SCC 10996 : 1
<java.lang.CharacterData00: boolean isOtherAlphabetic(int)>
Counter value: 1
SCC 10997 : 1
<java.lang.CharacterData00: int getPropertiesEx(int)>
Counter value: 1
SCC 10998 : 1
<java.lang.CharacterData01: boolean isOtherAlphabetic(int)>
Counter value: 1
SCC 10999 : 1
<java.lang.CharacterData01: int getPropertiesEx(int)>
Counter value: 1
SCC 11000 : 1
<java.lang.CharacterData02: boolean isOtherAlphabetic(int)>
Counter value: 1
SCC 11001 : 1
<java.lang.CharacterData02: int getPropertiesEx(int)>
Counter value: 1
SCC 11002 : 1
<java.lang.CharacterData0E: boolean isOtherAlphabetic(int)>
Counter value: 1
SCC 11003 : 1
<java.lang.CharacterData0E: int getPropertiesEx(int)>
Counter value: 1
SCC 11004 : 1
<java.lang.CharacterData: boolean isOtherAlphabetic(int)>
Counter value: 1
SCC 11005 : 1
<java.util.regex.UnicodeProp$19: boolean is(int)>
Counter value: 1
SCC 11006 : 1
<java.util.regex.Pattern$BitClass: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 11007 : 1
<java.util.regex.Pattern$Dot: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 11008 : 1
<java.util.regex.Pattern$UnixDot: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 11009 : 1
<java.util.regex.Pattern$All: boolean isSatisfiedBy(int)>
Counter value: 1
SCC 11010 : 1
<java.util.regex.Pattern$SliceIS: int toLower(int)>
Counter value: 1
SCC 11011 : 1
<java.util.regex.ASCII: int toLower(int)>
Counter value: 1
SCC 11012 : 1
<java.util.regex.ASCII: boolean isUpper(int)>
Counter value: 1
SCC 11013 : 1
<java.util.regex.ASCII: void <clinit>()>
Counter value: 1
SCC 11014 : 1
<java.util.regex.Pattern$LastNode: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
Counter value: 1
SCC 11015 : 1
<java.util.regex.Pattern$Node: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
Counter value: 1
SCC 11016 : 1
<java.util.regex.Pattern$4: boolean match(java.util.regex.Matcher,int,java.lang.CharSequence)>
Counter value: 1
SCC 11017 : 1
<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: char value()>
Counter value: 1
SCC 11018 : 1
<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: java.lang.String value()>
Counter value: 1
SCC 11019 : 1
<sun.util.locale.Extension: void <init>(char)>
Counter value: 1
SCC 11020 : 1
<sun.util.locale.LocaleExtensions: boolean isEmpty()>
Counter value: 1
SCC 11021 : 1
<sun.util.locale.LocaleUtils: boolean isEmpty(java.util.Set)>
Counter value: 1
SCC 11022 : 1
<sun.util.locale.LocaleUtils: boolean isEmpty(java.util.Map)>
Counter value: 1
SCC 11023 : 1
<java.util.Locale$Builder: java.util.Locale$Builder clearExtensions()>
Counter value: 1
SCC 11024 : 1
<sun.util.locale.LocaleSyntaxException: int getErrorIndex()>
Counter value: 1
SCC 11025 : 1
<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder clearExtensions()>
Counter value: 1
SCC 11026 : 1
<java.util.HashSet: void clear()>
Counter value: 1
SCC 11027 : 1
<sun.util.locale.StringTokenIterator: int currentStart()>
Counter value: 1
SCC 11028 : 1
<sun.util.locale.StringTokenIterator: java.lang.String current()>
Counter value: 1
SCC 11029 : 1
<sun.util.locale.StringTokenIterator: boolean isDone()>
Counter value: 1
SCC 11030 : 1
<sun.util.locale.LocaleUtils: boolean isAlphaNumeric(char)>
Counter value: 1
SCC 11031 : 1
<sun.util.locale.LocaleSyntaxException: void <init>(java.lang.String)>
Counter value: 1
SCC 11032 : 1
<sun.util.locale.LocaleSyntaxException: void <init>(java.lang.String,int)>
Counter value: 1
SCC 11033 : 1
<sun.util.locale.LocaleUtils: boolean isNumeric(char)>
Counter value: 1
SCC 11034 : 1
<sun.util.locale.LocaleUtils: boolean isAlpha(char)>
Counter value: 1
SCC 11035 : 1
<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: void <init>(char)>
Counter value: 1
SCC 11036 : 1
<java.util.Locale: sun.util.locale.BaseLocale access$600(java.util.Locale)>
Counter value: 1
SCC 11037 : 1
<java.util.Locale: sun.util.locale.LocaleExtensions access$700(java.util.Locale)>
Counter value: 1
SCC 11038 : 1
<sun.util.locale.BaseLocale$Key: void <clinit>()>
Counter value: 1
SCC 11039 : 1
<sun.util.locale.LocaleExtensions: void <init>(java.lang.String,java.lang.Character,sun.util.locale.Extension)>
Counter value: 1
SCC 11040 : 1
<java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 11041 : 1
<java.util.Collections$SingletonMap: void <init>(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 11042 : 1
<java.util.concurrent.ConcurrentHashMap: int size()>
Counter value: 1
SCC 11043 : 1
<java.util.concurrent.ConcurrentHashMap: long sumCount()>
Counter value: 1
SCC 11044 : 1
<java.util.Locale: sun.util.locale.BaseLocale getBaseLocale()>
Counter value: 1
SCC 11045 : 1
<java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
Counter value: 1
SCC 11046 : 2
<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>
Counter value: 2
SCC 11047 : 1
<java.lang.ProcessEnvironment$StringEntrySet: boolean isEmpty()>
Counter value: 1
SCC 11048 : 1
<java.lang.ProcessEnvironment$StringKeySet: boolean isEmpty()>
Counter value: 1
SCC 11049 : 1
<java.util.TreeMap$KeySet: boolean isEmpty()>
Counter value: 1
SCC 11050 : 1
<java.util.Collections$EmptySet: boolean isEmpty()>
Counter value: 1
SCC 11051 : 1
<java.util.TreeSet: boolean isEmpty()>
Counter value: 1
SCC 11052 : 1
<java.util.AbstractMap: boolean isEmpty()>
Counter value: 1
SCC 11053 : 1
<java.util.Collections$SingletonMap: int size()>
Counter value: 1
SCC 11054 : 1
<java.util.Collections$EmptyMap: int size()>
Counter value: 1
SCC 11055 : 1
<java.util.HashSet: boolean isEmpty()>
Counter value: 1
SCC 11056 : 1
<java.util.AbstractCollection: boolean isEmpty()>
Counter value: 1
SCC 11057 : 1
<java.util.ResourceBundle$NoFallbackControl: void <init>(java.util.List)>
Counter value: 1
SCC 11058 : 1
<java.util.ResourceBundle$SingleFormatControl: void <init>(java.util.List)>
Counter value: 1
SCC 11059 : 1
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter access$000()>
Counter value: 1
SCC 11060 : 1
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: void <clinit>()>
Counter value: 1
SCC 11061 : 1
<sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: void <init>()>
Counter value: 1
SCC 11062 : 1
<java.util.Objects: boolean isNull(java.lang.Object)>
Counter value: 1
SCC 11063 : 1
<java.util.Calendar: boolean isPartiallyNormalized()>
Counter value: 1
SCC 11064 : 1
<sun.util.calendar.ImmutableGregorianDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>
Counter value: 1
SCC 11065 : 1
<sun.util.calendar.AbstractCalendar: sun.util.calendar.Era[] getEras()>
Counter value: 1
SCC 11066 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDate(int,int,int)>
Counter value: 1
SCC 11067 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.CalendarDate setYear(int)>
Counter value: 1
SCC 11068 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setYear(int)>
Counter value: 1
SCC 11069 : 1
<java.util.Calendar: void setFieldsNormalized(int)>
Counter value: 1
SCC 11070 : 1
<sun.util.calendar.CalendarDate: int getDayOfWeek()>
Counter value: 1
SCC 11071 : 1
<sun.util.calendar.CalendarDate: boolean isLeapYear()>
Counter value: 1
SCC 11072 : 1
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.CalendarDate newCalendarDate(java.util.TimeZone)>
Counter value: 1
SCC 11073 : 1
<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date newCalendarDate(java.util.TimeZone)>
Counter value: 1
SCC 11074 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: void <init>(java.util.TimeZone)>
Counter value: 1
SCC 11075 : 1
<sun.util.calendar.ImmutableGregorianDate: long getTimeOfDay()>
Counter value: 1
SCC 11076 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: sun.util.calendar.LocalGregorianCalendar$Date setEra(sun.util.calendar.Era)>
Counter value: 1
SCC 11077 : 1
<sun.util.calendar.AbstractCalendar: int normalizeTime(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 11078 : 1
<sun.util.calendar.AbstractCalendar: long getTimeOfDay(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 11079 : 1
<sun.util.calendar.AbstractCalendar: long getTimeOfDayValue(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 11080 : 1
<sun.util.calendar.CalendarDate: int getMillis()>
Counter value: 1
SCC 11081 : 1
<sun.util.calendar.CalendarDate: int getSeconds()>
Counter value: 1
SCC 11082 : 1
<sun.util.calendar.CalendarDate: int getMinutes()>
Counter value: 1
SCC 11083 : 1
<sun.util.calendar.CalendarDate: int getHours()>
Counter value: 1
SCC 11084 : 1
<sun.util.calendar.CalendarDate: long getTimeOfDay()>
Counter value: 1
SCC 11085 : 1
<sun.util.calendar.ImmutableGregorianDate: int getDayOfMonth()>
Counter value: 1
SCC 11086 : 1
<sun.util.calendar.LocalGregorianCalendar: void normalizeMonth(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 11087 : 1
<sun.util.calendar.LocalGregorianCalendar: void normalizeYear(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 11088 : 1
<sun.util.calendar.LocalGregorianCalendar: boolean validateEra(sun.util.calendar.Era)>
Counter value: 1
SCC 11089 : 1
<sun.util.calendar.BaseCalendar: void normalizeMonth(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 11090 : 1
<sun.util.calendar.ImmutableGregorianDate: sun.util.calendar.CalendarDate setMonth(int)>
Counter value: 1
SCC 11091 : 1
<sun.util.calendar.ImmutableGregorianDate: void setNormalizedYear(int)>
Counter value: 1
SCC 11092 : 1
<sun.util.calendar.ImmutableGregorianDate: void unsupported()>
Counter value: 1
SCC 11093 : 1
<sun.util.calendar.ImmutableGregorianDate: int getMonth()>
Counter value: 1
SCC 11094 : 1
<sun.util.calendar.ImmutableGregorianDate: int getNormalizedYear()>
Counter value: 1
SCC 11095 : 1
<sun.util.calendar.CalendarDate: boolean isStandardTime()>
Counter value: 1
SCC 11096 : 1
<sun.util.calendar.CalendarDate: int getZoneOffset()>
Counter value: 1
SCC 11097 : 1
<sun.util.calendar.AbstractCalendar: long getDayOfWeekDateAfter(long,int)>
Counter value: 1
SCC 11098 : 1
<sun.util.calendar.AbstractCalendar: long getDayOfWeekDateBefore(long,int)>
Counter value: 1
SCC 11099 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setTimeOfDay(int,int,int,int)>
Counter value: 1
SCC 11100 : 1
<sun.util.calendar.ImmutableGregorianDate: int getYear()>
Counter value: 1
SCC 11101 : 1
<sun.util.calendar.Era: sun.util.calendar.CalendarDate getSinceDate()>
Counter value: 1
SCC 11102 : 1
<sun.util.calendar.Era: boolean isLocalTime()>
Counter value: 1
SCC 11103 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: void setLocalYear(int)>
Counter value: 1
SCC 11104 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: void setLocalEra(sun.util.calendar.Era)>
Counter value: 1
SCC 11105 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setEra(sun.util.calendar.Era)>
Counter value: 1
SCC 11106 : 1
<sun.util.calendar.CalendarDate: void setDaylightSaving(int)>
Counter value: 1
SCC 11107 : 1
<sun.util.calendar.CalendarDate: void setZoneOffset(int)>
Counter value: 1
SCC 11108 : 1
<sun.util.calendar.CalendarDate: java.util.TimeZone getZone()>
Counter value: 1
SCC 11109 : 1
<sun.util.calendar.BaseCalendar: boolean isLeapYear(sun.util.calendar.CalendarDate)>
Counter value: 1
SCC 11110 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: int getNormalizedYear()>
Counter value: 1
SCC 11111 : 1
<sun.util.calendar.AbstractCalendar: sun.util.calendar.CalendarDate setTimeOfDay(sun.util.calendar.CalendarDate,int)>
Counter value: 1
SCC 11112 : 1
<sun.util.calendar.CalendarDate: void setTimeOfDay(long)>
Counter value: 1
SCC 11113 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setMillis(int)>
Counter value: 1
SCC 11114 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setSeconds(int)>
Counter value: 1
SCC 11115 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setMinutes(int)>
Counter value: 1
SCC 11116 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setHours(int)>
Counter value: 1
SCC 11117 : 1
<java.util.SimpleTimeZone: int getRawOffset()>
Counter value: 1
SCC 11118 : 1
<java.util.TimeZone: java.lang.String getID()>
Counter value: 1
SCC 11119 : 1
<sun.util.calendar.ZoneInfo: int getTransitionIndex(long,int)>
Counter value: 1
SCC 11120 : 1
<sun.util.calendar.CalendarDate: int getDayOfMonth()>
Counter value: 1
SCC 11121 : 1
<sun.util.calendar.Gregorian$Date: int getNormalizedYear()>
Counter value: 1
SCC 11122 : 1
<sun.util.calendar.CalendarDate: int getYear()>
Counter value: 1
SCC 11123 : 1
<java.util.Calendar: void internalSet(int,int)>
Counter value: 1
SCC 11124 : 1
<sun.util.calendar.CalendarUtils: boolean isJulianLeapYear(int)>
Counter value: 1
SCC 11125 : 1
<java.util.Calendar: int getSetStateFields()>
Counter value: 1
SCC 11126 : 1
<java.util.Calendar: java.util.TimeZone getZone()>
Counter value: 1
SCC 11127 : 1
<sun.util.calendar.CalendarDate: int getMonth()>
Counter value: 1
SCC 11128 : 1
<sun.util.calendar.LocalGregorianCalendar$Date: void setNormalizedYear(int)>
Counter value: 1
SCC 11129 : 1
<sun.util.calendar.CalendarDate: void setNormalized(boolean)>
Counter value: 1
SCC 11130 : 1
<sun.util.calendar.CalendarDate: void setLeapYear(boolean)>
Counter value: 1
SCC 11131 : 1
<sun.util.calendar.CalendarDate: void setDayOfWeek(int)>
Counter value: 1
SCC 11132 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setDayOfMonth(int)>
Counter value: 1
SCC 11133 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setMonth(int)>
Counter value: 1
SCC 11134 : 1
<sun.util.calendar.Gregorian$Date: void setNormalizedYear(int)>
Counter value: 1
SCC 11135 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setYear(int)>
Counter value: 1
SCC 11136 : 1
<sun.util.calendar.BaseCalendar$Date: int getCachedYear()>
Counter value: 1
SCC 11137 : 1
<sun.util.calendar.BaseCalendar$Date: boolean hit(long)>
Counter value: 1
SCC 11138 : 1
<sun.util.calendar.BaseCalendar$Date: void setCache(int,long,int)>
Counter value: 1
SCC 11139 : 1
<sun.util.calendar.BaseCalendar$Date: long getCachedJan1()>
Counter value: 1
SCC 11140 : 1
<sun.util.calendar.BaseCalendar$Date: boolean hit(int)>
Counter value: 1
SCC 11141 : 1
<sun.util.calendar.LocalGregorianCalendar: boolean isLeapYear(int)>
Counter value: 1
SCC 11142 : 1
<sun.util.calendar.BaseCalendar: int getGregorianYearFromFixedDate(long)>
Counter value: 1
SCC 11143 : 1
<sun.util.calendar.CalendarUtils: int mod(int,int)>
Counter value: 1
SCC 11144 : 1
<sun.util.calendar.BaseCalendar: boolean isLeapYear(int)>
Counter value: 1
SCC 11145 : 1
<sun.util.calendar.CalendarUtils: boolean isGregorianLeapYear(int)>
Counter value: 1
SCC 11146 : 1
<sun.util.calendar.CalendarUtils: int floorDivide(int,int)>
Counter value: 1
SCC 11147 : 1
<sun.util.calendar.BaseCalendar: int getDayOfWeekFromFixedDate(long)>
Counter value: 1
SCC 11148 : 1
<sun.util.calendar.Gregorian: sun.util.calendar.CalendarDate newCalendarDate(java.util.TimeZone)>
Counter value: 1
SCC 11149 : 1
<sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date newCalendarDate(java.util.TimeZone)>
Counter value: 1
SCC 11150 : 1
<sun.util.calendar.Gregorian$Date: void <init>(java.util.TimeZone)>
Counter value: 1
SCC 11151 : 1
<sun.util.calendar.BaseCalendar$Date: void <init>(java.util.TimeZone)>
Counter value: 1
SCC 11152 : 1
<sun.util.calendar.CalendarDate: void <init>(java.util.TimeZone)>
Counter value: 1
SCC 11153 : 1
<java.util.Calendar: int getMinimalDaysInFirstWeek()>
Counter value: 1
SCC 11154 : 1
<java.util.Calendar: int getFirstDayOfWeek()>
Counter value: 1
SCC 11155 : 1
<sun.util.calendar.CalendarUtils: int floorDivide(int,int,int[])>
Counter value: 1
SCC 11156 : 1
<sun.util.calendar.AbstractCalendar: long getDayOfWeekDateOnOrBefore(long,int)>
Counter value: 1
SCC 11157 : 1
<sun.util.calendar.CalendarUtils: long mod(long,long)>
Counter value: 1
SCC 11158 : 1
<sun.util.calendar.CalendarUtils: long floorDivide(long,long)>
Counter value: 1
SCC 11159 : 1
<java.util.Calendar: void setFieldsComputed(int)>
Counter value: 1
SCC 11160 : 1
<java.util.GregorianCalendar: int internalGetEra()>
Counter value: 1
SCC 11161 : 1
<java.util.Calendar: boolean isSet(int)>
Counter value: 1
SCC 11162 : 1
<java.util.Calendar: int aggregateStamp(int,int)>
Counter value: 1
SCC 11163 : 1
<java.util.Calendar: boolean isExternallySet(int)>
Counter value: 1
SCC 11164 : 1
<java.util.Calendar: int internalGet(int)>
Counter value: 1
SCC 11165 : 1
<java.util.Calendar: boolean isLenient()>
Counter value: 1
SCC 11166 : 1
<java.util.Calendar: boolean isFieldSet(int,int)>
Counter value: 1
SCC 11167 : 1
<java.text.DecimalFormat: java.text.DecimalFormatSymbols getDecimalFormatSymbols()>
Counter value: 1
SCC 11168 : 1
<java.text.DigitList: void extendDigits(int)>
Counter value: 1
SCC 11169 : 1
<java.math.BigInteger: long longValue()>
Counter value: 1
SCC 11170 : 1
<java.math.MutableBigInteger: void addShifted(java.math.MutableBigInteger,int)>
Counter value: 1
SCC 11171 : 1
<java.math.MutableBigInteger: void keepLower(int)>
Counter value: 1
SCC 11172 : 1
<java.math.MutableBigInteger: int compareShifted(java.math.MutableBigInteger,int)>
Counter value: 1
SCC 11173 : 1
<java.math.MutableBigInteger: void ones(int)>
Counter value: 1
SCC 11174 : 1
<java.util.Arrays: void fill(int[],int)>
Counter value: 1
SCC 11175 : 1
<java.math.MutableBigInteger: int subtract(java.math.MutableBigInteger)>
Counter value: 1
SCC 11176 : 1
<java.math.MutableBigInteger: void add(java.math.MutableBigInteger)>
Counter value: 1
SCC 11177 : 1
<java.math.MutableBigInteger: void reset()>
Counter value: 1
SCC 11178 : 1
<java.math.MutableBigInteger: boolean isZero()>
Counter value: 1
SCC 11179 : 1
<java.lang.Math: long max(long,long)>
Counter value: 1
SCC 11180 : 1
<java.math.MutableBigInteger: int mulsubBorrow(int[],int[],int,int,int)>
Counter value: 1
SCC 11181 : 1
<java.math.MutableBigInteger: int divadd(int[],int[],int)>
Counter value: 1
SCC 11182 : 1
<java.math.MutableBigInteger: int mulsub(int[],int[],int,int,int)>
Counter value: 1
SCC 11183 : 1
<java.math.MutableBigInteger: boolean unsignedLongCompare(long,long)>
Counter value: 1
SCC 11184 : 1
<java.math.MutableBigInteger: void copyAndShift(int[],int,int,int[],int,int)>
Counter value: 1
SCC 11185 : 1
<java.math.MutableBigInteger: void normalize()>
Counter value: 1
SCC 11186 : 1
<java.math.MutableBigInteger: long divWord(long,int)>
Counter value: 1
SCC 11187 : 1
<java.math.MutableBigInteger: int compare(java.math.MutableBigInteger)>
Counter value: 1
SCC 11188 : 1
<java.math.MutableBigInteger: void clear()>
Counter value: 1
SCC 11189 : 1
<java.math.MutableBigInteger: void <init>()>
Counter value: 1
SCC 11190 : 1
<java.math.MutableBigInteger: void setValue(int[],int)>
Counter value: 1
SCC 11191 : 1
<java.math.MutableBigInteger: void primitiveRightShift(int)>
Counter value: 1
SCC 11192 : 1
<java.math.MutableBigInteger: void primitiveLeftShift(int)>
Counter value: 1
SCC 11193 : 1
<java.math.MutableBigInteger: void <init>(int[])>
Counter value: 1
SCC 11194 : 1
<java.math.MutableBigInteger: void <clinit>()>
Counter value: 1
SCC 11195 : 1
<java.math.MutableBigInteger: void <init>(int)>
Counter value: 1
SCC 11196 : 1
<java.text.FieldPosition$Delegate: void formatted(int,java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>
Counter value: 1
SCC 11197 : 1
<java.text.FieldPosition: boolean access$200(java.text.FieldPosition,java.text.Format$Field,int)>
Counter value: 1
SCC 11198 : 1
<java.text.FieldPosition: boolean matchesField(java.text.Format$Field,int)>
Counter value: 1
SCC 11199 : 1
<java.text.DigitList: boolean isZero()>
Counter value: 1
SCC 11200 : 1
<java.math.RoundingMode: void <clinit>()>
Counter value: 1
SCC 11201 : 1
<java.math.RoundingMode: void <init>(java.lang.String,int,int)>
Counter value: 1
SCC 11202 : 1
<java.text.NumberFormat: boolean isGroupingUsed()>
Counter value: 1
SCC 11203 : 1
<java.text.FieldPosition: int getEndIndex()>
Counter value: 1
SCC 11204 : 1
<java.text.FieldPosition: int getBeginIndex()>
Counter value: 1
SCC 11205 : 1
<java.text.FieldPosition: java.text.Format$Field getFieldAttribute()>
Counter value: 1
SCC 11206 : 1
<java.text.FieldPosition$Delegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>
Counter value: 1
SCC 11207 : 1
<java.text.FieldPosition: boolean access$100(java.text.FieldPosition,java.text.Format$Field)>
Counter value: 1
SCC 11208 : 1
<java.text.FieldPosition: boolean matchesField(java.text.Format$Field)>
Counter value: 1
SCC 11209 : 1
<java.text.FieldPosition: void <init>(java.text.Format$Field)>
Counter value: 1
SCC 11210 : 1
<java.text.FieldPosition: void <init>(java.text.Format$Field,int)>
Counter value: 1
SCC 11211 : 1
<java.text.DontCareFieldPosition$1: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>
Counter value: 1
SCC 11212 : 1
<java.text.DontCareFieldPosition$1: void formatted(int,java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>
Counter value: 1
SCC 11213 : 1
<java.text.DecimalFormat: int getMinimumFractionDigits()>
Counter value: 1
SCC 11214 : 1
<java.text.DecimalFormat: int getMaximumFractionDigits()>
Counter value: 1
SCC 11215 : 1
<java.text.DecimalFormat: int getMinimumIntegerDigits()>
Counter value: 1
SCC 11216 : 1
<java.text.DecimalFormat: int getMaximumIntegerDigits()>
Counter value: 1
SCC 11217 : 1
<java.text.NumberFormat: int getMinimumFractionDigits()>
Counter value: 1
SCC 11218 : 1
<java.text.NumberFormat: int getMaximumFractionDigits()>
Counter value: 1
SCC 11219 : 1
<java.text.NumberFormat: int getMinimumIntegerDigits()>
Counter value: 1
SCC 11220 : 1
<java.text.NumberFormat: int getMaximumIntegerDigits()>
Counter value: 1
SCC 11221 : 1
<java.math.BigInteger: int implMulAdd(int[],int[],int,int,int)>
Counter value: 1
SCC 11222 : 1
<java.math.BigInteger: int addOne(int[],int,int,int)>
Counter value: 1
SCC 11223 : 1
<java.math.BigInteger: void primitiveLeftShift(int[],int,int)>
Counter value: 1
SCC 11224 : 1
<java.math.BigInteger: int[] multiplyToLen(int[],int,int[],int,int[])>
Counter value: 1
SCC 11225 : 1
<java.math.BigInteger: int[] javaIncrement(int[])>
Counter value: 1
SCC 11226 : 1
<java.math.BigInteger: int[] shiftLeft(int[],int)>
Counter value: 1
SCC 11227 : 1
<java.text.DontCareFieldPosition: java.text.Format$FieldDelegate getFieldDelegate()>
Counter value: 1
SCC 11228 : 1
<java.text.FieldPosition: void setEndIndex(int)>
Counter value: 1
SCC 11229 : 1
<java.text.FieldPosition: void setBeginIndex(int)>
Counter value: 1
SCC 11230 : 1
<java.text.AttributedString: void <init>(java.lang.String)>
Counter value: 1
SCC 11231 : 1
<java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
Counter value: 1
SCC 11232 : 1
<java.text.AttributedString: void createRunAttributeDataVectors()>
Counter value: 1
SCC 11233 : 1
<java.text.CalendarBuilder: int toISODayOfWeek(int)>
Counter value: 1
SCC 11234 : 1
<java.text.SimpleDateFormat: boolean useDateFormatSymbols()>
Counter value: 1
SCC 11235 : 1
<java.text.FieldPosition: java.text.Format$FieldDelegate getFieldDelegate()>
Counter value: 1
SCC 11236 : 1
<java.text.FieldPosition$Delegate: void <init>(java.text.FieldPosition,java.text.FieldPosition$1)>
Counter value: 1
SCC 11237 : 1
<java.text.FieldPosition$Delegate: void <init>(java.text.FieldPosition)>
Counter value: 1
SCC 11238 : 1
<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>
Counter value: 1
SCC 11239 : 1
<java.util.JapaneseImperialCalendar: void setTimeZone(java.util.TimeZone)>
Counter value: 1
SCC 11240 : 1
<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>
Counter value: 1
SCC 11241 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.CalendarDate setZone(java.util.TimeZone)>
Counter value: 1
SCC 11242 : 1
<java.util.Calendar: void setTimeZone(java.util.TimeZone)>
Counter value: 1
SCC 11243 : 1
<sun.net.www.MimeEntry: java.lang.String getType()>
Counter value: 1
SCC 11244 : 1
<java.lang.Thread: boolean interrupted()>
Counter value: 1
SCC 11245 : 1
<sun.misc.Resource: java.security.CodeSigner[] getCodeSigners()>
Counter value: 1
SCC 11246 : 1
<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile access$800(sun.misc.URLClassPath$JarLoader)>
Counter value: 1
SCC 11247 : 1
<sun.misc.Resource: java.util.jar.Manifest getManifest()>
Counter value: 1
SCC 11248 : 1
<sun.misc.URLClassPath$FileLoader$1: java.net.URL getCodeSourceURL()>
Counter value: 1
SCC 11249 : 1
<sun.misc.URLClassPath$Loader: java.net.URL getBaseURL()>
Counter value: 1
SCC 11250 : 1
<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>
Counter value: 1
SCC 11251 : 1
<java.net.URLClassLoader$SharedClassMetaData: void <init>(java.net.URLClassLoader,java.security.CodeSource,java.util.jar.Manifest)>
Counter value: 1
SCC 11252 : 1
<java.net.URLClassLoader$2: void <init>(java.net.URLClassLoader,java.util.Enumeration)>
Counter value: 1
SCC 11253 : 1
<com.ibm.oti.vm.AbstractClassLoader$2: void <init>(com.ibm.oti.vm.AbstractClassLoader,java.lang.String)>
Counter value: 1
SCC 11254 : 1
<java.util.Vector: java.util.Enumeration elements()>
Counter value: 1
SCC 11255 : 1
<java.util.Vector$1: void <init>(java.util.Vector)>
Counter value: 1
SCC 11256 : 1
<java.lang.ClassLoader$CompoundEnumeration: void append(java.util.Enumeration)>
Counter value: 1
SCC 11257 : 1
<java.lang.ClassLoader$CompoundEnumeration: void <init>(java.util.Enumeration,java.util.Enumeration)>
Counter value: 1
SCC 11258 : 1
<java.util.LinkedList: boolean add(java.lang.Object)>
Counter value: 1
SCC 11259 : 1
<java.util.LinkedList: void <init>()>
Counter value: 1
SCC 11260 : 1
<java.util.AbstractSequentialList: void <init>()>
Counter value: 1
SCC 11261 : 1
<java.io.InputStreamReader: boolean ready()>
Counter value: 1
SCC 11262 : 1
<sun.nio.cs.StreamDecoder: boolean ready()>
Counter value: 1
SCC 11263 : 1
<java.nio.HeapByteBuffer: java.nio.ByteBuffer compact()>
Counter value: 1
SCC 11264 : 1
<java.nio.Buffer: void discardMark()>
Counter value: 1
SCC 11265 : 1
<sun.nio.cs.StreamDecoder: boolean implReady()>
Counter value: 1
SCC 11266 : 1
<sun.nio.cs.StreamDecoder: boolean inReady()>
Counter value: 1
SCC 11267 : 4
<java.io.FilterInputStream: int available()>
<sun.net.www.MeteredStream: int available()>
<java.io.BufferedInputStream: int available()>
<java.io.PushbackInputStream: int available()>
Counter value: 4
SCC 11268 : 1
<java.lang.UNIXProcess$DeferredCloseInputStream: int available()>
Counter value: 1
SCC 11269 : 1
<java.util.zip.ZipInputStream: int available()>
Counter value: 1
SCC 11270 : 1
<java.io.ByteArrayInputStream: int available()>
Counter value: 1
SCC 11271 : 1
<java.util.jar.JarVerifier$VerifierStream: int available()>
Counter value: 1
SCC 11272 : 1
<java.util.zip.ZipFile$ZipFileInflaterInputStream: int available()>
Counter value: 1
SCC 11273 : 1
<java.util.zip.ZipFile$ZipFileInputStream: long size()>
Counter value: 1
SCC 11274 : 1
<java.util.zip.Inflater: long getBytesWritten()>
Counter value: 1
SCC 11275 : 1
<java.util.zip.ZipFile$ZipFileInputStream: int available()>
Counter value: 1
SCC 11276 : 1
<java.io.FileInputStream: int available()>
Counter value: 1
SCC 11277 : 1
<sun.nio.cs.StreamDecoder: void ensureOpen()>
Counter value: 1
SCC 11278 : 1
<java.io.BufferedReader: void ensureOpen()>
Counter value: 1
SCC 11279 : 1
<java.lang.CharacterDataLatin1: boolean isJavaIdentifierPart(int)>
Counter value: 1
SCC 11280 : 1
<java.lang.CharacterData00: boolean isJavaIdentifierPart(int)>
Counter value: 1
SCC 11281 : 1
<java.lang.CharacterData01: boolean isJavaIdentifierPart(int)>
Counter value: 1
SCC 11282 : 1
<java.lang.CharacterData0E: boolean isJavaIdentifierPart(int)>
Counter value: 1
SCC 11283 : 1
<java.lang.CharacterDataPrivateUse: boolean isJavaIdentifierPart(int)>
Counter value: 1
SCC 11284 : 1
<java.lang.CharacterDataUndefined: boolean isJavaIdentifierPart(int)>
Counter value: 1
SCC 11285 : 1
<sun.net.www.protocol.jar.JarURLConnection: void setUseCaches(boolean)>
Counter value: 1
SCC 11286 : 1
<java.net.URLConnection: void setUseCaches(boolean)>
Counter value: 1
SCC 11287 : 1
<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: void <init>(sun.net.www.protocol.jar.URLJarFile,java.util.jar.JarEntry)>
Counter value: 1
SCC 11288 : 1
<java.util.jar.JarEntry: void <init>(java.util.jar.JarEntry)>
Counter value: 1
SCC 11289 : 1
<java.util.zip.ZipFile: java.lang.String getName()>
Counter value: 1
SCC 11290 : 1
<java.util.Arrays$ArrayList: java.lang.Object get(int)>
Counter value: 1
SCC 11291 : 1
<java.io.File: java.lang.String toString()>
Counter value: 1
SCC 11292 : 1
<sun.net.ProgressSource: void <init>(java.net.URL,java.lang.String,long)>
Counter value: 1
SCC 11293 : 1
<sun.net.ProgressMonitor: int getProgressUpdateThreshold()>
Counter value: 1
SCC 11294 : 1
<sun.net.DefaultProgressMeteringPolicy: int getProgressUpdateThreshold()>
Counter value: 1
SCC 11295 : 1
<sun.net.ProgressMonitor: boolean shouldMeterInput(java.net.URL,java.lang.String)>
Counter value: 1
SCC 11296 : 1
<sun.net.DefaultProgressMeteringPolicy: boolean shouldMeterInput(java.net.URL,java.lang.String)>
Counter value: 1
SCC 11297 : 1
<sun.net.ProgressMonitor: sun.net.ProgressMonitor getDefault()>
Counter value: 1
SCC 11298 : 1
<sun.net.ProgressMonitor: void <clinit>()>
Counter value: 1
SCC 11299 : 1
<sun.net.DefaultProgressMeteringPolicy: void <init>()>
Counter value: 1
SCC 11300 : 1
<sun.net.ProgressMonitor: void <init>()>
Counter value: 1
SCC 11301 : 1
<java.io.ByteArrayInputStream: void <init>(byte[])>
Counter value: 1
SCC 11302 : 1
<sun.net.www.MimeTable: sun.net.www.MimeTable getDefaultTable()>
Counter value: 1
SCC 11303 : 1
<sun.net.www.MimeTable$1: void <init>()>
Counter value: 1
SCC 11304 : 1
<java.text.RuleBasedCollator: void <init>(java.text.RuleBasedCollator)>
Counter value: 1
SCC 11305 : 1
<java.text.Collator: void setDecomposition(int)>
Counter value: 1
SCC 11306 : 1
<java.text.Collator: void setStrength(int)>
Counter value: 1
SCC 11307 : 1
<java.text.Collator: void <init>()>
Counter value: 1
SCC 11308 : 1
<java.text.RBTableBuilder: void <init>(java.text.RBCollationTables$BuildAPI)>
Counter value: 1
SCC 11309 : 1
<sun.text.IntHashtable: void <init>(int)>
Counter value: 1
SCC 11310 : 1
<sun.text.IntHashtable: int leastGreaterPrimeIndex(int)>
Counter value: 1
SCC 11311 : 1
<java.text.RBCollationTables$BuildAPI: void <init>(java.text.RBCollationTables,java.text.RBCollationTables$1)>
Counter value: 1
SCC 11312 : 1
<java.text.RBCollationTables$BuildAPI: void <init>(java.text.RBCollationTables)>
Counter value: 1
SCC 11313 : 1
<java.text.PatternEntry: java.lang.String getExtension()>
Counter value: 1
SCC 11314 : 1
<java.text.PatternEntry: int getStrength()>
Counter value: 1
SCC 11315 : 1
<java.text.PatternEntry: java.lang.String getChars()>
Counter value: 1
SCC 11316 : 1
<java.text.RBCollationTables$BuildAPI: void fillInTables(boolean,boolean,sun.text.UCompactIntArray,java.util.Vector,java.util.Vector,sun.text.IntHashtable,short,short)>
Counter value: 1
SCC 11317 : 1
<java.text.RBCollationTables: boolean access$202(java.text.RBCollationTables,boolean)>
Counter value: 1
SCC 11318 : 1
<java.text.RBCollationTables: sun.text.UCompactIntArray access$302(java.text.RBCollationTables,sun.text.UCompactIntArray)>
Counter value: 1
SCC 11319 : 1
<java.text.RBCollationTables: java.util.Vector access$402(java.text.RBCollationTables,java.util.Vector)>
Counter value: 1
SCC 11320 : 1
<java.text.RBCollationTables: java.util.Vector access$502(java.text.RBCollationTables,java.util.Vector)>
Counter value: 1
SCC 11321 : 1
<java.text.RBCollationTables: sun.text.IntHashtable access$602(java.text.RBCollationTables,sun.text.IntHashtable)>
Counter value: 1
SCC 11322 : 1
<java.text.RBCollationTables: short access$702(java.text.RBCollationTables,short)>
Counter value: 1
SCC 11323 : 1
<java.text.RBCollationTables: short access$802(java.text.RBCollationTables,short)>
Counter value: 1
SCC 11324 : 1
<java.text.RBCollationTables: boolean access$102(java.text.RBCollationTables,boolean)>
Counter value: 1
SCC 11325 : 1
<java.text.MergeCollation: int getCount()>
Counter value: 1
SCC 11326 : 1
<sun.text.UCompactIntArray: void compact()>
Counter value: 1
SCC 11327 : 1
<sun.text.ComposedCharIter: void <init>()>
Counter value: 1
SCC 11328 : 1
<sun.text.ComposedCharIter: java.lang.String decomposition()>
Counter value: 1
SCC 11329 : 1
<sun.text.ComposedCharIter: int next()>
Counter value: 1
SCC 11330 : 1
<sun.text.UCompactIntArray: void setElementAt(int,int)>
Counter value: 1
SCC 11331 : 1
<sun.text.UCompactIntArray: void initPlane(int)>
Counter value: 1
SCC 11332 : 1
<sun.text.UCompactIntArray: void expand()>
Counter value: 1
SCC 11333 : 1
<sun.text.IntHashtable: void put(int,int)>
Counter value: 1
SCC 11334 : 1
<sun.text.IntHashtable: void rehash()>
Counter value: 1
SCC 11335 : 1
<sun.text.IntHashtable: void putInternal(int,int)>
Counter value: 1
SCC 11336 : 1
<sun.text.IntHashtable: int find(int)>
Counter value: 1
SCC 11337 : 1
<sun.text.IntHashtable: void initialize(int)>
Counter value: 1
SCC 11338 : 1
<sun.text.IntHashtable: void <clinit>()>
Counter value: 1
SCC 11339 : 1
<java.text.EntryPair: void <init>(java.lang.String,int)>
Counter value: 1
SCC 11340 : 1
<java.text.EntryPair: void <init>(java.lang.String,int,boolean)>
Counter value: 1
SCC 11341 : 1
<java.text.RBTableBuilder: int increment(int,int)>
Counter value: 1
SCC 11342 : 1
<sun.text.UCompactIntArray: void <init>(int)>
Counter value: 1
SCC 11343 : 1
<sun.text.UCompactIntArray: void <init>()>
Counter value: 1
SCC 11344 : 1
<java.util.ArrayList: void clear()>
Counter value: 1
SCC 11345 : 1
<java.text.ParseException: void <init>(java.lang.String,int)>
Counter value: 1
SCC 11346 : 1
<java.text.PatternEntry: boolean isSpecialChar(char)>
Counter value: 1
SCC 11347 : 1
<sun.text.normalizer.NormalizerImpl: boolean needSingleQuotation(char)>
Counter value: 1
SCC 11348 : 1
<java.util.PropertyResourceBundle: java.util.Set handleKeySet()>
Counter value: 1
SCC 11349 : 1
<java.util.PropertyResourceBundle: java.util.Enumeration getKeys()>
Counter value: 1
SCC 11350 : 1
<sun.util.ResourceBundleEnumeration: void <init>(java.util.Set,java.util.Enumeration)>
Counter value: 1
SCC 11351 : 1
<java.util.ResourceBundle$1: java.util.Enumeration getKeys()>
Counter value: 1
SCC 11352 : 1
<sun.util.locale.provider.LocaleProviderAdapter$Type: java.lang.String getTextResourcesPackage()>
Counter value: 1
SCC 11353 : 1
<sun.util.resources.LocaleData$LocaleDataResourceBundleControl: void <init>()>
Counter value: 1
SCC 11354 : 1
<java.util.ResourceBundle$Control: void <init>()>
Counter value: 1
SCC 11355 : 1
<sun.util.resources.LocaleData$1: void <init>(java.lang.String,java.util.Locale)>
Counter value: 1
SCC 11356 : 1
<sun.util.locale.provider.LocaleResources$ResourceReference: void <init>(java.lang.String,java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 11357 : 1
<sun.util.locale.provider.FallbackLocaleProviderAdapter: sun.util.locale.provider.LocaleResources getLocaleResources(java.util.Locale)>
Counter value: 1
SCC 11358 : 1
<sun.util.locale.provider.AuxLocaleProviderAdapter: sun.util.locale.provider.LocaleResources getLocaleResources(java.util.Locale)>
Counter value: 1
SCC 11359 : 1
<java.util.TimSort: void pushRun(int,int)>
Counter value: 1
SCC 11360 : 1
<java.util.TimSort: int minRunLength(int)>
Counter value: 1
SCC 11361 : 1
<java.util.TimSort: void reverseRange(java.lang.Object[],int,int)>
Counter value: 1
SCC 11362 : 1
<java.text.RBCollationTables: boolean isFrenchSec()>
Counter value: 1
SCC 11363 : 1
<sun.text.normalizer.NormalizerBase: sun.text.normalizer.NormalizerBase$Mode getMode()>
Counter value: 1
SCC 11364 : 1
<sun.text.normalizer.NormalizerBase: void setMode(sun.text.normalizer.NormalizerBase$Mode)>
Counter value: 1
SCC 11365 : 1
<java.text.RBCollationTables: boolean isSEAsianSwapping()>
Counter value: 1
SCC 11366 : 1
<java.text.RBCollationTables: int getUnicodeOrder(int)>
Counter value: 1
SCC 11367 : 1
<sun.text.normalizer.NormalizerBase$NFCMode: sun.text.normalizer.NormalizerBase$IsPrevBoundary getPrevBoundary()>
Counter value: 1
SCC 11368 : 1
<sun.text.normalizer.NormalizerBase$IsPrevTrueStarter: void <init>(sun.text.normalizer.NormalizerBase$1)>
Counter value: 1
SCC 11369 : 1
<sun.text.normalizer.NormalizerBase$IsPrevTrueStarter: void <init>()>
Counter value: 1
SCC 11370 : 1
<sun.text.normalizer.NormalizerBase$NFDMode: sun.text.normalizer.NormalizerBase$IsPrevBoundary getPrevBoundary()>
Counter value: 1
SCC 11371 : 1
<sun.text.normalizer.NormalizerBase$NFKDMode: sun.text.normalizer.NormalizerBase$IsPrevBoundary getPrevBoundary()>
Counter value: 1
SCC 11372 : 1
<sun.text.normalizer.NormalizerBase$IsPrevNFDSafe: void <init>(sun.text.normalizer.NormalizerBase$1)>
Counter value: 1
SCC 11373 : 1
<sun.text.normalizer.NormalizerBase$IsPrevNFDSafe: void <init>()>
Counter value: 1
SCC 11374 : 1
<sun.text.normalizer.NormalizerBase$Mode: sun.text.normalizer.NormalizerBase$IsPrevBoundary getPrevBoundary()>
Counter value: 1
SCC 11375 : 1
<java.util.Vector: java.lang.Object lastElement()>
Counter value: 1
SCC 11376 : 1
<java.util.Vector: java.lang.Object firstElement()>
Counter value: 1
SCC 11377 : 1
<sun.text.UCompactIntArray: int elementAt(int)>
Counter value: 1
SCC 11378 : 1
<sun.text.normalizer.NormalizerBase: int getCodePointAt(int)>
Counter value: 1
SCC 11379 : 1
<sun.text.normalizer.NormalizerBase: void clearBuffer()>
Counter value: 1
SCC 11380 : 1
<sun.text.normalizer.NormalizerBase$NFCMode: sun.text.normalizer.NormalizerBase$IsNextBoundary getNextBoundary()>
Counter value: 1
SCC 11381 : 1
<sun.text.normalizer.NormalizerBase$IsNextTrueStarter: void <init>(sun.text.normalizer.NormalizerBase$1)>
Counter value: 1
SCC 11382 : 1
<sun.text.normalizer.NormalizerBase$IsNextTrueStarter: void <init>()>
Counter value: 1
SCC 11383 : 1
<sun.text.normalizer.NormalizerBase$NFCMode: int getMask()>
Counter value: 1
SCC 11384 : 1
<sun.text.normalizer.NormalizerBase$NFDMode: sun.text.normalizer.NormalizerBase$IsNextBoundary getNextBoundary()>
Counter value: 1
SCC 11385 : 1
<sun.text.normalizer.NormalizerBase$NFDMode: int getMask()>
Counter value: 1
SCC 11386 : 1
<sun.text.normalizer.NormalizerBase$NFDMode: int getMinC()>
Counter value: 1
SCC 11387 : 1
<sun.text.normalizer.NormalizerBase$NFKDMode: sun.text.normalizer.NormalizerBase$IsNextBoundary getNextBoundary()>
Counter value: 1
SCC 11388 : 1
<sun.text.normalizer.NormalizerBase$IsNextNFDSafe: void <init>(sun.text.normalizer.NormalizerBase$1)>
Counter value: 1
SCC 11389 : 1
<sun.text.normalizer.NormalizerBase$IsNextNFDSafe: void <init>()>
Counter value: 1
SCC 11390 : 1
<sun.text.normalizer.NormalizerBase$NFKDMode: int getMask()>
Counter value: 1
SCC 11391 : 1
<sun.text.normalizer.NormalizerBase$NFKDMode: int getMinC()>
Counter value: 1
SCC 11392 : 1
<sun.text.normalizer.NormalizerImpl$ComposePartArgs: void <init>(sun.text.normalizer.NormalizerImpl$1)>
Counter value: 1
SCC 11393 : 1
<sun.text.normalizer.NormalizerImpl$ComposePartArgs: void <init>()>
Counter value: 1
SCC 11394 : 1
<sun.text.normalizer.NormalizerImpl: boolean isJamoVTNorm32JamoV(long)>
Counter value: 1
SCC 11395 : 1
<sun.text.normalizer.NormalizerImpl$RecomposeArgs: void <init>(sun.text.normalizer.NormalizerImpl$1)>
Counter value: 1
SCC 11396 : 1
<sun.text.normalizer.NormalizerImpl$RecomposeArgs: void <init>()>
Counter value: 1
SCC 11397 : 1
<sun.text.normalizer.NormalizerImpl$NextCombiningArgs: void <init>(sun.text.normalizer.NormalizerImpl$1)>
Counter value: 1
SCC 11398 : 1
<sun.text.normalizer.NormalizerImpl$NextCombiningArgs: void <init>()>
Counter value: 1
SCC 11399 : 1
<sun.text.normalizer.NormalizerImpl: boolean isHangulWithoutJamoT(char)>
Counter value: 1
SCC 11400 : 1
<sun.text.normalizer.NormalizerImpl: int combine(char[],int,int,int[])>
Counter value: 1
SCC 11401 : 1
<sun.text.normalizer.NormalizerImpl: boolean isNorm32HangulOrJamo(long)>
Counter value: 1
SCC 11402 : 1
<sun.text.normalizer.NormalizerImpl$NextCCArgs: void <init>(sun.text.normalizer.NormalizerImpl$1)>
Counter value: 1
SCC 11403 : 1
<sun.text.normalizer.NormalizerImpl$NextCCArgs: void <init>()>
Counter value: 1
SCC 11404 : 1
<sun.text.normalizer.NormalizerImpl$PrevArgs: void <init>(sun.text.normalizer.NormalizerImpl$1)>
Counter value: 1
SCC 11405 : 1
<sun.text.normalizer.NormalizerImpl$PrevArgs: void <init>()>
Counter value: 1
SCC 11406 : 1
<sun.text.normalizer.NormalizerBase$Mode: int normalize(char[],int,int,char[],int,int,sun.text.normalizer.UnicodeSet)>
Counter value: 1
SCC 11407 : 1
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet xor(int[],int,int)>
Counter value: 1
SCC 11408 : 1
<sun.text.normalizer.UnicodeSetIterator: void <init>(sun.text.normalizer.UnicodeSet)>
Counter value: 1
SCC 11409 : 1
<sun.text.normalizer.UnicodeSetIterator: void reset(sun.text.normalizer.UnicodeSet)>
Counter value: 1
SCC 11410 : 1
<sun.text.normalizer.UnicodeSetIterator: void reset()>
Counter value: 1
SCC 11411 : 1
<sun.text.normalizer.UnicodeSetIterator: boolean nextRange()>
Counter value: 1
SCC 11412 : 1
<sun.text.normalizer.UnicodeSetIterator: void loadRange(int)>
Counter value: 1
SCC 11413 : 1
<sun.text.normalizer.NormalizerImpl: long getNorm32(int)>
Counter value: 1
SCC 11414 : 1
<sun.text.normalizer.IntTrie: int getCodePointValue(int)>
Counter value: 1
SCC 11415 : 1
<java.util.TreeMap: void addAllForTreeSet(java.util.SortedSet,java.lang.Object)>
Counter value: 1
SCC 11416 : 1
<java.util.TreeSet: java.util.Comparator comparator()>
Counter value: 1
SCC 11417 : 1
<java.util.TreeMap$PrivateEntryIterator: void remove()>
Counter value: 1
SCC 11418 : 1
<java.util.TreeMap: void access$000(java.util.TreeMap,java.util.TreeMap$Entry)>
Counter value: 1
SCC 11419 : 1
<java.util.TreeMap: void deleteEntry(java.util.TreeMap$Entry)>
Counter value: 1
SCC 11420 : 1
<java.util.TreeMap: void fixAfterDeletion(java.util.TreeMap$Entry)>
Counter value: 1
SCC 11421 : 1
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet retain(int[],int,int)>
Counter value: 1
SCC 11422 : 1
<java.util.TreeMap: void <init>(java.util.SortedMap)>
Counter value: 1
SCC 11423 : 1
<java.util.TreeMap: java.util.Comparator comparator()>
Counter value: 1
SCC 11424 : 1
<java.util.TreeMap: void buildFromSorted(int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>
Counter value: 1
SCC 11425 : 1
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>
Counter value: 1
SCC 11426 : 1
<java.util.TreeMap: int computeRedLevel(int)>
Counter value: 1
SCC 11427 : 1
<sun.text.normalizer.RuleCharacterIterator: boolean isEscaped()>
Counter value: 1
SCC 11428 : 1
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet complement()>
Counter value: 1
SCC 11429 : 1
<sun.text.normalizer.UnicodeSet: int getRangeEnd(int)>
Counter value: 1
SCC 11430 : 1
<sun.text.normalizer.UnicodeSet: int getRangeStart(int)>
Counter value: 1
SCC 11431 : 1
<sun.text.normalizer.UnicodeSet: int getRangeCount()>
Counter value: 1
SCC 11432 : 1
<sun.text.normalizer.UnicodeSet: void ensureBufferCapacity(int)>
Counter value: 1
SCC 11433 : 1
<sun.text.normalizer.UnicodeSet: int max(int,int)>
Counter value: 1
SCC 11434 : 1
<sun.text.normalizer.UnicodeSet: int[] range(int,int)>
Counter value: 1
SCC 11435 : 1
<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet clear()>
Counter value: 1
SCC 11436 : 1
<java.util.TreeSet: void clear()>
Counter value: 1
SCC 11437 : 1
<java.util.TreeMap: void clear()>
Counter value: 1
SCC 11438 : 1
<sun.text.normalizer.VersionInfo: int compareTo(sun.text.normalizer.VersionInfo)>
Counter value: 1
SCC 11439 : 1
<sun.text.normalizer.UCharacterProperty: int getAdditional(int,int)>
Counter value: 1
SCC 11440 : 1
<sun.text.normalizer.CharTrie: char getCodePointValue(int)>
Counter value: 1
SCC 11441 : 1
<sun.text.normalizer.Trie: int getCodePointOffset(int)>
Counter value: 1
SCC 11442 : 1
<sun.text.normalizer.IntTrie: int getSurrogateOffset(char,char)>
Counter value: 1
SCC 11443 : 1
<sun.text.normalizer.Trie: int getBMPOffset(char)>
Counter value: 1
SCC 11444 : 1
<sun.text.normalizer.UCharacterProperty: int getProperty(int)>
Counter value: 1
SCC 11445 : 1
<sun.text.normalizer.UnicodeSet: void ensureCapacity(int)>
Counter value: 1
SCC 11446 : 1
<sun.text.normalizer.UnicodeSet: int findCodePoint(int)>
Counter value: 1
SCC 11447 : 1
<sun.text.normalizer.TrieIterator: void <init>(sun.text.normalizer.Trie)>
Counter value: 1
SCC 11448 : 1
<sun.text.normalizer.CharTrie: int getInitialValue()>
Counter value: 1
SCC 11449 : 1
<sun.text.normalizer.TrieIterator: void reset()>
Counter value: 1
SCC 11450 : 1
<sun.text.normalizer.TrieIterator: boolean next(sun.text.normalizer.RangeValueIterator$Element)>
Counter value: 1
SCC 11451 : 1
<sun.text.normalizer.TrieIterator: void calculateNextSupplementaryElement(sun.text.normalizer.RangeValueIterator$Element)>
Counter value: 1
SCC 11452 : 1
<sun.text.normalizer.TrieIterator: boolean checkTrailBlock(int,int)>
Counter value: 1
SCC 11453 : 1
<sun.text.normalizer.TrieIterator: boolean checkNullNextTrailIndex()>
Counter value: 1
SCC 11454 : 1
<sun.text.normalizer.TrieIterator: boolean calculateNextBMPElement(sun.text.normalizer.RangeValueIterator$Element)>
Counter value: 1
SCC 11455 : 1
<sun.text.normalizer.TrieIterator: boolean checkBlock(int,int)>
Counter value: 1
SCC 11456 : 1
<sun.text.normalizer.TrieIterator: void setResult(sun.text.normalizer.RangeValueIterator$Element,int,int,int)>
Counter value: 1
SCC 11457 : 1
<sun.text.normalizer.TrieIterator: boolean checkBlockDetail(int)>
Counter value: 1
SCC 11458 : 1
<sun.text.normalizer.CharTrie: int getValue(int)>
Counter value: 1
SCC 11459 : 1
<sun.text.normalizer.TrieIterator: int extract(int)>
Counter value: 1
SCC 11460 : 1
<sun.text.normalizer.RangeValueIterator$Element: void <init>()>
Counter value: 1
SCC 11461 : 1
<sun.text.normalizer.UnicodeSet$VersionFilter: void <init>(sun.text.normalizer.VersionInfo)>
Counter value: 1
SCC 11462 : 1
<sun.text.normalizer.UnicodeSet: void <init>()>
Counter value: 1
SCC 11463 : 1
<java.util.TreeSet: void <init>()>
Counter value: 1
SCC 11464 : 1
<java.util.TreeSet: void <init>(java.util.NavigableMap)>
Counter value: 1
SCC 11465 : 1
<java.util.TreeMap: void <init>()>
Counter value: 1
SCC 11466 : 1
<sun.text.normalizer.RuleCharacterIterator: void setPos(java.lang.Object)>
Counter value: 1
SCC 11467 : 1
<java.text.ParsePosition: void setIndex(int)>
Counter value: 1
SCC 11468 : 1
<sun.text.normalizer.UTF16: boolean isSurrogate(char)>
Counter value: 1
SCC 11469 : 1
<sun.text.normalizer.CharTrie: char getSurrogateValue(char,char)>
Counter value: 1
SCC 11470 : 1
<sun.text.normalizer.CharTrie: int getSurrogateOffset(char,char)>
Counter value: 1
SCC 11471 : 1
<sun.text.normalizer.CharTrie: char getLeadValue(char)>
Counter value: 1
SCC 11472 : 1
<sun.text.normalizer.UCharacter: int getNumericType(int)>
Counter value: 1
SCC 11473 : 1
<sun.text.normalizer.UCharacterProperty: int getUnsignedValue(int)>
Counter value: 1
SCC 11474 : 1
<sun.text.normalizer.UCharacter: int getEuropeanDigit(int)>
Counter value: 1
SCC 11475 : 1
<java.lang.Character: void <init>(char)>
Counter value: 1
SCC 11476 : 1
<java.util.MissingFormatWidthException: java.lang.String getMessage()>
Counter value: 1
SCC 11477 : 1
<sun.text.normalizer.CharTrie: void putIndexData(sun.text.normalizer.UCharacterProperty)>
Counter value: 1
SCC 11478 : 1
<sun.text.normalizer.UCharacterProperty: void setIndexData(sun.text.normalizer.CharTrie$FriendAgent)>
Counter value: 1
SCC 11479 : 1
<sun.text.normalizer.CharTrie$FriendAgent: int getPrivateInitialValue()>
Counter value: 1
SCC 11480 : 1
<sun.text.normalizer.CharTrie: char access$100(sun.text.normalizer.CharTrie)>
Counter value: 1
SCC 11481 : 1
<sun.text.normalizer.CharTrie$FriendAgent: char[] getPrivateData()>
Counter value: 1
SCC 11482 : 1
<sun.text.normalizer.CharTrie: char[] access$000(sun.text.normalizer.CharTrie)>
Counter value: 1
SCC 11483 : 1
<sun.text.normalizer.CharTrie$FriendAgent: char[] getPrivateIndex()>
Counter value: 1
SCC 11484 : 1
<sun.text.normalizer.UBiDiProps$IsAcceptable: void <init>(sun.text.normalizer.UBiDiProps,sun.text.normalizer.UBiDiProps$1)>
Counter value: 1
SCC 11485 : 1
<sun.text.normalizer.UBiDiProps$IsAcceptable: void <init>(sun.text.normalizer.UBiDiProps)>
Counter value: 1
SCC 11486 : 1
<sun.text.normalizer.Trie: boolean isCharTrie()>
Counter value: 1
SCC 11487 : 1
<sun.text.normalizer.Trie: boolean checkHeader(int)>
Counter value: 1
SCC 11488 : 1
<sun.text.normalizer.NormalizerDataReader: boolean isDataVersionAcceptable(byte[])>
Counter value: 1
SCC 11489 : 1
<sun.text.normalizer.UBiDiProps$IsAcceptable: boolean isDataVersionAcceptable(byte[])>
Counter value: 1
SCC 11490 : 1
<sun.text.normalizer.UCharacterPropertyReader: boolean isDataVersionAcceptable(byte[])>
Counter value: 1
SCC 11491 : 1
<java.io.DataInputStream: void <init>(java.io.InputStream)>
Counter value: 1
SCC 11492 : 1
<java.lang.UNIXProcess$DeferredCloseInputStream: long skip(long)>
Counter value: 1
SCC 11493 : 1
<java.lang.Math: long min(long,long)>
Counter value: 1
SCC 11494 : 1
<java.io.FileInputStream: long skip(long)>
Counter value: 1
SCC 11495 : 1
<java.io.ByteArrayInputStream: long skip(long)>
Counter value: 1
SCC 11496 : 1
<java.lang.UNIXProcess$DeferredCloseInputStream: int read()>
Counter value: 1
SCC 11497 : 1
<java.io.FileInputStream: int read()>
Counter value: 1
SCC 11498 : 1
<java.io.ByteArrayInputStream: int read()>
Counter value: 1
SCC 11499 : 1
<sun.text.normalizer.UBiDiProps: sun.text.normalizer.UBiDiProps getDummy()>
Counter value: 1
SCC 11500 : 1
<sun.text.normalizer.UBiDiProps: void <init>(boolean)>
Counter value: 1
SCC 11501 : 1
<sun.text.normalizer.CharTrie: void <init>(int,int,sun.text.normalizer.Trie$DataManipulate)>
Counter value: 1
SCC 11502 : 1
<sun.text.normalizer.Trie: void <init>(char[],int,sun.text.normalizer.Trie$DataManipulate)>
Counter value: 1
SCC 11503 : 1
<sun.text.normalizer.Trie$DefaultGetFoldingOffset: void <init>(sun.text.normalizer.Trie$1)>
Counter value: 1
SCC 11504 : 1
<sun.text.normalizer.Trie$DefaultGetFoldingOffset: void <init>()>
Counter value: 1
SCC 11505 : 1
<sun.text.normalizer.CharTrie$FriendAgent: void <init>(sun.text.normalizer.CharTrie)>
Counter value: 1
SCC 11506 : 1
<sun.text.normalizer.UBiDiProps: void <clinit>()>
Counter value: 1
SCC 11507 : 1
<sun.text.normalizer.RuleCharacterIterator: java.lang.Object getPos(java.lang.Object)>
Counter value: 1
SCC 11508 : 1
<sun.text.normalizer.Utility: boolean isUnprintable(int)>
Counter value: 1
SCC 11509 : 1
<sun.text.normalizer.UTF16: char getLeadSurrogate(int)>
Counter value: 1
SCC 11510 : 1
<sun.text.normalizer.UTF16: char getTrailSurrogate(int)>
Counter value: 1
SCC 11511 : 1
<java.text.ParsePosition: void <init>(int)>
Counter value: 1
SCC 11512 : 1
<java.text.ParsePosition: int getIndex()>
Counter value: 1
SCC 11513 : 1
<sun.text.normalizer.RuleCharacterIterator: boolean inVariable()>
Counter value: 1
SCC 11514 : 1
<java.lang.ProcessEnvironment: int arrayHash(byte[])>
Counter value: 1
SCC 11515 : 1
<java.lang.Byte: int hashCode(byte)>
Counter value: 1
SCC 11516 : 1
<sun.security.x509.OtherName: int hashCode()>
Counter value: 1
SCC 11517 : 1
<java.net.URI: boolean isOpaque()>
Counter value: 1
SCC 11518 : 1
<java.net.URI: int toLower(char)>
Counter value: 1
SCC 11519 : 1
<java.net.URI: int toUpper(char)>
Counter value: 1
SCC 11520 : 1
<sun.security.x509.OIDName: int hashCode()>
Counter value: 1
SCC 11521 : 1
<sun.security.x509.IPAddressName: int hashCode()>
Counter value: 1
SCC 11522 : 1
<java.time.ZoneOffset: java.lang.String getId()>
Counter value: 1
SCC 11523 : 1
<java.time.ZoneRegion: java.lang.String getId()>
Counter value: 1
SCC 11524 : 1
<java.time.LocalDateTime: int hashCode()>
Counter value: 1
SCC 11525 : 1
<javax.security.auth.PrivateCredentialPermission: int hashCode()>
Counter value: 1
SCC 11526 : 1
<javax.crypto.CryptoAllPermission: int hashCode()>
Counter value: 1
SCC 11527 : 1
<sun.security.x509.X509CRLImpl$X509IssuerSerial: int hashCode()>
Counter value: 1
SCC 11528 : 1
<sun.security.x509.AVAComparator: java.util.Comparator getInstance()>
Counter value: 1
SCC 11529 : 1
<java.util.ComparableTimSort: void <init>(java.lang.Object[],java.lang.Object[],int,int)>
Counter value: 1
SCC 11530 : 1
<java.util.ComparableTimSort: void pushRun(int,int)>
Counter value: 1
SCC 11531 : 1
<java.util.ComparableTimSort: int minRunLength(int)>
Counter value: 1
SCC 11532 : 1
<java.util.ComparableTimSort: void reverseRange(java.lang.Object[],int,int)>
Counter value: 1
SCC 11533 : 1
<java.util.ComparableTimSort: void <clinit>()>
Counter value: 1
SCC 11534 : 1
<java.util.Arrays: void swap(java.lang.Object[],int,int)>
Counter value: 1
SCC 11535 : 1
<sun.security.x509.AVAComparator: void <clinit>()>
Counter value: 1
SCC 11536 : 1
<sun.security.x509.AVAComparator: void <init>()>
Counter value: 1
SCC 11537 : 1
<sun.security.x509.AlgorithmId: int hashCode()>
Counter value: 1
SCC 11538 : 1
<java.lang.Integer: int rotateLeft(int,int)>
Counter value: 1
SCC 11539 : 1
<java.time.Instant: int hashCode()>
Counter value: 1
SCC 11540 : 1
<java.time.LocalTime: int hashCode()>
Counter value: 1
SCC 11541 : 1
<java.time.LocalTime: long toNanoOfDay()>
Counter value: 1
SCC 11542 : 1
<java.time.chrono.IsoChronology: java.lang.String getId()>
Counter value: 1
SCC 11543 : 1
<java.net.Inet6Address: int hashCode()>
Counter value: 1
SCC 11544 : 1
<java.net.Inet6Address$Inet6AddressHolder: int hashCode()>
Counter value: 1
SCC 11545 : 1
<java.net.Inet4Address: int hashCode()>
Counter value: 1
SCC 11546 : 1
<java.net.InetAddress$InetAddressHolder: int getAddress()>
Counter value: 1
SCC 11547 : 1
<java.util.Collections$EmptyMap: int hashCode()>
Counter value: 1
SCC 11548 : 1
<sun.security.x509.CertificateExtensions: java.util.Map getUnparseableExtensions()>
Counter value: 1
SCC 11549 : 1
<java.time.temporal.ValueRange: int hashCode()>
Counter value: 1
SCC 11550 : 1
<java.time.LocalDate: int hashCode()>
Counter value: 1
SCC 11551 : 1
<sun.util.calendar.ImmutableGregorianDate: sun.util.calendar.Era getEra()>
Counter value: 1
SCC 11552 : 1
<sun.util.calendar.ImmutableGregorianDate: boolean isNormalized()>
Counter value: 1
SCC 11553 : 1
<sun.util.calendar.ZoneInfo: int hashCode()>
Counter value: 1
SCC 11554 : 1
<sun.util.calendar.ZoneInfo: int getLastRawOffset()>
Counter value: 1
SCC 11555 : 1
<sun.util.calendar.CalendarDate: boolean isNormalized()>
Counter value: 1
SCC 11556 : 1
<sun.text.normalizer.UCharacterProperty: int getRawSupplementary(char,char)>
Counter value: 1
SCC 11557 : 1
<sun.text.normalizer.UCharacterProperty: boolean isRuleWhiteSpace(int)>
Counter value: 1
SCC 11558 : 1
<sun.text.normalizer.UTF16: int getCharCount(int)>
Counter value: 1
SCC 11559 : 1
<sun.text.normalizer.UCharacterProperty: void <clinit>()>
Counter value: 1
SCC 11560 : 1
<sun.text.normalizer.NormalizerBase$Mode: sun.text.normalizer.NormalizerBase$IsNextBoundary getNextBoundary()>
Counter value: 1
SCC 11561 : 1
<sun.text.normalizer.NormalizerBase$Mode: int getMask()>
Counter value: 1
SCC 11562 : 1
<sun.text.normalizer.NormalizerBase$Mode: int getMinC()>
Counter value: 1
SCC 11563 : 1
<sun.text.normalizer.Utility: void <clinit>()>
Counter value: 1
SCC 11564 : 1
<sun.text.normalizer.NormalizerImpl: boolean isNorm32LeadSurrogate(long)>
Counter value: 1
SCC 11565 : 1
<sun.text.normalizer.ReplaceableUCharacterIterator: int getIndex()>
Counter value: 1
SCC 11566 : 1
<sun.text.normalizer.NormalizerImpl: long getNorm32(char)>
Counter value: 1
SCC 11567 : 1
<sun.text.normalizer.IntTrie: int getLeadValue(char)>
Counter value: 1
SCC 11568 : 1
<sun.text.normalizer.Trie: int getLeadOffset(char)>
Counter value: 1
SCC 11569 : 1
<sun.text.normalizer.NormalizerImpl: long getNorm32FromSurrogatePair(long,char)>
Counter value: 1
SCC 11570 : 1
<sun.text.normalizer.IntTrie: int getTrailValue(int,char)>
Counter value: 1
SCC 11571 : 1
<sun.text.normalizer.NormalizerImpl$FCDTrieImpl: int getFoldingOffset(int)>
Counter value: 1
SCC 11572 : 1
<sun.text.normalizer.NormalizerImpl$AuxTrieImpl: int getFoldingOffset(int)>
Counter value: 1
SCC 11573 : 1
<sun.text.normalizer.NormalizerImpl$NormTrieImpl: int getFoldingOffset(int)>
Counter value: 1
SCC 11574 : 1
<sun.text.normalizer.Trie$DefaultGetFoldingOffset: int getFoldingOffset(int)>
Counter value: 1
SCC 11575 : 1
<sun.text.normalizer.Trie: int getRawOffset(int,char)>
Counter value: 1
SCC 11576 : 1
<sun.text.normalizer.NormalizerImpl$DecomposeArgs: void <init>(sun.text.normalizer.NormalizerImpl$1)>
Counter value: 1
SCC 11577 : 1
<sun.text.normalizer.NormalizerImpl$DecomposeArgs: void <init>()>
Counter value: 1
SCC 11578 : 1
<sun.text.normalizer.NormalizerImpl: boolean isNorm32Regular(long)>
Counter value: 1
SCC 11579 : 1
<sun.text.normalizer.NormalizerImpl: int getExtraDataIndex(long)>
Counter value: 1
SCC 11580 : 1
<sun.text.normalizer.UTF16: boolean isLeadSurrogate(char)>
Counter value: 1
SCC 11581 : 1
<sun.text.normalizer.UTF16: boolean isTrailSurrogate(char)>
Counter value: 1
SCC 11582 : 1
<sun.text.normalizer.Utility: boolean arrayRegionMatches(char[],int,char[],int,int)>
Counter value: 1
SCC 11583 : 1
<java.text.CollationElementIterator: int strengthOrder(int)>
Counter value: 1
SCC 11584 : 1
<java.lang.Character: boolean isSupplementaryCodePoint(int)>
Counter value: 1
SCC 11585 : 1
<java.lang.Character: boolean isBmpCodePoint(int)>
Counter value: 1
SCC 11586 : 1
<java.lang.Character: char lowSurrogate(int)>
Counter value: 1
SCC 11587 : 1
<java.lang.Character: char highSurrogate(int)>
Counter value: 1
SCC 11588 : 1
<java.text.CollationElementIterator: boolean isThaiPreVowel(int)>
Counter value: 1
SCC 11589 : 1
<java.text.CollationElementIterator: boolean isThaiBaseConsonant(int)>
Counter value: 1
SCC 11590 : 1
<java.text.CollationElementIterator: boolean isLaoPreVowel(int)>
Counter value: 1
SCC 11591 : 1
<java.text.CollationElementIterator: boolean isLaoBaseConsonant(int)>
Counter value: 1
SCC 11592 : 1
<java.text.Collator: int getStrength()>
Counter value: 1
SCC 11593 : 1
<java.text.Collator: int getDecomposition()>
Counter value: 1
SCC 11594 : 1
<java.text.RuleBasedCollator: java.text.RBCollationTables getTables()>
Counter value: 1
SCC 11595 : 1
<sun.text.normalizer.UCharacterIterator: void <init>()>
Counter value: 1
SCC 11596 : 1
<sun.text.CollatorUtilities: sun.text.normalizer.NormalizerBase$Mode toNormalizerMode(int)>
Counter value: 1
SCC 11597 : 1
<sun.text.CollatorUtilities: void <clinit>()>
Counter value: 1
SCC 11598 : 1
<java.text.CollationElementIterator: short tertiaryOrder(int)>
Counter value: 1
SCC 11599 : 1
<java.text.CollationElementIterator: int primaryOrder(int)>
Counter value: 1
SCC 11600 : 1
<java.text.CollationElementIterator: short secondaryOrder(int)>
Counter value: 1
SCC 11601 : 1
<sun.security.util.DerInputStream: void reset()>
Counter value: 1
SCC 11602 : 1
<java.io.ByteArrayInputStream: void reset()>
Counter value: 1
SCC 11603 : 1
<sun.security.x509.AVA: boolean isDerString(sun.security.util.DerValue,boolean)>
Counter value: 1
SCC 11604 : 1
<sun.security.util.DerValue: boolean isPrintableStringChar(char)>
Counter value: 1
SCC 11605 : 1
<sun.security.x509.X500Name$1: void <init>()>
Counter value: 1
SCC 11606 : 1
<java.lang.Byte: void <init>(byte)>
Counter value: 1
SCC 11607 : 1
<java.lang.Throwable: java.lang.Throwable setCause(java.lang.Throwable)>
Counter value: 1
SCC 11608 : 1
<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 11609 : 1
<sun.security.util.KnownOIDs$1: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
Counter value: 1
SCC 11610 : 1
<sun.security.util.KnownOIDs$2: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
Counter value: 1
SCC 11611 : 1
<sun.security.util.KnownOIDs$3: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
Counter value: 1
SCC 11612 : 1
<sun.security.util.KnownOIDs$4: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
Counter value: 1
SCC 11613 : 1
<sun.security.util.KnownOIDs$5: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
Counter value: 1
SCC 11614 : 1
<sun.security.util.KnownOIDs$6: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
Counter value: 1
SCC 11615 : 1
<sun.security.util.KnownOIDs$7: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
Counter value: 1
SCC 11616 : 1
<sun.security.util.KnownOIDs$8: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
Counter value: 1
SCC 11617 : 1
<sun.security.util.KnownOIDs$9: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
Counter value: 1
SCC 11618 : 1
<sun.security.util.KnownOIDs: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[],sun.security.util.KnownOIDs$1)>
Counter value: 1
SCC 11619 : 1
<sun.security.util.KnownOIDs: void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])>
Counter value: 1
SCC 11620 : 1
<sun.security.util.KnownOIDs$10: void <init>()>
Counter value: 1
SCC 11621 : 1
<java.util.Objects: boolean nonNull(java.lang.Object)>
Counter value: 1
SCC 11622 : 1
<java.util.Arrays: java.util.List asList(java.lang.Object[])>
Counter value: 1
SCC 11623 : 1
<java.util.Arrays$ArrayList: void <init>(java.lang.Object[])>
Counter value: 1
SCC 11624 : 1
<sun.security.util.KnownOIDs: java.lang.String value()>
Counter value: 1
SCC 11625 : 1
<sun.security.util.ByteArrayLexOrder: int compare(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 11626 : 1
<sun.security.util.ByteArrayLexOrder: int compare(byte[],byte[])>
Counter value: 1
SCC 11627 : 1
<java.util.TimSort: void <clinit>()>
Counter value: 1
SCC 11628 : 1
<java.nio.file.attribute.PosixFilePermissions$1: java.lang.String name()>
Counter value: 1
SCC 11629 : 1
<java.lang.SecurityException: void <init>(java.lang.String)>
Counter value: 1
SCC 11630 : 1
<sun.security.provider.SecureRandom: void updateState(byte[],byte[])>
Counter value: 1
SCC 11631 : 1
<java.util.Random: boolean nextBoolean()>
Counter value: 1
SCC 11632 : 1
<java.util.Random: int next(int)>
Counter value: 1
SCC 11633 : 1
<java.util.concurrent.atomic.AtomicLong: boolean compareAndSet(long,long)>
Counter value: 1
SCC 11634 : 1
<java.util.concurrent.atomic.AtomicLong: long get()>
Counter value: 1
SCC 11635 : 1
<java.lang.StringCoding$StringEncoder: java.lang.String charsetName()>
Counter value: 1
SCC 11636 : 1
<java.lang.StringCoding$StringEncoder: java.lang.String requestedCharsetName()>
Counter value: 1
SCC 11637 : 1
<java.util.Collections$EmptyEnumeration: java.lang.Object nextElement()>
Counter value: 1
SCC 11638 : 1
<java.util.Collections$EmptyEnumeration: boolean hasMoreElements()>
Counter value: 1
SCC 11639 : 1
<java.util.Hashtable: java.util.Enumeration keys()>
Counter value: 1
SCC 11640 : 1
<java.util.Hashtable: java.util.Enumeration getEnumeration(int)>
Counter value: 1
SCC 11641 : 1
<java.util.Collections: java.util.Enumeration emptyEnumeration()>
Counter value: 1
SCC 11642 : 1
<java.net.NetworkInterface$1: void <init>()>
Counter value: 1
SCC 11643 : 1
<java.net.NetworkInterface$2: java.lang.Object nextElement()>
Counter value: 1
SCC 11644 : 1
<java.net.NetworkInterface$2: java.net.NetworkInterface nextElement()>
Counter value: 1
SCC 11645 : 1
<java.net.NetworkInterface$2: boolean hasMoreElements()>
Counter value: 1
SCC 11646 : 1
<java.net.NetworkInterface$2: void <init>(java.net.NetworkInterface[])>
Counter value: 1
SCC 11647 : 1
<java.nio.file.Files: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path)>
Counter value: 1
SCC 11648 : 1
<sun.security.provider.SeedGenerator: byte[] longToByteArray(long)>
Counter value: 1
SCC 11649 : 1
<sun.security.provider.SeedGenerator$1: void <init>(java.security.MessageDigest)>
Counter value: 1
SCC 11650 : 1
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void getSeedBytes(byte[])>
Counter value: 1
SCC 11651 : 1
<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: byte getSeedByte()>
Counter value: 1
SCC 11652 : 1
<java.lang.Object: void wait()>
Counter value: 1
SCC 11653 : 1
<java.lang.Object: void wait(long,int)>
Counter value: 1
SCC 11654 : 1
<java.lang.Math: long abs(long)>
Counter value: 1
SCC 11655 : 1
<java.nio.file.Files: java.nio.file.Path createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
Counter value: 1
SCC 11656 : 1
<java.lang.ClassCastException: void <init>(java.lang.String)>
Counter value: 1
SCC 11657 : 1
<java.util.RegularEnumSet: void <init>(java.lang.Class,java.lang.Enum[])>
Counter value: 1
SCC 11658 : 1
<java.util.JumboEnumSet: void <init>(java.lang.Class,java.lang.Enum[])>
Counter value: 1
SCC 11659 : 1
<java.util.EnumSet: void <init>(java.lang.Class,java.lang.Enum[])>
Counter value: 1
SCC 11660 : 1
<java.util.EnumSet: void <clinit>()>
Counter value: 1
SCC 11661 : 1
<java.nio.file.Files: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>
Counter value: 1
SCC 11662 : 1
<java.lang.InternalError: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 11663 : 1
<java.lang.VirtualMachineError: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 11664 : 1
<java.security.MessageDigest$Delegate: void <init>(java.security.MessageDigestSpi,java.lang.String)>
Counter value: 1
SCC 11665 : 1
<java.security.MessageDigest: void <init>(java.lang.String)>
Counter value: 1
SCC 11666 : 1
<java.security.MessageDigestSpi: void <init>()>
Counter value: 1
SCC 11667 : 1
<sun.security.jca.GetInstance$Instance: java.lang.Object[] toArray()>
Counter value: 1
SCC 11668 : 1
<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 11669 : 1
<java.security.NoSuchProviderException: void <init>(java.lang.String)>
Counter value: 1
SCC 11670 : 1
<java.security.SecureRandomSpi: void <init>()>
Counter value: 1
SCC 11671 : 1
<java.security.SecureRandom: java.security.Provider getProvider()>
Counter value: 1
SCC 11672 : 1
<java.security.SecureRandom: java.security.SecureRandomSpi getSecureRandomSpi()>
Counter value: 1
SCC 11673 : 1
<java.security.Provider$Service: boolean access$000(java.security.Provider$Service)>
Counter value: 1
SCC 11674 : 1
<java.security.Provider$Service: boolean isValid()>
Counter value: 1
SCC 11675 : 1
<java.util.HashMap: boolean isEmpty()>
Counter value: 1
SCC 11676 : 1
<java.util.Collections$EmptyMap: boolean isEmpty()>
Counter value: 1
SCC 11677 : 1
<java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 11678 : 1
<java.security.Provider$Service: void <init>(java.security.Provider,java.security.Provider$1)>
Counter value: 1
SCC 11679 : 1
<java.security.Provider$Service: void <init>(java.security.Provider)>
Counter value: 1
SCC 11680 : 1
<java.util.Collections: java.util.Map emptyMap()>
Counter value: 1
SCC 11681 : 1
<java.util.Collections$EmptyList: boolean isEmpty()>
Counter value: 1
SCC 11682 : 1
<java.security.Provider$Service: java.lang.String access$602(java.security.Provider$Service,java.lang.String)>
Counter value: 1
SCC 11683 : 1
<java.security.Provider$Service: java.lang.String access$302(java.security.Provider$Service,java.lang.String)>
Counter value: 1
SCC 11684 : 1
<java.security.Provider$Service: java.lang.String access$402(java.security.Provider$Service,java.lang.String)>
Counter value: 1
SCC 11685 : 1
<java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
Counter value: 1
SCC 11686 : 1
<java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
Counter value: 1
SCC 11687 : 1
<java.util.JumboEnumSet: java.util.Iterator iterator()>
Counter value: 1
SCC 11688 : 1
<java.util.JumboEnumSet$EnumSetIterator: void <init>(java.util.JumboEnumSet)>
Counter value: 1
SCC 11689 : 1
<java.util.JumboEnumSet: long[] access$000(java.util.JumboEnumSet)>
Counter value: 1
SCC 11690 : 1
<java.util.RegularEnumSet: java.util.Iterator iterator()>
Counter value: 1
SCC 11691 : 1
<java.util.RegularEnumSet$EnumSetIterator: void <init>(java.util.RegularEnumSet)>
Counter value: 1
SCC 11692 : 1
<java.util.RegularEnumSet: long access$000(java.util.RegularEnumSet)>
Counter value: 1
SCC 11693 : 1
<java.util.TreeMap$Entry: java.lang.Object setValue(java.lang.Object)>
Counter value: 1
SCC 11694 : 1
<java.util.TreeMap: void fixAfterInsertion(java.util.TreeMap$Entry)>
Counter value: 1
SCC 11695 : 1
<java.util.TreeMap: void rotateRight(java.util.TreeMap$Entry)>
Counter value: 1
SCC 11696 : 1
<java.util.TreeMap: void rotateLeft(java.util.TreeMap$Entry)>
Counter value: 1
SCC 11697 : 1
<java.util.TreeMap: java.util.TreeMap$Entry rightOf(java.util.TreeMap$Entry)>
Counter value: 1
SCC 11698 : 1
<java.util.TreeMap: boolean colorOf(java.util.TreeMap$Entry)>
Counter value: 1
SCC 11699 : 1
<java.util.TreeMap: java.util.TreeMap$Entry leftOf(java.util.TreeMap$Entry)>
Counter value: 1
SCC 11700 : 1
<java.util.TreeMap: void setColor(java.util.TreeMap$Entry,boolean)>
Counter value: 1
SCC 11701 : 1
<java.util.TreeMap: java.util.TreeMap$Entry parentOf(java.util.TreeMap$Entry)>
Counter value: 1
SCC 11702 : 1
<java.util.TreeMap$Entry: void <init>(java.lang.Object,java.lang.Object,java.util.TreeMap$Entry)>
Counter value: 1
SCC 11703 : 1
<java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
Counter value: 1
SCC 11704 : 1
<java.util.concurrent.ConcurrentHashMap$Traverser: void recoverState(int)>
Counter value: 1
SCC 11705 : 1
<java.util.concurrent.ConcurrentHashMap$Traverser: void pushState(java.util.concurrent.ConcurrentHashMap$Node[],int,int)>
Counter value: 1
SCC 11706 : 1
<java.util.concurrent.ConcurrentHashMap$TableStack: void <init>()>
Counter value: 1
SCC 11707 : 1
<java.util.concurrent.ConcurrentHashMap$Traverser: void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int)>
Counter value: 1
SCC 11708 : 1
<java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
Counter value: 1
SCC 11709 : 1
<sun.security.jca.ProviderList: java.util.List providers()>
Counter value: 1
SCC 11710 : 1
<sun.security.jca.ProviderList$ServiceList: java.util.Iterator iterator()>
Counter value: 1
SCC 11711 : 1
<sun.security.jca.ProviderList$ServiceList$1: void <init>(sun.security.jca.ProviderList$ServiceList)>
Counter value: 1
SCC 11712 : 1
<sun.security.jca.ProviderList: java.util.List getServices(java.lang.String,java.lang.String)>
Counter value: 1
SCC 11713 : 1
<sun.security.jca.ProviderList$ServiceList: void <init>(sun.security.jca.ProviderList,java.lang.String,java.lang.String)>
Counter value: 1
SCC 11714 : 1
<sun.security.jca.ProviderList$1: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
Counter value: 1
SCC 11715 : 1
<java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
Counter value: 1
SCC 11716 : 1
<java.security.Provider$Service: java.lang.String getAlgorithm()>
Counter value: 1
SCC 11717 : 1
<java.security.Provider$Service: java.security.Provider getProvider()>
Counter value: 1
SCC 11718 : 1
<java.util.concurrent.atomic.AtomicLong: void set(long)>
Counter value: 1
SCC 11719 : 1
<java.util.concurrent.ThreadLocalRandom: void setSeed(long)>
Counter value: 1
SCC 11720 : 1
<sun.security.provider.SecureRandom: void engineSetSeed(byte[])>
Counter value: 1
SCC 11721 : 1
<java.security.MessageDigest: byte[] digest(byte[])>
Counter value: 1
SCC 11722 : 1
<java.security.MessageDigest: byte[] digest()>
Counter value: 1
SCC 11723 : 1
<java.security.MessageDigest$Delegate: byte[] engineDigest()>
Counter value: 1
SCC 11724 : 1
<java.security.MessageDigest: void update(byte[])>
Counter value: 1
SCC 11725 : 1
<java.security.SecureRandom: byte[] longToByteArray(long)>
Counter value: 1
SCC 11726 : 1
<java.util.concurrent.atomic.AtomicLong: void <init>()>
Counter value: 1
SCC 11727 : 1
<java.util.Random: long initialScramble(long)>
Counter value: 1
SCC 11728 : 1
<java.nio.file.FileSystems$DefaultFileSystemHolder$1: void <init>()>
Counter value: 1
SCC 11729 : 1
<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
Counter value: 1
SCC 11730 : 1
<java.nio.file.Files: boolean deleteIfExists(java.nio.file.Path)>
Counter value: 1
SCC 11731 : 1
<java.nio.file.Files: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>
Counter value: 1
SCC 11732 : 1
<java.lang.UNIXProcess$DeferredCloseInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 11733 : 1
<java.lang.UNIXProcess$DeferredCloseInputStream: void lower()>
Counter value: 1
SCC 11734 : 1
<java.lang.UNIXProcess$DeferredCloseInputStream: void raise()>
Counter value: 1
SCC 11735 : 1
<sun.net.ProgressSource: boolean connected()>
Counter value: 1
SCC 11736 : 1
<sun.net.www.MeteredStream: boolean isMarked()>
Counter value: 1
SCC 11737 : 1
<java.nio.file.Files: void delete(java.nio.file.Path)>
Counter value: 1
SCC 11738 : 1
<java.nio.file.Files: java.nio.file.spi.FileSystemProvider provider(java.nio.file.Path)>
Counter value: 1
SCC 11739 : 1
<java.nio.file.Files: void <clinit>()>
Counter value: 1
SCC 11740 : 1
<sun.net.www.protocol.jar.URLJarFile$1: void <init>(java.io.InputStream,sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController)>
Counter value: 1
SCC 11741 : 1
<java.security.PrivilegedActionException: java.lang.Exception getException()>
Counter value: 1
SCC 11742 : 1
<sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream: void <init>(sun.net.www.protocol.jar.JarURLConnection,java.io.InputStream)>
Counter value: 1
SCC 11743 : 1
<java.net.URL: boolean isBuiltinStreamHandler(java.lang.String)>
Counter value: 1
SCC 11744 : 1
<java.net.Parts: java.lang.String getRef()>
Counter value: 1
SCC 11745 : 1
<java.net.Parts: java.lang.String getQuery()>
Counter value: 1
SCC 11746 : 1
<java.net.Parts: java.lang.String getPath()>
Counter value: 1
SCC 11747 : 1
<java.net.URL: java.lang.String getUserInfo()>
Counter value: 1
SCC 11748 : 1
<sun.net.util.IPAddressUtil: boolean match(char,long,long)>
Counter value: 1
SCC 11749 : 1
<java.util.Arrays: int binarySearch(char[],char)>
Counter value: 1
SCC 11750 : 1
<java.util.Arrays: int binarySearch0(char[],int,int,char)>
Counter value: 1
SCC 11751 : 1
<java.net.Proxy: java.net.SocketAddress address()>
Counter value: 1
SCC 11752 : 1
<java.net.Proxy: java.net.Proxy$Type type()>
Counter value: 1
SCC 11753 : 1
<java.net.Inet4Address: void <init>(java.lang.String,byte[])>
Counter value: 1
SCC 11754 : 1
<java.net.InetAddress: java.net.InetAddress$InetAddressHolder holder()>
Counter value: 1
SCC 11755 : 1
<java.net.InetAddress$InetAddressHolder: void init(java.lang.String,int)>
Counter value: 1
SCC 11756 : 1
<java.net.Inet6Address$Inet6AddressHolder: void setAddr(byte[])>
Counter value: 1
SCC 11757 : 1
<java.net.Inet6Address: boolean isLinkLocalAddress(byte[])>
Counter value: 1
SCC 11758 : 1
<java.net.Inet6Address: boolean isSiteLocalAddress(byte[])>
Counter value: 1
SCC 11759 : 1
<java.net.InetAddress: void <init>()>
Counter value: 1
SCC 11760 : 1
<java.net.InetAddress$InetAddressHolder: void <init>()>
Counter value: 1
SCC 11761 : 1
<java.net.Inet6Address$Inet6AddressHolder: void <init>(java.net.Inet6Address,java.net.Inet6Address$1)>
Counter value: 1
SCC 11762 : 1
<java.net.Inet6Address$Inet6AddressHolder: void <init>(java.net.Inet6Address)>
Counter value: 1
SCC 11763 : 1
<sun.net.util.IPAddressUtil: boolean isIPv4MappedAddress(byte[])>
Counter value: 1
SCC 11764 : 1
<java.net.JarURLConnection: java.lang.String getEntryName()>
Counter value: 1
SCC 11765 : 1
<java.net.JarURLConnection: java.net.URL getJarFileURL()>
Counter value: 1
SCC 11766 : 1
<java.net.MalformedURLException: void <init>(java.lang.String)>
Counter value: 1
SCC 11767 : 1
<java.nio.Buffer: int capacity()>
Counter value: 1
SCC 11768 : 1
<java.nio.HeapByteBuffer: java.nio.ByteBuffer put(byte)>
Counter value: 1
SCC 11769 : 1
<sun.nio.cs.ThreadLocalCoders$Cache: void moveToFront(java.lang.Object[],int)>
Counter value: 1
SCC 11770 : 1
<sun.nio.cs.ThreadLocalCoders: void <clinit>()>
Counter value: 1
SCC 11771 : 1
<sun.nio.cs.ThreadLocalCoders$1: void <init>(int)>
Counter value: 1
SCC 11772 : 1
<sun.nio.cs.ThreadLocalCoders$2: void <init>(int)>
Counter value: 1
SCC 11773 : 1
<sun.nio.cs.ThreadLocalCoders$Cache: void <init>(int)>
Counter value: 1
SCC 11774 : 1
<java.util.ArrayList: boolean remove(java.lang.Object)>
Counter value: 1
SCC 11775 : 1
<java.util.ArrayList: void fastRemove(int)>
Counter value: 1
SCC 11776 : 1
<sun.net.ProgressSource: long getExpected()>
Counter value: 1
SCC 11777 : 1
<sun.net.ProgressSource: long getProgress()>
Counter value: 1
SCC 11778 : 1
<sun.net.ProgressSource: sun.net.ProgressSource$State getState()>
Counter value: 1
SCC 11779 : 1
<sun.net.ProgressSource: java.lang.String getContentType()>
Counter value: 1
SCC 11780 : 1
<sun.net.ProgressSource: java.lang.String getMethod()>
Counter value: 1
SCC 11781 : 1
<sun.net.ProgressSource: java.net.URL getURL()>
Counter value: 1
SCC 11782 : 1
<sun.net.ProgressSource: void close()>
Counter value: 1
SCC 11783 : 1
<sun.net.ProgressEvent: void <init>(sun.net.ProgressSource,java.net.URL,java.lang.String,java.lang.String,sun.net.ProgressSource$State,long,long)>
Counter value: 1
SCC 11784 : 1
<java.util.EventObject: void <init>(java.lang.Object)>
Counter value: 1
SCC 11785 : 1
<sun.net.www.protocol.jar.JarURLConnection: boolean getUseCaches()>
Counter value: 1
SCC 11786 : 1
<java.net.URLConnection: boolean getUseCaches()>
Counter value: 1
SCC 11787 : 1
<java.net.URL: int getDefaultPort()>
Counter value: 1
SCC 11788 : 1
<sun.net.www.protocol.jar.JarURLConnection: java.util.jar.JarFile access$000(sun.net.www.protocol.jar.JarURLConnection)>
Counter value: 1
SCC 11789 : 1
<sun.net.www.protocol.jar.JarFileFactory: sun.net.www.protocol.jar.JarFileFactory getInstance()>
Counter value: 1
SCC 11790 : 1
<sun.net.www.protocol.jar.JarFileFactory: void <clinit>()>
Counter value: 1
SCC 11791 : 1
<sun.net.www.protocol.jar.JarFileFactory: void <init>()>
Counter value: 1
SCC 11792 : 1
<java.io.ByteArrayInputStream: void close()>
Counter value: 1
SCC 11793 : 1
<java.util.zip.Inflater: void end()>
Counter value: 1
SCC 11794 : 1
<java.util.zip.ZStreamRef: void clear()>
Counter value: 1
SCC 11795 : 1
<java.util.zip.ZipFile: void access$100(java.util.zip.ZipFile,java.util.zip.Inflater)>
Counter value: 1
SCC 11796 : 1
<java.util.zip.ZipFile: void releaseInflater(java.util.zip.Inflater)>
Counter value: 1
SCC 11797 : 1
<java.util.zip.Inflater: void reset()>
Counter value: 1
SCC 11798 : 1
<java.util.zip.Inflater: void ensureOpen()>
Counter value: 1
SCC 11799 : 1
<java.util.zip.Inflater: void <clinit>()>
Counter value: 1
SCC 11800 : 1
<java.util.zip.Inflater: boolean ended()>
Counter value: 1
SCC 11801 : 1
<java.util.zip.ZStreamRef: long address()>
Counter value: 1
SCC 11802 : 1
<java.util.ArrayDeque: boolean add(java.lang.Object)>
Counter value: 1
SCC 11803 : 1
<java.util.ArrayDeque: void addLast(java.lang.Object)>
Counter value: 1
SCC 11804 : 1
<java.util.ArrayDeque: void doubleCapacity()>
Counter value: 1
SCC 11805 : 1
<java.io.BufferedReader: void <init>(java.io.Reader)>
Counter value: 1
SCC 11806 : 1
<java.io.BufferedReader: void <init>(java.io.Reader,int)>
Counter value: 1
SCC 11807 : 1
<java.io.Reader: void <init>(java.lang.Object)>
Counter value: 1
SCC 11808 : 1
<java.nio.charset.CharsetDecoder: java.nio.charset.Charset charset()>
Counter value: 1
SCC 11809 : 1
<sun.nio.cs.StreamDecoder: void <clinit>()>
Counter value: 1
SCC 11810 : 1
<java.lang.Thread: boolean isAlive()>
Counter value: 1
SCC 11811 : 1
<sun.util.locale.provider.SPILocaleProviderAdapter$1: void <init>(sun.util.locale.provider.SPILocaleProviderAdapter,java.lang.Class)>
Counter value: 1
SCC 11812 : 1
<java.lang.CharacterDataLatin1: boolean isJavaIdentifierStart(int)>
Counter value: 1
SCC 11813 : 1
<java.lang.CharacterData00: boolean isJavaIdentifierStart(int)>
Counter value: 1
SCC 11814 : 1
<java.lang.CharacterData01: boolean isJavaIdentifierStart(int)>
Counter value: 1
SCC 11815 : 1
<java.lang.Character: boolean isValidCodePoint(int)>
Counter value: 1
SCC 11816 : 1
<java.lang.Character$Subset: void <init>(java.lang.String)>
Counter value: 1
SCC 11817 : 1
<java.lang.CharacterData0E: boolean isJavaIdentifierStart(int)>
Counter value: 1
SCC 11818 : 1
<java.lang.CharacterDataPrivateUse: boolean isJavaIdentifierStart(int)>
Counter value: 1
SCC 11819 : 1
<java.lang.CharacterDataUndefined: boolean isJavaIdentifierStart(int)>
Counter value: 1
SCC 11820 : 1
<sun.util.cldr.CLDRLocaleProviderAdapter: java.text.spi.CollatorProvider getCollatorProvider()>
Counter value: 1
SCC 11821 : 1
<sun.util.cldr.CLDRLocaleProviderAdapter: java.text.spi.BreakIteratorProvider getBreakIteratorProvider()>
Counter value: 1
SCC 11822 : 1
<sun.util.locale.provider.CalendarProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11823 : 1
<sun.util.spi.CalendarProvider: void <init>()>
Counter value: 1
SCC 11824 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11825 : 1
<java.util.spi.CalendarNameProvider: void <init>()>
Counter value: 1
SCC 11826 : 1
<sun.util.locale.provider.CalendarNameProviderImpl: void <clinit>()>
Counter value: 1
SCC 11827 : 1
<sun.util.locale.provider.CalendarDataProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11828 : 1
<java.util.spi.CalendarDataProvider: void <init>()>
Counter value: 1
SCC 11829 : 1
<sun.util.locale.provider.TimeZoneNameProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11830 : 1
<java.util.spi.TimeZoneNameProvider: void <init>()>
Counter value: 1
SCC 11831 : 1
<sun.util.locale.provider.LocaleNameProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11832 : 1
<java.util.spi.LocaleNameProvider: void <init>()>
Counter value: 1
SCC 11833 : 1
<sun.util.locale.provider.CurrencyNameProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11834 : 1
<java.util.spi.CurrencyNameProvider: void <init>()>
Counter value: 1
SCC 11835 : 1
<sun.util.locale.provider.NumberFormatProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11836 : 1
<java.text.spi.NumberFormatProvider: void <init>()>
Counter value: 1
SCC 11837 : 1
<sun.util.locale.provider.DecimalFormatSymbolsProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11838 : 1
<java.text.spi.DecimalFormatSymbolsProvider: void <init>()>
Counter value: 1
SCC 11839 : 1
<sun.util.locale.provider.DateFormatSymbolsProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11840 : 1
<java.text.spi.DateFormatSymbolsProvider: void <init>()>
Counter value: 1
SCC 11841 : 1
<sun.util.locale.provider.DateFormatProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11842 : 1
<java.text.spi.DateFormatProvider: void <init>()>
Counter value: 1
SCC 11843 : 1
<sun.util.locale.provider.CollatorProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11844 : 1
<java.text.spi.CollatorProvider: void <init>()>
Counter value: 1
SCC 11845 : 1
<java.util.ResourceBundle$1: java.lang.Object handleGetObject(java.lang.String)>
Counter value: 1
SCC 11846 : 1
<java.util.HashSet: void <init>()>
Counter value: 1
SCC 11847 : 1
<sun.util.locale.provider.JRELocaleProviderAdapter$1: void <init>(java.io.File)>
Counter value: 1
SCC 11848 : 1
<sun.util.locale.provider.BreakIteratorProviderImpl: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>
Counter value: 1
SCC 11849 : 1
<java.text.spi.BreakIteratorProvider: void <init>()>
Counter value: 1
SCC 11850 : 1
<java.util.spi.LocaleServiceProvider: void <init>()>
Counter value: 1
SCC 11851 : 1
<java.lang.InternalError: void <init>(java.lang.String)>
Counter value: 1
SCC 11852 : 1
<sun.util.cldr.CLDRLocaleProviderAdapter$1: void <init>(sun.util.cldr.CLDRLocaleProviderAdapter,java.io.File)>
Counter value: 1
SCC 11853 : 1
<sun.util.locale.provider.LocaleProviderAdapter: void <init>()>
Counter value: 1
SCC 11854 : 1
<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.resources.LocaleData getLocaleData()>
Counter value: 1
SCC 11855 : 1
<sun.util.cldr.CLDRLocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter$Type getAdapterType()>
Counter value: 1
SCC 11856 : 1
<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter$Type getAdapterType()>
Counter value: 1
SCC 11857 : 1
<sun.util.locale.provider.FallbackLocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter$Type getAdapterType()>
Counter value: 1
SCC 11858 : 1
<sun.util.resources.LocaleData: void <init>(sun.util.locale.provider.LocaleProviderAdapter$Type)>
Counter value: 1
SCC 11859 : 1
<java.util.Collections: java.util.List emptyList()>
Counter value: 1
SCC 11860 : 1
<sun.util.locale.provider.LocaleProviderAdapter$Type: void <clinit>()>
Counter value: 1
SCC 11861 : 1
<sun.util.locale.provider.LocaleProviderAdapter$Type: void <init>(java.lang.String,int)>
Counter value: 1
SCC 11862 : 1
<sun.util.locale.provider.LocaleProviderAdapter$Type: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>
Counter value: 1
SCC 11863 : 1
<java.lang.Enum: void <init>(java.lang.String,int)>
Counter value: 1
SCC 11864 : 1
<java.lang.Class$4: void <init>(java.lang.Class)>
Counter value: 1
SCC 11865 : 1
<java.util.LinkedHashMap: java.util.Collection values()>
Counter value: 1
SCC 11866 : 1
<java.util.LinkedHashMap$LinkedValues: void <init>(java.util.LinkedHashMap)>
Counter value: 1
SCC 11867 : 1
<java.util.HashMap: java.util.Collection values()>
Counter value: 1
SCC 11868 : 1
<java.util.HashMap$Values: void <init>(java.util.HashMap)>
Counter value: 1
SCC 11869 : 1
<java.lang.ref.Reference$1: void <init>()>
Counter value: 1
SCC 11870 : 1
<java.lang.Class$ReflectCache: void release()>
Counter value: 1
SCC 11871 : 1
<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>
Counter value: 1
SCC 11872 : 1
<java.lang.Class$ReflectCache: java.lang.Class$ReflectCache acquire()>
Counter value: 1
SCC 11873 : 1
<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>
Counter value: 1
SCC 11874 : 1
<java.lang.Class$ReflectCache: void <init>(java.lang.Class)>
Counter value: 1
SCC 11875 : 1
<java.lang.Class$MethodInfo: void <init>(java.lang.Class,java.lang.Class$MethodInfo)>
Counter value: 1
SCC 11876 : 1
<java.lang.Class$MethodInfo: void <init>(java.lang.Class,java.lang.reflect.Method)>
Counter value: 1
SCC 11877 : 1
<java.lang.Class: boolean doParameterTypesMatch(java.lang.Class[],java.lang.Class[])>
Counter value: 1
SCC 11878 : 1
<java.lang.reflect.Modifier: boolean isStatic(int)>
Counter value: 1
SCC 11879 : 1
<java.lang.reflect.Modifier: boolean isAbstract(int)>
Counter value: 1
SCC 11880 : 1
<java.lang.Class: boolean methodAOverridesMethodB(java.lang.Class,boolean,boolean,java.lang.Class,boolean,boolean)>
Counter value: 1
SCC 11881 : 1
<java.lang.NoSuchMethodException: void <init>(java.lang.String)>
Counter value: 1
SCC 11882 : 1
<java.lang.Class$EnumVars: void <init>()>
Counter value: 1
SCC 11883 : 1
<java.lang.Class: java.lang.Class$ReflectCache peekReflectCache()>
Counter value: 1
SCC 11884 : 1
<java.lang.Class$CacheKey: int hashCombine(int,int)>
Counter value: 1
SCC 11885 : 1
<java.lang.NoSuchFieldException: void <init>(java.lang.String)>
Counter value: 1
SCC 11886 : 1
<java.lang.Class$MetadataCache: void <init>()>
Counter value: 1
SCC 11887 : 1
<java.util.Date: void setTime(long)>
Counter value: 1
SCC 11888 : 1
<java.lang.Enum: java.lang.String name()>
Counter value: 1
SCC 11889 : 1
<java.io.Writer: void <init>()>
Counter value: 1
SCC 11890 : 1
<java.io.Writer: void <init>(java.lang.Object)>
Counter value: 1
SCC 11891 : 1
<java.io.PrintWriter: void close()>
Counter value: 1
SCC 11892 : 1
<java.io.StringWriter: void close()>
Counter value: 1
SCC 11893 : 1
<java.io.StringWriter: void flush()>
Counter value: 1
SCC 11894 : 1
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: boolean isLoggable(sun.util.logging.PlatformLogger$Level)>
Counter value: 1
SCC 11895 : 1
<sun.util.logging.PlatformLogger$Level: int intValue()>
Counter value: 1
SCC 11896 : 1
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: java.io.PrintStream outputStream()>
Counter value: 1
SCC 11897 : 1
<java.util.Collections: java.util.List unmodifiableList(java.util.List)>
Counter value: 1
SCC 11898 : 1
<java.util.Collections$UnmodifiableRandomAccessList: void <init>(java.util.List)>
Counter value: 1
SCC 11899 : 1
<java.util.Collections$UnmodifiableList: void <init>(java.util.List)>
Counter value: 1
SCC 11900 : 1
<java.lang.Enum: int ordinal()>
Counter value: 1
SCC 11901 : 1
<java.util.Locale: java.lang.String getScript()>
Counter value: 1
SCC 11902 : 1
<sun.util.locale.BaseLocale: java.lang.String getScript()>
Counter value: 1
SCC 11903 : 1
<java.util.Locale: java.lang.String getCountry()>
Counter value: 1
SCC 11904 : 1
<sun.util.locale.BaseLocale: java.lang.String getRegion()>
Counter value: 1
SCC 11905 : 1
<java.util.Locale: java.lang.String getVariant()>
Counter value: 1
SCC 11906 : 1
<sun.util.locale.BaseLocale: java.lang.String getVariant()>
Counter value: 1
SCC 11907 : 1
<java.util.regex.Pattern: java.util.regex.PatternSyntaxException error(java.lang.String)>
Counter value: 1
SCC 11908 : 1
<java.util.regex.PatternSyntaxException: void <init>(java.lang.String,java.lang.String,int)>
Counter value: 1
SCC 11909 : 1
<java.lang.Throwable: void <clinit>()>
Counter value: 1
SCC 11910 : 1
<sun.util.logging.LoggingSupport$1: void <init>()>
Counter value: 1
SCC 11911 : 1
<sun.util.logging.PlatformLogger$1: void <init>()>
Counter value: 1
SCC 11912 : 1
<java.util.Currency$1: void <init>()>
Counter value: 1
SCC 11913 : 1
<java.security.Provider: java.lang.String getName()>
Counter value: 1
SCC 11914 : 1
<sun.reflect.ReflectionFactory: void <init>()>
Counter value: 1
SCC 11915 : 1
<sun.reflect.ReflectionFactory$GetReflectionFactoryAction: void <init>()>
Counter value: 1
SCC 11916 : 1
<java.lang.reflect.ReflectAccess: void <init>()>
Counter value: 1
SCC 11917 : 1
<java.lang.reflect.Modifier: boolean isPublic(int)>
Counter value: 1
SCC 11918 : 1
<java.security.InvalidParameterException: void <init>(java.lang.String)>
Counter value: 1
SCC 11919 : 1
<java.security.NoSuchAlgorithmException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 11920 : 1
<java.security.GeneralSecurityException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 11921 : 1
<sun.security.jca.GetInstance$Instance: void <init>(java.security.Provider,java.lang.Object,sun.security.jca.GetInstance$1)>
Counter value: 1
SCC 11922 : 1
<sun.security.jca.GetInstance$Instance: void <init>(java.security.Provider,java.lang.Object)>
Counter value: 1
SCC 11923 : 1
<java.security.Provider$Service: java.lang.String getClassName()>
Counter value: 1
SCC 11924 : 1
<java.security.Provider$Service: java.lang.String getType()>
Counter value: 1
SCC 11925 : 1
<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>
Counter value: 1
SCC 11926 : 1
<java.util.Base64: java.util.Base64$Decoder getMimeDecoder()>
Counter value: 1
SCC 11927 : 1
<java.security.MessageDigest: void update(byte)>
Counter value: 1
SCC 11928 : 1
<java.security.MessageDigest$Delegate: void engineUpdate(byte)>
Counter value: 1
SCC 11929 : 1
<java.util.zip.ZipEntry: long getSize()>
Counter value: 1
SCC 11930 : 1
<sun.nio.cs.US_ASCII$Encoder: int encodeASCII(char[],int,int,byte[],int)>
Counter value: 1
SCC 11931 : 1
<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>
Counter value: 1
SCC 11932 : 1
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>
Counter value: 1
SCC 11933 : 1
<java.nio.charset.CharsetEncoder: void implReset()>
Counter value: 1
SCC 11934 : 1
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>
Counter value: 1
SCC 11935 : 1
<java.nio.charset.CharsetEncoder: void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)>
Counter value: 1
SCC 11936 : 1
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>
Counter value: 1
SCC 11937 : 1
<java.nio.charset.CharsetEncoder: void implOnMalformedInput(java.nio.charset.CodingErrorAction)>
Counter value: 1
SCC 11938 : 1
<sun.nio.cs.US_ASCII$Encoder: void implReplaceWith(byte[])>
Counter value: 1
SCC 11939 : 1
<java.nio.charset.CharsetEncoder: java.nio.charset.Charset charset()>
Counter value: 1
SCC 11940 : 1
<java.util.zip.ZipCoder: boolean isUTF8()>
Counter value: 1
SCC 11941 : 1
<java.util.zip.ZipEntry: void <init>()>
Counter value: 1
SCC 11942 : 1
<java.util.zip.ZipUtils: java.nio.file.attribute.FileTime winTimeToFileTime(long)>
Counter value: 1
SCC 11943 : 1
<java.util.zip.ZipUtils: java.nio.file.attribute.FileTime unixTimeToFileTime(long)>
Counter value: 1
SCC 11944 : 1
<java.nio.file.attribute.FileTime: java.nio.file.attribute.FileTime 'from'(long,java.util.concurrent.TimeUnit)>
Counter value: 1
SCC 11945 : 1
<java.nio.file.attribute.FileTime: void <init>(long,java.util.concurrent.TimeUnit,java.time.Instant)>
Counter value: 1
SCC 11946 : 1
<java.util.zip.ZipFile: void ensureOpen()>
Counter value: 1
SCC 11947 : 1
<java.util.jar.JarFile$JarFileEntry: void <init>(java.util.jar.JarFile,java.util.zip.ZipEntry)>
Counter value: 1
SCC 11948 : 1
<java.util.jar.JarEntry: void <init>(java.util.zip.ZipEntry)>
Counter value: 1
SCC 11949 : 1
<java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>
Counter value: 1
SCC 11950 : 1
<java.util.WeakHashMap: java.util.WeakHashMap$Entry[] newTable(int)>
Counter value: 1
SCC 11951 : 1
<java.lang.ref.ReferenceQueue: void <init>()>
Counter value: 1
SCC 11952 : 1
<java.util.ArrayDeque: void <init>()>
Counter value: 1
SCC 11953 : 1
<sun.misc.PerfCounter: void increment()>
Counter value: 1
SCC 11954 : 1
<sun.misc.PerfCounter: void addElapsedTimeFrom(long)>
Counter value: 1
SCC 11955 : 1
<sun.misc.PerfCounter: void add(long)>
Counter value: 1
SCC 11956 : 1
<sun.misc.PerfCounter: long get()>
Counter value: 1
SCC 11957 : 1
<java.util.ArrayDeque: void <clinit>()>
Counter value: 1
SCC 11958 : 1
<sun.misc.Perf: void <clinit>()>
Counter value: 1
SCC 11959 : 1
<sun.misc.Perf: void <init>()>
Counter value: 1
SCC 11960 : 1
<sun.misc.Perf$GetPerfAction: void <init>()>
Counter value: 1
SCC 11961 : 1
<sun.misc.PerfCounter: sun.misc.PerfCounter getZipFileOpenTime()>
Counter value: 1
SCC 11962 : 1
<sun.misc.PerfCounter: sun.misc.PerfCounter getZipFileCount()>
Counter value: 1
SCC 11963 : 1
<java.util.jar.JavaUtilJarAccessImpl: void <init>()>
Counter value: 1
SCC 11964 : 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>
Counter value: 1
SCC 11965 : 1
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>
Counter value: 1
SCC 11966 : 1
<java.io.FilterInputStream: void <init>(java.io.InputStream)>
Counter value: 1
SCC 11967 : 1
<java.io.FileInputStream: void open(java.lang.String)>
Counter value: 1
SCC 11968 : 1
<java.io.InputStream: void <init>()>
Counter value: 1
SCC 11969 : 1
<java.io.FileNotFoundException: void <init>(java.lang.String)>
Counter value: 1
SCC 11970 : 1
<java.io.FileDescriptor: void <init>()>
Counter value: 1
SCC 11971 : 1
<java.io.FileDescriptor: void <init>(int)>
Counter value: 1
SCC 11972 : 1
<java.io.FileDescriptor$1: void <init>()>
Counter value: 1
SCC 11973 : 1
<com.ibm.oti.vm.AbstractClassLoader$CacheLock: void <init>(com.ibm.oti.vm.AbstractClassLoader$1)>
Counter value: 1
SCC 11974 : 1
<com.ibm.oti.vm.AbstractClassLoader$CacheLock: void <init>()>
Counter value: 1
SCC 11975 : 1
<java.lang.Byte: int compare(byte,byte)>
Counter value: 1
SCC 11976 : 1
<sun.security.x509.X509CRLImpl$X509IssuerSerial: int compareTo(java.lang.Object)>
Counter value: 1
SCC 11977 : 1
<sun.security.x509.X509CRLImpl$X509IssuerSerial: int compareTo(sun.security.x509.X509CRLImpl$X509IssuerSerial)>
Counter value: 1
SCC 11978 : 1
<java.lang.ProcessEnvironment$ExternalData: byte[] getBytes()>
Counter value: 1
SCC 11979 : 1
<java.lang.ProcessEnvironment: int arrayCompare(byte[],byte[])>
Counter value: 1
SCC 11980 : 1
<java.lang.ProcessEnvironment$StringEnvironment: void <init>(java.util.Map)>
Counter value: 1
SCC 11981 : 1
<java.lang.ProcessEnvironment$Variable: void <init>(java.lang.String,byte[])>
Counter value: 1
SCC 11982 : 1
<java.lang.ProcessEnvironment$Value: void <init>(java.lang.String,byte[])>
Counter value: 1
SCC 11983 : 1
<java.lang.ProcessEnvironment$ExternalData: void <init>(java.lang.String,byte[])>
Counter value: 1
SCC 11984 : 1
<java.util.TreeMap: java.util.TreeMap$Entry getEntryUsingComparator(java.lang.Object)>
Counter value: 1
SCC 11985 : 1
<java.lang.ClassLoader: void setDefaultAssertionStatusImpl(boolean)>
Counter value: 1
SCC 11986 : 1
<java.lang.ClassLoader$AssertionLock: void <init>()>
Counter value: 1
SCC 11987 : 1
<java.lang.ClassLoader$LazyInitLock: void <init>()>
Counter value: 1
SCC 11988 : 1
<java.util.ResourceBundle$RBClassLoader$1: void <init>()>
Counter value: 1
SCC 11989 : 1
<sun.text.normalizer.ICUData$1: void <init>(java.lang.Class,java.lang.String)>
Counter value: 1
SCC 11990 : 1
<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
Counter value: 1
SCC 11991 : 1
<sun.text.normalizer.VersionInfo: void <init>(int)>
Counter value: 1
SCC 11992 : 1
<sun.text.normalizer.VersionInfo: int getInt(int,int,int,int)>
Counter value: 1
SCC 11993 : 1
<sun.text.normalizer.VersionInfo: void <clinit>()>
Counter value: 1
SCC 11994 : 1
<sun.text.normalizer.NormalizerBase: void <clinit>()>
Counter value: 1
SCC 11995 : 1
<sun.text.normalizer.NormalizerBase$NFDMode: void <init>(int,sun.text.normalizer.NormalizerBase$1)>
Counter value: 1
SCC 11996 : 1
<sun.text.normalizer.NormalizerBase$NFDMode: void <init>(int)>
Counter value: 1
SCC 11997 : 1
<sun.text.normalizer.NormalizerBase$NFKDMode: void <init>(int,sun.text.normalizer.NormalizerBase$1)>
Counter value: 1
SCC 11998 : 1
<sun.text.normalizer.NormalizerBase$NFKDMode: void <init>(int)>
Counter value: 1
SCC 11999 : 1
<sun.text.normalizer.NormalizerBase$NFCMode: void <init>(int,sun.text.normalizer.NormalizerBase$1)>
Counter value: 1
SCC 12000 : 1
<sun.text.normalizer.NormalizerBase$NFCMode: void <init>(int)>
Counter value: 1
SCC 12001 : 1
<sun.text.normalizer.NormalizerBase$NFKCMode: void <init>(int,sun.text.normalizer.NormalizerBase$1)>
Counter value: 1
SCC 12002 : 1
<sun.text.normalizer.NormalizerBase$NFKCMode: void <init>(int)>
Counter value: 1
SCC 12003 : 1
<sun.text.normalizer.NormalizerBase$Mode: void <init>(int,sun.text.normalizer.NormalizerBase$1)>
Counter value: 1
SCC 12004 : 1
<sun.text.normalizer.NormalizerBase$Mode: void <init>(int)>
Counter value: 1
SCC 12005 : 1
<sun.text.normalizer.NormalizerBase$QuickCheckResult: void <init>(int,sun.text.normalizer.NormalizerBase$1)>
Counter value: 1
SCC 12006 : 1
<sun.text.normalizer.NormalizerBase$QuickCheckResult: void <init>(int)>
Counter value: 1
SCC 12007 : 1
<java.util.regex.Pattern: boolean has(int)>
Counter value: 1
SCC 12008 : 1
<java.util.regex.Pattern$Prolog: boolean study(java.util.regex.Pattern$TreeInfo)>
Counter value: 1
SCC 12009 : 1
<java.util.regex.Pattern$BranchConn: boolean study(java.util.regex.Pattern$TreeInfo)>
Counter value: 1
SCC 12010 : 1
<java.util.regex.Pattern$LazyLoop: boolean study(java.util.regex.Pattern$TreeInfo)>
Counter value: 1
SCC 12011 : 1
<java.util.regex.Pattern$Loop: boolean study(java.util.regex.Pattern$TreeInfo)>
Counter value: 1
SCC 12012 : 1
<java.util.regex.Pattern$TreeInfo: void <init>()>
Counter value: 1
SCC 12013 : 1
<java.util.regex.Pattern$TreeInfo: void reset()>
Counter value: 1
SCC 12014 : 1
<java.lang.Character: boolean isSurrogate(char)>
Counter value: 1
SCC 12015 : 1
<java.util.regex.Pattern$BnM: void <init>(int[],int[],int[],java.util.regex.Pattern$Node)>
Counter value: 1
SCC 12016 : 4
<java.util.regex.Pattern: void <clinit>()>
<java.util.regex.Pattern$Node: void <init>()>
<java.util.regex.Pattern$4: void <init>()>
<java.util.regex.Pattern$LastNode: void <init>()>
Counter value: 4
SCC 12017 : 1
<java.util.Vector$Itr: java.lang.Object next()>
Counter value: 1
SCC 12018 : 1
<java.util.Vector: java.lang.Object elementData(int)>
Counter value: 1
SCC 12019 : 1
<java.util.Vector$Itr: void checkForComodification()>
Counter value: 1
SCC 12020 : 1
<java.util.Vector$Itr: boolean hasNext()>
Counter value: 1
SCC 12021 : 1
<java.util.AbstractCollection: int hugeCapacity(int)>
Counter value: 1
SCC 12022 : 1
<java.util.ArrayList$SubList: void <init>(java.util.ArrayList,java.util.AbstractList,int,int,int)>
Counter value: 1
SCC 12023 : 1
<java.security.spec.ECFieldFp: void <init>(java.math.BigInteger)>
Counter value: 1
SCC 12024 : 1
<java.security.spec.ECFieldF2m: int getFieldSize()>
Counter value: 1
SCC 12025 : 1
<java.math.BigInteger: boolean testBit(int)>
Counter value: 1
SCC 12026 : 1
<java.lang.Integer: int numberOfTrailingZeros(int)>
Counter value: 1
SCC 12027 : 1
<java.math.BigInteger: int[] makePositive(int[])>
Counter value: 1
SCC 12028 : 1
<java.security.spec.ECFieldFp: java.math.BigInteger getP()>
Counter value: 1
SCC 12029 : 1
<java.security.spec.ECFieldF2m: int getM()>
Counter value: 1
SCC 12030 : 1
<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>
Counter value: 1
SCC 12031 : 1
<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>
Counter value: 1
SCC 12032 : 1
<java.math.BigInteger: int[] add(int[],int[])>
Counter value: 1
SCC 12033 : 1
<java.math.BigInteger: int[] subtract(int[],int[])>
Counter value: 1
SCC 12034 : 1
<java.math.BigInteger: int intValue()>
Counter value: 1
SCC 12035 : 1
<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 12036 : 1
<java.math.BigInteger: int signum()>
Counter value: 1
SCC 12037 : 1
<java.math.BigInteger: int getInt(int)>
Counter value: 1
SCC 12038 : 1
<java.math.BigInteger: int firstNonzeroIntNum()>
Counter value: 1
SCC 12039 : 1
<java.math.BigInteger: int signInt()>
Counter value: 1
SCC 12040 : 1
<sun.security.util.ObjectIdentifier: void checkFirstComponent(int)>
Counter value: 1
SCC 12041 : 1
<sun.security.util.ObjectIdentifier: void checkSecondComponent(int,int)>
Counter value: 1
SCC 12042 : 1
<sun.security.util.ObjectIdentifier: void checkCount(int)>
Counter value: 1
SCC 12043 : 1
<java.util.concurrent.ConcurrentHashMap: void <init>()>
Counter value: 1
SCC 12044 : 1
<java.lang.Integer: int bitCount(int)>
Counter value: 1
SCC 12045 : 1
<java.math.BigInteger: void destructiveMulAdd(int[],int,int)>
Counter value: 1
SCC 12046 : 1
<java.math.BigInteger: void reportOverflow()>
Counter value: 1
SCC 12047 : 1
<java.lang.ArithmeticException: void <init>(java.lang.String)>
Counter value: 1
SCC 12048 : 1
<java.lang.Math: double log(double)>
Counter value: 1
SCC 12049 : 1
<java.lang.StrictMath: void <clinit>()>
Counter value: 1
SCC 12050 : 1
<java.math.BigInteger: void <init>(long)>
Counter value: 1
SCC 12051 : 1
<java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>
Counter value: 1
SCC 12052 : 1
<sun.security.util.DisabledAlgorithmConstraints: sun.security.util.DisabledAlgorithmConstraints jarConstraints()>
Counter value: 1
SCC 12053 : 1
<java.util.jar.Attributes$Name: boolean isAlpha(char)>
Counter value: 1
SCC 12054 : 1
<java.util.jar.Attributes$Name: boolean isDigit(char)>
Counter value: 1
SCC 12055 : 1
<java.lang.InheritableThreadLocal: void <init>()>
Counter value: 1
SCC 12056 : 1
<java.io.ExpiringCache$Entry: java.lang.String val()>
Counter value: 1
SCC 12057 : 1
<java.io.ExpiringCache$Entry: void setVal(java.lang.String)>
Counter value: 1
SCC 12058 : 1
<java.io.ExpiringCache$Entry: void setTimestamp(long)>
Counter value: 1
SCC 12059 : 1
<java.io.ExpiringCache$Entry: long timestamp()>
Counter value: 1
SCC 12060 : 1
<java.io.ExpiringCache$Entry: void <init>(long,java.lang.String)>
Counter value: 1
SCC 12061 : 1
<java.io.UnixFileSystem: boolean isAbsolute(java.io.File)>
Counter value: 1
SCC 12062 : 1
<java.io.File: int getPrefixLength()>
Counter value: 1
SCC 12063 : 1
<java.io.FilePermission: java.lang.String access$000(java.io.FilePermission)>
Counter value: 1
SCC 12064 : 1
<java.io.FilePermission$1: void <init>(java.io.FilePermission)>
Counter value: 1
SCC 12065 : 1
<sun.security.jca.ProviderConfig$1: void <init>(sun.security.jca.ProviderConfig)>
Counter value: 1
SCC 12066 : 1
<java.net.URI: boolean isAbsolute()>
Counter value: 1
SCC 12067 : 1
<sun.security.util.PropertyExpander$ExpandException: void <init>(java.lang.String)>
Counter value: 1
SCC 12068 : 1
<java.lang.Character: char forDigit(int,int)>
Counter value: 1
SCC 12069 : 1
<java.util.BitSet: int wordIndex(int)>
Counter value: 1
SCC 12070 : 1
<sun.security.jca.ProviderConfig$3: void <init>(java.lang.String)>
Counter value: 1
SCC 12071 : 1
<sun.security.jca.ProviderList$2: void <init>()>
Counter value: 1
SCC 12072 : 1
<sun.security.util.SignatureFileVerifier: void setSignatureFile(byte[])>
Counter value: 1
SCC 12073 : 1
<sun.security.util.SignatureFileVerifier: boolean needSignatureFileBytes()>
Counter value: 1
SCC 12074 : 1
<sun.security.action.GetIntegerAction: void <init>(java.lang.String,int)>
Counter value: 1
SCC 12075 : 1
<java.security.CodeSigner: java.security.cert.CertPath getSignerCertPath()>
Counter value: 1
SCC 12076 : 1
<java.util.LinkedList: java.lang.Object[] toArray()>
Counter value: 1
SCC 12077 : 1
<java.lang.Thread: java.lang.Object clone()>
Counter value: 1
SCC 12078 : 1
<java.lang.CloneNotSupportedException: void <init>()>
Counter value: 1
SCC 12079 : 1
<java.security.MessageDigest: void update(byte[],int,int)>
Counter value: 1
SCC 12080 : 1
<java.security.MessageDigest$Delegate: void engineUpdate(byte[],int,int)>
Counter value: 1
SCC 12081 : 1
<java.util.ArrayList: java.lang.Object elementData(int)>
Counter value: 1
SCC 12082 : 1
<java.io.PushbackInputStream: void ensureOpen()>
Counter value: 1
SCC 12083 : 1
<java.io.EOFException: void <init>()>
Counter value: 1
SCC 12084 : 1
<java.lang.Byte: int toUnsignedInt(byte)>
Counter value: 1
SCC 12085 : 1
<java.util.zip.ZipInputStream: void ensureOpen()>
Counter value: 1
SCC 12086 : 1
<java.util.zip.Inflater: void setInput(byte[],int,int)>
Counter value: 1
SCC 12087 : 1
<java.lang.ArrayIndexOutOfBoundsException: void <init>()>
Counter value: 1
SCC 12088 : 1
<java.io.EOFException: void <init>(java.lang.String)>
Counter value: 1
SCC 12089 : 1
<java.util.zip.InflaterInputStream: void ensureOpen()>
Counter value: 1
SCC 12090 : 1
<java.util.WeakHashMap: java.util.WeakHashMap$Entry[] getTable()>
Counter value: 1
SCC 12091 : 1
<java.util.WeakHashMap: java.lang.Object maskNull(java.lang.Object)>
Counter value: 1
SCC 12092 : 1
<sun.security.x509.X509CertImpl: byte[] getEncodedInternal()>
Counter value: 1
SCC 12093 : 1
<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>
Counter value: 1
SCC 12094 : 1
<java.security.cert.CertificateException: void <init>(java.lang.String)>
Counter value: 1
SCC 12095 : 1
<java.util.Arrays: boolean equals(byte[],byte[])>
Counter value: 1
SCC 12096 : 1
<java.util.zip.ZipFile: java.util.Map access$000(java.util.zip.ZipFile)>
Counter value: 1
SCC 12097 : 1
<java.util.zip.ZipFile: void access$1300(java.util.zip.ZipFile)>
Counter value: 1
SCC 12098 : 1
<java.util.zip.ZipFile: void ensureOpenOrZipException()>
Counter value: 1
SCC 12099 : 1
<java.util.zip.ZipException: void <init>(java.lang.String)>
Counter value: 1
SCC 12100 : 1
<java.util.zip.ZipFile: long access$400(java.util.zip.ZipFile)>
Counter value: 1
SCC 12101 : 1
<java.io.FileInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 12102 : 1
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: void throwCCE()>
Counter value: 1
SCC 12103 : 1
<java.lang.IllegalAccessException: void <init>(java.lang.String)>
Counter value: 1
SCC 12104 : 1
<java.lang.ReflectiveOperationException: void <init>(java.lang.String)>
Counter value: 1
SCC 12105 : 1
<java.io.BufferedInputStream: java.io.InputStream getInIfOpen()>
Counter value: 1
SCC 12106 : 1
<java.io.BufferedInputStream: byte[] getBufIfOpen()>
Counter value: 1
SCC 12107 : 1
<java.io.ByteArrayInputStream: int read(byte[],int,int)>
Counter value: 1
SCC 12108 : 1
<java.nio.charset.CharsetDecoder: float maxCharsPerByte()>
Counter value: 1
SCC 12109 : 1
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>
Counter value: 1
SCC 12110 : 1
<java.nio.charset.CharsetDecoder: void implReset()>
Counter value: 1
SCC 12111 : 1
<java.nio.HeapByteBuffer: byte get()>
Counter value: 1
SCC 12112 : 1
<java.nio.HeapByteBuffer: int ix(int)>
Counter value: 1
SCC 12113 : 1
<sun.nio.cs.US_ASCII$Decoder: int decodeASCII(byte[],int,int,char[],int)>
Counter value: 1
SCC 12114 : 1
<java.nio.CharBuffer: int arrayOffset()>
Counter value: 1
SCC 12115 : 1
<java.nio.CharBuffer: char[] array()>
Counter value: 1
SCC 12116 : 1
<java.nio.ByteBuffer: boolean hasArray()>
Counter value: 1
SCC 12117 : 1
<java.nio.CharBuffer: boolean hasArray()>
Counter value: 1
SCC 12118 : 1
<java.nio.HeapCharBuffer: java.nio.CharBuffer put(char)>
Counter value: 1
SCC 12119 : 1
<java.nio.Buffer: int nextPutIndex()>
Counter value: 1
SCC 12120 : 1
<java.nio.HeapCharBuffer: boolean isReadOnly()>
Counter value: 1
SCC 12121 : 1
<java.nio.Buffer: void checkBounds(int,int,int)>
Counter value: 1
SCC 12122 : 1
<java.nio.charset.CoderResult: int length()>
Counter value: 1
SCC 12123 : 1
<java.nio.charset.CoderResult: boolean isError()>
Counter value: 1
SCC 12124 : 1
<java.nio.charset.CoderResult: boolean isUnmappable()>
Counter value: 1
SCC 12125 : 1
<java.nio.charset.CoderResult: boolean isMalformed()>
Counter value: 1
SCC 12126 : 1
<java.nio.charset.CoderResult: boolean isOverflow()>
Counter value: 1
SCC 12127 : 1
<java.nio.BufferOverflowException: void <init>()>
Counter value: 1
SCC 12128 : 1
<java.nio.charset.MalformedInputException: void <init>(int)>
Counter value: 1
SCC 12129 : 1
<java.nio.charset.UnmappableCharacterException: void <init>(int)>
Counter value: 1
SCC 12130 : 1
<java.nio.charset.CharacterCodingException: void <init>()>
Counter value: 1
SCC 12131 : 1
<java.io.IOException: void <init>()>
Counter value: 1
SCC 12132 : 1
<java.nio.charset.CoderResult: boolean isUnderflow()>
Counter value: 1
SCC 12133 : 1
<java.lang.StringCoding: int access$000(int,float)>
Counter value: 1
SCC 12134 : 1
<java.lang.StringCoding: int scale(int,float)>
Counter value: 1
SCC 12135 : 1
<java.nio.HeapByteBuffer: void <clinit>()>
Counter value: 1
SCC 12136 : 1
<java.lang.StringCoding$StringDecoder: java.lang.String charsetName()>
Counter value: 1
SCC 12137 : 1
<sun.nio.cs.US_ASCII: java.lang.String historicalName()>
Counter value: 1
SCC 12138 : 1
<java.nio.charset.Charset: java.lang.String name()>
Counter value: 1
SCC 12139 : 1
<java.lang.StringCoding$StringDecoder: java.lang.String requestedCharsetName()>
Counter value: 1
SCC 12140 : 1
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>
Counter value: 1
SCC 12141 : 1
<java.nio.charset.CharsetDecoder: void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)>
Counter value: 1
SCC 12142 : 1
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>
Counter value: 1
SCC 12143 : 1
<java.nio.charset.CharsetDecoder: void implOnMalformedInput(java.nio.charset.CodingErrorAction)>
Counter value: 1
SCC 12144 : 1
<java.lang.Class: java.lang.ClassLoader getClassLoader0()>
Counter value: 1
SCC 12145 : 1
<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>
Counter value: 1
SCC 12146 : 1
<java.lang.StringCoding: void set(java.lang.ThreadLocal,java.lang.Object)>
Counter value: 1
SCC 12147 : 1
<java.lang.ref.SoftReference: void <init>(java.lang.Object)>
Counter value: 1
SCC 12148 : 1
<java.lang.StringCoding: void <clinit>()>
Counter value: 1
SCC 12149 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
Counter value: 1
SCC 12150 : 1
<java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
Counter value: 1
SCC 12151 : 1
<java.lang.ProcessEnvironment$StringEntry: java.lang.String getValue()>
Counter value: 1
SCC 12152 : 1
<java.text.AttributeEntry: java.lang.Object getValue()>
Counter value: 1
SCC 12153 : 1
<java.util.TreeMap$Entry: java.lang.Object getValue()>
Counter value: 1
SCC 12154 : 1
<java.util.HashMap$Node: java.lang.Object getValue()>
Counter value: 1
SCC 12155 : 1
<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
Counter value: 1
SCC 12156 : 1
<java.util.Hashtable$Entry: java.lang.Object getValue()>
Counter value: 1
SCC 12157 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
Counter value: 1
SCC 12158 : 1
<java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
Counter value: 1
SCC 12159 : 1
<java.lang.ProcessEnvironment$StringEntry: java.lang.String getKey()>
Counter value: 1
SCC 12160 : 1
<java.text.AttributeEntry: java.lang.Object getKey()>
Counter value: 1
SCC 12161 : 1
<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute getKey()>
Counter value: 1
SCC 12162 : 1
<java.util.TreeMap$Entry: java.lang.Object getKey()>
Counter value: 1
SCC 12163 : 1
<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
Counter value: 1
SCC 12164 : 1
<java.util.Hashtable$Entry: java.lang.Object getKey()>
Counter value: 1
SCC 12165 : 1
<java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
Counter value: 1
SCC 12166 : 1
<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()>
Counter value: 1
SCC 12167 : 1
<java.lang.ProcessEnvironment$StringEntry: void <init>(java.util.Map$Entry)>
Counter value: 1
SCC 12168 : 1
<java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
Counter value: 1
SCC 12169 : 1
<java.lang.ProcessEnvironment$StringKeySet$1: java.lang.String next()>
Counter value: 1
SCC 12170 : 1
<java.lang.ProcessEnvironment$ExternalData: java.lang.String toString()>
Counter value: 1
SCC 12171 : 1
<java.util.LinkedList$ListItr: int nextIndex()>
Counter value: 1
SCC 12172 : 1
<java.util.LinkedList: boolean isElementIndex(int)>
Counter value: 1
SCC 12173 : 1
<javax.security.auth.Subject: java.util.Set getPrincipals()>
Counter value: 1
SCC 12174 : 1
<java.util.TreeMap$ValueIterator: java.lang.Object next()>
Counter value: 1
SCC 12175 : 1
<java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
Counter value: 1
SCC 12176 : 1
<java.util.TreeMap$KeyIterator: java.lang.Object next()>
Counter value: 1
SCC 12177 : 1
<sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String getName()>
Counter value: 1
SCC 12178 : 2
<java.util.Collections$SynchronizedCollection: int size()>
<java.util.Collections$UnmodifiableCollection: int size()>
Counter value: 2
SCC 12179 : 1
<java.lang.ProcessEnvironment$StringEntrySet: int size()>
Counter value: 1
SCC 12180 : 1
<java.lang.ProcessEnvironment$StringKeySet: int size()>
Counter value: 1
SCC 12181 : 1
<java.util.TreeMap$KeySet: int size()>
Counter value: 1
SCC 12182 : 1
<java.util.TreeMap$Values: int size()>
Counter value: 1
SCC 12183 : 1
<java.util.WeakHashMap$Values: int size()>
Counter value: 1
SCC 12184 : 1
<java.util.Collections$EmptySet: int size()>
Counter value: 1
SCC 12185 : 1
<java.util.LinkedHashMap$LinkedEntrySet: int size()>
Counter value: 1
SCC 12186 : 1
<java.util.LinkedHashMap$LinkedValues: int size()>
Counter value: 1
SCC 12187 : 1
<java.util.LinkedHashMap$LinkedKeySet: int size()>
Counter value: 1
SCC 12188 : 1
<java.util.Collections$SingletonSet: int size()>
Counter value: 1
SCC 12189 : 1
<java.util.HashMap$KeySet: int size()>
Counter value: 1
SCC 12190 : 1
<java.util.HashMap$EntrySet: int size()>
Counter value: 1
SCC 12191 : 1
<java.util.HashMap$Values: int size()>
Counter value: 1
SCC 12192 : 1
<java.util.TreeSet: int size()>
Counter value: 1
SCC 12193 : 1
<java.util.TreeMap: int size()>
Counter value: 1
SCC 12194 : 1
<java.util.Hashtable$ValueCollection: int size()>
Counter value: 1
SCC 12195 : 1
<javax.security.auth.Subject$SecureSet: int size()>
Counter value: 1
SCC 12196 : 1
<java.util.HashSet: int size()>
Counter value: 1
SCC 12197 : 1
<java.util.HashMap: int size()>
Counter value: 1
SCC 12198 : 1
<java.util.Hashtable$KeySet: int size()>
Counter value: 1
SCC 12199 : 1
<java.util.Hashtable$EntrySet: int size()>
Counter value: 1
SCC 12200 : 1
<java.util.Hashtable: int access$200(java.util.Hashtable)>
Counter value: 1
SCC 12201 : 1
<javax.security.auth.PrivateCredentialPermission$CredOwner: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 12202 : 1
<javax.security.auth.Subject$SecureSet: int access$000(javax.security.auth.Subject$SecureSet)>
Counter value: 1
SCC 12203 : 1
<java.util.Hashtable$Enumerator: java.lang.Object next()>
Counter value: 1
SCC 12204 : 1
<java.util.Hashtable$Enumerator: java.lang.Object nextElement()>
Counter value: 1
SCC 12205 : 1
<java.util.NoSuchElementException: void <init>(java.lang.String)>
Counter value: 1
SCC 12206 : 1
<java.util.HashMap$ValueIterator: java.lang.Object next()>
Counter value: 1
SCC 12207 : 1
<java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
Counter value: 1
SCC 12208 : 1
<java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
Counter value: 1
SCC 12209 : 1
<java.util.HashMap$Node: java.lang.Object getKey()>
Counter value: 1
SCC 12210 : 1
<java.util.Collections$1: java.lang.Object next()>
Counter value: 1
SCC 12211 : 1
<java.util.HashMap$KeyIterator: java.lang.Object next()>
Counter value: 1
SCC 12212 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: void <init>(java.util.Map$Entry)>
Counter value: 1
SCC 12213 : 1
<java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
Counter value: 1
SCC 12214 : 1
<java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
Counter value: 1
SCC 12215 : 1
<javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
Counter value: 1
SCC 12216 : 1
<java.util.Hashtable$Enumerator: boolean hasNext()>
Counter value: 1
SCC 12217 : 1
<java.util.Hashtable$Enumerator: boolean hasMoreElements()>
Counter value: 1
SCC 12218 : 1
<java.util.Collections$1: boolean hasNext()>
Counter value: 1
SCC 12219 : 1
<java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12220 : 1
<java.lang.ProcessEnvironment$StringEntrySet$1: void <init>(java.lang.ProcessEnvironment$StringEntrySet)>
Counter value: 1
SCC 12221 : 1
<java.lang.ProcessEnvironment$StringEntrySet: java.util.Set access$500(java.lang.ProcessEnvironment$StringEntrySet)>
Counter value: 1
SCC 12222 : 1
<java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12223 : 1
<java.lang.ProcessEnvironment$StringKeySet$1: void <init>(java.lang.ProcessEnvironment$StringKeySet)>
Counter value: 1
SCC 12224 : 1
<java.lang.ProcessEnvironment$StringKeySet: java.util.Set access$800(java.lang.ProcessEnvironment$StringKeySet)>
Counter value: 1
SCC 12225 : 1
<java.util.TreeMap$Values: java.util.Iterator iterator()>
Counter value: 1
SCC 12226 : 1
<java.util.TreeMap$ValueIterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry)>
Counter value: 1
SCC 12227 : 1
<java.util.WeakHashMap$Values: java.util.Iterator iterator()>
Counter value: 1
SCC 12228 : 1
<java.util.WeakHashMap$ValueIterator: void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1)>
Counter value: 1
SCC 12229 : 1
<java.util.WeakHashMap$ValueIterator: void <init>(java.util.WeakHashMap)>
Counter value: 1
SCC 12230 : 1
<java.util.HashMap$Values: java.util.Iterator iterator()>
Counter value: 1
SCC 12231 : 1
<java.util.HashMap$ValueIterator: void <init>(java.util.HashMap)>
Counter value: 1
SCC 12232 : 1
<java.util.TreeSet: java.util.Iterator iterator()>
Counter value: 1
SCC 12233 : 1
<java.util.TreeMap$KeySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12234 : 1
<java.util.TreeMap: java.util.Iterator keyIterator()>
Counter value: 1
SCC 12235 : 1
<java.util.TreeMap$KeyIterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry)>
Counter value: 1
SCC 12236 : 1
<java.util.TreeMap: java.util.NavigableSet navigableKeySet()>
Counter value: 1
SCC 12237 : 1
<java.util.TreeMap$KeySet: void <init>(java.util.NavigableMap)>
Counter value: 1
SCC 12238 : 1
<java.util.Hashtable$ValueCollection: java.util.Iterator iterator()>
Counter value: 1
SCC 12239 : 1
<java.util.Hashtable$KeySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12240 : 1
<java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12241 : 1
<java.util.Hashtable: java.util.Iterator access$100(java.util.Hashtable,int)>
Counter value: 1
SCC 12242 : 1
<java.util.Hashtable: java.util.Iterator getIterator(int)>
Counter value: 1
SCC 12243 : 1
<java.util.Hashtable$Enumerator: void <init>(java.util.Hashtable,int,boolean)>
Counter value: 1
SCC 12244 : 1
<java.util.Hashtable: int access$500(java.util.Hashtable)>
Counter value: 1
SCC 12245 : 1
<java.util.Hashtable: java.util.Hashtable$Entry[] access$400(java.util.Hashtable)>
Counter value: 1
SCC 12246 : 1
<java.util.LinkedHashMap$LinkedValues: java.util.Iterator iterator()>
Counter value: 1
SCC 12247 : 1
<java.util.LinkedHashMap$LinkedValueIterator: void <init>(java.util.LinkedHashMap)>
Counter value: 1
SCC 12248 : 1
<java.util.HashSet: java.util.Iterator iterator()>
Counter value: 1
SCC 12249 : 1
<java.util.HashMap: java.util.Set keySet()>
Counter value: 1
SCC 12250 : 1
<java.util.HashMap$KeySet: void <init>(java.util.HashMap)>
Counter value: 1
SCC 12251 : 1
<java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12252 : 1
<java.util.LinkedHashMap$LinkedKeyIterator: void <init>(java.util.LinkedHashMap)>
Counter value: 1
SCC 12253 : 1
<java.util.LinkedHashMap: java.util.Set keySet()>
Counter value: 1
SCC 12254 : 1
<java.util.LinkedHashMap$LinkedKeySet: void <init>(java.util.LinkedHashMap)>
Counter value: 1
SCC 12255 : 1
<java.util.Collections$EmptyList: java.util.Iterator iterator()>
Counter value: 1
SCC 12256 : 1
<java.util.Collections$SingletonSet: java.util.Iterator iterator()>
Counter value: 1
SCC 12257 : 1
<java.util.Collections: java.util.Iterator singletonIterator(java.lang.Object)>
Counter value: 1
SCC 12258 : 1
<java.util.Collections$1: void <init>(java.lang.Object)>
Counter value: 1
SCC 12259 : 1
<java.util.HashMap$KeySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12260 : 1
<java.util.HashMap$KeyIterator: void <init>(java.util.HashMap)>
Counter value: 1
SCC 12261 : 2
<java.security.Provider: java.util.Set entrySet()>
<java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
Counter value: 2
SCC 12262 : 1
<java.util.Hashtable: java.util.Set entrySet()>
Counter value: 1
SCC 12263 : 1
<java.util.Hashtable$EntrySet: void <init>(java.util.Hashtable,java.util.Hashtable$1)>
Counter value: 1
SCC 12264 : 1
<java.util.Hashtable$EntrySet: void <init>(java.util.Hashtable)>
Counter value: 1
SCC 12265 : 1
<java.util.Collections: java.util.Set synchronizedSet(java.util.Set,java.lang.Object)>
Counter value: 1
SCC 12266 : 1
<java.util.Collections$SynchronizedSet: void <init>(java.util.Set,java.lang.Object)>
Counter value: 1
SCC 12267 : 1
<java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>
Counter value: 1
SCC 12268 : 1
<java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Counter value: 1
SCC 12269 : 1
<java.security.Provider: void checkInitialized()>
Counter value: 1
SCC 12270 : 1
<java.lang.IllegalStateException: void <init>()>
Counter value: 1
SCC 12271 : 1
<java.lang.ProcessEnvironment$StringEnvironment: java.util.Set entrySet()>
Counter value: 1
SCC 12272 : 1
<java.lang.ProcessEnvironment$StringEntrySet: void <init>(java.util.Set)>
Counter value: 1
SCC 12273 : 1
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void <init>(java.util.Set)>
Counter value: 1
SCC 12274 : 1
<java.util.Collections$UnmodifiableSet: void <init>(java.util.Set)>
Counter value: 1
SCC 12275 : 1
<java.util.Collections$UnmodifiableCollection: void <init>(java.util.Collection)>
Counter value: 1
SCC 12276 : 1
<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
Counter value: 1
SCC 12277 : 1
<java.util.Collections$UnmodifiableMap: void <init>(java.util.Map)>
Counter value: 1
SCC 12278 : 1
<java.util.Hashtable: int size()>
Counter value: 1
SCC 12279 : 1
<java.util.ArrayList$SubList$1: java.lang.Object next()>
Counter value: 1
SCC 12280 : 1
<java.util.ArrayList$SubList$1: void checkForComodification()>
Counter value: 1
SCC 12281 : 1
<java.util.ArrayList$SubList$1: boolean hasNext()>
Counter value: 1
SCC 12282 : 1
<java.util.LinkedList$ListItr: java.lang.Object next()>
Counter value: 1
SCC 12283 : 1
<java.util.LinkedList$ListItr: void checkForComodification()>
Counter value: 1
SCC 12284 : 1
<java.util.LinkedList$ListItr: boolean hasNext()>
Counter value: 1
SCC 12285 : 1
<java.util.Vector$ListItr: void <init>(java.util.Vector,int)>
Counter value: 1
SCC 12286 : 1
<java.util.Vector$Itr: void <init>(java.util.Vector,java.util.Vector$1)>
Counter value: 1
SCC 12287 : 1
<java.util.Vector$Itr: void <init>(java.util.Vector)>
Counter value: 1
SCC 12288 : 1
<java.util.ArrayList$SubList$1: void <init>(java.util.ArrayList$SubList,int,int)>
Counter value: 1
SCC 12289 : 1
<java.util.LinkedList$ListItr: void <init>(java.util.LinkedList,int)>
Counter value: 1
SCC 12290 : 1
<java.util.ArrayList$ListItr: void <init>(java.util.ArrayList,int)>
Counter value: 1
SCC 12291 : 1
<java.util.AbstractList$ListItr: void <init>(java.util.AbstractList,int)>
Counter value: 1
SCC 12292 : 1
<java.util.ResourceBundle$CacheKey: int hashCode()>
Counter value: 1
SCC 12293 : 1
<java.lang.reflect.WeakCache$LookupValue: boolean equals(java.lang.Object)>
Counter value: 1
SCC 12294 : 1
<java.net.InetAddress$CachedAddresses: void <init>(java.lang.String,java.net.InetAddress[],long)>
Counter value: 1
SCC 12295 : 1
<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>
Counter value: 1
SCC 12296 : 1
<java.util.concurrent.ConcurrentSkipListMap$Node: void <init>(java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentSkipListMap$Node)>
Counter value: 1
SCC 12297 : 1
<java.util.concurrent.ConcurrentSkipListMap$HeadIndex: void <init>(java.util.concurrent.ConcurrentSkipListMap$Node,java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Index,int)>
Counter value: 1
SCC 12298 : 1
<java.util.concurrent.ConcurrentSkipListMap$Index: void <init>(java.util.concurrent.ConcurrentSkipListMap$Node,java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Index)>
Counter value: 1
SCC 12299 : 1
<java.util.concurrent.ConcurrentSkipListMap$Index: boolean link(java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Index)>
Counter value: 1
SCC 12300 : 1
<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>
Counter value: 1
SCC 12301 : 1
<java.util.concurrent.atomic.AtomicLong: long getAndAdd(long)>
Counter value: 1
SCC 12302 : 1
<sun.misc.Unsafe: long getAndAddLong(java.lang.Object,long,long)>
Counter value: 1
SCC 12303 : 1
<java.net.UnknownHostException: void <init>(java.lang.String)>
Counter value: 1
SCC 12304 : 1
<sun.net.InetAddressCachePolicy$1: void <init>()>
Counter value: 1
SCC 12305 : 1
<sun.net.InetAddressCachePolicy$2: void <init>()>
Counter value: 1
SCC 12306 : 1
<java.util.concurrent.ConcurrentSkipListMap$Node: boolean casNext(java.util.concurrent.ConcurrentSkipListMap$Node,java.util.concurrent.ConcurrentSkipListMap$Node)>
Counter value: 1
SCC 12307 : 1
<java.util.concurrent.ConcurrentSkipListMap$Index: boolean unlink(java.util.concurrent.ConcurrentSkipListMap$Index)>
Counter value: 1
SCC 12308 : 1
<java.util.concurrent.ConcurrentSkipListMap$Index: boolean casRight(java.util.concurrent.ConcurrentSkipListMap$Index,java.util.concurrent.ConcurrentSkipListMap$Index)>
Counter value: 1
SCC 12309 : 1
<java.net.InetAddress$NameServiceAddresses: void <init>(java.lang.String,java.net.InetAddress)>
Counter value: 1
SCC 12310 : 1
<java.net.URLStreamHandler: int getDefaultPort()>
Counter value: 1
SCC 12311 : 1
<java.lang.Character$Subset: boolean equals(java.lang.Object)>
Counter value: 1
SCC 12312 : 1
<java.lang.Enum: boolean equals(java.lang.Object)>
Counter value: 1
SCC 12313 : 1
<java.lang.Boolean: boolean equals(java.lang.Object)>
Counter value: 1
SCC 12314 : 1
<java.security.AllPermission: boolean equals(java.lang.Object)>
Counter value: 1
SCC 12315 : 1
<java.lang.Long: boolean equals(java.lang.Object)>
Counter value: 1
SCC 12316 : 1
<java.lang.Long: long longValue()>
Counter value: 1
SCC 12317 : 1
<java.lang.Character: boolean equals(java.lang.Object)>
Counter value: 1
SCC 12318 : 1
<java.lang.Character: char charValue()>
Counter value: 1
SCC 12319 : 1
<java.util.HashMap$TreeNode: void removeTreeNode(java.util.HashMap,java.util.HashMap$Node[],boolean)>
Counter value: 1
SCC 12320 : 1
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode balanceDeletion(java.util.HashMap$TreeNode,java.util.HashMap$TreeNode)>
Counter value: 1
SCC 12321 : 1
<java.util.HashMap: void afterNodeRemoval(java.util.HashMap$Node)>
Counter value: 1
SCC 12322 : 1
<java.util.LinkedHashMap: void afterNodeRemoval(java.util.HashMap$Node)>
Counter value: 1
SCC 12323 : 1
<java.util.LinkedHashMap: boolean removeEldestEntry(java.util.Map$Entry)>
Counter value: 1
SCC 12324 : 1
<java.util.LinkedHashMap: void afterNodeAccess(java.util.HashMap$Node)>
Counter value: 1
SCC 12325 : 1
<java.util.LinkedHashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>
Counter value: 1
SCC 12326 : 1
<java.util.LinkedHashMap: void linkNodeLast(java.util.LinkedHashMap$Entry)>
Counter value: 1
SCC 12327 : 1
<java.util.HashMap: void afterNodeInsertion(boolean)>
Counter value: 1
SCC 12328 : 1
<java.util.HashMap: void afterNodeAccess(java.util.HashMap$Node)>
Counter value: 1
SCC 12329 : 1
<java.util.LinkedHashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>
Counter value: 1
SCC 12330 : 1
<java.util.HashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>
Counter value: 1
SCC 12331 : 1
<java.util.HashMap$TreeNode: void <init>(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>
Counter value: 1
SCC 12332 : 1
<java.util.HashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>
Counter value: 1
SCC 12333 : 1
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode balanceInsertion(java.util.HashMap$TreeNode,java.util.HashMap$TreeNode)>
Counter value: 1
SCC 12334 : 1
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode rotateRight(java.util.HashMap$TreeNode,java.util.HashMap$TreeNode)>
Counter value: 1
SCC 12335 : 1
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode rotateLeft(java.util.HashMap$TreeNode,java.util.HashMap$TreeNode)>
Counter value: 1
SCC 12336 : 1
<java.util.HashMap$TreeNode: void moveRootToFront(java.util.HashMap$Node[],java.util.HashMap$TreeNode)>
Counter value: 1
SCC 12337 : 1
<java.util.HashMap$TreeNode: boolean checkInvariants(java.util.HashMap$TreeNode)>
Counter value: 1
SCC 12338 : 1
<java.util.HashMap$TreeNode: void <clinit>()>
Counter value: 1
SCC 12339 : 1
<java.util.HashMap$TreeNode: java.util.HashMap$Node untreeify(java.util.HashMap)>
Counter value: 1
SCC 12340 : 1
<java.util.HashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>
Counter value: 1
SCC 12341 : 1
<java.util.LinkedHashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>
Counter value: 1
SCC 12342 : 1
<java.util.LinkedHashMap: void transferLinks(java.util.LinkedHashMap$Entry,java.util.LinkedHashMap$Entry)>
Counter value: 1
SCC 12343 : 1
<java.util.LinkedHashMap$Entry: void <init>(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>
Counter value: 1
SCC 12344 : 1
<java.util.HashMap$Node: void <init>(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>
Counter value: 1
SCC 12345 : 1
<java.util.zip.ZipFile$1: void <init>()>
Counter value: 1
SCC 12346 : 1
<java.util.Hashtable: boolean isEmpty()>
Counter value: 1
SCC 12347 : 1
<java.io.FileInputStream$1: void close()>
Counter value: 1
SCC 12348 : 1
<java.io.FileInputStream: void access$000(java.io.FileInputStream)>
Counter value: 1
SCC 12349 : 1
<java.io.FileOutputStream$1: void close()>
Counter value: 1
SCC 12350 : 1
<java.io.FileOutputStream: void access$000(java.io.FileOutputStream)>
Counter value: 1
SCC 12351 : 1
<java.io.FileOutputStream: void <clinit>()>
Counter value: 1
SCC 12352 : 1
<java.io.FileInputStream$1: void <init>(java.io.FileInputStream)>
Counter value: 1
SCC 12353 : 1
<java.util.Vector: int hugeCapacity(int)>
Counter value: 1
SCC 12354 : 1
<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>
Counter value: 1
SCC 12355 : 1
<java.util.LinkedList: void linkBefore(java.lang.Object,java.util.LinkedList$Node)>
Counter value: 1
SCC 12356 : 1
<java.util.LinkedList: java.util.LinkedList$Node node(int)>
Counter value: 1
SCC 12357 : 1
<java.util.LinkedList: void linkLast(java.lang.Object)>
Counter value: 1
SCC 12358 : 1
<java.util.LinkedList$Node: void <init>(java.util.LinkedList$Node,java.lang.Object,java.util.LinkedList$Node)>
Counter value: 1
SCC 12359 : 1
<java.util.LinkedList: boolean isPositionIndex(int)>
Counter value: 1
SCC 12360 : 1
<java.util.AbstractList: void add(int,java.lang.Object)>
Counter value: 1
SCC 12361 : 1
<java.io.FileInputStream: void <clinit>()>
Counter value: 1
SCC 12362 : 1
<sun.util.calendar.CalendarSystem$1: void <init>(java.lang.String)>
Counter value: 1
SCC 12363 : 1
<java.security.PrivilegedActionException: java.lang.Throwable getCause()>
Counter value: 1
SCC 12364 : 1
<java.util.TimeZone$1: void <init>(java.lang.String)>
Counter value: 1
SCC 12365 : 1
<sun.util.calendar.CalendarDate: sun.util.calendar.Era getEra()>
Counter value: 1
SCC 12366 : 1
<java.io.FilePermission: int hashCode()>
Counter value: 1
SCC 12367 : 1
<java.text.FieldPosition: int hashCode()>
Counter value: 1
SCC 12368 : 1
<java.text.NumberFormat: int hashCode()>
Counter value: 1
SCC 12369 : 1
<java.time.ZoneOffset: int hashCode()>
Counter value: 1
SCC 12370 : 1
<java.math.BigInteger: int hashCode()>
Counter value: 1
SCC 12371 : 1
<sun.security.x509.Extension: int hashCode()>
Counter value: 1
SCC 12372 : 1
<sun.security.util.ObjectIdentifier: int hashCode()>
Counter value: 1
SCC 12373 : 1
<java.util.Arrays: int hashCode(byte[])>
Counter value: 1
SCC 12374 : 1
<java.util.TreeMap$EntryIterator: java.lang.Object next()>
Counter value: 1
SCC 12375 : 1
<java.util.TreeMap$EntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 12376 : 1
<java.util.TreeMap$PrivateEntryIterator: java.util.TreeMap$Entry nextEntry()>
Counter value: 1
SCC 12377 : 1
<java.util.TreeMap: java.util.TreeMap$Entry successor(java.util.TreeMap$Entry)>
Counter value: 1
SCC 12378 : 1
<java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
Counter value: 1
SCC 12379 : 1
<java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
Counter value: 1
SCC 12380 : 1
<java.util.WeakHashMap$EntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 12381 : 1
<java.util.WeakHashMap$HashIterator: java.util.WeakHashMap$Entry nextEntry()>
Counter value: 1
SCC 12382 : 1
<java.util.WeakHashMap$HashIterator: boolean hasNext()>
Counter value: 1
SCC 12383 : 1
<java.util.Collections$EmptyIterator: java.lang.Object next()>
Counter value: 1
SCC 12384 : 1
<java.util.Collections$EmptyIterator: boolean hasNext()>
Counter value: 1
SCC 12385 : 1
<java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12386 : 1
<java.util.TreeMap: java.util.TreeMap$Entry getFirstEntry()>
Counter value: 1
SCC 12387 : 1
<java.util.TreeMap$EntryIterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry)>
Counter value: 1
SCC 12388 : 1
<java.util.TreeMap$PrivateEntryIterator: void <init>(java.util.TreeMap,java.util.TreeMap$Entry)>
Counter value: 1
SCC 12389 : 1
<java.util.TreeMap: int access$100(java.util.TreeMap)>
Counter value: 1
SCC 12390 : 1
<java.util.TreeMap: void <clinit>()>
Counter value: 1
SCC 12391 : 1
<java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12392 : 1
<java.util.WeakHashMap$EntryIterator: void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1)>
Counter value: 1
SCC 12393 : 1
<java.util.WeakHashMap$EntryIterator: void <init>(java.util.WeakHashMap)>
Counter value: 1
SCC 12394 : 1
<java.util.WeakHashMap$HashIterator: void <init>(java.util.WeakHashMap)>
Counter value: 1
SCC 12395 : 1
<java.util.WeakHashMap: boolean isEmpty()>
Counter value: 1
SCC 12396 : 1
<java.util.WeakHashMap: int size()>
Counter value: 1
SCC 12397 : 1
<java.util.WeakHashMap: void expungeStaleEntries()>
Counter value: 1
SCC 12398 : 1
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
Counter value: 1
SCC 12399 : 1
<java.util.WeakHashMap: int indexFor(int,int)>
Counter value: 1
SCC 12400 : 1
<java.util.WeakHashMap: void <clinit>()>
Counter value: 1
SCC 12401 : 1
<java.util.Collections$EmptySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12402 : 1
<java.util.Collections: java.util.Iterator emptyIterator()>
Counter value: 1
SCC 12403 : 1
<java.util.TreeMap: java.util.Set entrySet()>
Counter value: 1
SCC 12404 : 1
<java.util.TreeMap$EntrySet: void <init>(java.util.TreeMap)>
Counter value: 1
SCC 12405 : 1
<java.util.WeakHashMap: java.util.Set entrySet()>
Counter value: 1
SCC 12406 : 1
<java.util.WeakHashMap$EntrySet: void <init>(java.util.WeakHashMap,java.util.WeakHashMap$1)>
Counter value: 1
SCC 12407 : 1
<java.util.WeakHashMap$EntrySet: void <init>(java.util.WeakHashMap)>
Counter value: 1
SCC 12408 : 1
<java.util.Collections$EmptyMap: java.util.Set entrySet()>
Counter value: 1
SCC 12409 : 1
<java.util.Collections: java.util.Set emptySet()>
Counter value: 1
SCC 12410 : 1
<java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
Counter value: 1
SCC 12411 : 1
<java.util.LinkedHashMap$LinkedEntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 12412 : 1
<java.util.LinkedHashMap$LinkedHashIterator: java.util.LinkedHashMap$Entry nextNode()>
Counter value: 1
SCC 12413 : 1
<java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
Counter value: 1
SCC 12414 : 1
<java.util.HashMap$EntryIterator: java.lang.Object next()>
Counter value: 1
SCC 12415 : 1
<java.util.HashMap$EntryIterator: java.util.Map$Entry next()>
Counter value: 1
SCC 12416 : 1
<java.util.HashMap$HashIterator: java.util.HashMap$Node nextNode()>
Counter value: 1
SCC 12417 : 1
<java.util.HashMap$HashIterator: boolean hasNext()>
Counter value: 1
SCC 12418 : 1
<java.util.HashMap: java.util.Set entrySet()>
Counter value: 1
SCC 12419 : 1
<java.util.HashMap$EntrySet: void <init>(java.util.HashMap)>
Counter value: 1
SCC 12420 : 1
<sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
Counter value: 1
SCC 12421 : 1
<java.util.Locale$LocaleKey: int hashCode()>
Counter value: 1
SCC 12422 : 1
<java.lang.ref.SoftReference: java.lang.Object get()>
Counter value: 1
SCC 12423 : 1
<sun.util.locale.LocaleUtils: char toLower(char)>
Counter value: 1
SCC 12424 : 1
<sun.util.locale.LocaleUtils: boolean isUpper(char)>
Counter value: 1
SCC 12425 : 1
<sun.util.locale.BaseLocale$Key: int hashCode()>
Counter value: 1
SCC 12426 : 1
<java.util.concurrent.ConcurrentHashMap: int tableSizeFor(int)>
Counter value: 1
SCC 12427 : 1
<java.lang.Class: boolean sameTypes(java.lang.Class[],java.lang.Class[])>
Counter value: 1
SCC 12428 : 1
<java.lang.Class$CacheKey: int hashCode()>
Counter value: 1
SCC 12429 : 1
<sun.util.calendar.ZoneInfo: void <init>(java.lang.String,int)>
Counter value: 1
SCC 12430 : 1
<sun.util.calendar.ZoneInfo: void <init>(java.lang.String,int,int,int,long[],int[],int[],boolean)>
Counter value: 1
SCC 12431 : 1
<java.util.TimeZone: void setID(java.lang.String)>
Counter value: 1
SCC 12432 : 1
<java.util.TimeZone: void <init>()>
Counter value: 1
SCC 12433 : 1
<sun.util.calendar.ZoneInfoFile$1: void <init>()>
Counter value: 1
SCC 12434 : 1
<sun.util.calendar.Gregorian: void <init>()>
Counter value: 1
SCC 12435 : 1
<sun.util.calendar.BaseCalendar: void <init>()>
Counter value: 1
SCC 12436 : 1
<sun.util.calendar.AbstractCalendar: void <init>()>
Counter value: 1
SCC 12437 : 1
<sun.util.calendar.CalendarSystem: void <init>()>
Counter value: 1
SCC 12438 : 1
<java.util.TimeZone: void <clinit>()>
Counter value: 1
SCC 12439 : 1
<java.security.cert.CRLException: void <init>(java.lang.String)>
Counter value: 1
SCC 12440 : 1
<java.security.GeneralSecurityException: void <init>(java.lang.String)>
Counter value: 1
SCC 12441 : 1
<java.io.OutputStream: void <init>()>
Counter value: 1
SCC 12442 : 1
<java.time.ZoneOffset: int compareTo(java.lang.Object)>
Counter value: 1
SCC 12443 : 1
<java.time.ZoneOffset: int compareTo(java.time.ZoneOffset)>
Counter value: 1
SCC 12444 : 1
<java.math.BigInteger: int compareTo(java.lang.Object)>
Counter value: 1
SCC 12445 : 1
<java.math.BigInteger: int compareTo(java.math.BigInteger)>
Counter value: 1
SCC 12446 : 1
<java.math.BigInteger: int compareMagnitude(java.math.BigInteger)>
Counter value: 1
SCC 12447 : 1
<java.lang.Boolean: int compare(boolean,boolean)>
Counter value: 1
SCC 12448 : 1
<java.lang.Long: int compare(long,long)>
Counter value: 1
SCC 12449 : 1
<java.lang.Character: int compare(char,char)>
Counter value: 1
SCC 12450 : 1
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode root()>
Counter value: 1
SCC 12451 : 1
<java.lang.Integer: boolean equals(java.lang.Object)>
Counter value: 1
SCC 12452 : 1
<java.lang.Integer: int intValue()>
Counter value: 1
SCC 12453 : 1
<java.nio.charset.CoderResult: void <init>(int,int,java.nio.charset.CoderResult$1)>
Counter value: 1
SCC 12454 : 1
<java.lang.Integer: void <init>(int)>
Counter value: 1
SCC 12455 : 1
<java.nio.charset.CoderResult: void <init>(int,int)>
Counter value: 1
SCC 12456 : 1
<java.nio.charset.CoderResult$1: void <init>()>
Counter value: 1
SCC 12457 : 1
<java.nio.charset.CoderResult$2: void <init>()>
Counter value: 1
SCC 12458 : 1
<java.nio.charset.CoderResult$Cache: void <init>(java.nio.charset.CoderResult$1)>
Counter value: 1
SCC 12459 : 1
<java.nio.charset.CoderResult$Cache: void <init>()>
Counter value: 1
SCC 12460 : 1
<java.nio.HeapCharBuffer: char get()>
Counter value: 1
SCC 12461 : 1
<java.nio.HeapCharBuffer: int ix(int)>
Counter value: 1
SCC 12462 : 1
<java.nio.Buffer: int nextGetIndex()>
Counter value: 1
SCC 12463 : 1
<java.nio.BufferUnderflowException: void <init>()>
Counter value: 1
SCC 12464 : 1
<java.nio.Buffer: int remaining()>
Counter value: 1
SCC 12465 : 1
<java.nio.Buffer: boolean hasRemaining()>
Counter value: 1
SCC 12466 : 1
<java.nio.Buffer: java.nio.Buffer position(int)>
Counter value: 1
SCC 12467 : 1
<java.nio.Buffer: java.nio.Buffer limit(int)>
Counter value: 1
SCC 12468 : 1
<java.nio.HeapCharBuffer: void <clinit>()>
Counter value: 1
SCC 12469 : 1
<java.nio.CharBuffer: void <clinit>()>
Counter value: 1
SCC 12470 : 1
<sun.nio.cs.StreamEncoder: void ensureOpen()>
Counter value: 1
SCC 12471 : 1
<java.io.BufferedWriter: void ensureOpen()>
Counter value: 1
SCC 12472 : 1
<java.nio.Buffer: java.nio.Buffer flip()>
Counter value: 1
SCC 12473 : 1
<java.nio.Buffer: int limit()>
Counter value: 1
SCC 12474 : 1
<java.nio.Buffer: int position()>
Counter value: 1
SCC 12475 : 1
<java.nio.ByteBuffer: byte[] array()>
Counter value: 1
SCC 12476 : 1
<java.nio.ByteBuffer: int arrayOffset()>
Counter value: 1
SCC 12477 : 1
<java.nio.ReadOnlyBufferException: void <init>()>
Counter value: 1
SCC 12478 : 1
<java.lang.UnsupportedOperationException: void <init>()>
Counter value: 1
SCC 12479 : 1
<java.nio.Buffer: java.nio.Buffer clear()>
Counter value: 1
SCC 12480 : 1
<sun.nio.cs.StreamEncoder: void <clinit>()>
Counter value: 1
SCC 12481 : 1
<sun.nio.cs.StreamEncoder: boolean isOpen()>
Counter value: 1
SCC 12482 : 1
<java.io.OutputStream: void flush()>
Counter value: 1
SCC 12483 : 1
<java.io.ByteArrayOutputStream: int hugeCapacity(int)>
Counter value: 1
SCC 12484 : 1
<java.io.FileOutputStream: void write(byte[],int,int)>
Counter value: 1
SCC 12485 : 1
<java.io.PrintStream: void ensureOpen()>
Counter value: 1
SCC 12486 : 1
<java.io.PrintWriter: void ensureOpen()>
Counter value: 1
SCC 12487 : 1
<java.io.IOException: void <init>(java.lang.String)>
Counter value: 1
SCC 12488 : 1
<java.util.IdentityHashMap: void <init>()>
Counter value: 1
SCC 12489 : 1
<java.util.AbstractList$Itr: void checkForComodification()>
Counter value: 1
SCC 12490 : 1
<java.util.Vector: int size()>
Counter value: 1
SCC 12491 : 1
<java.util.Collections$EmptyList: int size()>
Counter value: 1
SCC 12492 : 1
<java.util.LinkedList: int size()>
Counter value: 1
SCC 12493 : 1
<java.util.ArrayList$SubList: int size()>
Counter value: 1
SCC 12494 : 1
<java.util.ArrayList$SubList: void checkForComodification()>
Counter value: 1
SCC 12495 : 1
<java.util.Arrays$ArrayList: int size()>
Counter value: 1
SCC 12496 : 1
<sun.security.jca.ProviderList: sun.security.jca.ProviderConfig[] access$100(sun.security.jca.ProviderList)>
Counter value: 1
SCC 12497 : 1
<sun.security.jca.ProviderList: void <init>(sun.security.jca.ProviderConfig[],boolean)>
Counter value: 1
SCC 12498 : 1
<sun.security.jca.ProviderList$3: void <init>(sun.security.jca.ProviderList)>
Counter value: 1
SCC 12499 : 1
<sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer: java.lang.String toJavaFormatString()>
Counter value: 1
SCC 12500 : 1
<java.lang.Long: int numberOfLeadingZeros(long)>
Counter value: 1
SCC 12501 : 1
<sun.misc.FormattedFloatingDecimal$1: java.lang.Object initialValue()>
Counter value: 1
SCC 12502 : 1
<java.util.IdentityHashMap: void init(int)>
Counter value: 1
SCC 12503 : 1
<java.lang.Integer: int highestOneBit(int)>
Counter value: 1
SCC 12504 : 1
<java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>
Counter value: 1
SCC 12505 : 1
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>
Counter value: 1
SCC 12506 : 1
<java.util.IdentityHashMap: java.util.Set keySet()>
Counter value: 1
SCC 12507 : 1
<java.util.IdentityHashMap$KeySet: void <init>(java.util.IdentityHashMap,java.util.IdentityHashMap$1)>
Counter value: 1
SCC 12508 : 1
<java.util.IdentityHashMap$KeySet: void <init>(java.util.IdentityHashMap)>
Counter value: 1
SCC 12509 : 1
<java.util.IdentityHashMap: boolean isEmpty()>
Counter value: 1
SCC 12510 : 1
<java.lang.ThreadLocal: java.lang.Object initialValue()>
Counter value: 1
SCC 12511 : 1
<sun.misc.FloatingDecimal$1: java.lang.Object initialValue()>
Counter value: 1
SCC 12512 : 1
<sun.misc.FloatingDecimal$1: sun.misc.FloatingDecimal$BinaryToASCIIBuffer initialValue()>
Counter value: 1
SCC 12513 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void <init>()>
Counter value: 1
SCC 12514 : 1
<java.lang.IllegalStateException: void <init>(java.lang.String)>
Counter value: 1
SCC 12515 : 1
<java.util.IdentityHashMap: java.lang.Object maskNull(java.lang.Object)>
Counter value: 1
SCC 12516 : 1
<java.util.IdentityHashMap: int nextKeyIndex(int,int)>
Counter value: 1
SCC 12517 : 1
<java.util.IdentityHashMap: void <clinit>()>
Counter value: 1
SCC 12518 : 1
<jdk.internal.misc.TerminatingThreadLocal: void <clinit>()>
Counter value: 1
SCC 12519 : 1
<jdk.internal.misc.TerminatingThreadLocal$1: void <init>()>
Counter value: 1
SCC 12520 : 1
<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry access$000(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal)>
Counter value: 1
SCC 12521 : 1
<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry getEntry(java.lang.ThreadLocal)>
Counter value: 1
SCC 12522 : 1
<java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry getEntryAfterMiss(java.lang.ThreadLocal,int,java.lang.ThreadLocal$ThreadLocalMap$Entry)>
Counter value: 1
SCC 12523 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void access$000(sun.misc.FloatingDecimal$BinaryToASCIIBuffer,boolean)>
Counter value: 1
SCC 12524 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void setSign(boolean)>
Counter value: 1
SCC 12525 : 1
<com.ibm.jit.JITHelpers: boolean toUpperIntrinsicLatin1(char[],char[],int)>
Counter value: 1
SCC 12526 : 1
<com.ibm.jit.JITHelpers: boolean toUpperIntrinsicUTF16(char[],char[],int)>
Counter value: 1
SCC 12527 : 1
<java.lang.StringBuffer: char[] getValue()>
Counter value: 1
SCC 12528 : 1
<com.ibm.jit.JITHelpers: boolean supportsIntrinsicCaseConversion()>
Counter value: 1
SCC 12529 : 1
<com.ibm.jit.JITHelpers: boolean toLowerIntrinsicLatin1(char[],char[],int)>
Counter value: 1
SCC 12530 : 1
<com.ibm.jit.JITHelpers: boolean toLowerIntrinsicUTF16(char[],char[],int)>
Counter value: 1
SCC 12531 : 1
<java.util.Locale: java.lang.String getLanguage()>
Counter value: 1
SCC 12532 : 1
<sun.util.locale.BaseLocale: java.lang.String getLanguage()>
Counter value: 1
SCC 12533 : 1
<java.lang.String: int binarySearchRange(char[],char)>
Counter value: 1
SCC 12534 : 1
<java.security.Provider$EngineDescription: void <init>(java.lang.String,boolean,java.lang.String)>
Counter value: 1
SCC 12535 : 1
<java.util.AbstractList: java.util.Iterator iterator()>
Counter value: 1
SCC 12536 : 1
<java.util.AbstractList$Itr: void <init>(java.util.AbstractList,java.util.AbstractList$1)>
Counter value: 1
SCC 12537 : 1
<java.util.AbstractList$Itr: void <init>(java.util.AbstractList)>
Counter value: 1
SCC 12538 : 1
<sun.misc.ASCIICaseInsensitiveComparator: int toLower(int)>
Counter value: 1
SCC 12539 : 1
<sun.misc.ASCIICaseInsensitiveComparator: boolean isUpper(int)>
Counter value: 1
SCC 12540 : 1
<sun.misc.ASCIICaseInsensitiveComparator: void <clinit>()>
Counter value: 1
SCC 12541 : 1
<sun.misc.ASCIICaseInsensitiveComparator: void <init>()>
Counter value: 1
SCC 12542 : 1
<sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: int hashCode()>
Counter value: 1
SCC 12543 : 1
<java.io.File: java.lang.String getPath()>
Counter value: 1
SCC 12544 : 1
<java.lang.Long: int hashCode(long)>
Counter value: 1
SCC 12545 : 1
<java.lang.Class$MethodInfo: int hashCode()>
Counter value: 1
SCC 12546 : 1
<java.util.ServiceConfigurationError: void <init>(java.lang.String)>
Counter value: 1
SCC 12547 : 1
<java.util.ServiceConfigurationError: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 12548 : 1
<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 12549 : 1
<java.util.ServiceLoader: java.security.AccessControlContext access$500(java.util.ServiceLoader)>
Counter value: 1
SCC 12550 : 1
<java.util.ServiceLoader: java.util.ServiceLoader$LazyIterator access$800(java.util.ServiceLoader)>
Counter value: 1
SCC 12551 : 1
<java.util.ServiceLoader: java.util.Iterator iterator()>
Counter value: 1
SCC 12552 : 1
<java.util.ServiceLoader$1: void <init>(java.util.ServiceLoader)>
Counter value: 1
SCC 12553 : 1
<java.util.HashMap$EntrySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12554 : 1
<java.util.HashMap$EntryIterator: void <init>(java.util.HashMap)>
Counter value: 1
SCC 12555 : 1
<java.util.HashMap$HashIterator: void <init>(java.util.HashMap)>
Counter value: 1
SCC 12556 : 1
<java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
Counter value: 1
SCC 12557 : 1
<java.util.LinkedHashMap$LinkedEntryIterator: void <init>(java.util.LinkedHashMap)>
Counter value: 1
SCC 12558 : 1
<java.util.LinkedHashMap$LinkedHashIterator: void <init>(java.util.LinkedHashMap)>
Counter value: 1
SCC 12559 : 1
<java.util.LinkedHashMap: java.util.Set entrySet()>
Counter value: 1
SCC 12560 : 1
<java.util.LinkedHashMap$LinkedEntrySet: void <init>(java.util.LinkedHashMap)>
Counter value: 1
SCC 12561 : 1
<java.util.ServiceLoader: java.util.LinkedHashMap access$400(java.util.ServiceLoader)>
Counter value: 1
SCC 12562 : 1
<java.util.ServiceLoader: void reload()>
Counter value: 1
SCC 12563 : 1
<java.util.LinkedHashMap: void clear()>
Counter value: 1
SCC 12564 : 1
<java.util.HashMap: void clear()>
Counter value: 1
SCC 12565 : 1
<java.util.ServiceLoader$LazyIterator: void <init>(java.util.ServiceLoader,java.lang.Class,java.lang.ClassLoader,java.util.ServiceLoader$1)>
Counter value: 1
SCC 12566 : 1
<java.util.ServiceLoader$LazyIterator: void <init>(java.util.ServiceLoader,java.lang.Class,java.lang.ClassLoader)>
Counter value: 1
SCC 12567 : 1
<java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
Counter value: 1
SCC 12568 : 1
<java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.ProtectionDomain[],int)>
Counter value: 1
SCC 12569 : 1
<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],int)>
Counter value: 1
SCC 12570 : 1
<java.lang.ThreadLocal: void remove()>
Counter value: 1
SCC 12571 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void access$200(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal)>
Counter value: 1
SCC 12572 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void remove(java.lang.ThreadLocal)>
Counter value: 1
SCC 12573 : 1
<java.lang.ref.Reference: void clear()>
Counter value: 1
SCC 12574 : 1
<java.lang.ref.Reference: void clearImpl()>
Counter value: 1
SCC 12575 : 1
<java.security.ProtectionDomain$JavaSecurityAccessImpl: void <init>(java.security.ProtectionDomain$1)>
Counter value: 1
SCC 12576 : 1
<java.security.ProtectionDomain$JavaSecurityAccessImpl: void <init>()>
Counter value: 1
SCC 12577 : 1
<java.security.ProtectionDomain$2: void <init>()>
Counter value: 1
SCC 12578 : 1
<java.security.AccessController: int getNewAuthorizedState(java.security.AccessControlContext,java.security.ProtectionDomain)>
Counter value: 1
SCC 12579 : 1
<java.nio.charset.Charset$2: void <init>(java.lang.String)>
Counter value: 1
SCC 12580 : 1
<java.lang.ThreadLocal: void set(java.lang.Object)>
Counter value: 1
SCC 12581 : 1
<java.lang.InheritableThreadLocal: void createMap(java.lang.Thread,java.lang.Object)>
Counter value: 1
SCC 12582 : 1
<java.lang.InheritableThreadLocal: java.lang.ThreadLocal$ThreadLocalMap getMap(java.lang.Thread)>
Counter value: 1
SCC 12583 : 1
<java.lang.ThreadLocal: void createMap(java.lang.Thread,java.lang.Object)>
Counter value: 1
SCC 12584 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal,java.lang.Object)>
Counter value: 1
SCC 12585 : 1
<java.lang.ThreadLocal: java.lang.ThreadLocal$ThreadLocalMap getMap(java.lang.Thread)>
Counter value: 1
SCC 12586 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void access$100(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal,java.lang.Object)>
Counter value: 1
SCC 12587 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void set(java.lang.ThreadLocal,java.lang.Object)>
Counter value: 1
SCC 12588 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void rehash()>
Counter value: 1
SCC 12589 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void resize()>
Counter value: 1
SCC 12590 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void setThreshold(int)>
Counter value: 1
SCC 12591 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void expungeStaleEntries()>
Counter value: 1
SCC 12592 : 1
<java.lang.ThreadLocal$ThreadLocalMap: void replaceStaleEntry(java.lang.ThreadLocal,java.lang.Object,int)>
Counter value: 1
SCC 12593 : 1
<java.lang.ThreadLocal$ThreadLocalMap: boolean cleanSomeSlots(int,int)>
Counter value: 1
SCC 12594 : 1
<java.lang.ThreadLocal$ThreadLocalMap: int expungeStaleEntry(int)>
Counter value: 1
SCC 12595 : 1
<java.lang.ref.Reference: java.lang.Object get()>
Counter value: 1
SCC 12596 : 1
<java.lang.ThreadLocal$ThreadLocalMap: int prevIndex(int,int)>
Counter value: 1
SCC 12597 : 1
<java.lang.ThreadLocal$ThreadLocalMap$Entry: void <init>(java.lang.ThreadLocal,java.lang.Object)>
Counter value: 1
SCC 12598 : 1
<java.lang.ref.WeakReference: void <init>(java.lang.Object)>
Counter value: 1
SCC 12599 : 1
<java.lang.ref.Reference: void initReference(java.lang.Object)>
Counter value: 1
SCC 12600 : 1
<java.lang.ThreadLocal: int access$400(java.lang.ThreadLocal)>
Counter value: 1
SCC 12601 : 1
<java.lang.ThreadLocal$ThreadLocalMap: int nextIndex(int,int)>
Counter value: 1
SCC 12602 : 1
<java.lang.Thread: void <clinit>()>
Counter value: 1
SCC 12603 : 1
<java.lang.Thread$TidLock: void <init>()>
Counter value: 1
SCC 12604 : 1
<sun.nio.cs.StandardCharsets$Aliases: void <init>(sun.nio.cs.StandardCharsets$1)>
Counter value: 1
SCC 12605 : 1
<sun.nio.cs.StandardCharsets$Aliases: void <init>()>
Counter value: 1
SCC 12606 : 1
<sun.nio.cs.StandardCharsets$Classes: void <init>(sun.nio.cs.StandardCharsets$1)>
Counter value: 1
SCC 12607 : 1
<sun.nio.cs.StandardCharsets$Classes: void <init>()>
Counter value: 1
SCC 12608 : 1
<sun.nio.cs.StandardCharsets$Cache: void <init>(sun.nio.cs.StandardCharsets$1)>
Counter value: 1
SCC 12609 : 1
<sun.nio.cs.StandardCharsets$Cache: void <init>()>
Counter value: 1
SCC 12610 : 1
<sun.util.PreHashedMap: void <init>(int,int,int,int)>
Counter value: 1
SCC 12611 : 1
<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])>
Counter value: 1
SCC 12612 : 1
<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])>
Counter value: 1
SCC 12613 : 1
<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])>
Counter value: 1
SCC 12614 : 1
<java.io.UnixFileSystem: char getSeparator()>
Counter value: 1
SCC 12615 : 1
<java.io.UnixFileSystem: char getPathSeparator()>
Counter value: 1
SCC 12616 : 1
<java.io.FileSystem: void <init>()>
Counter value: 1
SCC 12617 : 1
<java.io.ExpiringCache: void <init>()>
Counter value: 1
SCC 12618 : 1
<java.io.ExpiringCache: void <init>(long)>
Counter value: 1
SCC 12619 : 1
<java.io.ExpiringCache$1: void <init>(java.io.ExpiringCache)>
Counter value: 1
SCC 12620 : 1
<java.util.LinkedHashMap: void <init>()>
Counter value: 1
SCC 12621 : 1
<java.util.HashMap: void <init>()>
Counter value: 1
SCC 12622 : 1
<java.lang.Long: void <init>(long)>
Counter value: 1
SCC 12623 : 1
<sun.security.action.GetPropertyAction: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 12624 : 1
<jdk.crypto.jniprovider.NativeCrypto$lambda_static_0__19: java.security.PrivilegedAction bootstrap$()>
Counter value: 1
SCC 12625 : 1
<jdk.crypto.jniprovider.NativeCrypto$lambda_static_0__19: void <init>()>
Counter value: 1
SCC 12626 : 1
<java.util.concurrent.atomic.AtomicLong: void <init>(long)>
Counter value: 1
SCC 12627 : 1
<sun.security.util.Debug: void <init>()>
Counter value: 1
SCC 12628 : 1
<java.util.concurrent.ThreadLocalRandom: long mix64(long)>
Counter value: 1
SCC 12629 : 1
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: void <init>(java.util.concurrent.ConcurrentHashMap$Node[])>
Counter value: 1
SCC 12630 : 1
<java.util.concurrent.ConcurrentHashMap$TreeNode: void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node,java.util.concurrent.ConcurrentHashMap$TreeNode)>
Counter value: 1
SCC 12631 : 1
<sun.reflect.generics.tree.SimpleClassTypeSignature: sun.reflect.generics.tree.TypeArgument[] getTypeArguments()>
Counter value: 1
SCC 12632 : 1
<sun.reflect.generics.tree.SimpleClassTypeSignature: boolean getDollar()>
Counter value: 1
SCC 12633 : 1
<java.util.ArrayList$Itr: boolean hasNext()>
Counter value: 1
SCC 12634 : 1
<java.util.ArrayList$Itr: java.lang.Object next()>
Counter value: 1
SCC 12635 : 1
<java.util.ArrayList$Itr: void checkForComodification()>
Counter value: 1
SCC 12636 : 1
<java.util.ConcurrentModificationException: void <init>()>
Counter value: 1
SCC 12637 : 1
<java.util.ArrayList: int access$000(java.util.ArrayList)>
Counter value: 1
SCC 12638 : 1
<java.util.ArrayList: java.util.Iterator iterator()>
Counter value: 1
SCC 12639 : 1
<java.util.ArrayList$Itr: void <init>(java.util.ArrayList)>
Counter value: 1
SCC 12640 : 1
<java.util.ArrayList: boolean isEmpty()>
Counter value: 1
SCC 12641 : 1
<sun.reflect.generics.tree.ClassTypeSignature: java.util.List getPath()>
Counter value: 1
SCC 12642 : 1
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.ParameterizedType makeParameterizedType(java.lang.reflect.Type,java.lang.reflect.Type[],java.lang.reflect.Type)>
Counter value: 1
SCC 12643 : 1
<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl make(java.lang.Class,java.lang.reflect.Type[],java.lang.reflect.Type)>
Counter value: 1
SCC 12644 : 1
<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: void <init>(java.lang.Class,java.lang.reflect.Type[],java.lang.reflect.Type)>
Counter value: 1
SCC 12645 : 1
<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: void validateConstructorArguments()>
Counter value: 1
SCC 12646 : 1
<java.lang.reflect.MalformedParameterizedTypeException: void <init>()>
Counter value: 1
SCC 12647 : 1
<sun.reflect.generics.tree.ArrayTypeSignature: sun.reflect.generics.tree.TypeSignature getComponentType()>
Counter value: 1
SCC 12648 : 1
<sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl make(java.lang.reflect.Type)>
Counter value: 1
SCC 12649 : 1
<sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>
Counter value: 1
SCC 12650 : 1
<sun.reflect.generics.tree.FormalTypeParameter: sun.reflect.generics.tree.FieldTypeSignature[] getBounds()>
Counter value: 1
SCC 12651 : 1
<sun.reflect.generics.tree.FormalTypeParameter: java.lang.String getName()>
Counter value: 1
SCC 12652 : 1
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.GenericDeclaration getDecl()>
Counter value: 1
SCC 12653 : 1
<java.lang.Class: boolean isInterface()>
Counter value: 1
SCC 12654 : 1
<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: void <init>(java.lang.reflect.GenericDeclaration,java.lang.String,sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.factory.GenericsFactory)>
Counter value: 1
SCC 12655 : 1
<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: void <clinit>()>
Counter value: 1
SCC 12656 : 1
<sun.reflect.generics.tree.ClassSignature: sun.reflect.generics.tree.FormalTypeParameter[] getFormalTypeParameters()>
Counter value: 1
SCC 12657 : 1
<sun.reflect.generics.scope.DummyScope: java.lang.reflect.TypeVariable lookup(java.lang.String)>
Counter value: 1
SCC 12658 : 1
<sun.reflect.generics.scope.MethodScope: sun.reflect.generics.scope.Scope computeEnclosingScope()>
Counter value: 1
SCC 12659 : 1
<sun.reflect.generics.scope.MethodScope: java.lang.Class getEnclosingClass()>
Counter value: 1
SCC 12660 : 1
<sun.reflect.generics.scope.ConstructorScope: sun.reflect.generics.scope.Scope computeEnclosingScope()>
Counter value: 1
SCC 12661 : 1
<sun.reflect.generics.scope.ConstructorScope: java.lang.Class getEnclosingClass()>
Counter value: 1
SCC 12662 : 1
<java.lang.IncompatibleClassChangeError: void <init>(java.lang.String)>
Counter value: 1
SCC 12663 : 1
<java.net.URL: java.lang.String getQuery()>
Counter value: 1
SCC 12664 : 1
<java.net.URL: java.lang.String getPath()>
Counter value: 1
SCC 12665 : 1
<java.net.URL: java.lang.String getAuthority()>
Counter value: 1
SCC 12666 : 1
<javax.security.auth.PrivateCredentialPermission: java.lang.String getActions()>
Counter value: 1
SCC 12667 : 1
<sun.security.provider.PolicyFile$SelfPermission: java.lang.String getActions()>
Counter value: 1
SCC 12668 : 1
<javax.crypto.CryptoPermission: java.lang.String getActions()>
Counter value: 1
SCC 12669 : 1
<com.ibm.oti.shared.SharedClassPermission: java.lang.String getActions()>
Counter value: 1
SCC 12670 : 1
<java.security.UnresolvedPermission: java.lang.String getActions()>
Counter value: 1
SCC 12671 : 1
<java.security.AllPermission: java.lang.String getActions()>
Counter value: 1
SCC 12672 : 1
<java.lang.Boolean: boolean booleanValue()>
Counter value: 1
SCC 12673 : 1
<java.lang.Character: int toUpperCase(int)>
Counter value: 1
SCC 12674 : 1
<java.lang.CharacterDataLatin1: int toUpperCase(int)>
Counter value: 1
SCC 12675 : 1
<java.lang.CharacterData00: int toUpperCase(int)>
Counter value: 1
SCC 12676 : 1
<java.lang.CharacterData01: int toUpperCase(int)>
Counter value: 1
SCC 12677 : 1
<java.lang.CharacterData02: int toUpperCase(int)>
Counter value: 1
SCC 12678 : 1
<java.lang.CharacterData0E: int toUpperCase(int)>
Counter value: 1
SCC 12679 : 1
<java.lang.CharacterDataPrivateUse: int toUpperCase(int)>
Counter value: 1
SCC 12680 : 1
<java.lang.CharacterDataUndefined: int toUpperCase(int)>
Counter value: 1
SCC 12681 : 1
<java.lang.Character: int toLowerCase(int)>
Counter value: 1
SCC 12682 : 1
<java.lang.CharacterDataLatin1: int toLowerCase(int)>
Counter value: 1
SCC 12683 : 1
<java.lang.CharacterData00: int toLowerCase(int)>
Counter value: 1
SCC 12684 : 1
<java.lang.CharacterData01: int toLowerCase(int)>
Counter value: 1
SCC 12685 : 1
<java.lang.CharacterData02: int toLowerCase(int)>
Counter value: 1
SCC 12686 : 1
<java.lang.CharacterData0E: int toLowerCase(int)>
Counter value: 1
SCC 12687 : 1
<java.lang.CharacterDataPrivateUse: int toLowerCase(int)>
Counter value: 1
SCC 12688 : 1
<java.lang.CharacterDataUndefined: int toLowerCase(int)>
Counter value: 1
SCC 12689 : 1
<sun.security.action.GetBooleanAction: void <init>(java.lang.String)>
Counter value: 1
SCC 12690 : 1
<java.util.PropertyPermission: void init(int)>
Counter value: 1
SCC 12691 : 1
<sun.security.action.GetPropertyAction: void <init>(java.lang.String)>
Counter value: 1
SCC 12692 : 1
<java.net.URI$Parser: void fail(java.lang.String)>
Counter value: 1
SCC 12693 : 1
<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>
Counter value: 1
SCC 12694 : 1
<java.lang.NumberFormatException: void <init>(java.lang.String)>
Counter value: 1
SCC 12695 : 1
<java.net.URI: java.lang.String access$2302(java.net.URI,java.lang.String)>
Counter value: 1
SCC 12696 : 1
<java.net.URI: java.lang.String access$2402(java.net.URI,java.lang.String)>
Counter value: 1
SCC 12697 : 1
<java.net.URI: int access$2502(java.net.URI,int)>
Counter value: 1
SCC 12698 : 1
<java.net.URI: java.lang.String access$2202(java.net.URI,java.lang.String)>
Counter value: 1
SCC 12699 : 1
<java.net.URI: java.lang.String access$1402(java.net.URI,java.lang.String)>
Counter value: 1
SCC 12700 : 1
<java.net.URI: java.lang.String access$1502(java.net.URI,java.lang.String)>
Counter value: 1
SCC 12701 : 1
<java.lang.Character: int getType(int)>
Counter value: 1
SCC 12702 : 1
<java.lang.CharacterDataLatin1: int getType(int)>
Counter value: 1
SCC 12703 : 1
<java.lang.CharacterData00: int getType(int)>
Counter value: 1
SCC 12704 : 1
<java.lang.CharacterData01: int getType(int)>
Counter value: 1
SCC 12705 : 1
<java.lang.CharacterData02: int getType(int)>
Counter value: 1
SCC 12706 : 1
<java.lang.CharacterData0E: int getType(int)>
Counter value: 1
SCC 12707 : 1
<java.lang.CharacterDataPrivateUse: int getType(int)>
Counter value: 1
SCC 12708 : 1
<java.lang.CharacterDataUndefined: int getType(int)>
Counter value: 1
SCC 12709 : 1
<java.lang.Character: boolean isISOControl(int)>
Counter value: 1
SCC 12710 : 1
<java.net.URI: boolean match(char,long,long)>
Counter value: 1
SCC 12711 : 1
<java.net.URI$Parser: void fail(java.lang.String,int)>
Counter value: 1
SCC 12712 : 1
<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>
Counter value: 1
SCC 12713 : 1
<java.net.URI: java.lang.String access$702(java.net.URI,java.lang.String)>
Counter value: 1
SCC 12714 : 1
<java.net.URI: java.lang.String access$1002(java.net.URI,java.lang.String)>
Counter value: 1
SCC 12715 : 1
<java.net.URI: java.lang.String access$1102(java.net.URI,java.lang.String)>
Counter value: 1
SCC 12716 : 1
<java.net.URI: java.lang.String access$002(java.net.URI,java.lang.String)>
Counter value: 1
SCC 12717 : 1
<java.net.URISyntaxException: java.lang.String getReason()>
Counter value: 1
SCC 12718 : 1
<java.lang.StringBuffer: int capacityInternal()>
Counter value: 1
SCC 12719 : 1
<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 12720 : 1
<java.security.BasicPermission: java.lang.String getActions()>
Counter value: 1
SCC 12721 : 1
<java.lang.ThreadGroup: java.lang.String getName()>
Counter value: 1
SCC 12722 : 1
<java.lang.Thread: int getPriority()>
Counter value: 1
SCC 12723 : 1
<java.lang.Thread: java.lang.String getName()>
Counter value: 1
SCC 12724 : 1
<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>
Counter value: 1
SCC 12725 : 1
<java.lang.Character: int digit(int,int)>
Counter value: 1
SCC 12726 : 1
<java.lang.CharacterDataLatin1: int digit(int,int)>
Counter value: 1
SCC 12727 : 1
<java.lang.CharacterData00: int digit(int,int)>
Counter value: 1
SCC 12728 : 1
<java.lang.CharacterData01: int digit(int,int)>
Counter value: 1
SCC 12729 : 1
<java.lang.CharacterData02: int digit(int,int)>
Counter value: 1
SCC 12730 : 1
<java.lang.CharacterData0E: int digit(int,int)>
Counter value: 1
SCC 12731 : 1
<java.lang.CharacterDataPrivateUse: int digit(int,int)>
Counter value: 1
SCC 12732 : 1
<java.lang.CharacterDataUndefined: int digit(int,int)>
Counter value: 1
SCC 12733 : 1
<sun.reflect.generics.scope.MethodScope: sun.reflect.generics.scope.MethodScope make(java.lang.reflect.Method)>
Counter value: 1
SCC 12734 : 1
<sun.reflect.generics.scope.MethodScope: void <init>(java.lang.reflect.Method)>
Counter value: 1
SCC 12735 : 1
<sun.reflect.generics.scope.ConstructorScope: sun.reflect.generics.scope.ConstructorScope make(java.lang.reflect.Constructor)>
Counter value: 1
SCC 12736 : 1
<sun.reflect.generics.scope.ConstructorScope: void <init>(java.lang.reflect.Constructor)>
Counter value: 1
SCC 12737 : 1
<sun.reflect.generics.scope.DummyScope: sun.reflect.generics.scope.DummyScope make()>
Counter value: 1
SCC 12738 : 1
<sun.reflect.generics.scope.DummyScope: void <clinit>()>
Counter value: 1
SCC 12739 : 1
<sun.reflect.generics.scope.DummyScope: void <init>()>
Counter value: 1
SCC 12740 : 1
<sun.reflect.generics.scope.AbstractScope: java.lang.reflect.GenericDeclaration getRecvr()>
Counter value: 1
SCC 12741 : 1
<sun.reflect.generics.factory.CoreReflectionFactory: sun.reflect.generics.scope.Scope getScope()>
Counter value: 1
SCC 12742 : 1
<sun.reflect.generics.tree.Wildcard: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
Counter value: 1
SCC 12743 : 1
<sun.reflect.generics.visitor.Reifier: void visitWildcard(sun.reflect.generics.tree.Wildcard)>
Counter value: 1
SCC 12744 : 1
<sun.reflect.generics.tree.Wildcard: sun.reflect.generics.tree.FieldTypeSignature[] getLowerBounds()>
Counter value: 1
SCC 12745 : 1
<sun.reflect.generics.tree.Wildcard: sun.reflect.generics.tree.FieldTypeSignature[] getUpperBounds()>
Counter value: 1
SCC 12746 : 1
<sun.reflect.generics.factory.CoreReflectionFactory: java.lang.reflect.WildcardType makeWildcard(sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.tree.FieldTypeSignature[])>
Counter value: 1
SCC 12747 : 1
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: sun.reflect.generics.reflectiveObjects.WildcardTypeImpl make(sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.factory.GenericsFactory)>
Counter value: 1
SCC 12748 : 1
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: void <init>(sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.factory.GenericsFactory)>
Counter value: 1
SCC 12749 : 1
<sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator: void <init>(sun.reflect.generics.factory.GenericsFactory)>
Counter value: 1
SCC 12750 : 1
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: void <clinit>()>
Counter value: 1
SCC 12751 : 1
<sun.reflect.generics.tree.SimpleClassTypeSignature: java.lang.String getName()>
Counter value: 1
SCC 12752 : 1
<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 12753 : 1
<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 12754 : 1
<java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)>
Counter value: 1
SCC 12755 : 1
<sun.reflect.generics.visitor.Reifier: sun.reflect.generics.factory.GenericsFactory getFactory()>
Counter value: 1
SCC 12756 : 1
<sun.reflect.generics.tree.ClassSignature: sun.reflect.generics.tree.ClassTypeSignature[] getSuperInterfaces()>
Counter value: 1
SCC 12757 : 1
<sun.reflect.generics.visitor.Reifier: java.lang.reflect.Type getResult()>
Counter value: 1
SCC 12758 : 1
<sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.visitor.Reifier getReifier()>
Counter value: 1
SCC 12759 : 1
<sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.factory.GenericsFactory getFactory()>
Counter value: 1
SCC 12760 : 1
<sun.reflect.generics.visitor.Reifier: sun.reflect.generics.visitor.Reifier make(sun.reflect.generics.factory.GenericsFactory)>
Counter value: 1
SCC 12761 : 1
<sun.reflect.generics.visitor.Reifier: void <init>(sun.reflect.generics.factory.GenericsFactory)>
Counter value: 1
SCC 12762 : 1
<sun.reflect.generics.visitor.Reifier: void <clinit>()>
Counter value: 1
SCC 12763 : 1
<sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.tree.Tree getTree()>
Counter value: 1
SCC 12764 : 1
<java.lang.Class: sun.reflect.generics.factory.CoreReflectionFactory getFactory()>
Counter value: 1
SCC 12765 : 1
<sun.reflect.generics.scope.ClassScope: sun.reflect.generics.scope.ClassScope make(java.lang.Class)>
Counter value: 1
SCC 12766 : 1
<sun.reflect.generics.scope.ClassScope: void <init>(java.lang.Class)>
Counter value: 1
SCC 12767 : 1
<sun.reflect.generics.scope.AbstractScope: void <init>(java.lang.reflect.GenericDeclaration)>
Counter value: 1
SCC 12768 : 1
<sun.reflect.generics.factory.CoreReflectionFactory: sun.reflect.generics.factory.CoreReflectionFactory make(java.lang.reflect.GenericDeclaration,sun.reflect.generics.scope.Scope)>
Counter value: 1
SCC 12769 : 1
<sun.reflect.generics.factory.CoreReflectionFactory: void <init>(java.lang.reflect.GenericDeclaration,sun.reflect.generics.scope.Scope)>
Counter value: 1
SCC 12770 : 1
<sun.reflect.generics.factory.CoreReflectionFactory: void <clinit>()>
Counter value: 1
SCC 12771 : 1
<java.lang.Class$ClassRepositoryHolder: void <init>(sun.reflect.generics.repository.ClassRepository)>
Counter value: 1
SCC 12772 : 1
<sun.reflect.generics.tree.ByteSignature: sun.reflect.generics.tree.ByteSignature make()>
Counter value: 1
SCC 12773 : 1
<sun.reflect.generics.tree.CharSignature: sun.reflect.generics.tree.CharSignature make()>
Counter value: 1
SCC 12774 : 1
<sun.reflect.generics.tree.CharSignature: void <clinit>()>
Counter value: 1
SCC 12775 : 1
<sun.reflect.generics.tree.CharSignature: void <init>()>
Counter value: 1
SCC 12776 : 1
<sun.reflect.generics.tree.DoubleSignature: sun.reflect.generics.tree.DoubleSignature make()>
Counter value: 1
SCC 12777 : 1
<sun.reflect.generics.tree.DoubleSignature: void <clinit>()>
Counter value: 1
SCC 12778 : 1
<sun.reflect.generics.tree.DoubleSignature: void <init>()>
Counter value: 1
SCC 12779 : 1
<sun.reflect.generics.tree.FloatSignature: sun.reflect.generics.tree.FloatSignature make()>
Counter value: 1
SCC 12780 : 1
<sun.reflect.generics.tree.FloatSignature: void <clinit>()>
Counter value: 1
SCC 12781 : 1
<sun.reflect.generics.tree.FloatSignature: void <init>()>
Counter value: 1
SCC 12782 : 1
<sun.reflect.generics.tree.IntSignature: sun.reflect.generics.tree.IntSignature make()>
Counter value: 1
SCC 12783 : 1
<sun.reflect.generics.tree.IntSignature: void <clinit>()>
Counter value: 1
SCC 12784 : 1
<sun.reflect.generics.tree.IntSignature: void <init>()>
Counter value: 1
SCC 12785 : 1
<sun.reflect.generics.tree.LongSignature: sun.reflect.generics.tree.LongSignature make()>
Counter value: 1
SCC 12786 : 1
<sun.reflect.generics.tree.LongSignature: void <clinit>()>
Counter value: 1
SCC 12787 : 1
<sun.reflect.generics.tree.LongSignature: void <init>()>
Counter value: 1
SCC 12788 : 1
<sun.reflect.generics.tree.ShortSignature: sun.reflect.generics.tree.ShortSignature make()>
Counter value: 1
SCC 12789 : 1
<sun.reflect.generics.tree.ShortSignature: void <clinit>()>
Counter value: 1
SCC 12790 : 1
<sun.reflect.generics.tree.ShortSignature: void <init>()>
Counter value: 1
SCC 12791 : 1
<sun.reflect.generics.tree.BooleanSignature: sun.reflect.generics.tree.BooleanSignature make()>
Counter value: 1
SCC 12792 : 1
<sun.reflect.generics.tree.BooleanSignature: void <clinit>()>
Counter value: 1
SCC 12793 : 1
<sun.reflect.generics.tree.BooleanSignature: void <init>()>
Counter value: 1
SCC 12794 : 1
<sun.reflect.generics.tree.ByteSignature: void <clinit>()>
Counter value: 1
SCC 12795 : 1
<sun.reflect.generics.tree.ByteSignature: void <init>()>
Counter value: 1
SCC 12796 : 1
<sun.reflect.generics.tree.ArrayTypeSignature: sun.reflect.generics.tree.ArrayTypeSignature make(sun.reflect.generics.tree.TypeSignature)>
Counter value: 1
SCC 12797 : 1
<sun.reflect.generics.tree.ArrayTypeSignature: void <init>(sun.reflect.generics.tree.TypeSignature)>
Counter value: 1
SCC 12798 : 1
<sun.reflect.generics.tree.TypeVariableSignature: java.lang.String getIdentifier()>
Counter value: 1
SCC 12799 : 1
<sun.reflect.generics.tree.TypeVariableSignature: sun.reflect.generics.tree.TypeVariableSignature make(java.lang.String)>
Counter value: 1
SCC 12800 : 1
<sun.reflect.generics.tree.TypeVariableSignature: void <init>(java.lang.String)>
Counter value: 1
SCC 12801 : 1
<sun.reflect.generics.tree.BottomSignature: sun.reflect.generics.tree.BottomSignature make()>
Counter value: 1
SCC 12802 : 1
<sun.reflect.generics.tree.Wildcard: sun.reflect.generics.tree.Wildcard make(sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.tree.FieldTypeSignature[])>
Counter value: 1
SCC 12803 : 1
<sun.reflect.generics.tree.Wildcard: void <init>(sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.tree.FieldTypeSignature[])>
Counter value: 1
SCC 12804 : 1
<sun.reflect.generics.tree.Wildcard: void <clinit>()>
Counter value: 1
SCC 12805 : 1
<sun.reflect.generics.tree.BottomSignature: void <clinit>()>
Counter value: 1
SCC 12806 : 1
<sun.reflect.generics.tree.BottomSignature: void <init>()>
Counter value: 1
SCC 12807 : 1
<sun.reflect.generics.tree.SimpleClassTypeSignature: sun.reflect.generics.tree.SimpleClassTypeSignature make(java.lang.String,boolean,sun.reflect.generics.tree.TypeArgument[])>
Counter value: 1
SCC 12808 : 1
<sun.reflect.generics.tree.SimpleClassTypeSignature: void <init>(java.lang.String,boolean,sun.reflect.generics.tree.TypeArgument[])>
Counter value: 1
SCC 12809 : 1
<sun.reflect.generics.tree.ClassTypeSignature: sun.reflect.generics.tree.ClassTypeSignature make(java.util.List)>
Counter value: 1
SCC 12810 : 1
<sun.reflect.generics.tree.ClassTypeSignature: void <init>(java.util.List)>
Counter value: 1
SCC 12811 : 1
<java.lang.Character: boolean isWhitespace(int)>
Counter value: 1
SCC 12812 : 1
<java.lang.CharacterDataLatin1: boolean isWhitespace(int)>
Counter value: 1
SCC 12813 : 1
<java.lang.CharacterDataLatin1: int getProperties(int)>
Counter value: 1
SCC 12814 : 1
<java.lang.CharacterData00: boolean isWhitespace(int)>
Counter value: 1
SCC 12815 : 1
<java.lang.CharacterData00: int getProperties(int)>
Counter value: 1
SCC 12816 : 1
<java.lang.CharacterData01: boolean isWhitespace(int)>
Counter value: 1
SCC 12817 : 1
<java.lang.CharacterData01: int getProperties(int)>
Counter value: 1
SCC 12818 : 1
<java.lang.CharacterData02: boolean isWhitespace(int)>
Counter value: 1
SCC 12819 : 1
<java.lang.CharacterData02: int getProperties(int)>
Counter value: 1
SCC 12820 : 1
<java.lang.CharacterData0E: boolean isWhitespace(int)>
Counter value: 1
SCC 12821 : 1
<java.lang.CharacterData0E: int getProperties(int)>
Counter value: 1
SCC 12822 : 1
<java.lang.CharacterDataPrivateUse: boolean isWhitespace(int)>
Counter value: 1
SCC 12823 : 1
<java.lang.CharacterDataUndefined: boolean isWhitespace(int)>
Counter value: 1
SCC 12824 : 1
<java.lang.CharacterData: java.lang.CharacterData of(int)>
Counter value: 1
SCC 12825 : 1
<sun.reflect.generics.parser.SignatureParser: void mark()>
Counter value: 1
SCC 12826 : 1
<sun.reflect.generics.tree.FormalTypeParameter: sun.reflect.generics.tree.FormalTypeParameter make(java.lang.String,sun.reflect.generics.tree.FieldTypeSignature[])>
Counter value: 1
SCC 12827 : 1
<sun.reflect.generics.tree.FormalTypeParameter: void <init>(java.lang.String,sun.reflect.generics.tree.FieldTypeSignature[])>
Counter value: 1
SCC 12828 : 1
<java.lang.reflect.GenericSignatureFormatError: void <init>(java.lang.String)>
Counter value: 1
SCC 12829 : 1
<java.lang.ClassFormatError: void <init>(java.lang.String)>
Counter value: 1
SCC 12830 : 1
<java.lang.LinkageError: void <init>(java.lang.String)>
Counter value: 1
SCC 12831 : 1
<java.util.ArrayList: int size()>
Counter value: 1
SCC 12832 : 1
<sun.reflect.generics.tree.ClassSignature: sun.reflect.generics.tree.ClassSignature make(sun.reflect.generics.tree.FormalTypeParameter[],sun.reflect.generics.tree.ClassTypeSignature,sun.reflect.generics.tree.ClassTypeSignature[])>
Counter value: 1
SCC 12833 : 1
<sun.reflect.generics.tree.ClassSignature: void <init>(sun.reflect.generics.tree.FormalTypeParameter[],sun.reflect.generics.tree.ClassTypeSignature,sun.reflect.generics.tree.ClassTypeSignature[])>
Counter value: 1
SCC 12834 : 1
<sun.reflect.generics.parser.SignatureParser: void init(java.lang.String)>
Counter value: 1
SCC 12835 : 1
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.parser.SignatureParser make()>
Counter value: 1
SCC 12836 : 1
<sun.reflect.generics.parser.SignatureParser: void <init>()>
Counter value: 1
SCC 12837 : 1
<sun.reflect.generics.parser.SignatureParser: void <clinit>()>
Counter value: 1
SCC 12838 : 1
<java.lang.ClassCastException: void <init>()>
Counter value: 1
SCC 12839 : 1
<java.lang.Integer: int compare(int,int)>
Counter value: 1
SCC 12840 : 1
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode rotateRight(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode)>
Counter value: 1
SCC 12841 : 1
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode rotateLeft(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode)>
Counter value: 1
SCC 12842 : 1
<java.util.concurrent.ConcurrentHashMap: int spread(int)>
Counter value: 1
SCC 12843 : 1
<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Node untreeify(java.util.concurrent.ConcurrentHashMap$Node)>
Counter value: 1
SCC 12844 : 1
<java.util.concurrent.ConcurrentHashMap$Node: void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node)>
Counter value: 1
SCC 12845 : 1
<sun.util.locale.LocaleObjectCache$CacheEntry: void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 12846 : 1
<java.lang.ref.SoftReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 12847 : 1
<java.lang.ref.Reference: void initReference(java.lang.Object,java.lang.ref.ReferenceQueue)>
Counter value: 1
SCC 12848 : 1
<java.lang.ref.Reference: void <init>()>
Counter value: 1
SCC 12849 : 1
<java.net.URL: java.lang.String getRef()>
Counter value: 1
SCC 12850 : 1
<java.net.URL: int getPort()>
Counter value: 1
SCC 12851 : 1
<java.net.URL: java.lang.String getHost()>
Counter value: 1
SCC 12852 : 1
<java.net.URL: java.lang.String getFile()>
Counter value: 1
SCC 12853 : 1
<java.net.URL: java.lang.String getProtocol()>
Counter value: 1
SCC 12854 : 1
<java.lang.Integer: int hashCode(int)>
Counter value: 1
SCC 12855 : 1
<java.lang.Boolean: int hashCode(boolean)>
Counter value: 1
SCC 12856 : 1
<java.lang.Character: int hashCode(char)>
Counter value: 1
SCC 12857 : 1
<java.util.Hashtable$Entry: void <init>(int,java.lang.Object,java.lang.Object,java.util.Hashtable$Entry)>
Counter value: 1
SCC 12858 : 1
<java.lang.Class$1: java.lang.Object run()>
Counter value: 1
SCC 12859 : 1
<java.security.AccessController: void keepalive(java.security.AccessControlContext)>
Counter value: 1
SCC 12860 : 1
<java.lang.VMAccess: void setExtClassLoader(java.lang.ClassLoader)>
Counter value: 1
SCC 12861 : 1
<java.lang.ClassLoader: boolean needsClassLoaderPermissionCheck(java.lang.ClassLoader,java.lang.ClassLoader)>
Counter value: 1
SCC 12862 : 1
<java.util.ArrayList: void <init>()>
Counter value: 1
SCC 12863 : 1
<java.util.ArrayList: int hugeCapacity(int)>
Counter value: 1
SCC 12864 : 1
<java.lang.OutOfMemoryError: void <init>()>
Counter value: 1
SCC 12865 : 1
<java.lang.VirtualMachineError: void <init>()>
Counter value: 1
SCC 12866 : 1
<java.lang.IllegalArgumentException: void <init>()>
Counter value: 1
SCC 12867 : 1
<java.util.ArrayList: void <clinit>()>
Counter value: 1
SCC 12868 : 1
<com.ibm.oti.vm.VM: com.ibm.oti.vm.VMLangAccess getVMLangAccess()>
Counter value: 1
SCC 12869 : 1
<java.security.AccessController$DebugRecursionDetection: java.lang.ThreadLocal getTlDebug()>
Counter value: 1
SCC 12870 : 1
<java.security.AccessController$DebugRecursionDetection: void <clinit>()>
Counter value: 1
SCC 12871 : 1
<java.security.AccessControlContext: void <clinit>()>
Counter value: 1
SCC 12872 : 1
<java.lang.Shutdown: void exit(int)>
Counter value: 1
SCC 12873 : 1
<java.lang.Shutdown: void runHooks()>
Counter value: 1
SCC 12874 : 1
<java.lang.Shutdown: void halt(int)>
Counter value: 1
SCC 12875 : 1
<java.lang.Shutdown: void <clinit>()>
Counter value: 1
SCC 12876 : 1
<java.lang.Shutdown$Lock: void <init>(java.lang.Shutdown$1)>
Counter value: 1
SCC 12877 : 1
<java.lang.Shutdown$Lock: void <init>()>
Counter value: 1
SCC 12878 : 1
<java.lang.SecurityManager$1: void <init>(java.lang.SecurityManager)>
Counter value: 1
SCC 12879 : 1
<java.lang.NullPointerException: void <init>(java.lang.String)>
Counter value: 1
SCC 12880 : 1
<java.security.Permission: void <init>(java.lang.String)>
Counter value: 1
SCC 12881 : 1
<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>
Counter value: 1
SCC 12882 : 1
<java.util.NoSuchElementException: void <init>()>
Counter value: 1
SCC 12883 : 1
<java.lang.StringIndexOutOfBoundsException: void <init>()>
Counter value: 1
SCC 12884 : 1
<java.lang.IndexOutOfBoundsException: void <init>()>
Counter value: 1
SCC 12885 : 1
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
Counter value: 1
SCC 12886 : 1
<java.lang.String: void decompressedArrayCopy(char[],int,char[],int,int)>
Counter value: 1
SCC 12887 : 1
<java.lang.OutOfMemoryError: void <init>(java.lang.String)>
Counter value: 1
SCC 12888 : 1
<java.lang.VirtualMachineError: void <init>(java.lang.String)>
Counter value: 1
SCC 12889 : 1
<java.lang.Character: boolean isHighSurrogate(char)>
Counter value: 1
SCC 12890 : 1
<java.lang.Character: boolean isLowSurrogate(char)>
Counter value: 1
SCC 12891 : 1
<java.lang.Character: int toCodePoint(char,char)>
Counter value: 1
SCC 12892 : 1
<java.util.StringTokenizer: boolean isDelimiter(int)>
Counter value: 1
SCC 12893 : 1
<java.lang.NullPointerException: void <init>()>
Counter value: 1
SCC 12894 : 1
<java.lang.RuntimeException: void <init>()>
Counter value: 1
SCC 12895 : 1
<java.lang.Exception: void <init>()>
Counter value: 1
SCC 12896 : 1
<java.lang.Character: int charCount(int)>
Counter value: 1
SCC 12897 : 1
<java.lang.System: java.lang.SecurityManager getSecurityManager()>
Counter value: 1
SCC 12898 : 1
<java.security.Permission: java.lang.String getName()>
Counter value: 1
SCC 12899 : 1
<java.security.AllPermission: int hashCode()>
Counter value: 1
SCC 12900 : 1
<java.lang.Object: boolean equals(java.lang.Object)>
Counter value: 1
SCC 12901 : 1
<com.ibm.jit.JITHelpers: boolean isArray(java.lang.Object)>
Counter value: 1
SCC 12902 : 1
<com.ibm.jit.JITHelpers: long getJ9ClassFromObject64(java.lang.Object)>
Counter value: 1
SCC 12903 : 1
<com.ibm.jit.JITHelpers: int getJ9ClassFromObject32(java.lang.Object)>
Counter value: 1
SCC 12904 : 1
<java.lang.Integer: long toUnsignedLong(int)>
Counter value: 1
SCC 12905 : 1
<java.lang.String: int hashCodeImplDecompressed(char[],int,int)>
Counter value: 1
SCC 12906 : 1
<java.lang.Boolean: void <init>(boolean)>
Counter value: 1
SCC 12907 : 1
<java.lang.Throwable: java.lang.String getMessage()>
Counter value: 1
SCC 12908 : 1
<java.lang.Enum: java.lang.String toString()>
Counter value: 1
SCC 12909 : 1
<java.lang.StringBuilder: int capacityInternal()>
Counter value: 1
SCC 12910 : 1
<java.lang.String: java.lang.String toString()>
Counter value: 1
SCC 12911 : 1
<java.lang.Long: int stringSize(long)>
Counter value: 1
SCC 12912 : 1
<sun.misc.FDBigInteger: int multAndCarryBy10(int[],int,int[])>
Counter value: 1
SCC 12913 : 1
<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
Counter value: 1
SCC 12914 : 1
<java.lang.Integer: int numberOfLeadingZeros(int)>
Counter value: 1
SCC 12915 : 1
<java.lang.Long: int numberOfTrailingZeros(long)>
Counter value: 1
SCC 12916 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: int insignificantDigitsForPow2(int)>
Counter value: 1
SCC 12917 : 1
<java.lang.Math: int max(int,int)>
Counter value: 1
SCC 12918 : 1
<sun.misc.FDBigInteger: void mult(int[],int,int,int,int[])>
Counter value: 1
SCC 12919 : 1
<java.util.Arrays: void <clinit>()>
Counter value: 1
SCC 12920 : 1
<java.lang.Math: int min(int,int)>
Counter value: 1
SCC 12921 : 1
<java.lang.AssertionError: void <init>()>
Counter value: 1
SCC 12922 : 1
<java.lang.Error: void <init>()>
Counter value: 1
SCC 12923 : 1
<sun.misc.FDBigInteger: void leftShift(int[],int,int[],int,int,int)>
Counter value: 1
SCC 12924 : 1
<java.lang.AssertionError: void <init>(java.lang.String)>
Counter value: 1
SCC 12925 : 1
<java.lang.Error: void <init>(java.lang.String)>
Counter value: 1
SCC 12926 : 1
<sun.misc.FDBigInteger: sun.misc.FDBigInteger big5powRec(int)>
Counter value: 1
SCC 12927 : 1
<sun.misc.FDBigInteger: sun.misc.FDBigInteger mult(sun.misc.FDBigInteger)>
Counter value: 1
SCC 12928 : 1
<sun.misc.FDBigInteger: int size()>
Counter value: 1
SCC 12929 : 1
<sun.misc.FDBigInteger: void mult(int[],int,int[],int,int[])>
Counter value: 1
SCC 12930 : 1
<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfPow2(int)>
Counter value: 1
SCC 12931 : 2
<sun.misc.FDBigInteger: void <clinit>()>
<sun.misc.FDBigInteger: sun.misc.FDBigInteger mult(int)>
Counter value: 2
SCC 12932 : 1
<sun.misc.FDBigInteger: void mult(int[],int,int,int[])>
Counter value: 1
SCC 12933 : 1
<sun.misc.FDBigInteger: void <init>(int[],int)>
Counter value: 1
SCC 12934 : 1
<sun.misc.FDBigInteger: void trimLeadingZeros()>
Counter value: 1
SCC 12935 : 1
<sun.misc.FDBigInteger: void makeImmutable()>
Counter value: 1
SCC 12936 : 1
<sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer: void <init>(java.lang.String,boolean)>
Counter value: 1
SCC 12937 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void <init>(boolean,char[])>
Counter value: 1
SCC 12938 : 1
<sun.misc.FloatingDecimal$1: void <init>()>
Counter value: 1
SCC 12939 : 1
<java.lang.ThreadLocal: void <init>()>
Counter value: 1
SCC 12940 : 1
<java.lang.ThreadLocal: int nextHashCode()>
Counter value: 1
SCC 12941 : 1
<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)>
Counter value: 1
SCC 12942 : 1
<sun.misc.Unsafe: int getAndAddInt(java.lang.Object,long,int)>
Counter value: 1
SCC 12943 : 1
<java.lang.ThreadLocal: void <clinit>()>
Counter value: 1
SCC 12944 : 1
<java.util.concurrent.atomic.AtomicInteger: void <init>()>
Counter value: 1
SCC 12945 : 1
<java.lang.Number: void <init>()>
Counter value: 1
SCC 12946 : 1
<sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer: void <init>(double,float)>
Counter value: 1
SCC 12947 : 1
<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void <clinit>()>
Counter value: 1
SCC 12948 : 1
<java.lang.Class: boolean desiredAssertionStatus()>
Counter value: 1
SCC 12949 : 1
<java.lang.Class: java.lang.String getName()>
Counter value: 1
SCC 12950 : 1
<java.lang.Class: java.lang.ClassLoader getClassLoaderImpl()>
Counter value: 1
SCC 12951 : 1
<java.lang.Float: boolean isNaN(float)>
Counter value: 1
SCC 12952 : 1
<java.util.HashMap: int tableSizeFor(int)>
Counter value: 1
SCC 12953 : 1
<java.security.AccessController: void <clinit>()>
Counter value: 1
SCC 12954 : 1
<java.lang.AbstractStringBuilder: void <init>()>
Counter value: 1
SCC 12955 : 1
<java.lang.NegativeArraySizeException: void <init>(java.lang.String)>
Counter value: 1
SCC 12956 : 1
<java.lang.System: void <clinit>()>
Counter value: 1
SCC 12957 : 1
<java.lang.Runtime: java.lang.Runtime getRuntime()>
Counter value: 1
SCC 12958 : 1
<java.lang.Runtime: void <clinit>()>
Counter value: 1
SCC 12959 : 1
<java.lang.Runtime: void <init>()>
Counter value: 1
SCC 12960 : 1
<java.lang.String: boolean canEncodeAsLatin1(char[],int,int)>
Counter value: 1
SCC 12961 : 1
<com.ibm.jit.JITHelpers: char byteToCharUnsigned(byte)>
Counter value: 1
SCC 12962 : 1
<java.lang.RuntimeException: void <init>(java.lang.String)>
Counter value: 1
SCC 12963 : 1
<java.lang.Exception: void <init>(java.lang.String)>
Counter value: 1
SCC 12964 : 1
<java.lang.Throwable: void <init>(java.lang.String)>
Counter value: 1
SCC 12965 : 1
<java.lang.Throwable: void <init>()>
Counter value: 1
SCC 12966 : 1
<java.util.Collections: void <clinit>()>
Counter value: 1
SCC 12967 : 1
<java.util.Collections$EmptySet: void <init>(java.util.Collections$1)>
Counter value: 1
SCC 12968 : 1
<java.util.Collections$EmptySet: void <init>()>
Counter value: 1
SCC 12969 : 1
<java.util.AbstractSet: void <init>()>
Counter value: 1
SCC 12970 : 1
<java.util.Collections$EmptyList: void <init>(java.util.Collections$1)>
Counter value: 1
SCC 12971 : 1
<java.util.Collections$EmptyList: void <init>()>
Counter value: 1
SCC 12972 : 1
<java.util.AbstractList: void <init>()>
Counter value: 1
SCC 12973 : 1
<java.util.AbstractCollection: void <init>()>
Counter value: 1
SCC 12974 : 1
<java.util.Collections$EmptyMap: void <init>(java.util.Collections$1)>
Counter value: 1
SCC 12975 : 1
<java.util.Collections$EmptyMap: void <init>()>
Counter value: 1
SCC 12976 : 1
<java.util.AbstractMap: void <init>()>
Counter value: 1
SCC 12977 : 1
<java.lang.String$StringCompressionFlag: void <init>()>
Counter value: 1
SCC 12978 : 1
<java.lang.Object: void <init>()>
Counter value: 1
SCC 12979 : 1
<java.util.Properties: void <clinit>()>
Counter value: 1
SCC 12980 : 1
<sun.misc.VM: boolean isSystemDomainLoader(java.lang.ClassLoader)>
Counter value: 1
SCC 12981 : 1
<com.ibm.oti.vm.VM: void <clinit>()>
Counter value: 1
SCC 12982 : 1
<java.util.concurrent.ConcurrentSkipListMap$SubMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
Counter value: 1
SCC 12983 : 1
<java.util.stream.AbstractPipeline: long exactOutputSizeIfKnown(java.util.Spliterator)>
Counter value: 1
<java.lang.StringBuffer: java.lang.String substring(int)> <internal,28>


<java.lang.StringBuffer: java.lang.String substring(int)> <internal,56>


<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()> <internal,15>


<sun.net.www.protocol.jar.JarURLConnection: java.io.InputStream getInputStream()> <internal,75>


<java.util.Collections: java.util.Collection synchronizedCollection(java.util.Collection,java.lang.Object)> <internal,0>


<java.time.LocalDate$from__3: java.time.temporal.TemporalQuery bootstrap$()> <internal,-1>


<java.util.Collections: java.util.List singletonList(java.lang.Object)> <internal,0>


<java.time.format.DateTimeTextProvider: java.util.Map$Entry createEntry(java.lang.Object,java.lang.Object)> <internal,0>


<java.math.MutableBigInteger: void addDisjoint(java.math.MutableBigInteger,int)> <internal,53>


<java.math.BigDecimal: long[] divRemNegativeLong(long,long)> <internal,125>


<sun.security.util.ManifestDigester: void <init>(byte[])> <internal,10>


<sun.security.util.ManifestDigester$Entry: void <init>()> <internal,5>


<java.util.regex.Pattern$Branch: void <init>(java.util.regex.Pattern$Node,java.util.regex.Pattern$Node,java.util.regex.Pattern$Node)> <internal,6>


<java.lang.Character: char[] toChars(int)> <internal,24>


<java.lang.Character: char[] toChars(int)> <internal,8>


<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)> <internal,18>


<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)> <internal,30>


<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)> <internal,24>


<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)> <internal,36>


<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)> <internal,5>


<java.util.Hashtable: void rehash()> <internal,35>


<java.util.Hashtable: void rehash()> <internal,124>


<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)> <internal,9>


<java.math.MutableBigInteger: void addShifted(java.math.MutableBigInteger,int)> <internal,53>


<java.math.MutableBigInteger: void addShifted(java.math.MutableBigInteger,int)> <internal,343>


<java.math.MutableBigInteger: java.math.BigInteger getLower(int)> <internal,66>


<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser$lambda_setValue_0__18: java.util.function.Consumer bootstrap$(java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser,java.time.format.DateTimeParseContext,long,int,int)> <internal,-1>


<sun.text.normalizer.UnicodeSet: void ensureCapacity(int)> <internal,14>


<java.util.regex.Pattern$CharProperty: java.util.regex.Pattern$CharProperty complement()> <internal,0>


<sun.security.util.ManifestEntryVerifier: void <init>(java.util.jar.Manifest,java.lang.String)> <internal,33>


<sun.security.util.ManifestEntryVerifier: void <init>(java.util.jar.Manifest,java.lang.String)> <internal,20>


<sun.security.util.ManifestEntryVerifier: void <init>(java.util.jar.Manifest,java.lang.String)> <internal,44>


<java.security.Provider: java.lang.String[] getTypeAndAlgorithm(java.lang.String)> <internal,74>


<java.util.Vector: java.util.Enumeration elements()> <internal,0>


<java.math.BigInteger: java.math.BigInteger add(long)> <internal,106>


<java.math.BigInteger: java.math.BigInteger add(long)> <internal,31>


<sun.reflect.generics.tree.TypeVariableSignature: sun.reflect.generics.tree.TypeVariableSignature make(java.lang.String)> <internal,0>


<java.util.regex.Pattern$Branch: void add(java.util.regex.Pattern$Node)> <internal,19>


<sun.misc.FormattedFloatingDecimal: char[] create(boolean,int)> <internal,7>


<sun.misc.FormattedFloatingDecimal: char[] create(boolean,int)> <internal,18>


<java.text.DigitList: void extendDigits(int)> <internal,11>


<sun.util.locale.LanguageTag: boolean parseExtlangs(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus)> <internal,57>


<sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet add_unchecked(int)> <internal,217>


<java.security.AccessController: java.security.ProtectionDomain[] toArrayOfProtectionDomains(java.lang.Object[],java.security.AccessControlContext,int)> <internal,230>


<java.security.AccessController: java.security.ProtectionDomain[] toArrayOfProtectionDomains(java.lang.Object[],java.security.AccessControlContext,int)> <internal,84>


<java.security.AccessController: java.security.ProtectionDomain[] toArrayOfProtectionDomains(java.lang.Object[],java.security.AccessControlContext,int)> <internal,118>


<java.net.SocketPermission$name__16: java.util.function.Function bootstrap$()> <internal,-1>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfPow2(int)> <internal,9>


<java.net.SocketPermission: java.security.PermissionCollection newPermissionCollection()> <internal,0>


<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)> <internal,11>


<java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()> <internal,21>


<java.io.FileDescriptor: void attach(java.io.Closeable)> <internal,23>


<sun.misc.FDBigInteger: void <init>(long,char[],int,int)> <internal,26>


<sun.reflect.generics.factory.CoreReflectionFactory: sun.reflect.generics.factory.CoreReflectionFactory make(java.lang.reflect.GenericDeclaration,sun.reflect.generics.scope.Scope)> <internal,0>


<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)> <internal,0>


<sun.text.normalizer.UnicodeSet: void <init>()> <internal,23>


<sun.text.normalizer.UnicodeSet: void <init>()> <internal,5>


<java.lang.StringBuffer: void ensureCapacityImpl(int)> <internal,66>


<java.lang.StringBuffer: void ensureCapacityImpl(int)> <internal,93>


<java.math.BigInteger: int[] add(int[],int[])> <internal,188>


<java.math.BigInteger: int[] add(int[],int[])> <internal,20>


<java.util.HashSet: void <init>(java.util.Collection)> <internal,5>


<java.util.regex.Pattern: java.util.regex.Pattern$Node newSlice(int[],int,boolean)> <internal,68>


<java.util.regex.Pattern: java.util.regex.Pattern$Node newSlice(int[],int,boolean)> <internal,159>


<java.util.regex.Pattern: java.util.regex.Pattern$Node newSlice(int[],int,boolean)> <internal,109>


<java.util.regex.Pattern: java.util.regex.Pattern$Node newSlice(int[],int,boolean)> <internal,171>


<java.util.regex.Pattern: java.util.regex.Pattern$Node newSlice(int[],int,boolean)> <internal,121>


<java.util.regex.Pattern: java.util.regex.Pattern$Node newSlice(int[],int,boolean)> <internal,56>


<sun.text.UCompactIntArray: void <init>()> <internal,7>


<sun.text.UCompactIntArray: void <init>()> <internal,16>


<sun.text.UCompactIntArray: void <init>()> <internal,34>


<sun.text.UCompactIntArray: void <init>()> <internal,25>


<sun.util.locale.BaseLocale: sun.util.locale.BaseLocale createInstance(java.lang.String,java.lang.String)> <internal,0>


<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)> <internal,32>


<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)> <internal,104>


<java.util.Arrays: byte[] copyOf(byte[],int)> <internal,1>


<java.security.PermissionsHash: void <init>()> <internal,5>


<java.lang.UNIXProcess: java.io.FileDescriptor newFileDescriptor(int)> <internal,0>


<com.ibm.oti.vm.MsgHelp: java.util.Hashtable loadMessages(java.lang.String)> <internal,0>


<java.util.ArrayList: void <init>(int)> <internal,10>


<java.util.regex.Pattern$CharPropertyNames$3: java.util.regex.Pattern$CharProperty make()> <internal,0>


<sun.misc.FloatingDecimal$1: sun.misc.FloatingDecimal$BinaryToASCIIBuffer initialValue()> <internal,0>


<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)> <internal,240>


<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)> <internal,253>


<java.io.StreamTokenizer: void <init>()> <internal,17>


<java.io.StreamTokenizer: void <init>()> <internal,52>


<java.lang.String: java.lang.String[] split(java.lang.String,int)> <internal,33>


<java.lang.String: java.lang.String[] split(java.lang.String,int)> <internal,479>


<sun.text.normalizer.RuleCharacterIterator: java.lang.Object getPos(java.lang.Object)> <internal,18>


<sun.text.normalizer.RuleCharacterIterator: java.lang.Object getPos(java.lang.Object)> <internal,5>


<sun.misc.FDBigInteger: long multDiffMe(long,sun.misc.FDBigInteger)> <internal,120>


<java.util.Hashtable: java.util.Enumeration getEnumeration(int)> <internal,11>


<java.util.jar.Manifest: void <init>()> <internal,16>


<java.util.jar.Manifest: void <init>()> <internal,5>


<sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream,boolean)> <internal,59>


<sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream,boolean)> <internal,10>


<sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream,boolean)> <internal,194>


<sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream,boolean)> <internal,129>


<sun.security.x509.AlgorithmId: sun.security.x509.AlgorithmId parse(sun.security.util.DerValue)> <internal,90>


<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()> <internal,5>


<java.io.ByteArrayOutputStream: void <init>(int)> <internal,37>


<java.util.concurrent.ConcurrentHashMap$ValuesView: java.util.Iterator iterator()> <internal,21>


<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)> <internal,32>


<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)> <internal,10>


<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)> <internal,146>


<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)> <internal,101>


<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)> <internal,61>


<java.time.ZoneId: java.time.ZoneId ofOffset(java.lang.String,java.time.ZoneOffset)> <internal,93>


<sun.text.normalizer.UnicodeSet: void ensureBufferCapacity(int)> <internal,22>


<java.time.format.DateTimeParseContext: void <init>(java.time.format.DateTimeFormatter)> <internal,15>


<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermissions getMinimum(javax.crypto.CryptoPermissions)> <internal,34>


<sun.text.UCompactIntArray: void expand()> <internal,35>


<sun.text.UCompactIntArray: void expand()> <internal,40>


<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)> <internal,0>


<sun.security.util.DerValue: byte[] getDataBytes()> <internal,4>


<java.security.Signature: java.security.Signature getInstance(sun.security.jca.GetInstance$Instance,java.lang.String)> <internal,34>


<java.util.regex.Pattern: java.util.Map namedGroups()> <internal,8>


<java.util.ComparableTimSort: java.lang.Object[] ensureCapacity(int)> <internal,67>


<java.util.Locale$Builder: void <init>()> <internal,5>


<java.util.ArrayList: java.util.List subList(int,int)> <internal,9>


<sun.security.util.BitArray: java.lang.Object clone()> <internal,0>


<java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()> <internal,0>


<java.util.regex.Pattern: void append(int,int)> <internal,12>


<java.util.regex.Pattern: java.util.regex.Pattern$Node ref(int)> <internal,134>


<java.util.regex.Pattern: java.util.regex.Pattern$Node ref(int)> <internal,119>


<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)> <internal,11>


<sun.reflect.generics.tree.ClassTypeSignature: sun.reflect.generics.tree.ClassTypeSignature make(java.util.List)> <internal,0>


<java.math.BigDecimal: java.math.BigDecimal zeroValueOf(int)> <internal,18>


<sun.security.pkcs.SignerInfo: java.security.Timestamp getTimestamp()> <internal,125>


<sun.security.util.DerValue: byte[] getOctetString()> <internal,87>


<sun.security.util.DerValue: byte[] getOctetString()> <internal,54>


<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$KeySetView keySet()> <internal,14>


<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Node[] initTable()> <internal,70>


<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)> <internal,0>


<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOfQueryOnly(java.lang.String)> <internal,0>


<java.lang.UNIXProcess$Platform$lambda_get_2__21: java.security.PrivilegedAction bootstrap$()> <internal,-1>


<java.lang.InheritableThreadLocal: void createMap(java.lang.Thread,java.lang.Object)> <internal,1>


<sun.reflect.generics.visitor.Reifier: sun.reflect.generics.visitor.Reifier make(sun.reflect.generics.factory.GenericsFactory)> <internal,0>


<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.parser.SignatureParser make()> <internal,0>


<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)> <internal,6>


<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)> <internal,44>


<java.util.regex.Pattern$BitClass: void <init>()> <internal,9>


<java.math.BigInteger: int[] stripLeadingZeroBytes(byte[])> <internal,31>


<sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map)> <internal,120>


<sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map)> <internal,220>


<java.lang.StringBuffer: java.lang.StringBuffer reverse()> <internal,118>


<java.lang.StringBuffer: java.lang.StringBuffer reverse()> <internal,546>


<sun.security.provider.PolicyParser$DomainEntry: void <init>(java.lang.String,java.util.Map)> <internal,15>


<java.util.LinkedList: void linkFirst(java.lang.Object)> <internal,5>


<java.math.BigDecimal: java.math.BigDecimal movePointLeft(int)> <internal,13>


<sun.security.util.DerInputBuffer: byte[] toByteArray()> <internal,12>


<java.net.InetAddress: void <init>()> <internal,10>


<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.time.format.DateTimeFormatterBuilder$NumberPrinterParser withSubsequentWidth(int)> <internal,0>


<java.lang.ThreadLocal$ThreadLocalMap: void replaceStaleEntry(java.lang.ThreadLocal,java.lang.Object,int)> <internal,175>


<java.text.MergeCollation: void <init>(java.lang.String)> <internal,40>


<java.text.MergeCollation: void <init>(java.lang.String)> <internal,26>


<java.text.MergeCollation: void <init>(java.lang.String)> <internal,5>


<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])> <internal,285>


<sun.security.x509.AVA: java.lang.String getEmbeddedHexString(java.util.List)> <internal,40>


<sun.nio.cs.FastCharsetProvider: java.lang.String toLower(java.lang.String)> <internal,113>


<sun.misc.Launcher$ExtClassLoader: java.io.File[] getExtDirs()> <internal,66>


<sun.misc.Launcher$ExtClassLoader: java.io.File[] getExtDirs()> <internal,28>


<sun.misc.Launcher$ExtClassLoader: java.io.File[] getExtDirs()> <internal,44>


<sun.net.www.protocol.jar.URLJarFile: java.util.zip.ZipEntry getEntry(java.lang.String)> <internal,17>


<sun.text.normalizer.IntTrie: void unserialize(java.io.InputStream)> <internal,10>


<java.net.SocketPermissionCollection: void <init>()> <internal,5>


<java.util.Formatter$FormatSpecifier: char[] trailingZeros(char[],int)> <internal,10>


<sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)> <internal,86>


<java.util.LinkedHashMap: java.util.Set keySet()> <internal,9>


<sun.security.util.DerInputBuffer: java.math.BigInteger getBigInteger(int,boolean)> <internal,105>


<sun.security.util.DerInputBuffer: java.math.BigInteger getBigInteger(int,boolean)> <internal,95>


<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> <internal,151>


<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> <internal,112>


<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> <internal,48>


<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> <internal,179>


<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> <internal,473>


<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> <internal,485>


<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> <internal,168>


<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> <internal,123>


<java.util.PropertyPermission: java.security.PermissionCollection newPermissionCollection()> <internal,0>


<java.util.Vector: java.util.ListIterator listIterator(int)> <internal,39>


<java.time.Instant: java.time.Instant create(long,int)> <internal,39>


<java.lang.String: java.lang.String replace(char,char)> <internal,96>


<java.lang.String: java.lang.String replace(char,char)> <internal,202>


<java.lang.String: java.lang.String replace(char,char)> <internal,149>


<java.util.zip.Inflater: void <init>(boolean)> <internal,12>


<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)> <internal,5>


<sun.security.provider.PolicyParser$GrantEntry: void <init>()> <internal,16>


<sun.security.provider.PolicyParser$GrantEntry: void <init>()> <internal,5>


<sun.security.x509.X509CRLImpl: void <init>(sun.security.util.DerValue)> <internal,45>


<sun.security.x509.X509CRLImpl: void <init>(sun.security.util.DerValue)> <internal,56>


<sun.misc.FormattedFloatingDecimal$1: java.lang.Object initialValue()> <internal,2>


<sun.nio.cs.US_ASCII: java.nio.charset.CharsetDecoder newDecoder()> <internal,0>


<java.util.Collections: java.util.Set singleton(java.lang.Object)> <internal,0>


<java.security.SecureClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)> <internal,4>


<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)> <internal,31>


<java.lang.UNIXProcess$lambda_null_0__22: java.util.concurrent.ThreadFactory bootstrap$(java.lang.ThreadGroup)> <internal,-1>


<sun.text.normalizer.NormalizerBase$NFCMode: sun.text.normalizer.NormalizerBase$IsPrevBoundary getPrevBoundary()> <internal,0>


<sun.security.jca.ProviderList$ServiceList: java.util.Iterator iterator()> <internal,0>


<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)> <internal,98>


<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)> <internal,316>


<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)> <internal,524>


<java.util.PropertyResourceBundle: java.util.Enumeration getKeys()> <internal,5>


<java.time.Duration: java.time.Duration create(long,int)> <internal,13>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger add(sun.misc.FDBigInteger)> <internal,225>


<sun.text.normalizer.NormalizerBase$NFKDMode: sun.text.normalizer.NormalizerBase$IsPrevBoundary getPrevBoundary()> <internal,0>


<java.math.BigInteger: java.math.BigInteger shiftLeft(int)> <internal,15>


<sun.security.util.Password: byte[] convertToBytes(char[])> <internal,58>


<sun.security.x509.URIName: void <init>(java.lang.String)> <internal,135>


<sun.security.x509.URIName: void <init>(java.lang.String)> <internal,181>


<sun.security.x509.URIName: void <init>(java.lang.String)> <internal,200>


<sun.security.x509.URIName: void <init>(java.lang.String)> <internal,5>


<java.lang.StringBuilder: void setLength(int)> <internal,96>


<java.lang.StringBuilder: void setLength(int)> <internal,203>


<java.math.BigDecimal: java.math.BigDecimal negate()> <internal,11>


<java.lang.String: void <init>(char[],int,int)> <internal,68>


<java.lang.String: void <init>(char[],int,int)> <internal,100>


<java.lang.String: void <init>(char[],int,int)> <internal,42>


<java.time.temporal.TemporalAdjusters$lambda_nextOrSame_10__17: java.time.temporal.TemporalAdjuster bootstrap$(int)> <internal,-1>


<sun.misc.FormattedFloatingDecimal: void fillScientific(int,char[],int,int,boolean)> <internal,233>


<sun.misc.FormattedFloatingDecimal: void fillScientific(int,char[],int,int,boolean)> <internal,140>


<sun.misc.FormattedFloatingDecimal: void fillScientific(int,char[],int,int,boolean)> <internal,176>


<java.util.ResourceBundle$CacheKey: void <init>(java.lang.String,java.util.Locale,java.lang.ClassLoader)> <internal,27>


<java.security.UnresolvedPermission: java.security.PermissionCollection newPermissionCollection()> <internal,0>


<java.time.format.DateTimeTextProvider: java.time.format.DateTimeTextProvider getInstance()> <internal,0>


<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)> <internal,72>


<java.math.MutableBigInteger: void ones(int)> <internal,11>


<java.math.MutableBigInteger: int subtract(java.math.MutableBigInteger)> <internal,53>


<java.lang.UNIXProcess$ProcessPipeInputStream: byte[] drainInputStream(java.io.InputStream)> <internal,18>


<java.util.WeakHashMap: java.util.WeakHashMap$Entry[] newTable(int)> <internal,1>


<javax.crypto.Cipher: java.lang.String[] tokenizeTransformation(java.lang.String)> <internal,15>


<javax.crypto.Cipher: java.lang.String[] tokenizeTransformation(java.lang.String)> <internal,170>


<javax.crypto.Cipher: java.lang.String[] tokenizeTransformation(java.lang.String)> <internal,176>


<javax.crypto.Cipher: java.lang.String[] tokenizeTransformation(java.lang.String)> <internal,119>


<sun.net.util.IPAddressUtil: byte[] textToNumericFormatV6(java.lang.String)> <internal,18>


<java.net.Inet6Address: void <init>(java.lang.String,byte[],int)> <internal,14>


<com.ibm.oti.shared.SharedAbstractHelper: void initialize(java.lang.ClassLoader,int,boolean,boolean)> <internal,17>


<sun.net.www.protocol.jar.Handler: java.net.URLConnection openConnection(java.net.URL)> <internal,0>


<java.util.JumboEnumSet: java.util.Iterator iterator()> <internal,0>


<java.io.File: java.net.URI toURI()> <internal,46>


<java.util.Currency: long[] readLongArray(java.io.DataInputStream,int)> <internal,1>


<java.util.zip.ZipCoder: java.util.zip.ZipCoder get(java.nio.charset.Charset)> <internal,0>


<sun.misc.URLClassPath: void <init>(java.net.URL[],java.net.URLStreamHandlerFactory,java.security.AccessControlContext,com.ibm.oti.shared.SharedClassURLClasspathHelper)> <internal,21>


<sun.security.jca.ProviderList: java.util.List getServices(java.lang.String,java.lang.String)> <internal,0>


<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,int,java.util.Set)> <internal,15>


<java.lang.UNIXProcess$ProcessPipeInputStream: void processExited()> <internal,36>


<sun.misc.URLClassPath$Loader: java.net.URL findResource(java.lang.String,boolean)> <internal,0>


<sun.text.normalizer.RuleCharacterIterator: java.lang.String lookahead()> <internal,7>


<java.text.ChoiceFormat: java.lang.String[] doubleArraySize(java.lang.String[])> <internal,6>


<java.math.BigInteger: int[] shiftLeft(int[],int)> <internal,90>


<java.math.BigInteger: int[] shiftLeft(int[],int)> <internal,24>


<java.math.BigInteger: int[] shiftLeft(int[],int)> <internal,69>


<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)> <internal,135>


<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)> <internal,352>


<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)> <internal,270>


<java.math.MutableBigInteger: java.math.MutableBigInteger divideMagnitude(java.math.MutableBigInteger,java.math.MutableBigInteger,boolean)> <internal,76>


<sun.security.jca.ProviderList$ServiceList: void addService(java.security.Provider$Service)> <internal,23>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty rangeFor(int,int)> <internal,0>


<java.lang.ProcessEnvironment$StringEnvironment: java.util.Set entrySet()> <internal,0>


<sun.util.locale.LanguageTag: boolean parseExtensions(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus)> <internal,175>


<java.io.File: java.io.File getCanonicalFile()> <internal,22>


<sun.net.www.ParseUtil: java.net.URL fileToEncodedURL(java.io.File)> <internal,75>


<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()> <internal,0>


<sun.text.normalizer.UCharacterIterator: sun.text.normalizer.UCharacterIterator getInstance(java.lang.String)> <internal,0>


<java.util.Hashtable: java.util.Iterator getIterator(int)> <internal,11>


<java.text.AttributedString: int ensureRunBreak(int,boolean)> <internal,97>


<java.text.AttributedString: int ensureRunBreak(int,boolean)> <internal,218>


<java.text.AttributedString: int ensureRunBreak(int,boolean)> <internal,81>


<java.text.AttributedString: int ensureRunBreak(int,boolean)> <internal,315>


<java.text.AttributedString: int ensureRunBreak(int,boolean)> <internal,234>


<java.text.AttributedString: int ensureRunBreak(int,boolean)> <internal,299>


<java.text.AttributedString: int ensureRunBreak(int,boolean)> <internal,87>


<java.util.LinkedHashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)> <internal,0>


<java.text.DigitList: void append(char)> <internal,19>


<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()> <internal,14>


<java.security.Signature$Delegate: void <init>(java.security.Provider$Service,java.util.Iterator,java.lang.String)> <internal,16>


<java.text.CharacterIteratorFieldDelegate: void <init>()> <internal,5>


<java.net.URI: java.net.URL toURL()> <internal,17>


<java.net.URLClassLoader: java.util.Enumeration findResources(java.lang.String)> <internal,10>


<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)> <internal,0>


<java.lang.String: void <init>(byte[],int,int,java.lang.String)> <internal,68>


<java.nio.charset.CoderResult$1: java.nio.charset.CoderResult create(int)> <internal,0>


<java.io.ExpiringCache: void <init>(long)> <internal,24>


<sun.security.x509.X500Name: java.lang.String getRFC2253CanonicalName()> <internal,23>


<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)> <internal,0>


<java.io.BufferedReader: void <init>(java.io.Reader,int)> <internal,46>


<java.lang.Class$CacheKey: java.lang.Class$CacheKey newFieldKey(java.lang.String,java.lang.Class)> <internal,0>


<java.util.jar.Attributes: void <init>(int)> <internal,5>


<sun.text.UCompactIntArray: void initPlane(int)> <internal,7>


<sun.text.UCompactIntArray: void initPlane(int)> <internal,29>


<java.math.BigInteger: int[] subtract(int[],long)> <internal,12>


<sun.reflect.generics.tree.ClassSignature: sun.reflect.generics.tree.ClassSignature make(sun.reflect.generics.tree.FormalTypeParameter[],sun.reflect.generics.tree.ClassTypeSignature,sun.reflect.generics.tree.ClassTypeSignature[])> <internal,0>


<sun.security.provider.SeedGenerator: byte[] longToByteArray(long)> <internal,2>


<sun.reflect.generics.scope.ConstructorScope: sun.reflect.generics.scope.ConstructorScope make(java.lang.reflect.Constructor)> <internal,0>


<java.util.HashMap: java.util.Set keySet()> <internal,9>


<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$ASCIIToBinaryConverter readJavaFormatString(java.lang.String)> <internal,746>


<sun.security.util.CurveDB: java.lang.String[] getNamesByOID(java.lang.String)> <internal,18>


<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)> <internal,124>


<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)> <internal,154>


<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)> <internal,357>


<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)> <internal,325>


<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)> <internal,82>


<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)> <internal,26>


<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()> <internal,24>


<java.util.Collections: java.util.Set newSetFromMap(java.util.Map)> <internal,0>


<java.lang.String: java.lang.String copyValueOf(char[],int,int)> <internal,0>


<sun.misc.URLClassPath$JarLoader: sun.misc.Resource checkResource(java.lang.String,boolean,java.util.jar.JarEntry)> <internal,42>


<java.util.Properties$LineReader: void <init>(java.util.Properties,java.io.Reader)> <internal,13>


<java.util.Properties$LineReader: void <init>(java.util.Properties,java.io.Reader)> <internal,37>


<sun.security.util.DerInputStream: byte[] getOctetString()> <internal,51>


<java.util.IdentityHashMap: java.util.Set keySet()> <internal,9>


<sun.security.util.ObjectIdentifier: void <init>(sun.security.util.DerInputBuffer)> <internal,44>


<sun.reflect.generics.scope.MethodScope: sun.reflect.generics.scope.MethodScope make(java.lang.reflect.Method)> <internal,0>


<java.time.format.DateTimeFormatterBuilder$PrefixTree: java.time.format.DateTimeFormatterBuilder$PrefixTree newTree(java.time.format.DateTimeParseContext)> <internal,7>


<java.time.format.DateTimeFormatterBuilder$PrefixTree: java.time.format.DateTimeFormatterBuilder$PrefixTree newTree(java.time.format.DateTimeParseContext)> <internal,19>


<java.security.AllPermissionCollection: java.util.Enumeration elements()> <internal,0>


<sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.security.Provider$Service,java.lang.Class)> <internal,15>


<sun.util.logging.PlatformLogger$DefaultLoggerProxy: void <init>(java.lang.String)> <internal,6>


<sun.security.util.DerValue: java.lang.String getBMPString()> <internal,39>


<java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)> <internal,0>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,1082>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,697>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,809>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,951>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,780>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,682>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,527>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,1095>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,1055>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,480>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,1007>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,767>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,914>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,1020>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,1129>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,391>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,725>


<java.util.regex.Pattern: int escape(boolean,boolean,boolean)> <internal,367>


<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: void <init>(int)> <internal,16>


<java.util.TreeMap$EntrySet: java.util.Iterator iterator()> <internal,0>


<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()> <internal,40>


<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()> <internal,25>


<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()> <internal,0>


<java.lang.String: void <init>(byte[],int,int)> <internal,60>


<sun.security.util.PolicyUtil: java.io.InputStream getInputStream(java.net.URL)> <internal,30>


<java.lang.ClassLoader: void checkPackageSigners(java.lang.String,java.lang.String,java.security.cert.Certificate[])> <internal,35>


<java.lang.StringBuffer: void setLength(int)> <internal,96>


<java.lang.StringBuffer: void setLength(int)> <internal,203>


<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()> <internal,164>


<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)> <internal,12>


<sun.security.util.DerValue: java.lang.String getGeneralString()> <internal,39>


<java.lang.Class$CacheKey: java.lang.Class$CacheKey newConstructorKey(java.lang.Class[])> <internal,0>


<sun.security.util.DerValue: java.lang.String getPrintableString()> <internal,39>


<java.time.ZoneOffset: java.time.ZoneOffset ofTotalSeconds(int)> <internal,101>


<sun.net.util.IPAddressUtil: byte[] textToNumericFormatV4(java.lang.String)> <internal,1>


<java.util.HashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)> <internal,0>


<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)> <internal,325>


<sun.security.x509.AVA: sun.security.util.DerValue parseQuotedString(java.io.Reader,java.lang.StringBuilder)> <internal,286>


<sun.security.x509.AVA: sun.security.util.DerValue parseQuotedString(java.io.Reader,java.lang.StringBuilder)> <internal,264>


<sun.security.x509.AVA: sun.security.util.DerValue parseQuotedString(java.io.Reader,java.lang.StringBuilder)> <internal,301>


<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> <internal,184>


<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> <internal,17>


<java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()> <internal,0>


<sun.net.ApplicationProxy: sun.net.ApplicationProxy create(java.net.Proxy)> <internal,0>


<sun.misc.JarIndex: void <init>()> <internal,16>


<sun.misc.JarIndex: void <init>()> <internal,5>


<java.util.Arrays: int[] copyOfRange(int[],int,int)> <internal,40>


<java.math.MutableBigInteger: java.math.BigDecimal toBigDecimal(int,int)> <internal,47>


<sun.text.normalizer.CharTrie: void <init>(java.io.InputStream,sun.text.normalizer.Trie$DataManipulate)> <internal,24>


<java.util.ArrayDeque: void doubleCapacity()> <internal,62>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfMulPow52(long,int,int)> <internal,141>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfMulPow52(long,int,int)> <internal,169>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfMulPow52(long,int,int)> <internal,427>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfMulPow52(long,int,int)> <internal,355>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfMulPow52(long,int,int)> <internal,378>


<sun.misc.FormattedFloatingDecimal: sun.misc.FormattedFloatingDecimal valueOf(double,int,sun.misc.FormattedFloatingDecimal$Form)> <internal,18>


<java.math.BigInteger: java.math.BigInteger multiplyByInt(int[],int,int)> <internal,133>


<java.math.BigInteger: java.math.BigInteger multiplyByInt(int[],int,int)> <internal,8>


<java.text.SimpleDateFormat: char[] compile(java.lang.String)> <internal,660>


<sun.security.util.DerValue: sun.security.util.ObjectIdentifier getOID()> <internal,39>


<java.util.JumboEnumSet: void <init>(java.lang.Class,java.lang.Enum[])> <internal,20>


<sun.security.util.BitArray: void <init>(int)> <internal,33>


<sun.security.pkcs.SignerInfo: java.util.ArrayList getCertificateChain(sun.security.pkcs.PKCS7)> <internal,19>


<java.text.AttributedString: void createRunAttributeDataVectors()> <internal,7>


<java.text.AttributedString: void createRunAttributeDataVectors()> <internal,16>


<java.text.AttributedString: void createRunAttributeDataVectors()> <internal,2>


<sun.misc.URLClassPath$JarLoader$2: byte[] getBytes()> <internal,34>


<java.text.DecimalFormat: java.lang.String fastFormat(double)> <internal,106>


<java.util.concurrent.locks.ReentrantLock$Sync: java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject newCondition()> <internal,0>


<sun.net.www.MimeEntry: void setExtensions(java.lang.String)> <internal,17>


<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)> <internal,12>


<sun.misc.JarIndex: sun.misc.JarIndex getJarIndex(java.util.jar.JarFile,sun.misc.MetaIndex)> <internal,28>


<java.util.Vector: java.util.ListIterator listIterator()> <internal,0>


<java.util.HashMap$Values: java.util.Iterator iterator()> <internal,0>


<java.net.SocketPermission$name__15: java.util.function.Function bootstrap$()> <internal,-1>


<sun.util.locale.provider.LocaleResources: java.lang.Object[] getDecimalFormatSymbolsData()> <internal,51>


<sun.util.locale.provider.LocaleResources: java.lang.Object[] getDecimalFormatSymbolsData()> <internal,113>


<sun.util.locale.provider.LocaleResources: java.lang.Object[] getDecimalFormatSymbolsData()> <internal,172>


<java.lang.UNIXProcess$DeferredCloseInputStream: void <init>(java.io.FileDescriptor)> <internal,6>


<java.text.DigitList: char[] getDataChars(int)> <internal,18>


<java.text.PatternEntry$Parser: java.text.PatternEntry next()> <internal,638>


<sun.security.x509.CertificateSerialNumber: void <init>(sun.security.util.DerValue)> <internal,5>


<java.lang.ThreadLocal$ThreadLocalMap: void resize()> <internal,13>


<java.lang.ThreadLocal$ThreadLocalMap: void resize()> <internal,80>


<java.lang.ProcessImpl: byte[] toCString(java.lang.String)> <internal,15>


<sun.text.IntHashtable: void initialize(int)> <internal,45>


<sun.text.IntHashtable: void initialize(int)> <internal,52>


<java.util.TimSort: void <init>(java.lang.Object[],java.util.Comparator,java.lang.Object[],int,int)> <internal,170>


<java.util.TimSort: void <init>(java.lang.Object[],java.util.Comparator,java.lang.Object[],int,int)> <internal,178>


<java.util.Arrays: int[] copyOf(int[],int)> <internal,1>


<java.lang.ThreadGroup: void add(java.lang.Thread)> <internal,33>


<java.math.BigDecimal: java.math.BigDecimal valueOf(long)> <internal,43>


<java.math.BigDecimal: java.math.BigDecimal valueOf(long)> <internal,31>


<java.util.Base64$Decoder: byte[] decode(byte[])> <internal,8>


<java.util.Calendar: java.lang.Object clone()> <internal,19>


<java.util.Calendar: java.lang.Object clone()> <internal,27>


<java.util.Calendar: java.lang.Object clone()> <internal,11>


<java.lang.UNIXProcess$Platform$lambda_launchMechanism_1__25: java.security.PrivilegedAction bootstrap$(java.lang.UNIXProcess$Platform)> <internal,-1>


<java.lang.UNIXProcess$lambda_new_2__26: java.security.PrivilegedExceptionAction bootstrap$(java.lang.UNIXProcess,int[])> <internal,-1>


<java.util.TreeMap: java.util.Collection values()> <internal,9>


<com.ibm.oti.vm.AbstractClassLoader: void initalizePermissions()> <internal,19>


<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)> <internal,219>


<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)> <internal,109>


<java.util.concurrent.ConcurrentHashMap: java.util.Enumeration keys()> <internal,16>


<java.security.spec.ECFieldF2m: void <init>(int,java.math.BigInteger)> <internal,96>


<java.text.ChoiceFormat: double[] doubleArraySize(double[])> <internal,6>


<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FormalTypeParameter[] parseZeroOrMoreFormalTypeParameters()> <internal,15>


<java.util.TreeMap: java.util.Iterator keyIterator()> <internal,0>


<java.text.DigitList: java.math.BigDecimal getBigDecimal()> <internal,18>


<java.text.DigitList: java.math.BigDecimal getBigDecimal()> <internal,59>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty newSingle(int)> <internal,32>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty newSingle(int)> <internal,63>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty newSingle(int)> <internal,80>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty newSingle(int)> <internal,89>


<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)> <internal,38>


<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)> <internal,12>


<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)> <internal,20>


<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)> <internal,27>


<sun.util.locale.LanguageTag: sun.util.locale.LanguageTag parse(java.lang.String,sun.util.locale.ParseStatus)> <internal,66>


<sun.security.util.DerValue: byte[] append(byte[],byte[])> <internal,11>


<java.lang.String: java.lang.String valueOf(char)> <internal,32>


<java.lang.String: java.lang.String valueOf(char)> <internal,13>


<java.lang.String: java.lang.String valueOf(char)> <internal,51>


<java.math.BigInteger: int[] javaIncrement(int[])> <internal,38>


<sun.security.provider.SunEntries: java.io.File getDeviceFile(java.net.URL)> <internal,79>


<sun.security.provider.SunEntries: java.io.File getDeviceFile(java.net.URL)> <internal,69>


<sun.security.provider.SunEntries: java.io.File getDeviceFile(java.net.URL)> <internal,57>


<java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()> <internal,0>


<sun.util.locale.InternalLocaleBuilder: sun.util.locale.LocaleExtensions getLocaleExtensions()> <internal,32>


<sun.reflect.generics.tree.FormalTypeParameter: sun.reflect.generics.tree.FormalTypeParameter make(java.lang.String,sun.reflect.generics.tree.FieldTypeSignature[])> <internal,0>


<java.util.LinkedHashMap: java.util.Set entrySet()> <internal,10>


<java.time.LocalDate: java.time.LocalDate ofYearDay(int,int)> <internal,120>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfPow52(int,int)> <internal,42>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger valueOfPow52(int,int)> <internal,58>


<java.security.SecureRandom: byte[] longToByteArray(long)> <internal,2>


<java.util.jar.Manifest$FastInputStream: void <init>(java.io.InputStream,int)> <internal,17>


<sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)> <internal,155>


<java.net.URI: java.net.URI create(java.lang.String)> <internal,0>


<sun.text.normalizer.NormalizerBase$NFDMode: sun.text.normalizer.NormalizerBase$IsNextBoundary getNextBoundary()> <internal,0>


<java.text.CollationElementIterator: void setText(java.lang.String)> <internal,34>


<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)> <internal,29>


<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)> <internal,101>


<java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)> <internal,0>


<sun.util.locale.InternalLocaleBuilder: void setUnicodeLocaleExtension(java.lang.String)> <internal,195>


<sun.util.locale.InternalLocaleBuilder: void setUnicodeLocaleExtension(java.lang.String)> <internal,71>


<sun.util.locale.InternalLocaleBuilder: void setUnicodeLocaleExtension(java.lang.String)> <internal,393>


<sun.security.pkcs.SignerInfo: sun.security.pkcs.PKCS7 getTsToken()> <internal,26>


<java.util.LinkedHashMap$LinkedValues: java.util.Iterator iterator()> <internal,0>


<java.util.Arrays: byte[] copyOfRange(byte[],int,int)> <internal,40>


<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigInteger,int,java.math.BigInteger,int)> <internal,80>


<sun.misc.URLClassPath$JarLoader: java.net.URL tryResolveNonFile(java.net.URL,java.lang.String)> <internal,17>


<java.math.BigInteger: java.math.BigInteger valueOf(int[])> <internal,18>


<java.math.BigInteger: java.math.BigInteger valueOf(int[])> <internal,6>


<java.util.TreeMap: java.util.NavigableSet navigableKeySet()> <internal,14>


<sun.security.x509.CertificateValidity: java.util.Date getNotAfter()> <internal,0>


<java.lang.Class: java.lang.reflect.Method[] copyMethods(java.lang.reflect.Method[])> <internal,2>


<java.time.format.DateTimeFormatterBuilder$PrefixTree: java.time.format.DateTimeFormatterBuilder$PrefixTree newNode(java.lang.String,java.lang.String,java.time.format.DateTimeFormatterBuilder$PrefixTree)> <internal,0>


<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>(boolean)> <internal,19>


<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>(boolean)> <internal,30>


<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>(boolean)> <internal,9>


<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>(boolean)> <internal,42>


<java.math.MutableBigInteger: java.math.BigInteger toBigInteger(int)> <internal,15>


<java.lang.ThreadGroup: void add(java.lang.ThreadGroup)> <internal,40>


<java.text.DigitList: java.lang.StringBuffer getStringBuffer()> <internal,8>


<java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()> <internal,0>


<java.time.format.DateTimeParseContext: void addChronoChangedListener(java.util.function.Consumer)> <internal,8>


<sun.security.x509.X509CertImpl: boolean[] getKeyUsage()> <internal,42>


<java.util.Formatter$FormatSpecifier: char[] addDot(char[])> <internal,6>


<sun.net.www.protocol.file.FileURLConnection: java.security.Permission getPermission()> <internal,27>


<sun.net.www.protocol.file.FileURLConnection: java.security.Permission getPermission()> <internal,44>


<sun.net.www.protocol.file.Handler: java.net.URLConnection createFileURLConnection(java.net.URL,java.io.File)> <internal,0>


<java.text.AttributedString$AttributedStringIterator: java.util.Map getAttributes()> <internal,41>


<java.text.AttributedString$AttributedStringIterator: java.util.Map getAttributes()> <internal,33>


<java.lang.Long: java.lang.String toString(long)> <internal,42>


<java.util.LinkedList: void linkLast(java.lang.Object)> <internal,5>


<java.text.CollationElementIterator: int[] makeReorderedBuffer(int,int,int[],boolean)> <internal,93>


<java.text.CollationElementIterator: int[] makeReorderedBuffer(int,int,int[],boolean)> <internal,142>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger mult(sun.misc.FDBigInteger)> <internal,88>


<sun.misc.URLClassPath$FileLoader: sun.misc.Resource getResource(java.lang.String,boolean)> <internal,142>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,102>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1691>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3690>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1945>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,287>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1535>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2344>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2413>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2598>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1564>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,15>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2199>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2812>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3447>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1154>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,44>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1292>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2910>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2275>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3262>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,530>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,84>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,766>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,864>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2090>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1466>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,679>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,305>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1419>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3766>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1615>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2021>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3193>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3124>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3904>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,599>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2522>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3835>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,668>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1952>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2420>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3200>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1528>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1869>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1328>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3015>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1767>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3614>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2903>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,138>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3911>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1938>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2674>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3487>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2946>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1698>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3683>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1800>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1524>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2166>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2097>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1629>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3752>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,759>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2743>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2192>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3937>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1078>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1285>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3269>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3545>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,813>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3842>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1354>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3338>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2972>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,606>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,940>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1571>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2261>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1009>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2123>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2489>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1481>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2351>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2047>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2515>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1774>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2242>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3607>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1394>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2427>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3110>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1862>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3041>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3588>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1793>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,857>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3861>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2584>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2446>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2641>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2496>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,711>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,312>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3918>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,926>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2028>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,174>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2565>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3440>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,849>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2750>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3930>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2572>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2185>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1724>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3657>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1180>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,66>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1347>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1843>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1002>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2116>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2769>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3371>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1705>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3676>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2819>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2318>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1249>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1111>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,280>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3117>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2503>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,704>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2693>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2878>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1382>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3600>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1781>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1187>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1596>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,933>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2917>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3785>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1850>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2439>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,406>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3186>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2508>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3048>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,625>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1426>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1971>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2109>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2040>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2370>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,120>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1059>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2826>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,990>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2173>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1919>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2104>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1648>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3733>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2762>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,773>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1335>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1786>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1717>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3664>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2831>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,497>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,672>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3526>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3595>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,921>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2432>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3495>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,268>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,580>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1964>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3885>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,317>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3212>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2842>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1320>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1398>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3923>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,210>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2256>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1438>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3475>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1028>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1926>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2394>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2617>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,72>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3105>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1244>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,442>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3357>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1819>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1273>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1634>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1641>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3740>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2755>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3747>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2862>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,618>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2724>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,785>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1933>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1135>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2071>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2249>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,883>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3575>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,997>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2294>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1445>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2610>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3390>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1206>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3502>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3098>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,32>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,573>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,718>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1035>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1280>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3243>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1142>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1576>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,914>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,792>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2855>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,876>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3428>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3067>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,335>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1173>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2287>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2579>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1253>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,473>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,388>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3364>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2717>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,351>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3205>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,611>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1603>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1237>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3778>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2788>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2135>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,234>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1092>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,126>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,419>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1667>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3714>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3899>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3626>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1755>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,516>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3333>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1560>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2085>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2223>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2280>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3276>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3471>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2933>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,79>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1519>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1405>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2458>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1610>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3771>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,294>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2835>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,907>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3421>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,644>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3559>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,156>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2546>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3148>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2408>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2660>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3034>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,358>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2337>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1957>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2142>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,587>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1021>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1260>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1230>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2401>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1748>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3633>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,466>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1085>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,523>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2926>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1304>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2731>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3414>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3219>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1378>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2465>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1812>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2014>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,264>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1149>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3552>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,964>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2667>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3828>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3155>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2953>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1876>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2078>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,412>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3091>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3892>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2603>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,492>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1116>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1584>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2052>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3797>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2705>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3300>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,151>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,833>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1555>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1486>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3231>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2451>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,902>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,394>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3866>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1983>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,365>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,169>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,971>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2382>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,978>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,376>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1907>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1047>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2774>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3376>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1225>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1838>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2636>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3514>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1660>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3721>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,180>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1729>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3652>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3507>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3307>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3619>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3010>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1450>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1762>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,797>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2781>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,187>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2313>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2059>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2230>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2712>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2527>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2161>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2484>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,133>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3804>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3873>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,198>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,568>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,430>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3162>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1040>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,739>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,637>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3942>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1736>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3645>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,844>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1990>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2553>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1805>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,49>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,383>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2807>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,144>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2128>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1831>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1900>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2977>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1359>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3568>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,692>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,448>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1199>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3129>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2622>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3383>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,945>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1130>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3003>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,223>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,808>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1540>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1461>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3257>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3060>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1512>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2299>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3238>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1315>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2984>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,108>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,684>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3326>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3482>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,339>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,485>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3790>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1591>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,554>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1493>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,241>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2922>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,699>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2698>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,275>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2883>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3580>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,61>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1976>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1431>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1308>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2991>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3053>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,455>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,401>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2996>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2629>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,162>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,869>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1914>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1500>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,837>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2375>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2560>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3250>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3728>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,630>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1653>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3452>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,561>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,216>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2306>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3181>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3521>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1192>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3314>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,778>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,460>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1123>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1505>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3319>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,115>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2237>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1054>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2871>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2325>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1389>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2218>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,346>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1340>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2793>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3466>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2958>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3816>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,511>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1097>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1710>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3671>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2686>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,727>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,259>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3174>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1857>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1066>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2002>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2180>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,649>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2938>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,549>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3564>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,228>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3143>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3854>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2655>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,734>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2541>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3533>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3281>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1888>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2891>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,952>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2363>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,424>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1211>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,90>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3809>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3029>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,504>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,246>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,299>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1104>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3395>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,801>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2679>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,723>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1454>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,27>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2898>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1995>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,983>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3459>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,542>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3072>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3847>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,754>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,330>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1895>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3433>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1073>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2356>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2033>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3136>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1672>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3709>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,192>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2648>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1168>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,54>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3022>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3880>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3295>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,97>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,663>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1218>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,370>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,478>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2389>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,20>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,828>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1686>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1881>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2154>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3695>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3402>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3167>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,252>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1161>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3540>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1373>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,888>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1824>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2204>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3352>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,323>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,535>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,437>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1366>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,10>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,37>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2066>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1265>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2965>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2867>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3079>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2591>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2477>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1679>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3702>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,592>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,821>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2147>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1016>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3224>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1474>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2332>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1299>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3409>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1548>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1743>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2211>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3638>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1410>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,747>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3288>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2268>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2800>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3345>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,959>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2009>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3759>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2736>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,1622>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2470>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,205>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3086>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,656>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,895>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,3823>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2534>


<sun.nio.cs.StandardCharsets$Aliases: void init(java.lang.Object[])> <internal,2847>


<java.util.Collections$EmptySet: java.lang.Object[] toArray()> <internal,1>


<java.lang.ClassLoader$CompoundEnumeration: void <init>(java.util.Enumeration,java.util.Enumeration)> <internal,26>


<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)> <internal,30>


<sun.security.x509.AlgorithmId: sun.security.x509.AlgorithmId get(java.lang.String)> <internal,67>


<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)> <internal,92>


<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)> <internal,10>


<java.text.DateFormatSymbols: java.lang.String[] toOneBasedArray(java.lang.String[])> <internal,14>


<java.text.DateFormatSymbols: java.lang.String[] toOneBasedArray(java.lang.String[])> <internal,6>


<sun.net.www.protocol.file.FileURLConnection: void connect()> <internal,90>


<sun.net.www.protocol.file.FileURLConnection: void connect()> <internal,150>


<java.io.File: java.io.File getAbsoluteFile()> <internal,22>


<sun.security.util.SignatureFileVerifier: java.security.MessageDigest getDigest(java.lang.String)> <internal,8>


<java.lang.StringBuffer: void <init>(int)> <internal,36>


<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: java.time.format.DateTimeFormatterBuilder$NumberPrinterParser numberPrinterParser()> <internal,8>


<java.time.zone.TzdbZoneRulesProvider: java.util.Set provideZoneIds()> <internal,0>


<java.lang.String: java.lang.String substring(int)> <internal,69>


<java.lang.String: java.lang.String substring(int)> <internal,49>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,402>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,146>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,85>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,449>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,431>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,160>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,215>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,64>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,95>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,190>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,229>


<java.util.regex.Pattern: java.util.regex.Pattern$Node closure(java.util.regex.Pattern$Node)> <internal,121>


<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl make(java.lang.Class,java.lang.reflect.Type[],java.lang.reflect.Type)> <internal,0>


<java.nio.file.attribute.FileTime: java.nio.file.attribute.FileTime 'from'(long,java.util.concurrent.TimeUnit)> <internal,7>


<java.net.URLClassLoader$SharedClassMetaDataCache: void ensureSize(int)> <internal,17>


<java.lang.Long: java.lang.String toString(long,int)> <internal,113>


<javax.crypto.JceSecurity: java.lang.Exception getVerificationResult(java.security.Provider)> <internal,40>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,25>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,134>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,47>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,59>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,99>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,110>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,66>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,88>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,145>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,156>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,36>


<java.util.jar.JarVerifier: void <init>(java.lang.String,byte[])> <internal,123>


<java.lang.String: java.lang.String concat(java.lang.String)> <internal,216>


<java.lang.String: java.lang.String concat(java.lang.String)> <internal,110>


<java.text.DecimalFormat: java.math.BigDecimal getBigDecimalMultiplier()> <internal,8>


<java.util.concurrent.SynchronousQueue$TransferStack: java.util.concurrent.SynchronousQueue$TransferStack$SNode snode(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.lang.Object,java.util.concurrent.SynchronousQueue$TransferStack$SNode,int)> <internal,4>


<java.net.Inet4Address: byte[] getAddress()> <internal,9>


<java.time.LocalTime: java.time.LocalTime create(int,int,int,int)> <internal,14>


<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Set getAvailableLocaleSet()> <internal,8>


<java.util.Arrays: char[] copyOfRange(char[],int,int)> <internal,40>


<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)> <internal,9>


<com.ibm.oti.vm.BootstrapClassLoader: void <init>()> <internal,10>


<com.ibm.oti.vm.BootstrapClassLoader: void <init>()> <internal,25>


<com.ibm.oti.vm.BootstrapClassLoader: void <init>()> <internal,17>


<java.util.LinkedList: java.util.ListIterator listIterator(int)> <internal,5>


<java.util.WeakHashMap$Values: java.util.Iterator iterator()> <internal,0>


<java.util.Arrays: char[] copyOf(char[],int)> <internal,1>


<java.io.FilePermission: java.security.PermissionCollection newPermissionCollection()> <internal,0>


<java.util.LinkedHashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)> <internal,0>


<java.time.LocalDateTime: java.time.LocalDateTime ofEpochSecond(long,int,java.time.ZoneOffset)> <internal,68>


<java.util.Arrays: long[] copyOf(long[],int)> <internal,1>


<java.util.concurrent.ConcurrentSkipListMap: java.util.Iterator keyIterator()> <internal,0>


<java.math.BigInteger: java.math.BigInteger exactDivideBy3()> <internal,118>


<java.util.HashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)> <internal,0>


<java.util.HashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)> <internal,0>


<java.util.ServiceLoader: void reload()> <internal,8>


<sun.util.calendar.ZoneInfoFile: java.lang.String toCustomID(int)> <internal,148>


<java.util.zip.ZipFile: java.util.zip.ZipEntry getZipEntry(java.lang.String,long)> <internal,0>


<java.util.zip.ZipFile: java.util.zip.ZipEntry getZipEntry(java.lang.String,long)> <internal,47>


<java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()> <internal,0>


<java.text.CalendarBuilder: void <init>()> <internal,7>


<sun.security.jca.ProviderList: sun.security.jca.ProviderList getJarList(java.lang.String[])> <internal,120>


<java.util.jar.JarInputStream: java.util.zip.ZipEntry createZipEntry(java.lang.String)> <internal,0>


<java.util.HashSet: void <init>(int)> <internal,5>


<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)> <internal,29>


<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)> <internal,85>


<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)> <internal,174>


<java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)> <internal,107>


<java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)> <internal,41>


<javax.crypto.CryptoPermission: java.security.PermissionCollection newPermissionCollection()> <internal,0>


<java.util.regex.Pattern: java.util.regex.Pattern$Node createGroup(boolean)> <internal,41>


<java.util.regex.Pattern: java.util.regex.Pattern$Node createGroup(boolean)> <internal,30>


<sun.reflect.generics.tree.ArrayTypeSignature: sun.reflect.generics.tree.ArrayTypeSignature make(sun.reflect.generics.tree.TypeSignature)> <internal,0>


<java.util.StringTokenizer: void setMaxDelimCodePoint()> <internal,105>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger rightInplaceSub(sun.misc.FDBigInteger)> <internal,36>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger rightInplaceSub(sun.misc.FDBigInteger)> <internal,134>


<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser withFixedWidth()> <internal,10>


<java.math.BigInteger: java.math.BigInteger getToomSlice(int,int,int,int)> <internal,127>


<java.util.Collections$UnmodifiableMap: java.util.Set entrySet()> <internal,8>


<java.net.SocketPermission: void getIP()> <internal,91>


<java.util.Formatter$FormatSpecifier: char[] addZeros(char[],int)> <internal,100>


<sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(int,int,int,int)> <internal,85>


<sun.security.util.DerValue: java.lang.String getIA5String()> <internal,39>


<java.lang.StringBuilder: void move(int,int)> <internal,225>


<java.lang.StringBuilder: void move(int,int)> <internal,103>


<java.io.FilePermissionCollection: void <init>()> <internal,5>


<java.security.Timestamp: java.util.Date getTimestamp()> <internal,0>


<java.security.Permissions: void <init>()> <internal,10>


<java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)> <internal,7>


<java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)> <internal,13>


<java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)> <internal,30>


<java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)> <internal,22>


<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()> <internal,0>


<java.lang.StringBuilder: java.lang.String substring(int)> <internal,28>


<java.lang.StringBuilder: java.lang.String substring(int)> <internal,56>


<java.util.ArrayDeque: void <init>()> <internal,7>


<sun.security.x509.AVA: sun.security.util.DerValue parseString(java.io.Reader,int,int,java.lang.StringBuilder)> <internal,575>


<sun.security.x509.AVA: sun.security.util.DerValue parseString(java.io.Reader,int,int,java.lang.StringBuilder)> <internal,542>


<sun.security.x509.AVA: sun.security.util.DerValue parseString(java.io.Reader,int,int,java.lang.StringBuilder)> <internal,562>


<java.util.RegularEnumSet: java.util.Iterator iterator()> <internal,0>


<sun.security.util.DerInputBuffer: sun.security.util.BitArray getUnalignedBitString(int)> <internal,90>


<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: void <init>(java.time.format.TextStyle,java.util.Set)> <internal,80>


<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: void <init>(java.time.format.TextStyle,java.util.Set)> <internal,32>


<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: void <init>(java.time.format.TextStyle,java.util.Set)> <internal,43>


<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> <internal,62>


<sun.text.normalizer.NormalizerDataReader: int[] readIndexes(int)> <internal,1>


<java.security.Signature: java.security.Signature getInstance(java.lang.String)> <internal,88>


<java.io.ByteArrayOutputStream: java.lang.String toString()> <internal,0>


<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal,java.lang.Object)> <internal,12>


<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal,java.lang.Object)> <internal,31>


<sun.net.www.protocol.file.FileURLConnection: java.io.InputStream getInputStream()> <internal,116>


<java.util.HashSet: void <init>()> <internal,5>


<java.math.MutableBigInteger: void add(java.math.MutableBigInteger)> <internal,46>


<java.math.MutableBigInteger: void add(java.math.MutableBigInteger)> <internal,286>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty union(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)> <internal,0>


<java.util.regex.Pattern$CharPropertyNames$1: java.util.regex.Pattern$CharProperty make()> <internal,0>


<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)> <internal,0>


<java.math.BigInteger: java.math.BigInteger getLower(int)> <internal,33>


<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> <internal,46>


<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)> <internal,21>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger mult(int)> <internal,31>


<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)> <internal,14>


<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)> <internal,73>


<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)> <internal,400>


<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)> <internal,64>


<java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)> <internal,377>


<sun.text.normalizer.NormalizerBase$NFDMode: sun.text.normalizer.NormalizerBase$IsPrevBoundary getPrevBoundary()> <internal,0>


<java.lang.System: java.io.PrintStream createConsole(java.io.FileDescriptor,java.lang.String)> <internal,30>


<java.lang.System: java.io.PrintStream createConsole(java.io.FileDescriptor,java.lang.String)> <internal,20>


<sun.security.jca.ProviderList: sun.security.jca.ProviderList removeInvalid()> <internal,66>


<java.lang.StringBuffer: java.lang.String substring(int,int)> <internal,66>


<java.lang.StringBuffer: java.lang.String substring(int,int)> <internal,33>


<sun.security.util.DerInputStream: sun.security.util.DerInputStream subStream(int,boolean)> <internal,27>


<java.math.BigInteger: java.math.BigInteger shiftRight(int)> <internal,27>


<sun.security.x509.GeneralNames: void <init>()> <internal,5>


<java.lang.ThreadLocal: void createMap(java.lang.Thread,java.lang.Object)> <internal,1>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty unicodeScriptPropertyFor(java.lang.String)> <internal,40>


<java.text.FieldPosition: java.text.Format$FieldDelegate getFieldDelegate()> <internal,0>


<java.math.BigInteger: int[] add(int[],long)> <internal,21>


<java.math.BigInteger: int[] add(int[],long)> <internal,97>


<java.math.BigInteger: int[] add(int[],long)> <internal,250>


<java.math.BigInteger: int[] add(int[],long)> <internal,59>


<java.util.ResourceBundle$Control: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)> <internal,12>


<java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)> <internal,20>


<java.util.HashMap: java.util.Set entrySet()> <internal,10>


<java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: java.time.format.DateTimeFormatterBuilder$CompositePrinterParser withOptional(boolean)> <internal,10>


<java.text.AttributedString$AttributedStringIterator: java.util.Set getAllAttributeKeys()> <internal,10>


<java.text.AttributedString$AttributedStringIterator: java.util.Set getAllAttributeKeys()> <internal,25>


<sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)> <internal,86>


<sun.security.util.CurveDB: java.math.BigInteger bi(java.lang.String)> <internal,0>


<java.lang.UNIXProcess$DeferredCloseProcessPipeInputStream: java.io.InputStream drainInputStream(java.io.InputStream)> <internal,133>


<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])> <internal,38>


<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])> <internal,133>


<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])> <internal,85>


<java.security.ProtectionDomain$2: sun.misc.JavaSecurityProtectionDomainAccess$ProtectionDomainCache getProtectionDomainCache()> <internal,0>


<java.lang.ThreadLocal$ThreadLocalMap: void set(java.lang.ThreadLocal,java.lang.Object)> <internal,88>


<sun.security.provider.PolicyFile$PolicyEntry: void <init>(java.security.CodeSource,java.util.List)> <internal,10>


<java.util.Optional: java.util.Optional of(java.lang.Object)> <internal,0>


<java.util.Properties$LineReader: void <init>(java.util.Properties,java.io.InputStream)> <internal,13>


<java.util.Properties$LineReader: void <init>(java.util.Properties,java.io.InputStream)> <internal,37>


<java.util.concurrent.SynchronousQueue$TransferQueue: void <init>()> <internal,4>


<sun.util.calendar.Era: void <init>(java.lang.String,java.lang.String,long,boolean)> <internal,53>


<java.io.FileOutputStream: void <init>(java.io.File,boolean)> <internal,79>


<java.io.FileOutputStream: void <init>(java.io.File,boolean)> <internal,5>


<sun.security.util.DerIndefLenConverter: void <init>()> <internal,10>


<java.lang.Class$ReflectCache: void <init>(java.lang.Class)> <internal,10>


<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: void growURLs(int)> <internal,49>


<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: void growURLs(int)> <internal,38>


<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: void growURLs(int)> <internal,43>


<java.math.BigDecimal: java.math.BigDecimal multiply(long,java.math.BigInteger,int)> <internal,11>


<java.util.HashMap$KeySet: java.util.Iterator iterator()> <internal,0>


<sun.misc.FloatingDecimal: sun.misc.FloatingDecimal$ASCIIToBinaryConverter parseHexString(java.lang.String)> <internal,1400>


<javax.crypto.CryptoAllPermission: java.security.PermissionCollection newPermissionCollection()> <internal,0>


<java.util.zip.ZipCoder: java.lang.String toStringUTF8(byte[],int)> <internal,22>


<java.text.RBTableBuilder: void <init>(java.text.RBCollationTables$BuildAPI)> <internal,21>


<java.text.RBTableBuilder: void <init>(java.text.RBCollationTables$BuildAPI)> <internal,27>


<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()> <internal,0>


<java.util.WeakHashMap: java.util.Collection values()> <internal,9>


<java.util.regex.Pattern$CharPropertyNames$5: java.util.regex.Pattern$CharProperty make()> <internal,0>


<java.util.regex.Pattern$BnM: java.util.regex.Pattern$Node optimize(java.util.regex.Pattern$Node)> <internal,145>


<java.util.regex.Pattern$BnM: java.util.regex.Pattern$Node optimize(java.util.regex.Pattern$Node)> <internal,162>


<java.text.DecimalFormat: void resetFastPathData(boolean)> <internal,225>


<java.text.DecimalFormat: void resetFastPathData(boolean)> <internal,15>


<java.time.zone.TzdbZoneRulesProvider: void <init>()> <internal,5>


<java.lang.UNIXProcess$ProcessPipeInputStream: void <init>(int)> <internal,16>


<java.security.Provider$Service: java.lang.Class getImplClass()> <internal,121>


<java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Node untreeify(java.util.concurrent.ConcurrentHashMap$Node)> <internal,10>


<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)> <internal,50>


<java.util.HashMap: java.util.HashMap$Node[] resize()> <internal,133>


<java.security.Permissions: java.util.Enumeration elements()> <internal,4>


<java.util.Calendar: java.util.Map getDisplayNamesImpl(int,int,java.util.Locale)> <internal,21>


<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)> <internal,63>


<sun.security.provider.PolicyFile$PolicyInfo: void <init>(int)> <internal,89>


<sun.security.provider.PolicyFile$PolicyInfo: void <init>(int)> <internal,5>


<sun.security.provider.PolicyFile$PolicyInfo: void <init>(int)> <internal,48>


<java.text.MessageFormat: void <init>(java.lang.String)> <internal,7>


<java.text.MessageFormat: void <init>(java.lang.String)> <internal,13>


<java.text.MessageFormat: void <init>(java.lang.String)> <internal,30>


<java.text.MessageFormat: void <init>(java.lang.String)> <internal,22>


<sun.security.x509.CertificateVersion: java.lang.Integer get(java.lang.String)> <internal,9>


<sun.security.x509.URIName: sun.security.x509.URIName nameConstraint(sun.security.util.DerValue)> <internal,94>


<java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()> <internal,0>


<sun.net.util.IPAddressUtil: byte[] convertFromIPv4MappedAddress(byte[])> <internal,8>


<sun.text.normalizer.NormalizerBase$NFCMode: sun.text.normalizer.NormalizerBase$IsNextBoundary getNextBoundary()> <internal,0>


<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])> <internal,492>


<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)> <internal,9>


<sun.security.jca.ProviderList: java.util.List getServices(java.util.List)> <internal,0>


<java.math.BigDecimal: java.math.BigDecimal multiply(long,long,int)> <internal,24>


<java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.time.format.DateTimeFormatterBuilder$NumberPrinterParser withFixedWidth()> <internal,10>


<java.util.LinkedList: void linkBefore(java.lang.Object,java.util.LinkedList$Node)> <internal,5>


<java.util.HashMap: java.util.Collection values()> <internal,9>


<java.lang.ProcessEnvironment$StringEnvironment: byte[] toEnvironmentBlock(int[])> <internal,85>


<sun.text.normalizer.NormalizerBase$NFKDMode: sun.text.normalizer.NormalizerBase$IsNextBoundary getNextBoundary()> <internal,0>


<java.util.JapaneseImperialCalendar: void computeTime()> <internal,358>


<java.util.JapaneseImperialCalendar: void computeTime()> <internal,17>


<sun.security.x509.CertificateValidity: java.util.Date getNotBefore()> <internal,0>


<java.security.Security: java.io.File securityPropFile(java.lang.String)> <internal,4>


<sun.text.normalizer.UnicodeSet: int[] range(int,int)> <internal,9>


<com.ibm.oti.shared.SharedClassURLClasspathHelperImpl: java.net.URL[] getClasspath()> <internal,4>


<java.math.BigInteger: int[] subtract(int[],int[])> <internal,4>


<java.util.jar.Manifest: void <init>(java.util.jar.JarVerifier,java.io.InputStream)> <internal,16>


<java.util.jar.Manifest: void <init>(java.util.jar.JarVerifier,java.io.InputStream)> <internal,5>


<java.math.MutableBigInteger: void <init>()> <internal,11>


<java.util.ArrayList: java.util.ListIterator listIterator(int)> <internal,39>


<java.lang.ThreadLocal: java.lang.ThreadLocal$ThreadLocalMap createInheritedMap(java.lang.ThreadLocal$ThreadLocalMap)> <internal,0>


<sun.misc.URLClassPath$FileLoader$1: java.io.InputStream getInputStream()> <internal,0>


<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)> <internal,26>


<sun.util.locale.provider.JRELocaleProviderAdapter: sun.util.locale.provider.LocaleResources getLocaleResources(java.util.Locale)> <internal,18>


<java.net.Inet6Address$Inet6AddressHolder: void <init>(java.net.Inet6Address)> <internal,12>


<java.util.LinkedList: java.lang.Object[] toArray()> <internal,4>


<java.nio.HeapCharBuffer: java.nio.CharBuffer slice()> <internal,23>


<java.util.jar.JarFile: java.util.Enumeration entries()> <internal,0>


<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$PermissionEntry parsePermissionEntry()> <internal,0>


<java.util.WeakHashMap: java.util.Set entrySet()> <internal,14>


<java.math.BigDecimal: java.math.BigDecimal valueOf(java.math.BigInteger,int,int)> <internal,43>


<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)> <internal,588>


<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)> <internal,639>


<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)> <internal,513>


<java.math.BigDecimal: java.math.BigDecimal add(long,int,java.math.BigInteger,int)> <internal,120>


<sun.net.www.protocol.jar.URLJarFile: java.util.jar.Manifest getManifest()> <internal,9>


<sun.security.x509.AVA: java.lang.Byte getEmbeddedHexPair(int,java.io.Reader)> <internal,50>


<java.time.LocalDate: java.time.LocalDate resolvePreviousValid(int,int,int)> <internal,89>


<sun.text.normalizer.UCharacterPropertyReader: void read(sun.text.normalizer.UCharacterProperty)> <internal,269>


<sun.text.normalizer.UCharacterPropertyReader: void read(sun.text.normalizer.UCharacterProperty)> <internal,154>


<sun.text.normalizer.UCharacterPropertyReader: void read(sun.text.normalizer.UCharacterProperty)> <internal,242>


<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)> <internal,83>


<java.lang.Integer: java.lang.Integer valueOf(int)> <internal,23>


<javax.crypto.CryptoPolicyParser: void <init>()> <internal,5>


<java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)> <internal,6>


<sun.text.normalizer.NormalizerBase: java.lang.Object clone()> <internal,35>


<java.util.Collections: java.util.Set synchronizedSet(java.util.Set)> <internal,0>


<java.math.BigInteger: java.math.BigInteger negate()> <internal,0>


<java.util.ArrayList: java.util.ListIterator listIterator()> <internal,0>


<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)> <internal,96>


<java.io.StringWriter: void <init>()> <internal,5>


<java.util.Collections: java.util.Iterator singletonIterator(java.lang.Object)> <internal,0>


<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)> <internal,77>


<java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)> <internal,24>


<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)> <internal,587>


<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)> <internal,419>


<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)> <internal,167>


<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)> <internal,449>


<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)> <internal,217>


<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)> <internal,26>


<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)> <internal,115>


<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)> <internal,619>


<sun.security.x509.X509Key: sun.security.util.BitArray getKey()> <internal,1>


<java.time.LocalDateTime: java.time.LocalDateTime 'with'(java.time.LocalDate,java.time.LocalTime)> <internal,18>


<sun.security.util.SignatureFileVerifier: void <init>(java.util.ArrayList,sun.security.util.ManifestDigester,java.lang.String,byte[])> <internal,34>


<sun.security.util.SignatureFileVerifier: void <init>(java.util.ArrayList,sun.security.util.ManifestDigester,java.lang.String,byte[])> <internal,15>


<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)> <internal,21>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,297>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,414>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,19>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,136>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,214>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,526>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,34>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,287>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,429>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,511>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,462>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,312>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,121>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,613>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,74>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,347>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,503>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,403>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,620>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,169>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,381>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,469>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,586>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,337>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,106>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,262>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,496>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,254>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,596>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,562>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,10>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,533>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,204>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,82>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,26>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,477>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,371>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,180>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,280>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,436>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,41>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,197>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,319>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,187>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,421>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,114>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,236>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,154>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,89>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,3>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,162>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,129>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,247>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,56>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,304>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,552>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,269>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,637>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,447>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,603>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,330>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,454>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,147>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,396>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,67>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,354>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,569>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,630>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,484>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,364>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,99>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,49>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,545>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,221>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,579>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,388>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,518>


<sun.nio.cs.StandardCharsets$Cache: void init(java.lang.Object[])> <internal,229>


<java.lang.StringBuilder: void <init>(int)> <internal,36>


<javax.crypto.Cipher: java.util.List getTransforms(java.lang.String)> <internal,76>


<java.net.Inet6Address: void <init>(java.lang.String,byte[])> <internal,5>


<java.security.BasicPermission: java.security.PermissionCollection newPermissionCollection()> <internal,0>


<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(java.security.PermissionCollection,java.security.PermissionCollection)> <internal,110>


<java.util.TreeMap$Values: java.util.Iterator iterator()> <internal,0>


<sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl make(java.lang.reflect.Type)> <internal,0>


<sun.security.util.ManifestEntryVerifier: java.util.Map algsPermittedStatusForSigners(java.util.Map,java.security.CodeSigner[])> <internal,19>


<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)> <internal,195>


<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)> <internal,57>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty intersection(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)> <internal,0>


<java.math.MutableBigInteger: java.math.MutableBigInteger getBlock(int,int,int)> <internal,14>


<java.math.MutableBigInteger: java.math.MutableBigInteger getBlock(int,int,int)> <internal,95>


<java.math.MutableBigInteger: java.math.MutableBigInteger getBlock(int,int,int)> <internal,54>


<java.time.format.DecimalStyle: java.lang.String convertNumberToI18N(java.lang.String)> <internal,51>


<java.util.regex.Matcher: void <init>(java.util.regex.Pattern,java.lang.CharSequence)> <internal,63>


<java.util.regex.Matcher: void <init>(java.util.regex.Pattern,java.lang.CharSequence)> <internal,73>


<java.util.ComparableTimSort: void <init>(java.lang.Object[],java.lang.Object[],int,int)> <internal,154>


<java.util.ComparableTimSort: void <init>(java.lang.Object[],java.lang.Object[],int,int)> <internal,146>


<java.util.ComparableTimSort: void <init>(java.lang.Object[],java.lang.Object[],int,int)> <internal,67>


<java.net.Inet6Address: void <init>(java.lang.String,byte[],java.lang.String)> <internal,5>


<java.util.zip.ZipFile: java.util.zip.Inflater getInflater()> <internal,47>


<com.ibm.oti.shared.SharedClassPermission: java.security.PermissionCollection newPermissionCollection()> <internal,0>


<sun.nio.cs.US_ASCII: java.nio.charset.CharsetEncoder newEncoder()> <internal,0>


<java.util.Collections$EmptyList: java.lang.Object[] toArray()> <internal,1>


<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> <internal,115>


<java.time.zone.ZoneRules: java.time.zone.ZoneOffsetTransition[] findTransitionArray(int)> <internal,34>


<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)> <internal,128>


<sun.util.cldr.CLDRLocaleProviderAdapter: java.util.Set createLanguageTagSet(java.lang.String)> <internal,23>


<java.net.SocketPermission: int[] parsePort(java.lang.String)> <internal,153>


<java.net.SocketPermission: int[] parsePort(java.lang.String)> <internal,23>


<java.net.SocketPermission: int[] parsePort(java.lang.String)> <internal,53>


<sun.security.util.DerInputStream: sun.security.util.BitArray getUnalignedBitString()> <internal,33>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty setDifference(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)> <internal,0>


<java.nio.charset.CoderResult$2: java.nio.charset.CoderResult create(int)> <internal,0>


<java.lang.ProcessBuilder: void <init>(java.lang.String[])> <internal,5>


<java.lang.ProcessEnvironment: java.util.Map emptyEnvironment(int)> <internal,0>


<sun.security.util.JarConstraintsParameters: void <init>(java.security.CodeSigner[])> <internal,16>


<sun.security.util.JarConstraintsParameters: void <init>(java.security.CodeSigner[])> <internal,5>


<java.lang.StringBuilder: void <init>(java.lang.String)> <internal,40>


<java.lang.StringBuilder: void <init>(java.lang.String)> <internal,71>


<java.lang.StringBuilder: void <init>(java.lang.String)> <internal,108>


<java.security.Provider$Service: void addAttribute(java.lang.String,java.lang.String)> <internal,13>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftInplaceSub(sun.misc.FDBigInteger)> <internal,34>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftInplaceSub(sun.misc.FDBigInteger)> <internal,139>


<java.io.FileInputStream: void <init>(java.io.File)> <internal,10>


<java.io.FileInputStream: void <init>(java.io.File)> <internal,81>


<java.util.concurrent.ConcurrentHashMap$Traverser: void pushState(java.util.concurrent.ConcurrentHashMap$Node[],int,int)> <internal,23>


<java.text.RuleBasedCollator: java.lang.Object clone()> <internal,9>


<sun.text.normalizer.NormalizerImpl: char[] composePart(sun.text.normalizer.NormalizerImpl$ComposePartArgs,int,char[],int,int,int,sun.text.normalizer.UnicodeSet)> <internal,71>


<sun.text.normalizer.NormalizerImpl: char[] composePart(sun.text.normalizer.NormalizerImpl$ComposePartArgs,int,char[],int,int,int,sun.text.normalizer.UnicodeSet)> <internal,28>


<java.lang.StringBuffer: void <init>(java.lang.String)> <internal,40>


<java.lang.StringBuffer: void <init>(java.lang.String)> <internal,71>


<java.lang.StringBuffer: void <init>(java.lang.String)> <internal,108>


<sun.misc.URLClassPath$JarLoader: java.net.URL[] parseClassPath(java.net.URL,java.lang.String)> <internal,13>


<sun.misc.URLClassPath$JarLoader: java.net.URL[] parseClassPath(java.net.URL,java.lang.String)> <internal,40>


<java.lang.Integer: java.lang.String toString(int,int)> <internal,102>


<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)> <internal,191>


<java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()> <internal,124>


<java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()> <internal,69>


<java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()> <internal,138>


<java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()> <internal,101>


<java.util.Formatter$Flags: java.util.Formatter$Flags dup()> <internal,0>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,570>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,297>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,375>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,209>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,502>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,112>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,43>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,462>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,657>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,15>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,64>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,239>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,121>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,191>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,315>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,549>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,474>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,71>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,278>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,533>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,639>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,578>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,432>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,416>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,172>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,668>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,626>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,368>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,309>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,490>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,675>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,255>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,32>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,133>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,451>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,27>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,149>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,198>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,393>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,446>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,357>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,621>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,304>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,542>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,632>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,203>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,128>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,250>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,59>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,362>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,590>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,144>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,680>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,404>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,420>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,558>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,380>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,331>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,526>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,234>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,565>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,614>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,439>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,467>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,662>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,20>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,585>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,137>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,48>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,117>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,243>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,398>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,262>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,596>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,427>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,10>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,350>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,411>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,506>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,87>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,644>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,156>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,538>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,554>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,163>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,285>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,105>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,227>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,455>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,650>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,3>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,36>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,52>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,269>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,386>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,481>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,603>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,274>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,486>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,608>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,179>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,99>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,216>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,322>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,83>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,221>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,338>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,94>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,327>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,518>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,184>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,78>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,343>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,513>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,290>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,168>


<sun.nio.cs.StandardCharsets$Classes: void init(java.lang.Object[])> <internal,497>


<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)> <internal,29>


<java.lang.Class$CacheKey: java.lang.Class$CacheKey newMethodKey(java.lang.String,java.lang.Class[],java.lang.Class)> <internal,0>


<java.math.BigInteger: int[] makePositive(byte[])> <internal,68>


<java.math.BigInteger: java.math.BigInteger multiply(long)> <internal,289>


<java.util.GregorianCalendar: int computeFields(int,int)> <internal,17>


<sun.reflect.generics.tree.Wildcard: sun.reflect.generics.tree.Wildcard make(sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.tree.FieldTypeSignature[])> <internal,0>


<java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser withSubsequentWidth(int)> <internal,0>


<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()> <internal,54>


<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> <internal,227>


<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> <internal,103>


<java.text.DigitList: void <init>()> <internal,17>


<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void <init>()> <internal,7>


<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void <init>()> <internal,25>


<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: sun.reflect.generics.reflectiveObjects.WildcardTypeImpl make(sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.tree.FieldTypeSignature[],sun.reflect.generics.factory.GenericsFactory)> <internal,0>


<java.math.MutableBigInteger: java.math.MutableBigInteger divide3n2n(java.math.MutableBigInteger,java.math.MutableBigInteger)> <internal,7>


<sun.security.x509.IPAddressName: void parseIPv4(java.lang.String)> <internal,29>


<java.math.BigInteger: int[] multiplyToLen(int[],int,int[],int,int[])> <internal,27>


<com.ibm.oti.vm.AbstractClassLoader: java.io.InputStream openFile(java.lang.String)> <internal,16>


<java.math.BigInteger: java.math.BigInteger getUpper(int)> <internal,36>


<java.util.jar.Manifest: java.lang.String parseName(byte[],int)> <internal,64>


<java.util.JapaneseImperialCalendar: int computeFields(int,int)> <internal,17>


<java.math.MutableBigInteger: int divideOneWord(int,java.math.MutableBigInteger)> <internal,96>


<sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)> <internal,130>


<sun.reflect.generics.tree.SimpleClassTypeSignature: sun.reflect.generics.tree.SimpleClassTypeSignature make(java.lang.String,boolean,sun.reflect.generics.tree.TypeArgument[])> <internal,0>


<java.util.HashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)> <internal,0>


<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)> <internal,0>


<sun.security.provider.PolicyParser: java.util.Map parseProperties(java.lang.String)> <internal,0>


<java.util.LinkedHashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)> <internal,5>


<sun.security.pkcs.SignerInfo: java.util.Set verifyAlgorithms(sun.security.pkcs.SignerInfo[],sun.security.util.JarConstraintsParameters,java.lang.String)> <internal,50>


<com.ibm.oti.vm.AbstractClassLoader$2: java.lang.Object run()> <internal,0>


<java.util.concurrent.ConcurrentSkipListMap: java.util.NavigableSet navigableKeySet()> <internal,14>


<sun.security.util.DerInputStream: sun.security.util.ObjectIdentifier getOID()> <internal,0>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,750>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,736>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,506>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,713>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,891>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,485>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,202>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,826>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,909>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,154>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,449>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,168>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,428>


<java.util.regex.Pattern: java.util.regex.Pattern$Node group0()> <internal,924>


<java.math.BigInteger: int[] makePositive(int[])> <internal,59>


<java.util.Collections$SynchronizedMap: java.util.Collection values()> <internal,15>


<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: java.lang.String toJavaFormatString()> <internal,9>


<sun.security.provider.PolicyParser: java.lang.String[] parseExtDirs(java.lang.String,int)> <internal,130>


<sun.security.provider.PolicyParser: java.lang.String[] parseExtDirs(java.lang.String,int)> <internal,218>


<sun.security.provider.PolicyParser: java.lang.String[] parseExtDirs(java.lang.String,int)> <internal,84>


<sun.security.provider.PolicyParser: java.lang.String[] parseExtDirs(java.lang.String,int)> <internal,159>


<sun.security.provider.PolicyParser: java.lang.String[] parseExtDirs(java.lang.String,int)> <internal,176>


<sun.reflect.generics.scope.ClassScope: sun.reflect.generics.scope.ClassScope make(java.lang.Class)> <internal,0>


<java.time.format.DateTimeParseContext: java.time.format.DateTimeParseContext copy()> <internal,0>


<java.time.format.Parsed: void <init>()> <internal,5>


<java.lang.Class: java.lang.Class$EnumVars getEnumVars()> <internal,55>


<java.security.Permissions: java.security.PermissionCollection getPermissionCollection(java.security.Permission,boolean)> <internal,77>


<sun.security.util.DerValue: java.lang.String getT61String()> <internal,39>


<java.net.URLClassLoader$SharedClassMetaDataCache: void <init>(java.net.URLClassLoader,int)> <internal,11>


<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])> <internal,266>


<java.math.BigInteger: int[] subtract(long,int[])> <internal,34>


<java.math.BigInteger: int[] subtract(long,int[])> <internal,11>


<java.lang.StringBuffer: void decompress(int,int)> <internal,37>


<java.lang.StringBuffer: void decompress(int,int)> <internal,29>


<java.security.Timestamp: void <init>(java.util.Date,java.security.cert.CertPath)> <internal,26>


<java.util.TreeMap: java.util.Set entrySet()> <internal,14>


<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getCustomTimeZone(java.lang.String,int)> <internal,5>


<sun.util.locale.LanguageTag: boolean parseVariants(sun.util.locale.StringTokenIterator,sun.util.locale.ParseStatus)> <internal,57>


<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)> <internal,22>


<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)> <internal,31>


<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)> <internal,73>


<java.util.Calendar: java.util.Date getTime()> <internal,0>


<java.security.AllPermission: java.security.PermissionCollection newPermissionCollection()> <internal,0>


<java.util.concurrent.ConcurrentHashMap: void tryPresize(int)> <internal,89>


<java.util.LinkedHashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)> <internal,5>


<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder clear()> <internal,21>


<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder clear()> <internal,15>


<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder clear()> <internal,3>


<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder clear()> <internal,9>


<java.util.AbstractList: java.util.ListIterator listIterator(int)> <internal,5>


<sun.security.util.AlgorithmDecomposer: java.util.Set decomposeImpl(java.lang.String)> <internal,8>


<com.ibm.oti.shared.SharedClassAbstractHelper: java.net.URL convertJarURL(java.net.URL)> <internal,29>


<java.lang.String: void <init>(byte[],int,int,int)> <internal,74>


<java.lang.String: void <init>(byte[],int,int,int)> <internal,138>


<java.lang.String: void <init>(byte[],int,int,int)> <internal,45>


<java.io.BufferedReader: void fill()> <internal,90>


<sun.security.util.DerValue: sun.security.util.DerInputStream toDerInputStream()> <internal,18>


<javax.crypto.CryptoPolicyParser$GrantEntry: void <init>()> <internal,5>


<java.lang.String: void <init>(int[],int,int)> <internal,314>


<java.lang.String: void <init>(int[],int,int)> <internal,179>


<sun.util.locale.provider.LocaleServiceProviderPool: java.util.List findProviders(java.util.Locale)> <internal,81>


<java.lang.ProcessEnvironment$StringEnvironment: java.util.Set keySet()> <internal,0>


<javax.crypto.CryptoPermissions: void <init>()> <internal,5>


<java.util.Formatter: java.lang.Appendable nonNullAppendable(java.lang.Appendable)> <internal,4>


<sun.util.PreHashedMap: void <init>(int,int,int,int)> <internal,27>


<java.util.Currency: int[] readIntArray(java.io.DataInputStream,int)> <internal,1>


<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])> <internal,10>


<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])> <internal,87>


<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)> <internal,122>


<java.math.BigInteger: java.math.BigInteger[] divideAndRemainderKnuth(java.math.BigInteger)> <internal,1>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty caseInsensitiveRangeFor(int,int)> <internal,20>


<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty caseInsensitiveRangeFor(int,int)> <internal,9>


<java.net.URLConnection: java.net.FileNameMap getFileNameMap()> <internal,22>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger multBy10()> <internal,43>


<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> <internal,280>


<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> <internal,12>


<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> <internal,208>


<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> <internal,226>


<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> <internal,66>


<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> <internal,83>


<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> <internal,154>


<sun.util.locale.BaseLocale$Key: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> <internal,137>


<java.lang.UNIXProcess$Platform$lambda_helperPath_0__24: java.security.PrivilegedAction bootstrap$(java.lang.UNIXProcess$Platform)> <internal,-1>


<sun.security.jca.GetInstance$Instance: java.lang.Object[] toArray()> <internal,1>


<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])> <internal,197>


<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])> <internal,175>


<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])> <internal,32>


<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])> <internal,16>


<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])> <internal,215>


<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])> <internal,231>


<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])> <internal,117>


<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])> <internal,23>


<sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])> <internal,160>


<java.util.Collections: java.util.Set synchronizedSet(java.util.Set,java.lang.Object)> <internal,0>


<java.time.LocalDate: java.time.LocalDate ofEpochDay(long)> <internal,214>


<java.util.Collections: java.util.List synchronizedList(java.util.List)> <internal,7>


<java.util.Collections: java.util.List synchronizedList(java.util.List)> <internal,18>


<java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])> <internal,40>


<sun.misc.Resource: byte[] getBytes()> <internal,30>


<java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)> <internal,20>


<sun.security.pkcs.PKCS9Attributes: sun.security.util.DerEncoder[] castToDerEncoder(java.lang.Object[])> <internal,2>


<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)> <internal,163>


<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)> <internal,88>


<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)> <internal,50>


<sun.text.normalizer.UBiDiProps: void readData(java.io.InputStream)> <internal,116>


<java.io.DataInputStream: void <init>(java.io.InputStream)> <internal,16>


<java.io.DataInputStream: void <init>(java.io.InputStream)> <internal,24>


<java.io.DataInputStream: void <init>(java.io.InputStream)> <internal,8>


<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)> <internal,31>


<javax.crypto.CryptoPolicyParser: void read(java.io.Reader)> <internal,17>


<java.time.Period: java.time.Period create(int,int,int)> <internal,12>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftShift(int)> <internal,345>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftShift(int)> <internal,33>


<sun.misc.FDBigInteger: sun.misc.FDBigInteger leftShift(int)> <internal,139>


<java.util.concurrent.locks.ReentrantReadWriteLock$Sync: void <init>()> <internal,10>


<java.io.FileInputStream: void <init>(java.io.FileDescriptor)> <internal,10>


<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)> <internal,171>


134: 1
825: 9
3301: 1
4456: 1
8922: 1
9332: 1802
9372: 1
9708: 1
9778: 1
10318: 1
10925: 1
11330: 4
11796: 1
12232: 1
12261: 1
12552: 1
Total SCCs: 12984
Core SCCs: 16
Special Memory Region Object Count: 1824
Stack Object Count: 15535
Heap Object Count: 3817
Total Object Count: 21176
Resolution is done
Time Taken in phase 1:38.219
Time Taken in phase 2:8.062
